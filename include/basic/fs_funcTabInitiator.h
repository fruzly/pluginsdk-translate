/*****************************************************************************

Copyright (C) 2024 Foxit Corporation
All rights reserved.

NOTICE: Foxit permits you to use, modify, and distribute this file
in accordance with the terms of the Foxit license agreement
accompanying it. If you have received this file from a source other
than Foxit, then your use, modification, or distribution of it
 requires the prior written permission of Foxit.
 
*****************************************************************************/

// Auto Generator Code Start, Please don't edit this file!
#ifndef FS_FUNCTABINITIATOR_H_
#define FS_FUNCTABINITIATOR_H_

#include "../pdf/fpd_parserCalls.h"
#include "../pdf/impl/fpd_parserImpl.h"
#include "../pdf/fpd_docCalls.h"
#include "../pdf/impl/fpd_docImpl.h"
#include "../pdf/fpd_objsCalls.h"
#include "../pdf/impl/fpd_objsImpl.h"
#include "../pdf/fpd_pageCalls.h"
#include "../pdf/impl/fpd_pageImpl.h"
#include "../pdf/fpd_pageobjCalls.h"
#include "../pdf/impl/fpd_pageobjImpl.h"
#include "../pdf/fpd_renderCalls.h"
#include "../pdf/impl/fpd_renderImpl.h"
#include "../pdf/fpd_resourceCalls.h"
#include "../pdf/impl/fpd_resourceImpl.h"
#include "../pdf/fpd_textCalls.h"
#include "../pdf/impl/fpd_textImpl.h"
#include "../pdf/fpd_serialCalls.h"
#include "../pdf/impl/fpd_serialImpl.h"
#include "../pdf/fpd_epubCalls.h"
#include "../pdf/impl/fpd_epubImpl.h"
#include "../ofd/fofd_basicCalls.h"
#include "../ofd/impl/fofd_basicImpl.h"
#include "../ofd/fofd_pageCalls.h"
#include "../ofd/impl/fofd_pageImpl.h"
#include "../ofd/fofd_docCalls.h"
#include "../ofd/impl/fofd_docImpl.h"
#include "../ofd/fofd_renderCalls.h"
#include "../ofd/impl/fofd_renderImpl.h"
#include "../ofd/fofd_sigCalls.h"
#include "../ofd/impl/fofd_sigImpl.h"
#include "../frd/fr_appCalls.h"
#include "../frd/impl/fr_appImpl.h"
#include "../frd/fr_fxnetappCalls.h"
#include "../frd/impl/fr_fxnetappImpl.h"
#include "../frd/fr_barCalls.h"
#include "../frd/impl/fr_barImpl.h"
#include "../basic/fs_basicCalls.h"
#include "../basic/impl/fs_basicImpl.h"
#include "../frd/fr_docCalls.h"
#include "../frd/impl/fr_docImpl.h"
#include "../frd/fr_menuCalls.h"
#include "../frd/impl/fr_menuImpl.h"
#include "../basic/fs_stringCalls.h"
#include "../basic/impl/fs_stringImpl.h"
#include "../frd/fr_sysCalls.h"
#include "../frd/impl/fr_sysImpl.h"
#include "../frd/fr_viewCalls.h"
#include "../frd/impl/fr_viewImpl.h"

#include "../fdrm/fdrm_descCalls.h"
#include "../fdrm/impl/fdrm_descImpl.h"

#include "../fdrm/fdrm_managerCalls.h"
#include "../fdrm/impl/fdrm_managerImpl.h"

#include "../fdrm/fdrm_pdfCalls.h"
#include "../fdrm/impl/fdrm_pdfImpl.h"

#include "../fdrm/fdrm_pkiCalls.h"
#include "../fdrm/impl/fdrm_pkiImpl.h"










#include "../pdf/fpd_mathCalls.h"
#include "../pdf/impl/fpd_mathImpl.h"










#include "../pdf/fpd_fxxfaCalls.h"
#include "../pdf/impl/fpd_fxxfaImpl.h"

#include "../pdf/fpd_3DCalls.h"


#include "../pdf/fpd_lrCalls.h"
#include "../pdf/impl/fpd_lrImpl.h"

#include "../pdf/fpd_convertCalls.h"
#include "../pdf/impl/fpd_convertImpl.h"

#include "../pdf/fpd_validateCalls.h"
#include "../pdf/impl/fpd_validateImpl.h"

#include "../pdf/fpd_editCalls.h"
#include "../pdf/impl/fpd_editImpl.h"

#include "../pdf/fpd_psiCalls.h"
#include "../pdf/impl/fpd_psiImpl.h"

#include "../pdf/fpd_barcodeCalls.h"
#include "../pdf/impl/fpd_barcodeImpl.h"

#include "../pdf/fpd_fontmgrCalls.h"
#include "../pdf/impl/fpd_fontmgrImpl.h"

#include "../pdf/fpd_pwlCalls.h"
#include "../pdf/impl/fpd_pwlImpl.h"

#include "../pdf/fpd_jsCalls.h"
#include "../pdf/impl/fpd_jsImpl.h"

#ifndef FX_READER_DLL

//----------_V1----------
// In file fs_basicImpl.h
class CFS_ExtensionHFTMgr_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSExtensionHFTMgrSEL, FSExtensionHFTMgrNewHFTSEL, (void*)CFS_ExtensionHFTMgr_V1::NewHFT);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSExtensionHFTMgrSEL, FSExtensionHFTMgrAddHFTSEL, (void*)CFS_ExtensionHFTMgr_V1::AddHFT);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSExtensionHFTMgrSEL, FSExtensionHFTMgrGetHFTSEL, (void*)CFS_ExtensionHFTMgr_V1::GetHFT);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSExtensionHFTMgrSEL, FSExtensionHFTMgrReplaceEntrySEL, (void*)CFS_ExtensionHFTMgr_V1::ReplaceEntry);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSExtensionHFTMgrSEL, FSExtensionHFTMgrGetEntrySEL, (void*)CFS_ExtensionHFTMgr_V1::GetEntry);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSExtensionHFTMgrSEL, FSExtensionHFTMgrGetHFT2SEL, (void*)CFS_ExtensionHFTMgr_V1::GetHFT2);
	}
};

class CFS_AffineMatrix_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSAffineMatrixSEL, FSAffineMatrixIsScaledSEL, (void*)CFS_AffineMatrix_V1::IsScaled);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSAffineMatrixSEL, FSAffineMatrixIs90RotatedSEL, (void*)CFS_AffineMatrix_V1::Is90Rotated);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSAffineMatrixSEL, FSAffineMatrixGetReverseSEL, (void*)CFS_AffineMatrix_V1::GetReverse);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSAffineMatrixSEL, FSAffineMatrixTransformPointSEL, (void*)CFS_AffineMatrix_V1::TransformPoint);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSAffineMatrixSEL, FSAffineMatrixTransformRectSEL, (void*)CFS_AffineMatrix_V1::TransformRect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSAffineMatrixSEL, FSAffineMatrixConcatSEL, (void*)CFS_AffineMatrix_V1::Concat);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSAffineMatrixSEL, FSAffineMatrixTranslateSEL, (void*)CFS_AffineMatrix_V1::Translate);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSAffineMatrixSEL, FSAffineMatrixTranslateISEL, (void*)CFS_AffineMatrix_V1::TranslateI);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSAffineMatrixSEL, FSAffineMatrixScaleSEL, (void*)CFS_AffineMatrix_V1::Scale);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSAffineMatrixSEL, FSAffineMatrixConcatInverseSEL, (void*)CFS_AffineMatrix_V1::ConcatInverse);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSAffineMatrixSEL, FSAffineMatrixMatchRectSEL, (void*)CFS_AffineMatrix_V1::MatchRect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSAffineMatrixSEL, FSAffineMatrixGetUnitRectSEL, (void*)CFS_AffineMatrix_V1::GetUnitRect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSAffineMatrixSEL, FSAffineMatrixGetUnitAreaSEL, (void*)CFS_AffineMatrix_V1::GetUnitArea);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSAffineMatrixSEL, FSAffineMatrixGetXUnitSEL, (void*)CFS_AffineMatrix_V1::GetXUnit);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSAffineMatrixSEL, FSAffineMatrixGetYUnitSEL, (void*)CFS_AffineMatrix_V1::GetYUnit);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSAffineMatrixSEL, FSAffineMatrixTransformDistanceSEL, (void*)CFS_AffineMatrix_V1::TransformDistance);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSAffineMatrixSEL, FSAffineMatrixRotateSEL, (void*)CFS_AffineMatrix_V1::Rotate);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSAffineMatrixSEL, FSAffineMatrixRotateAtSEL, (void*)CFS_AffineMatrix_V1::RotateAt);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSAffineMatrixSEL, FSAffineMatrixTransformXDistanceSEL, (void*)CFS_AffineMatrix_V1::TransformXDistance);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSAffineMatrixSEL, FSAffineMatrixTransformXDistance2SEL, (void*)CFS_AffineMatrix_V1::TransformXDistance2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSAffineMatrixSEL, FSAffineMatrixTransformYDistanceSEL, (void*)CFS_AffineMatrix_V1::TransformYDistance);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSAffineMatrixSEL, FSAffineMatrixTransformYDistance2SEL, (void*)CFS_AffineMatrix_V1::TransformYDistance2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSAffineMatrixSEL, FSAffineMatrixSetIdentitySEL, (void*)CFS_AffineMatrix_V1::SetIdentity);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSAffineMatrixSEL, FSAffineMatrixTranslate2SEL, (void*)CFS_AffineMatrix_V1::Translate2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSAffineMatrixSEL, FSAffineMatrixTranslate3SEL, (void*)CFS_AffineMatrix_V1::Translate3);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSAffineMatrixSEL, FSAffineMatrixConcat2SEL, (void*)CFS_AffineMatrix_V1::Concat2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSAffineMatrixSEL, FSAffineMatrixTransformPointsSEL, (void*)CFS_AffineMatrix_V1::TransformPoints);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSAffineMatrixSEL, FSAffineMatrixTransformPoints2SEL, (void*)CFS_AffineMatrix_V1::TransformPoints2);
	}
};

class CFS_DIBitmap_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDIBitmapSEL, FSDIBitmapNewSEL, (void*)CFS_DIBitmap_V1::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDIBitmapSEL, FSDIBitmapCreateSEL, (void*)CFS_DIBitmap_V1::Create);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDIBitmapSEL, FSDIBitmapDestroySEL, (void*)CFS_DIBitmap_V1::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDIBitmapSEL, FSDIBitmapGetWidthSEL, (void*)CFS_DIBitmap_V1::GetWidth);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDIBitmapSEL, FSDIBitmapGetHeightSEL, (void*)CFS_DIBitmap_V1::GetHeight);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDIBitmapSEL, FSDIBitmapGetFormatSEL, (void*)CFS_DIBitmap_V1::GetFormat);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDIBitmapSEL, FSDIBitmapGetPitchSEL, (void*)CFS_DIBitmap_V1::GetPitch);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDIBitmapSEL, FSDIBitmapGetPaletteSEL, (void*)CFS_DIBitmap_V1::GetPalette);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDIBitmapSEL, FSDIBitmapGetBufferSEL, (void*)CFS_DIBitmap_V1::GetBuffer);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDIBitmapSEL, FSDIBitmapGetScanlineSEL, (void*)CFS_DIBitmap_V1::GetScanline);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDIBitmapSEL, FSDIBitmapDownSampleScanlineSEL, (void*)CFS_DIBitmap_V1::DownSampleScanline);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDIBitmapSEL, FSDIBitmapTakeOverSEL, (void*)CFS_DIBitmap_V1::TakeOver);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDIBitmapSEL, FSDIBitmapConvertFormatSEL, (void*)CFS_DIBitmap_V1::ConvertFormat);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDIBitmapSEL, FSDIBitmapClearSEL, (void*)CFS_DIBitmap_V1::Clear);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDIBitmapSEL, FSDIBitmapGetPixelSEL, (void*)CFS_DIBitmap_V1::GetPixel);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDIBitmapSEL, FSDIBitmapSetPixelSEL, (void*)CFS_DIBitmap_V1::SetPixel);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDIBitmapSEL, FSDIBitmapLoadChannelSEL, (void*)CFS_DIBitmap_V1::LoadChannel);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDIBitmapSEL, FSDIBitmapLoadChannel2SEL, (void*)CFS_DIBitmap_V1::LoadChannel2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDIBitmapSEL, FSDIBitmapMultiplyAlphaSEL, (void*)CFS_DIBitmap_V1::MultiplyAlpha);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDIBitmapSEL, FSDIBitmapMultiplyAlpha2SEL, (void*)CFS_DIBitmap_V1::MultiplyAlpha2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDIBitmapSEL, FSDIBitmapTransferBitmapSEL, (void*)CFS_DIBitmap_V1::TransferBitmap);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDIBitmapSEL, FSDIBitmapTransferMaskSEL, (void*)CFS_DIBitmap_V1::TransferMask);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDIBitmapSEL, FSDIBitmapCompositeBitmapSEL, (void*)CFS_DIBitmap_V1::CompositeBitmap);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDIBitmapSEL, FSDIBitmapCompositeRectSEL, (void*)CFS_DIBitmap_V1::CompositeRect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDIBitmapSEL, FSDIBitmapGammaAdjustSEL, (void*)CFS_DIBitmap_V1::GammaAdjust);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDIBitmapSEL, FSDIBitmapConvertColorScaleSEL, (void*)CFS_DIBitmap_V1::ConvertColorScale);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDIBitmapSEL, FSDIBitmapDitherFSSEL, (void*)CFS_DIBitmap_V1::DitherFS);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDIBitmapSEL, FSDIBitmapGetBPPSEL, (void*)CFS_DIBitmap_V1::GetBPP);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDIBitmapSEL, FSDIBitmapIsAlphaMaskSEL, (void*)CFS_DIBitmap_V1::IsAlphaMask);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDIBitmapSEL, FSDIBitmapHasAlphaSEL, (void*)CFS_DIBitmap_V1::HasAlpha);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDIBitmapSEL, FSDIBitmapIsOpaqueImageSEL, (void*)CFS_DIBitmap_V1::IsOpaqueImage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDIBitmapSEL, FSDIBitmapGetPaletteSizeSEL, (void*)CFS_DIBitmap_V1::GetPaletteSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDIBitmapSEL, FSDIBitmapGetPaletteArgbSEL, (void*)CFS_DIBitmap_V1::GetPaletteArgb);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDIBitmapSEL, FSDIBitmapSetPaletteArgbSEL, (void*)CFS_DIBitmap_V1::SetPaletteArgb);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDIBitmapSEL, FSDIBitmapCloneSEL, (void*)CFS_DIBitmap_V1::Clone);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDIBitmapSEL, FSDIBitmapCloneConvertSEL, (void*)CFS_DIBitmap_V1::CloneConvert);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDIBitmapSEL, FSDIBitmapGetAlphaMaskSEL, (void*)CFS_DIBitmap_V1::GetAlphaMask);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDIBitmapSEL, FSDIBitmapStretchToSEL, (void*)CFS_DIBitmap_V1::StretchTo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDIBitmapSEL, FSDIBitmapTransformToSEL, (void*)CFS_DIBitmap_V1::TransformTo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDIBitmapSEL, FSDIBitmapSwapXYSEL, (void*)CFS_DIBitmap_V1::SwapXY);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDIBitmapSEL, FSDIBitmapFlipImageSEL, (void*)CFS_DIBitmap_V1::FlipImage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDIBitmapSEL, FSDIBitmapLoadFromPNGIconSEL, (void*)CFS_DIBitmap_V1::LoadFromPNGIcon);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDIBitmapSEL, FSDIBitmapLoadFromPNGIcon2SEL, (void*)CFS_DIBitmap_V1::LoadFromPNGIcon2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDIBitmapSEL, FSDIBitmapCopySEL, (void*)CFS_DIBitmap_V1::Copy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDIBitmapSEL, FSDIBitmapLoadInfoSEL, (void*)CFS_DIBitmap_V1::LoadInfo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDIBitmapSEL, FSDIBitmapDestroyDIBAttributeSEL, (void*)CFS_DIBitmap_V1::DestroyDIBAttribute);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDIBitmapSEL, FSDIBitmapGetXDPISEL, (void*)CFS_DIBitmap_V1::GetXDPI);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDIBitmapSEL, FSDIBitmapGetYDPISEL, (void*)CFS_DIBitmap_V1::GetYDPI);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDIBitmapSEL, FSDIBitmapGetDPIUnitSEL, (void*)CFS_DIBitmap_V1::GetDPIUnit);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDIBitmapSEL, FSDIBitmapGetExifInfoSEL, (void*)CFS_DIBitmap_V1::GetExifInfo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDIBitmapSEL, FSDIBitmapLoadFromPNGIcon3SEL, (void*)CFS_DIBitmap_V1::LoadFromPNGIcon3);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDIBitmapSEL, FSDIBitmapLoadFromImageSEL, (void*)CFS_DIBitmap_V1::LoadFromImage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDIBitmapSEL, FSDIBitmapGetBitmapAlphaMaskSEL, (void*)CFS_DIBitmap_V1::GetBitmapAlphaMask);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDIBitmapSEL, FSDIBitmapNew2SEL, (void*)CFS_DIBitmap_V1::New2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDIBitmapSEL, FSDIBitmapInitDIBitmapAttributeSEL, (void*)CFS_DIBitmap_V1::InitDIBitmapAttribute);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDIBitmapSEL, FSDIBitmapCopy2SEL, (void*)CFS_DIBitmap_V1::Copy2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDIBitmapSEL, FSDIBitmapCloneConvert2SEL, (void*)CFS_DIBitmap_V1::CloneConvert2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDIBitmapSEL, FSDIBitmapMultiplyAlpha3SEL, (void*)CFS_DIBitmap_V1::MultiplyAlpha3);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDIBitmapSEL, FSDIBitmapCastToBitSourceSEL, (void*)CFS_DIBitmap_V1::CastToBitSource);
	}
};

class CFS_MapPtrToPtr_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSMapPtrToPtrSEL, FSMapPtrToPtrNewSEL, (void*)CFS_MapPtrToPtr_V1::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSMapPtrToPtrSEL, FSMapPtrToPtrDestroySEL, (void*)CFS_MapPtrToPtr_V1::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSMapPtrToPtrSEL, FSMapPtrToPtrGetCountSEL, (void*)CFS_MapPtrToPtr_V1::GetCount);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSMapPtrToPtrSEL, FSMapPtrToPtrIsEmptySEL, (void*)CFS_MapPtrToPtr_V1::IsEmpty);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSMapPtrToPtrSEL, FSMapPtrToPtrLookupSEL, (void*)CFS_MapPtrToPtr_V1::Lookup);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSMapPtrToPtrSEL, FSMapPtrToPtrGetValueAtSEL, (void*)CFS_MapPtrToPtr_V1::GetValueAt);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSMapPtrToPtrSEL, FSMapPtrToPtrSetAtSEL, (void*)CFS_MapPtrToPtr_V1::SetAt);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSMapPtrToPtrSEL, FSMapPtrToPtrRemoveKeySEL, (void*)CFS_MapPtrToPtr_V1::RemoveKey);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSMapPtrToPtrSEL, FSMapPtrToPtrRemoveAllSEL, (void*)CFS_MapPtrToPtr_V1::RemoveAll);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSMapPtrToPtrSEL, FSMapPtrToPtrGetStartPositionSEL, (void*)CFS_MapPtrToPtr_V1::GetStartPosition);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSMapPtrToPtrSEL, FSMapPtrToPtrGetNextAssocSEL, (void*)CFS_MapPtrToPtr_V1::GetNextAssoc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSMapPtrToPtrSEL, FSMapPtrToPtrGetHashTableSizeSEL, (void*)CFS_MapPtrToPtr_V1::GetHashTableSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSMapPtrToPtrSEL, FSMapPtrToPtrInitHashTableSEL, (void*)CFS_MapPtrToPtr_V1::InitHashTable);
	}
};

class CFS_PtrArray_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSPtrArraySEL, FSPtrArrayNewSEL, (void*)CFS_PtrArray_V1::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSPtrArraySEL, FSPtrArrayDestroySEL, (void*)CFS_PtrArray_V1::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSPtrArraySEL, FSPtrArrayGetSizeSEL, (void*)CFS_PtrArray_V1::GetSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSPtrArraySEL, FSPtrArrayGetUpperBoundSEL, (void*)CFS_PtrArray_V1::GetUpperBound);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSPtrArraySEL, FSPtrArraySetSizeSEL, (void*)CFS_PtrArray_V1::SetSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSPtrArraySEL, FSPtrArrayRemoveAllSEL, (void*)CFS_PtrArray_V1::RemoveAll);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSPtrArraySEL, FSPtrArrayGetAtSEL, (void*)CFS_PtrArray_V1::GetAt);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSPtrArraySEL, FSPtrArraySetAtSEL, (void*)CFS_PtrArray_V1::SetAt);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSPtrArraySEL, FSPtrArraySetAtGrowSEL, (void*)CFS_PtrArray_V1::SetAtGrow);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSPtrArraySEL, FSPtrArrayAddSEL, (void*)CFS_PtrArray_V1::Add);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSPtrArraySEL, FSPtrArrayAppendSEL, (void*)CFS_PtrArray_V1::Append);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSPtrArraySEL, FSPtrArrayCopySEL, (void*)CFS_PtrArray_V1::Copy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSPtrArraySEL, FSPtrArrayGetDataPtrSEL, (void*)CFS_PtrArray_V1::GetDataPtr);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSPtrArraySEL, FSPtrArrayInsertAtSEL, (void*)CFS_PtrArray_V1::InsertAt);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSPtrArraySEL, FSPtrArrayRemoveAtSEL, (void*)CFS_PtrArray_V1::RemoveAt);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSPtrArraySEL, FSPtrArrayInsertNewArrayAtSEL, (void*)CFS_PtrArray_V1::InsertNewArrayAt);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSPtrArraySEL, FSPtrArrayFindSEL, (void*)CFS_PtrArray_V1::Find);
	}
};

class CFS_ByteArray_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSByteArraySEL, FSByteArrayNewSEL, (void*)CFS_ByteArray_V1::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSByteArraySEL, FSByteArrayDestroySEL, (void*)CFS_ByteArray_V1::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSByteArraySEL, FSByteArrayGetSizeSEL, (void*)CFS_ByteArray_V1::GetSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSByteArraySEL, FSByteArrayGetUpperBoundSEL, (void*)CFS_ByteArray_V1::GetUpperBound);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSByteArraySEL, FSByteArraySetSizeSEL, (void*)CFS_ByteArray_V1::SetSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSByteArraySEL, FSByteArrayRemoveAllSEL, (void*)CFS_ByteArray_V1::RemoveAll);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSByteArraySEL, FSByteArrayGetAtSEL, (void*)CFS_ByteArray_V1::GetAt);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSByteArraySEL, FSByteArraySetAtSEL, (void*)CFS_ByteArray_V1::SetAt);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSByteArraySEL, FSByteArraySetAtGrowSEL, (void*)CFS_ByteArray_V1::SetAtGrow);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSByteArraySEL, FSByteArrayAddSEL, (void*)CFS_ByteArray_V1::Add);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSByteArraySEL, FSByteArrayAppendSEL, (void*)CFS_ByteArray_V1::Append);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSByteArraySEL, FSByteArrayCopySEL, (void*)CFS_ByteArray_V1::Copy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSByteArraySEL, FSByteArrayGetDataPtrSEL, (void*)CFS_ByteArray_V1::GetDataPtr);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSByteArraySEL, FSByteArrayInsertAtSEL, (void*)CFS_ByteArray_V1::InsertAt);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSByteArraySEL, FSByteArrayRemoveAtSEL, (void*)CFS_ByteArray_V1::RemoveAt);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSByteArraySEL, FSByteArrayInsertNewArrayAtSEL, (void*)CFS_ByteArray_V1::InsertNewArrayAt);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSByteArraySEL, FSByteArrayFindSEL, (void*)CFS_ByteArray_V1::Find);
	}
};

class CFS_WordArray_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSWordArraySEL, FSWordArrayNewSEL, (void*)CFS_WordArray_V1::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSWordArraySEL, FSWordArrayDestroySEL, (void*)CFS_WordArray_V1::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSWordArraySEL, FSWordArrayGetSizeSEL, (void*)CFS_WordArray_V1::GetSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSWordArraySEL, FSWordArrayGetUpperBoundSEL, (void*)CFS_WordArray_V1::GetUpperBound);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSWordArraySEL, FSWordArraySetSizeSEL, (void*)CFS_WordArray_V1::SetSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSWordArraySEL, FSWordArrayRemoveAllSEL, (void*)CFS_WordArray_V1::RemoveAll);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSWordArraySEL, FSWordArrayGetAtSEL, (void*)CFS_WordArray_V1::GetAt);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSWordArraySEL, FSWordArraySetAtSEL, (void*)CFS_WordArray_V1::SetAt);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSWordArraySEL, FSWordArraySetAtGrowSEL, (void*)CFS_WordArray_V1::SetAtGrow);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSWordArraySEL, FSWordArrayAddSEL, (void*)CFS_WordArray_V1::Add);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSWordArraySEL, FSWordArrayAppendSEL, (void*)CFS_WordArray_V1::Append);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSWordArraySEL, FSWordArrayCopySEL, (void*)CFS_WordArray_V1::Copy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSWordArraySEL, FSWordArrayGetDataPtrSEL, (void*)CFS_WordArray_V1::GetDataPtr);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSWordArraySEL, FSWordArrayInsertAtSEL, (void*)CFS_WordArray_V1::InsertAt);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSWordArraySEL, FSWordArrayRemoveAtSEL, (void*)CFS_WordArray_V1::RemoveAt);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSWordArraySEL, FSWordArrayInsertNewArrayAtSEL, (void*)CFS_WordArray_V1::InsertNewArrayAt);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSWordArraySEL, FSWordArrayFindSEL, (void*)CFS_WordArray_V1::Find);
	}
};

class CFS_DWordArray_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDWordArraySEL, FSDWordArrayNewSEL, (void*)CFS_DWordArray_V1::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDWordArraySEL, FSDWordArrayDestroySEL, (void*)CFS_DWordArray_V1::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDWordArraySEL, FSDWordArrayGetSizeSEL, (void*)CFS_DWordArray_V1::GetSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDWordArraySEL, FSDWordArrayGetUpperBoundSEL, (void*)CFS_DWordArray_V1::GetUpperBound);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDWordArraySEL, FSDWordArraySetSizeSEL, (void*)CFS_DWordArray_V1::SetSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDWordArraySEL, FSDWordArrayRemoveAllSEL, (void*)CFS_DWordArray_V1::RemoveAll);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDWordArraySEL, FSDWordArrayGetAtSEL, (void*)CFS_DWordArray_V1::GetAt);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDWordArraySEL, FSDWordArraySetAtSEL, (void*)CFS_DWordArray_V1::SetAt);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDWordArraySEL, FSDWordArraySetAtGrowSEL, (void*)CFS_DWordArray_V1::SetAtGrow);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDWordArraySEL, FSDWordArrayAddSEL, (void*)CFS_DWordArray_V1::Add);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDWordArraySEL, FSDWordArrayAppendSEL, (void*)CFS_DWordArray_V1::Append);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDWordArraySEL, FSDWordArrayCopySEL, (void*)CFS_DWordArray_V1::Copy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDWordArraySEL, FSDWordArrayGetDataPtrSEL, (void*)CFS_DWordArray_V1::GetDataPtr);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDWordArraySEL, FSDWordArrayInsertAtSEL, (void*)CFS_DWordArray_V1::InsertAt);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDWordArraySEL, FSDWordArrayRemoveAtSEL, (void*)CFS_DWordArray_V1::RemoveAt);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDWordArraySEL, FSDWordArrayInsertNewArrayAtSEL, (void*)CFS_DWordArray_V1::InsertNewArrayAt);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDWordArraySEL, FSDWordArrayFindSEL, (void*)CFS_DWordArray_V1::Find);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDWordArraySEL, FSDWordArrayGetDataSEL, (void*)CFS_DWordArray_V1::GetData);
	}
};

class CFS_ByteStringArray_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSByteStringArraySEL, FSByteStringArrayNewSEL, (void*)CFS_ByteStringArray_V1::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSByteStringArraySEL, FSByteStringArrayDestroySEL, (void*)CFS_ByteStringArray_V1::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSByteStringArraySEL, FSByteStringArrayGetAtSEL, (void*)CFS_ByteStringArray_V1::GetAt);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSByteStringArraySEL, FSByteStringArrayGetSizeSEL, (void*)CFS_ByteStringArray_V1::GetSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSByteStringArraySEL, FSByteStringArrayRemoveAllSEL, (void*)CFS_ByteStringArray_V1::RemoveAll);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSByteStringArraySEL, FSByteStringArrayAddSEL, (void*)CFS_ByteStringArray_V1::Add);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSByteStringArraySEL, FSByteStringArrayRemoveAtSEL, (void*)CFS_ByteStringArray_V1::RemoveAt);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSByteStringArraySEL, FSByteStringArrayAdd2SEL, (void*)CFS_ByteStringArray_V1::Add2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSByteStringArraySEL, FSByteStringArrayGetDataPtrSEL, (void*)CFS_ByteStringArray_V1::GetDataPtr);
	}
};

class CFS_WideStringArray_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSWideStringArraySEL, FSWideStringArrayNewSEL, (void*)CFS_WideStringArray_V1::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSWideStringArraySEL, FSWideStringArrayDestroySEL, (void*)CFS_WideStringArray_V1::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSWideStringArraySEL, FSWideStringArrayGetAtSEL, (void*)CFS_WideStringArray_V1::GetAt);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSWideStringArraySEL, FSWideStringArrayGetSizeSEL, (void*)CFS_WideStringArray_V1::GetSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSWideStringArraySEL, FSWideStringArrayRemoveAllSEL, (void*)CFS_WideStringArray_V1::RemoveAll);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSWideStringArraySEL, FSWideStringArrayAddSEL, (void*)CFS_WideStringArray_V1::Add);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSWideStringArraySEL, FSWideStringArrayRemoveAtSEL, (void*)CFS_WideStringArray_V1::RemoveAt);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSWideStringArraySEL, FSWideStringArrayAdd2SEL, (void*)CFS_WideStringArray_V1::Add2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSWideStringArraySEL, FSWideStringArrayCopySEL, (void*)CFS_WideStringArray_V1::Copy);
	}
};

class CFS_CodeTransformation_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSCodeTransformationSEL, FSCodeTransformationNameDecodeSEL, (void*)CFS_CodeTransformation_V1::NameDecode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSCodeTransformationSEL, FSCodeTransformationNameEncodeSEL, (void*)CFS_CodeTransformation_V1::NameEncode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSCodeTransformationSEL, FSCodeTransformationEncodeStringSEL, (void*)CFS_CodeTransformation_V1::EncodeString);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSCodeTransformationSEL, FSCodeTransformationDecodeTextSEL, (void*)CFS_CodeTransformation_V1::DecodeText);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSCodeTransformationSEL, FSCodeTransformationDecodeText2SEL, (void*)CFS_CodeTransformation_V1::DecodeText2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSCodeTransformationSEL, FSCodeTransformationEncodeTextSEL, (void*)CFS_CodeTransformation_V1::EncodeText);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSCodeTransformationSEL, FSCodeTransformationFlateEncodeProcSEL, (void*)CFS_CodeTransformation_V1::FlateEncodeProc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSCodeTransformationSEL, FSCodeTransformationFlateDecodeProcSEL, (void*)CFS_CodeTransformation_V1::FlateDecodeProc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSCodeTransformationSEL, FSCodeTransformationRunLengthDecodeProcSEL, (void*)CFS_CodeTransformation_V1::RunLengthDecodeProc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSCodeTransformationSEL, FSCodeTransformationRunLengthEncodeProcSEL, (void*)CFS_CodeTransformation_V1::RunLengthEncodeProc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSCodeTransformationSEL, FSCodeTransformationMemFreeSEL, (void*)CFS_CodeTransformation_V1::MemFree);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSCodeTransformationSEL, FSCodeTransformationBasicModuleA85EncodeSEL, (void*)CFS_CodeTransformation_V1::BasicModuleA85Encode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSCodeTransformationSEL, FSCodeTransformationFlateModuleEncodeSEL, (void*)CFS_CodeTransformation_V1::FlateModuleEncode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSCodeTransformationSEL, FSCodeTransformationFlateModuleEncode2SEL, (void*)CFS_CodeTransformation_V1::FlateModuleEncode2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSCodeTransformationSEL, FSCodeTransformationPngModuleEncodeSEL, (void*)CFS_CodeTransformation_V1::PngModuleEncode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSCodeTransformationSEL, FSCodeTransformationReleaseEncodeBufferSEL, (void*)CFS_CodeTransformation_V1::ReleaseEncodeBuffer);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSCodeTransformationSEL, FSCodeTransformationGetUnicodePropertiesSEL, (void*)CFS_CodeTransformation_V1::GetUnicodeProperties);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSCodeTransformationSEL, FSCodeTransformationEncodeText2SEL, (void*)CFS_CodeTransformation_V1::EncodeText2);
	}
};

class CFS_FloatRectArray_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSFloatRectArraySEL, FSFloatRectArrayNewSEL, (void*)CFS_FloatRectArray_V1::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSFloatRectArraySEL, FSFloatRectArrayDestroySEL, (void*)CFS_FloatRectArray_V1::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSFloatRectArraySEL, FSFloatRectArrayGetSizeSEL, (void*)CFS_FloatRectArray_V1::GetSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSFloatRectArraySEL, FSFloatRectArrayGetUpperBoundSEL, (void*)CFS_FloatRectArray_V1::GetUpperBound);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSFloatRectArraySEL, FSFloatRectArraySetSizeSEL, (void*)CFS_FloatRectArray_V1::SetSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSFloatRectArraySEL, FSFloatRectArrayRemoveAllSEL, (void*)CFS_FloatRectArray_V1::RemoveAll);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSFloatRectArraySEL, FSFloatRectArrayGetAtSEL, (void*)CFS_FloatRectArray_V1::GetAt);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSFloatRectArraySEL, FSFloatRectArraySetAtSEL, (void*)CFS_FloatRectArray_V1::SetAt);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSFloatRectArraySEL, FSFloatRectArraySetAtGrowSEL, (void*)CFS_FloatRectArray_V1::SetAtGrow);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSFloatRectArraySEL, FSFloatRectArrayAddSEL, (void*)CFS_FloatRectArray_V1::Add);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSFloatRectArraySEL, FSFloatRectArrayAppendSEL, (void*)CFS_FloatRectArray_V1::Append);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSFloatRectArraySEL, FSFloatRectArrayCopySEL, (void*)CFS_FloatRectArray_V1::Copy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSFloatRectArraySEL, FSFloatRectArrayInsertAtSEL, (void*)CFS_FloatRectArray_V1::InsertAt);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSFloatRectArraySEL, FSFloatRectArrayRemoveAtSEL, (void*)CFS_FloatRectArray_V1::RemoveAt);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSFloatRectArraySEL, FSFloatRectArrayInsertNewArrayAtSEL, (void*)CFS_FloatRectArray_V1::InsertNewArrayAt);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSFloatRectArraySEL, FSFloatRectArrayFindSEL, (void*)CFS_FloatRectArray_V1::Find);
	}
};

class CFS_BinaryBuf_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSBinaryBufSEL, FSBinaryBufNewSEL, (void*)CFS_BinaryBuf_V1::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSBinaryBufSEL, FSBinaryBufDestroySEL, (void*)CFS_BinaryBuf_V1::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSBinaryBufSEL, FSBinaryBufClearSEL, (void*)CFS_BinaryBuf_V1::Clear);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSBinaryBufSEL, FSBinaryBufEstimateSizeSEL, (void*)CFS_BinaryBuf_V1::EstimateSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSBinaryBufSEL, FSBinaryBufAppendBlockSEL, (void*)CFS_BinaryBuf_V1::AppendBlock);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSBinaryBufSEL, FSBinaryBufAppendFillSEL, (void*)CFS_BinaryBuf_V1::AppendFill);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSBinaryBufSEL, FSBinaryBufAppendStringSEL, (void*)CFS_BinaryBuf_V1::AppendString);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSBinaryBufSEL, FSBinaryBufAppendByteSEL, (void*)CFS_BinaryBuf_V1::AppendByte);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSBinaryBufSEL, FSBinaryBufInsertBlockSEL, (void*)CFS_BinaryBuf_V1::InsertBlock);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSBinaryBufSEL, FSBinaryBufAttachDataSEL, (void*)CFS_BinaryBuf_V1::AttachData);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSBinaryBufSEL, FSBinaryBufCopyDataSEL, (void*)CFS_BinaryBuf_V1::CopyData);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSBinaryBufSEL, FSBinaryBufTakeOverSEL, (void*)CFS_BinaryBuf_V1::TakeOver);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSBinaryBufSEL, FSBinaryBufDeleteSEL, (void*)CFS_BinaryBuf_V1::Delete);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSBinaryBufSEL, FSBinaryBufGetBufferSEL, (void*)CFS_BinaryBuf_V1::GetBuffer);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSBinaryBufSEL, FSBinaryBufGetSizeSEL, (void*)CFS_BinaryBuf_V1::GetSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSBinaryBufSEL, FSBinaryBufGetByteStringSEL, (void*)CFS_BinaryBuf_V1::GetByteString);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSBinaryBufSEL, FSBinaryBufDetachBufferSEL, (void*)CFS_BinaryBuf_V1::DetachBuffer);
	}
};

class CFS_PauseHandler_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSPauseHandlerSEL, FSPauseHandlerCreateSEL, (void*)CFS_PauseHandler_V1::Create);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSPauseHandlerSEL, FSPauseHandlerDestroySEL, (void*)CFS_PauseHandler_V1::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSPauseHandlerSEL, FSPauseHandlerNeedToPauseNowSEL, (void*)CFS_PauseHandler_V1::NeedToPauseNow);
	}
};

class CFS_FileReadHandler_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSFileReadHandlerSEL, FSFileReadHandlerNewSEL, (void*)CFS_FileReadHandler_V1::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSFileReadHandlerSEL, FSFileReadHandlerDestroySEL, (void*)CFS_FileReadHandler_V1::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSFileReadHandlerSEL, FSFileReadHandlerGetSizeSEL, (void*)CFS_FileReadHandler_V1::GetSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSFileReadHandlerSEL, FSFileReadHandlerReadBlockSEL, (void*)CFS_FileReadHandler_V1::ReadBlock);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSFileReadHandlerSEL, FSFileReadHandlerNew2SEL, (void*)CFS_FileReadHandler_V1::New2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSFileReadHandlerSEL, FSFileReadHandlerNew3SEL, (void*)CFS_FileReadHandler_V1::New3);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSFileReadHandlerSEL, FSFileReadHandlerIsEOFSEL, (void*)CFS_FileReadHandler_V1::IsEOF);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSFileReadHandlerSEL, FSFileReadHandlerGetPositionSEL, (void*)CFS_FileReadHandler_V1::GetPosition);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSFileReadHandlerSEL, FSFileReadHandlerReadBlock2SEL, (void*)CFS_FileReadHandler_V1::ReadBlock2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSFileReadHandlerSEL, FSFileReadHandlerSetRangeSEL, (void*)CFS_FileReadHandler_V1::SetRange);
	}
};

class CFS_StreamWriteHandler_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSStreamWriteHandlerSEL, FSStreamWriteHandlerNewSEL, (void*)CFS_StreamWriteHandler_V1::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSStreamWriteHandlerSEL, FSStreamWriteHandlerDestroySEL, (void*)CFS_StreamWriteHandler_V1::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSStreamWriteHandlerSEL, FSStreamWriteHandlerWriteBlockSEL, (void*)CFS_StreamWriteHandler_V1::WriteBlock);
	}
};

// fs_basicImpl.h end

// In file fs_stringImpl.h
class CFS_CharMap_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSCharMapSEL, FSCharMapNewSEL, (void*)CFS_CharMap_V1::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSCharMapSEL, FSCharMapReleaseSEL, (void*)CFS_CharMap_V1::Release);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSCharMapSEL, FSCharMapGetDefaultMapperSEL, (void*)CFS_CharMap_V1::GetDefaultMapper);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSCharMapSEL, FSCharMapGetDefaultMapper2SEL, (void*)CFS_CharMap_V1::GetDefaultMapper2);
	}
};

class CFS_ByteString_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSByteStringSEL, FSByteStringNewSEL, (void*)CFS_ByteString_V1::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSByteStringSEL, FSByteStringNew2SEL, (void*)CFS_ByteString_V1::New2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSByteStringSEL, FSByteStringNew3SEL, (void*)CFS_ByteString_V1::New3);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSByteStringSEL, FSByteStringNew4SEL, (void*)CFS_ByteString_V1::New4);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSByteStringSEL, FSByteStringFromUnicodeSEL, (void*)CFS_ByteString_V1::FromUnicode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSByteStringSEL, FSByteStringFromUnicode2SEL, (void*)CFS_ByteString_V1::FromUnicode2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSByteStringSEL, FSByteStringDestroySEL, (void*)CFS_ByteString_V1::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSByteStringSEL, FSByteStringGetLengthSEL, (void*)CFS_ByteString_V1::GetLength);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSByteStringSEL, FSByteStringIsEmptySEL, (void*)CFS_ByteString_V1::IsEmpty);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSByteStringSEL, FSByteStringCompareSEL, (void*)CFS_ByteString_V1::Compare);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSByteStringSEL, FSByteStringEqualSEL, (void*)CFS_ByteString_V1::Equal);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSByteStringSEL, FSByteStringEqualNoCaseSEL, (void*)CFS_ByteString_V1::EqualNoCase);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSByteStringSEL, FSByteStringCopySEL, (void*)CFS_ByteString_V1::Copy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSByteStringSEL, FSByteStringFillSEL, (void*)CFS_ByteString_V1::Fill);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSByteStringSEL, FSByteStringConcatSEL, (void*)CFS_ByteString_V1::Concat);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSByteStringSEL, FSByteStringConcat2SEL, (void*)CFS_ByteString_V1::Concat2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSByteStringSEL, FSByteStringEmptySEL, (void*)CFS_ByteString_V1::Empty);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSByteStringSEL, FSByteStringGetAtSEL, (void*)CFS_ByteString_V1::GetAt);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSByteStringSEL, FSByteStringSetAtSEL, (void*)CFS_ByteString_V1::SetAt);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSByteStringSEL, FSByteStringInsertSEL, (void*)CFS_ByteString_V1::Insert);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSByteStringSEL, FSByteStringDeleteSEL, (void*)CFS_ByteString_V1::Delete);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSByteStringSEL, FSByteStringFormatSEL, (void*)CFS_ByteString_V1::Format);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSByteStringSEL, FSByteStringReserveSEL, (void*)CFS_ByteString_V1::Reserve);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSByteStringSEL, FSByteStringMidSEL, (void*)CFS_ByteString_V1::Mid);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSByteStringSEL, FSByteStringMid2SEL, (void*)CFS_ByteString_V1::Mid2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSByteStringSEL, FSByteStringLeftSEL, (void*)CFS_ByteString_V1::Left);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSByteStringSEL, FSByteStringRightSEL, (void*)CFS_ByteString_V1::Right);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSByteStringSEL, FSByteStringFindSEL, (void*)CFS_ByteString_V1::Find);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSByteStringSEL, FSByteStringFind2SEL, (void*)CFS_ByteString_V1::Find2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSByteStringSEL, FSByteStringMakeLowerSEL, (void*)CFS_ByteString_V1::MakeLower);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSByteStringSEL, FSByteStringMakeUpperSEL, (void*)CFS_ByteString_V1::MakeUpper);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSByteStringSEL, FSByteStringTrimRightSEL, (void*)CFS_ByteString_V1::TrimRight);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSByteStringSEL, FSByteStringTrimRight2SEL, (void*)CFS_ByteString_V1::TrimRight2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSByteStringSEL, FSByteStringTrimRight3SEL, (void*)CFS_ByteString_V1::TrimRight3);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSByteStringSEL, FSByteStringTrimLeftSEL, (void*)CFS_ByteString_V1::TrimLeft);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSByteStringSEL, FSByteStringTrimLeft2SEL, (void*)CFS_ByteString_V1::TrimLeft2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSByteStringSEL, FSByteStringTrimLeft3SEL, (void*)CFS_ByteString_V1::TrimLeft3);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSByteStringSEL, FSByteStringReplaceSEL, (void*)CFS_ByteString_V1::Replace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSByteStringSEL, FSByteStringRemoveSEL, (void*)CFS_ByteString_V1::Remove);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSByteStringSEL, FSByteStringGetIDSEL, (void*)CFS_ByteString_V1::GetID);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSByteStringSEL, FSByteStringFormatIntegerSEL, (void*)CFS_ByteString_V1::FormatInteger);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSByteStringSEL, FSByteStringFormatFloatSEL, (void*)CFS_ByteString_V1::FormatFloat);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSByteStringSEL, FSByteStringCastToLPCSTRSEL, (void*)CFS_ByteString_V1::CastToLPCSTR);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSByteStringSEL, FSByteStringUTF8DecodeSEL, (void*)CFS_ByteString_V1::UTF8Decode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSByteStringSEL, FSByteStringFormatVSEL, (void*)CFS_ByteString_V1::FormatV);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSByteStringSEL, FSByteStringCastToLPCBYTESEL, (void*)CFS_ByteString_V1::CastToLPCBYTE);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSByteStringSEL, FSByteStringConvertFromSEL, (void*)CFS_ByteString_V1::ConvertFrom);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSByteStringSEL, FSByteStringEqual2SEL, (void*)CFS_ByteString_V1::Equal2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSByteStringSEL, FSByteStringReverseFindSEL, (void*)CFS_ByteString_V1::ReverseFind);
	}
};

class CFS_WideString_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSWideStringSEL, FSWideStringNewSEL, (void*)CFS_WideString_V1::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSWideStringSEL, FSWideStringNew2SEL, (void*)CFS_WideString_V1::New2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSWideStringSEL, FSWideStringNew3SEL, (void*)CFS_WideString_V1::New3);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSWideStringSEL, FSWideStringDestroySEL, (void*)CFS_WideString_V1::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSWideStringSEL, FSWideStringGetLengthSEL, (void*)CFS_WideString_V1::GetLength);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSWideStringSEL, FSWideStringIsEmptySEL, (void*)CFS_WideString_V1::IsEmpty);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSWideStringSEL, FSWideStringCompareSEL, (void*)CFS_WideString_V1::Compare);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSWideStringSEL, FSWideStringCompare2SEL, (void*)CFS_WideString_V1::Compare2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSWideStringSEL, FSWideStringEqualSEL, (void*)CFS_WideString_V1::Equal);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSWideStringSEL, FSWideStringEqual2SEL, (void*)CFS_WideString_V1::Equal2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSWideStringSEL, FSWideStringCopySEL, (void*)CFS_WideString_V1::Copy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSWideStringSEL, FSWideStringFillSEL, (void*)CFS_WideString_V1::Fill);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSWideStringSEL, FSWideStringConcatSEL, (void*)CFS_WideString_V1::Concat);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSWideStringSEL, FSWideStringConcat2SEL, (void*)CFS_WideString_V1::Concat2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSWideStringSEL, FSWideStringEmptySEL, (void*)CFS_WideString_V1::Empty);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSWideStringSEL, FSWideStringGetAtSEL, (void*)CFS_WideString_V1::GetAt);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSWideStringSEL, FSWideStringSetAtSEL, (void*)CFS_WideString_V1::SetAt);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSWideStringSEL, FSWideStringInsertSEL, (void*)CFS_WideString_V1::Insert);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSWideStringSEL, FSWideStringDeleteSEL, (void*)CFS_WideString_V1::Delete);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSWideStringSEL, FSWideStringFormatSEL, (void*)CFS_WideString_V1::Format);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSWideStringSEL, FSWideStringReserveSEL, (void*)CFS_WideString_V1::Reserve);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSWideStringSEL, FSWideStringMidSEL, (void*)CFS_WideString_V1::Mid);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSWideStringSEL, FSWideStringMid2SEL, (void*)CFS_WideString_V1::Mid2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSWideStringSEL, FSWideStringLeftSEL, (void*)CFS_WideString_V1::Left);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSWideStringSEL, FSWideStringRightSEL, (void*)CFS_WideString_V1::Right);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSWideStringSEL, FSWideStringFindSEL, (void*)CFS_WideString_V1::Find);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSWideStringSEL, FSWideStringFind2SEL, (void*)CFS_WideString_V1::Find2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSWideStringSEL, FSWideStringMakeLowerSEL, (void*)CFS_WideString_V1::MakeLower);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSWideStringSEL, FSWideStringMakeUpperSEL, (void*)CFS_WideString_V1::MakeUpper);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSWideStringSEL, FSWideStringTrimRightSEL, (void*)CFS_WideString_V1::TrimRight);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSWideStringSEL, FSWideStringTrimRight2SEL, (void*)CFS_WideString_V1::TrimRight2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSWideStringSEL, FSWideStringTrimRight3SEL, (void*)CFS_WideString_V1::TrimRight3);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSWideStringSEL, FSWideStringTrimLeftSEL, (void*)CFS_WideString_V1::TrimLeft);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSWideStringSEL, FSWideStringTrimLeft2SEL, (void*)CFS_WideString_V1::TrimLeft2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSWideStringSEL, FSWideStringTrimLeft3SEL, (void*)CFS_WideString_V1::TrimLeft3);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSWideStringSEL, FSWideStringReplaceSEL, (void*)CFS_WideString_V1::Replace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSWideStringSEL, FSWideStringRemoveSEL, (void*)CFS_WideString_V1::Remove);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSWideStringSEL, FSWideStringGetIntegerSEL, (void*)CFS_WideString_V1::GetInteger);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSWideStringSEL, FSWideStringFromUTF8SEL, (void*)CFS_WideString_V1::FromUTF8);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSWideStringSEL, FSWideStringFromUTF16LESEL, (void*)CFS_WideString_V1::FromUTF16LE);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSWideStringSEL, FSWideStringUTF8EncodeSEL, (void*)CFS_WideString_V1::UTF8Encode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSWideStringSEL, FSWideStringUTF16LE_EncodeSEL, (void*)CFS_WideString_V1::UTF16LE_Encode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSWideStringSEL, FSWideStringCastToLPCWSTRSEL, (void*)CFS_WideString_V1::CastToLPCWSTR);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSWideStringSEL, FSWideStringFormatVSEL, (void*)CFS_WideString_V1::FormatV);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSWideStringSEL, FSWideStringFromLocalSEL, (void*)CFS_WideString_V1::FromLocal);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSWideStringSEL, FSWideStringFromLocal2SEL, (void*)CFS_WideString_V1::FromLocal2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSWideStringSEL, FSWideStringCompareNoCaseSEL, (void*)CFS_WideString_V1::CompareNoCase);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSWideStringSEL, FSWideStringCompareNoCase2SEL, (void*)CFS_WideString_V1::CompareNoCase2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSWideStringSEL, FSWideStringConvertFromSEL, (void*)CFS_WideString_V1::ConvertFrom);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSWideStringSEL, FSWideStringFromLocal3SEL, (void*)CFS_WideString_V1::FromLocal3);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSWideStringSEL, FSWideStringGetFloatSEL, (void*)CFS_WideString_V1::GetFloat);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSWideStringSEL, FSWideStringFind3SEL, (void*)CFS_WideString_V1::Find3);
	}
};

// fs_stringImpl.h end

// In file fdrm_descImpl.h
// fdrm_descImpl.h end

// In file fdrm_managerImpl.h
// fdrm_managerImpl.h end

// In file fdrm_pdfImpl.h
// fdrm_pdfImpl.h end

// In file fdrm_pkiImpl.h
// fdrm_pkiImpl.h end

// In file fhtml_impl.h
// fhtml_impl.h end

// In file fr_appImpl.h
class CFR_Tool_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRToolSEL, FRToolNewSEL, (void*)CFR_Tool_V1::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRToolSEL, FRToolReleaseSEL, (void*)CFR_Tool_V1::Release);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRToolSEL, FRToolGetNameSEL, (void*)CFR_Tool_V1::GetName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRToolSEL, FRToolSetAssociatedMousePtHandlerTypeSEL, (void*)CFR_Tool_V1::SetAssociatedMousePtHandlerType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRToolSEL, FRToolSetAssociatedSelectionHandlerTypeSEL, (void*)CFR_Tool_V1::SetAssociatedSelectionHandlerType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRToolSEL, FRToolTool_GetBeginPointSEL, (void*)CFR_Tool_V1::Tool_GetBeginPoint);
	}
};

class CFR_App_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppGetNameSEL, (void*)CFR_App_V1::GetName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppGetVersionSEL, (void*)CFR_App_V1::GetVersion);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppGetAppTitleSEL, (void*)CFR_App_V1::GetAppTitle);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppGetAppDataPathSEL, (void*)CFR_App_V1::GetAppDataPath);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppCanQuitSEL, (void*)CFR_App_V1::CanQuit);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppCountToolbarsSEL, (void*)CFR_App_V1::CountToolbars);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppGetToolBarSEL, (void*)CFR_App_V1::GetToolBar);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppGetToolBarByNameSEL, (void*)CFR_App_V1::GetToolBarByName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppGetMenuBarSEL, (void*)CFR_App_V1::GetMenuBar);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppShowMenuBarSEL, (void*)CFR_App_V1::ShowMenuBar);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppRegisterToolSEL, (void*)CFR_App_V1::RegisterTool);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppGetToolByNameSEL, (void*)CFR_App_V1::GetToolByName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppCountToolsSEL, (void*)CFR_App_V1::CountTools);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppGetToolByIndexSEL, (void*)CFR_App_V1::GetToolByIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppSetActiveToolSEL, (void*)CFR_App_V1::SetActiveTool);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppGetActiveToolSEL, (void*)CFR_App_V1::GetActiveTool);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppRegisterPreferencePageHandlerSEL, (void*)CFR_App_V1::RegisterPreferencePageHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppAddPreferencePageSEL, (void*)CFR_App_V1::AddPreferencePage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppRegisterDocPropertyPageHandlerSEL, (void*)CFR_App_V1::RegisterDocPropertyPageHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppAddDocPropertyPageSEL, (void*)CFR_App_V1::AddDocPropertyPage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppRegisterNavPanelViewSEL, (void*)CFR_App_V1::RegisterNavPanelView);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppRegisterAppEventHandlerSEL, (void*)CFR_App_V1::RegisterAppEventHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppCountDocsOfPDDocSEL, (void*)CFR_App_V1::CountDocsOfPDDoc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppGetDocOfPDDocSEL, (void*)CFR_App_V1::GetDocOfPDDoc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppGetActiveDocOfPDDocSEL, (void*)CFR_App_V1::GetActiveDocOfPDDoc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppSetActiveDocOfPDDocSEL, (void*)CFR_App_V1::SetActiveDocOfPDDoc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppRegisterDocHandlerOfPDDocSEL, (void*)CFR_App_V1::RegisterDocHandlerOfPDDoc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppIsFullScreenSEL, (void*)CFR_App_V1::IsFullScreen);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppShowFullScreenSEL, (void*)CFR_App_V1::ShowFullScreen);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppEndFullScreenSEL, (void*)CFR_App_V1::EndFullScreen);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppGetMousePosSEL, (void*)CFR_App_V1::GetMousePos);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppModalWindowIsOpenSEL, (void*)CFR_App_V1::ModalWindowIsOpen);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppRegisterSecurityHandlerSEL, (void*)CFR_App_V1::RegisterSecurityHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppUnRegisterSecurityHandlerSEL, (void*)CFR_App_V1::UnRegisterSecurityHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppGetPassphraseSEL, (void*)CFR_App_V1::GetPassphrase);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppRegisterContentProviderSEL, (void*)CFR_App_V1::RegisterContentProvider);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppGetMainFrameWndSEL, (void*)CFR_App_V1::GetMainFrameWnd);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppAddUndoRedoItemSEL, (void*)CFR_App_V1::AddUndoRedoItem);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppRegisterPageHandlerOfPDDocSEL, (void*)CFR_App_V1::RegisterPageHandlerOfPDDoc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppRegisterForContextMenuAdditionSEL, (void*)CFR_App_V1::RegisterForContextMenuAddition);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppRegisterSelectionHandlerSEL, (void*)CFR_App_V1::RegisterSelectionHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppUnRegisterSelectionHandlerSEL, (void*)CFR_App_V1::UnRegisterSelectionHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppRegisterCaptureHandlerSEL, (void*)CFR_App_V1::RegisterCaptureHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppUnRegisterCaptureHandlerSEL, (void*)CFR_App_V1::UnRegisterCaptureHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppRegistryGetProfilePathSEL, (void*)CFR_App_V1::RegistryGetProfilePath);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppRegistryWriteIntSEL, (void*)CFR_App_V1::RegistryWriteInt);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppRegistryWriteBinarySEL, (void*)CFR_App_V1::RegistryWriteBinary);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppRegistryWriteStringSEL, (void*)CFR_App_V1::RegistryWriteString);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppRegistryGetIntSEL, (void*)CFR_App_V1::RegistryGetInt);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppRegistryGetBinarySEL, (void*)CFR_App_V1::RegistryGetBinary);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppRegistryGetStringSEL, (void*)CFR_App_V1::RegistryGetString);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppRegistryGetEntryCountSEL, (void*)CFR_App_V1::RegistryGetEntryCount);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppRegistryGetEntryNameSEL, (void*)CFR_App_V1::RegistryGetEntryName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppRegistryRemoveSectionSEL, (void*)CFR_App_V1::RegistryRemoveSection);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppRegistryRemoveEntrySEL, (void*)CFR_App_V1::RegistryRemoveEntry);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppGetGEModuleSEL, (void*)CFR_App_V1::GetGEModule);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppGetModuleMgrSEL, (void*)CFR_App_V1::GetModuleMgr);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppCreateAnEmptyFrameWndSEL, (void*)CFR_App_V1::CreateAnEmptyFrameWnd);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppIsRunEmbeddedSEL, (void*)CFR_App_V1::IsRunEmbedded);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppRegisterExtraPrintInfoProviderSEL, (void*)CFR_App_V1::RegisterExtraPrintInfoProvider);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppIsRibbonModeSEL, (void*)CFR_App_V1::IsRibbonMode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppGetStartMenuOfTabbedToobarModeSEL, (void*)CFR_App_V1::GetStartMenuOfTabbedToobarMode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppRegisterTaskPaneViewSEL, (void*)CFR_App_V1::RegisterTaskPaneView);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppShowTaskPaneSEL, (void*)CFR_App_V1::ShowTaskPane);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppGetTaskPaneWndHandleByDocSEL, (void*)CFR_App_V1::GetTaskPaneWndHandleByDoc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppCommandLineHasSwitchSEL, (void*)CFR_App_V1::CommandLineHasSwitch);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppCommandLineGetSafeArgumentSEL, (void*)CFR_App_V1::CommandLineGetSafeArgument);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppCommandLineGetArgumentSEL, (void*)CFR_App_V1::CommandLineGetArgument);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppCommandLineGetArgumentCountSEL, (void*)CFR_App_V1::CommandLineGetArgumentCount);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppRegisterWinMSGHandlerSEL, (void*)CFR_App_V1::RegisterWinMSGHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppGetRecentFileListSEL, (void*)CFR_App_V1::GetRecentFileList);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppAddFileToRecentFileListSEL, (void*)CFR_App_V1::AddFileToRecentFileList);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppClearRecentFileListSEL, (void*)CFR_App_V1::ClearRecentFileList);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppRegisterSecurityMethodSEL, (void*)CFR_App_V1::RegisterSecurityMethod);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppPopDocPropertyPageSEL, (void*)CFR_App_V1::PopDocPropertyPage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppCountDocPropertyPagesSEL, (void*)CFR_App_V1::CountDocPropertyPages);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppCheckModuleLicenseSEL, (void*)CFR_App_V1::CheckModuleLicense);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppRegisterOwnerFileTypeSEL, (void*)CFR_App_V1::RegisterOwnerFileType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppRegistryGetKeyCountsSEL, (void*)CFR_App_V1::RegistryGetKeyCounts);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppRegistryGetKeyNameSEL, (void*)CFR_App_V1::RegistryGetKeyName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppGetRibbonBarSEL, (void*)CFR_App_V1::GetRibbonBar);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppGetRibbonBarBackGroundColorSEL, (void*)CFR_App_V1::GetRibbonBarBackGroundColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppGetRibbonBarBtnBackGroundColorSEL, (void*)CFR_App_V1::GetRibbonBarBtnBackGroundColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppLoadLibrarySEL, (void*)CFR_App_V1::LoadLibrary);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppIsCurDocShowInBrowserSEL, (void*)CFR_App_V1::IsCurDocShowInBrowser);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppRemoveFileFromRecentFileListSEL, (void*)CFR_App_V1::RemoveFileFromRecentFileList);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppCreateCustomRecentFileListSEL, (void*)CFR_App_V1::CreateCustomRecentFileList);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppRemoveFileFromCustomRecentFileListSEL, (void*)CFR_App_V1::RemoveFileFromCustomRecentFileList);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppAddFileToCustomRecentFileListSEL, (void*)CFR_App_V1::AddFileToCustomRecentFileList);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppClearCustomRecentFileListSEL, (void*)CFR_App_V1::ClearCustomRecentFileList);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppRegisterMousePtHandlerSEL, (void*)CFR_App_V1::RegisterMousePtHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppUnRegisterMousePtHandlerSEL, (void*)CFR_App_V1::UnRegisterMousePtHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppIsLicenseValidOrInTrialSEL, (void*)CFR_App_V1::IsLicenseValidOrInTrial);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppShowPreferenceDlgSEL, (void*)CFR_App_V1::ShowPreferenceDlg);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppUndoRedoIsEditingSEL, (void*)CFR_App_V1::UndoRedoIsEditing);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppUndoRedoBeginEditSEL, (void*)CFR_App_V1::UndoRedoBeginEdit);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppUndoRedoEndEditSEL, (void*)CFR_App_V1::UndoRedoEndEdit);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppRegisterWndProviderSEL, (void*)CFR_App_V1::RegisterWndProvider);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppUnRegisterWndProviderSEL, (void*)CFR_App_V1::UnRegisterWndProvider);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppGetEditionTypeSEL, (void*)CFR_App_V1::GetEditionType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppGetRecentFileListSizeSEL, (void*)CFR_App_V1::GetRecentFileListSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppGetModuleFileNameSEL, (void*)CFR_App_V1::GetModuleFileName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppGetToolbarLockedSEL, (void*)CFR_App_V1::GetToolbarLocked);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppSetToolbarLockedSEL, (void*)CFR_App_V1::SetToolbarLocked);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppRegisterCmdMsgEventHandlerSEL, (void*)CFR_App_V1::RegisterCmdMsgEventHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppUnRegisterCmdMsgEventHandlerSEL, (void*)CFR_App_V1::UnRegisterCmdMsgEventHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppRemoveTaskPanelByNameSEL, (void*)CFR_App_V1::RemoveTaskPanelByName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppDisableAllPanelSEL, (void*)CFR_App_V1::DisableAllPanel);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppIsDisableAllPanelSEL, (void*)CFR_App_V1::IsDisableAllPanel);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppGetPageContextMenuPosSEL, (void*)CFR_App_V1::GetPageContextMenuPos);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppOnCmdMsgByNameSEL, (void*)CFR_App_V1::OnCmdMsgByName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppSetOwnUndoModeSEL, (void*)CFR_App_V1::SetOwnUndoMode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppExitOwnUndoModeSEL, (void*)CFR_App_V1::ExitOwnUndoMode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppRegisterActionHandlerSEL, (void*)CFR_App_V1::RegisterActionHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppRedrawRecentFileListSEL, (void*)CFR_App_V1::RedrawRecentFileList);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppSetCustomRecentFileListLabelSEL, (void*)CFR_App_V1::SetCustomRecentFileListLabel);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppSetCustomRecentFileListItemBitmapSEL, (void*)CFR_App_V1::SetCustomRecentFileListItemBitmap);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppSetCustomRecentFileListMaxSizeSEL, (void*)CFR_App_V1::SetCustomRecentFileListMaxSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppSetCustomRecentFileListItemTitleSEL, (void*)CFR_App_V1::SetCustomRecentFileListItemTitle);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppSetCustomRecentFileListItemTooltipSEL, (void*)CFR_App_V1::SetCustomRecentFileListItemTooltip);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppGetCustomRecentFileListItemCountSEL, (void*)CFR_App_V1::GetCustomRecentFileListItemCount);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppIsRTLLanguageSEL, (void*)CFR_App_V1::IsRTLLanguage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppGetOEMVersionSEL, (void*)CFR_App_V1::GetOEMVersion);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppRegisterDataCollectionHadlerSEL, (void*)CFR_App_V1::RegisterDataCollectionHadler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppGetUIParentWndByTaskPaneSEL, (void*)CFR_App_V1::GetUIParentWndByTaskPane);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppAdvWndSetCustomizeSEL, (void*)CFR_App_V1::AdvWndSetCustomize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppGetAdvWndSEL, (void*)CFR_App_V1::GetAdvWnd);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppShowAdvWndSEL, (void*)CFR_App_V1::ShowAdvWnd);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppRegisterPOEventHandlerSEL, (void*)CFR_App_V1::RegisterPOEventHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppCreateBlankDocSEL, (void*)CFR_App_V1::CreateBlankDoc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppGetLocalFontNameSEL, (void*)CFR_App_V1::GetLocalFontName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppReLoadStartPageSEL, (void*)CFR_App_V1::ReLoadStartPage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppSetRecentFileListImageByExtSEL, (void*)CFR_App_V1::SetRecentFileListImageByExt);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppGetCurMeasurementUnitsSEL, (void*)CFR_App_V1::GetCurMeasurementUnits);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppGetNavPanelViewByNameSEL, (void*)CFR_App_V1::GetNavPanelViewByName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppGetNavPanelNameByIndexSEL, (void*)CFR_App_V1::GetNavPanelNameByIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppGetNavPanelCountSEL, (void*)CFR_App_V1::GetNavPanelCount);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppGetStartAppModeSEL, (void*)CFR_App_V1::GetStartAppMode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppRestartProcessSEL, (void*)CFR_App_V1::RestartProcess);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppGetStatusBarBkGroundColorSEL, (void*)CFR_App_V1::GetStatusBarBkGroundColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppGetStatusBarBkGroundPathSEL, (void*)CFR_App_V1::GetStatusBarBkGroundPath);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppCountAllTypesVisibleDocumentsSEL, (void*)CFR_App_V1::CountAllTypesVisibleDocuments);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppAddFileToCustomRecentFileList2SEL, (void*)CFR_App_V1::AddFileToCustomRecentFileList2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppRegisterRibbonRecentFileEventHandlerSEL, (void*)CFR_App_V1::RegisterRibbonRecentFileEventHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppDestroyRibbonRecentFileEventHandlerSEL, (void*)CFR_App_V1::DestroyRibbonRecentFileEventHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppSetMetadataOptionSEL, (void*)CFR_App_V1::SetMetadataOption);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppSetSubscriptionProviderSEL, (void*)CFR_App_V1::SetSubscriptionProvider);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppDestroySubscriptionProviderSEL, (void*)CFR_App_V1::DestroySubscriptionProvider);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppGetKeyfileStartAndExpireDateSEL, (void*)CFR_App_V1::GetKeyfileStartAndExpireDate);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppGetRibbonCategoryColorSEL, (void*)CFR_App_V1::GetRibbonCategoryColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppGetRibbonElementColorSEL, (void*)CFR_App_V1::GetRibbonElementColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppGetRibbonBaseBorderColorSEL, (void*)CFR_App_V1::GetRibbonBaseBorderColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppGetRecentFolderListSizeSEL, (void*)CFR_App_V1::GetRecentFolderListSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppCreateEmptyFrameViewEventHandlerSEL, (void*)CFR_App_V1::CreateEmptyFrameViewEventHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppDestroyEmptyFrameViewEventHandlerSEL, (void*)CFR_App_V1::DestroyEmptyFrameViewEventHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppCreateAnEmptyFrameWnd2SEL, (void*)CFR_App_V1::CreateAnEmptyFrameWnd2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppIsReadModeSEL, (void*)CFR_App_V1::IsReadMode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppExitReadModeSEL, (void*)CFR_App_V1::ExitReadMode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppGetCurrentChildFrmSEL, (void*)CFR_App_V1::GetCurrentChildFrm);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppCollectDocActionDataSEL, (void*)CFR_App_V1::CollectDocActionData);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppActiveChildFrameSEL, (void*)CFR_App_V1::ActiveChildFrame);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppCollectNormalDataSEL, (void*)CFR_App_V1::CollectNormalData);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppSetMainframeShowSEL, (void*)CFR_App_V1::SetMainframeShow);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppGetMainframeShowSEL, (void*)CFR_App_V1::GetMainframeShow);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppGetRibbonTooltipBorderColorSEL, (void*)CFR_App_V1::GetRibbonTooltipBorderColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppGetRecentFileIndexSEL, (void*)CFR_App_V1::GetRecentFileIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppFZipUnzipSEL, (void*)CFR_App_V1::FZipUnzip);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppIsJSEnabledSEL, (void*)CFR_App_V1::IsJSEnabled);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppSetEnableJSSEL, (void*)CFR_App_V1::SetEnableJS);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppCollectNormalData2SEL, (void*)CFR_App_V1::CollectNormalData2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppCollectBitmapDataSEL, (void*)CFR_App_V1::CollectBitmapData);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppIsNeedCollectDataSEL, (void*)CFR_App_V1::IsNeedCollectData);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppIsFipsModeSEL, (void*)CFR_App_V1::IsFipsMode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppAddNavPanelViewSEL, (void*)CFR_App_V1::AddNavPanelView);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppReleaseNavPanelViewSEL, (void*)CFR_App_V1::ReleaseNavPanelView);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppAddFileAttachmentSEL, (void*)CFR_App_V1::AddFileAttachment);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppOpenFileAttachmentSEL, (void*)CFR_App_V1::OpenFileAttachment);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppIsPDF2DocSEL, (void*)CFR_App_V1::IsPDF2Doc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppConvertToPDFSEL, (void*)CFR_App_V1::ConvertToPDF);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppRegisterPDFAPluginHandlerSEL, (void*)CFR_App_V1::RegisterPDFAPluginHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppConvertToPDFASEL, (void*)CFR_App_V1::ConvertToPDFA);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppAddLogSEL, (void*)CFR_App_V1::AddLog);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppIsReaderOnlyModeSEL, (void*)CFR_App_V1::IsReaderOnlyMode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppGetMainFrameWndCountSEL, (void*)CFR_App_V1::GetMainFrameWndCount);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppGetMainFrameWndByIndexSEL, (void*)CFR_App_V1::GetMainFrameWndByIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppGetModelessParentWndSEL, (void*)CFR_App_V1::GetModelessParentWnd);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppIsMainfrmActivatingSEL, (void*)CFR_App_V1::IsMainfrmActivating);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppGetRibbonBar2SEL, (void*)CFR_App_V1::GetRibbonBar2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppRefreshLayerPanelViewSEL, (void*)CFR_App_V1::RefreshLayerPanelView);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppDeprecatedRegisterDRMSecurityHandlerSEL, (void*)CFR_App_V1::DeprecatedRegisterDRMSecurityHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppAddECMFileDialogSEL, (void*)CFR_App_V1::AddECMFileDialog);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppECMFileDialogAddMenuItemSEL, (void*)CFR_App_V1::ECMFileDialogAddMenuItem);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppECMFileDialogItemSelectedSEL, (void*)CFR_App_V1::ECMFileDialogItemSelected);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppGetECMFileDialogSEL, (void*)CFR_App_V1::GetECMFileDialog);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppGetSelectedECMPluginNameSEL, (void*)CFR_App_V1::GetSelectedECMPluginName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppGetMainClientAreaWndSEL, (void*)CFR_App_V1::GetMainClientAreaWnd);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppRegisterPortfolioEventHandlerSEL, (void*)CFR_App_V1::RegisterPortfolioEventHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppAddECMUploadProcSEL, (void*)CFR_App_V1::AddECMUploadProc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppGetConvertPDFErrMsgSEL, (void*)CFR_App_V1::GetConvertPDFErrMsg);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppECMFileDialogUploadProcSEL, (void*)CFR_App_V1::ECMFileDialogUploadProc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppECMFileDialogRemoveMenuItemSEL, (void*)CFR_App_V1::ECMFileDialogRemoveMenuItem);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppCollectSensorDataSEL, (void*)CFR_App_V1::CollectSensorData);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppGetSystemHandlerSEL, (void*)CFR_App_V1::GetSystemHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppCreateAndRegisterFormDesignerToolHandlerSEL, (void*)CFR_App_V1::CreateAndRegisterFormDesignerToolHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppShowModuleNoLicenseDlgSEL, (void*)CFR_App_V1::ShowModuleNoLicenseDlg);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppDeleteAnnotSEL, (void*)CFR_App_V1::DeleteAnnot);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppDoModulePreferDlgSEL, (void*)CFR_App_V1::DoModulePreferDlg);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppRegisterAnnotHandlerSEL, (void*)CFR_App_V1::RegisterAnnotHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppAddUndoItemCRSASEL, (void*)CFR_App_V1::AddUndoItemCRSA);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppBaseAnnotLoadCursorSEL, (void*)CFR_App_V1::BaseAnnotLoadCursor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppAddDragPointSEL, (void*)CFR_App_V1::AddDragPoint);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppGetSystemDefaultFontSEL, (void*)CFR_App_V1::GetSystemDefaultFont);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppGetRSAAnnotElementSEL, (void*)CFR_App_V1::GetRSAAnnotElement);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppGetPopupElementSEL, (void*)CFR_App_V1::GetPopupElement);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppGetJSEngineHRuntimeSEL, (void*)CFR_App_V1::GetJSEngineHRuntime);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppUnRegisterDocHandlerOfPDDocSEL, (void*)CFR_App_V1::UnRegisterDocHandlerOfPDDoc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppGetOperatorPermissionSEL, (void*)CFR_App_V1::GetOperatorPermission);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppGetHContextSEL, (void*)CFR_App_V1::GetHContext);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppJSGetGlobalObjectSEL, (void*)CFR_App_V1::JSGetGlobalObject);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppJSSetUndefinedSEL, (void*)CFR_App_V1::JSSetUndefined);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppJSValueSetSEL, (void*)CFR_App_V1::JSValueSet);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppJSValueReleaseSEL, (void*)CFR_App_V1::JSValueRelease);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppRegisterTransitionHandlerSEL, (void*)CFR_App_V1::RegisterTransitionHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppGetPreferenceIdentitySEL, (void*)CFR_App_V1::GetPreferenceIdentity);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppJSRuntimeNewContextSEL, (void*)CFR_App_V1::JSRuntimeNewContext);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppJSRuntimeReleaseContextSEL, (void*)CFR_App_V1::JSRuntimeReleaseContext);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppIsRunIPFrameSEL, (void*)CFR_App_V1::IsRunIPFrame);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppOwnerFileTypeHandlerDoEmailSEL, (void*)CFR_App_V1::OwnerFileTypeHandlerDoEmail);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppGetEmailTabDocInfoSEL, (void*)CFR_App_V1::GetEmailTabDocInfo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppGetAULIBCurrentLanguageSEL, (void*)CFR_App_V1::GetAULIBCurrentLanguage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppGetIsEmailChoosePageRangeSEL, (void*)CFR_App_V1::GetIsEmailChoosePageRange);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppAddECMFileDialog2SEL, (void*)CFR_App_V1::AddECMFileDialog2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppIsEditingUseHindiDigitsSEL, (void*)CFR_App_V1::IsEditingUseHindiDigits);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppCountTaskPaneNameSEL, (void*)CFR_App_V1::CountTaskPaneName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppGetTaskPaneNameByIndexSEL, (void*)CFR_App_V1::GetTaskPaneNameByIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppGetDocUnitSEL, (void*)CFR_App_V1::GetDocUnit);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppChangeUnitsSEL, (void*)CFR_App_V1::ChangeUnits);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppGetSelectedECMPluginAccountSEL, (void*)CFR_App_V1::GetSelectedECMPluginAccount);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppAddECMFileDialog3SEL, (void*)CFR_App_V1::AddECMFileDialog3);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppRegisterUserMessageHanlerSEL, (void*)CFR_App_V1::RegisterUserMessageHanler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppUnRegisterUserMessageHanlerSEL, (void*)CFR_App_V1::UnRegisterUserMessageHanler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppSetSGBaseHandlerSEL, (void*)CFR_App_V1::SetSGBaseHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppDestoryRibbonFloatySEL, (void*)CFR_App_V1::DestoryRibbonFloaty);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppSetActiveTool2SEL, (void*)CFR_App_V1::SetActiveTool2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppGetRedirectURLSEL, (void*)CFR_App_V1::GetRedirectURL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppIsPortfolioSubDocSEL, (void*)CFR_App_V1::IsPortfolioSubDoc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppIsCurDocViewShowInContainerFrmSEL, (void*)CFR_App_V1::IsCurDocViewShowInContainerFrm);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppCheckTrustySitesSEL, (void*)CFR_App_V1::CheckTrustySites);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppIsLinearizeSaveAsSEL, (void*)CFR_App_V1::IsLinearizeSaveAs);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppGetMetaDataOptionSEL, (void*)CFR_App_V1::GetMetaDataOption);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppIsECMDocumentSEL, (void*)CFR_App_V1::IsECMDocument);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppGetDocumentSEL, (void*)CFR_App_V1::GetDocument);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppRunFieldFormatSEL, (void*)CFR_App_V1::RunFieldFormat);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppRemoveMapFormat2DocSEL, (void*)CFR_App_V1::RemoveMapFormat2Doc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppDownLoadAddonSEL, (void*)CFR_App_V1::DownLoadAddon);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppGetDocProducerSEL, (void*)CFR_App_V1::GetDocProducer);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppSetSignatureCheckSEL, (void*)CFR_App_V1::SetSignatureCheck);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppDocRunOCRFinishSEL, (void*)CFR_App_V1::DocRunOCRFinish);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppAddShareMessageBarSEL, (void*)CFR_App_V1::AddShareMessageBar);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppShowShareMessageBarSEL, (void*)CFR_App_V1::ShowShareMessageBar);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppSetCurrentStartPageTabSEL, (void*)CFR_App_V1::SetCurrentStartPageTab);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppGetAppPathSEL, (void*)CFR_App_V1::GetAppPath);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppAddTrialDayDlgToCategorySEL, (void*)CFR_App_V1::AddTrialDayDlgToCategory);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppRegisterPanelToolHandlerSEL, (void*)CFR_App_V1::RegisterPanelToolHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppIsTaskPaneShowSEL, (void*)CFR_App_V1::IsTaskPaneShow);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppGetCurrentDocumentByFrameSEL, (void*)CFR_App_V1::GetCurrentDocumentByFrame);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppSendUserDataMessageToAppSEL, (void*)CFR_App_V1::SendUserDataMessageToApp);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppShowReadModeSEL, (void*)CFR_App_V1::ShowReadMode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppLoadUnitStringSEL, (void*)CFR_App_V1::LoadUnitString);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppSetECMFileDialogSensorDataTypeSEL, (void*)CFR_App_V1::SetECMFileDialogSensorDataType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppGetReplaceColorsSEL, (void*)CFR_App_V1::GetReplaceColors);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppGetFileTypeCanSupportOpenSEL, (void*)CFR_App_V1::GetFileTypeCanSupportOpen);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppOnDocPageLabelChangeSEL, (void*)CFR_App_V1::OnDocPageLabelChange);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppSetCurrentToolByNameSEL, (void*)CFR_App_V1::SetCurrentToolByName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppWillSignatureDocSEL, (void*)CFR_App_V1::WillSignatureDoc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppDidSignatureDocSEL, (void*)CFR_App_V1::DidSignatureDoc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppDeleteUnusedFontSEL, (void*)CFR_App_V1::DeleteUnusedFont);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppGetIsEditorAppSEL, (void*)CFR_App_V1::GetIsEditorApp);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppOpenNewDocViewFrameSEL, (void*)CFR_App_V1::OpenNewDocViewFrame);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppSetActiveTabByHWNDSEL, (void*)CFR_App_V1::SetActiveTabByHWND);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppPopDocPropertyPage2SEL, (void*)CFR_App_V1::PopDocPropertyPage2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppRegisterPluginEventHandlerSEL, (void*)CFR_App_V1::RegisterPluginEventHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppUnregisterPluginEventHandlerSEL, (void*)CFR_App_V1::UnregisterPluginEventHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppSetDocCanSaveSessionSEL, (void*)CFR_App_V1::SetDocCanSaveSession);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppGetBitmapFromClipboardSEL, (void*)CFR_App_V1::GetBitmapFromClipboard);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppUnRegisterSecurityHandler2SEL, (void*)CFR_App_V1::UnRegisterSecurityHandler2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppToDecryptFileSEL, (void*)CFR_App_V1::ToDecryptFile);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppDeleteDecryptFileSEL, (void*)CFR_App_V1::DeleteDecryptFile);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppUnRegisterPOEventHandlerSEL, (void*)CFR_App_V1::UnRegisterPOEventHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppUnRegisterToolSEL, (void*)CFR_App_V1::UnRegisterTool);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppIsHideWndTaskSEL, (void*)CFR_App_V1::IsHideWndTask);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppSetHideWndTaskSEL, (void*)CFR_App_V1::SetHideWndTask);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppRegisterDRMEventHandlerSEL, (void*)CFR_App_V1::RegisterDRMEventHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppUnRegisterDRMEventHandlerSEL, (void*)CFR_App_V1::UnRegisterDRMEventHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppAddTrialDayDlgToCategory2SEL, (void*)CFR_App_V1::AddTrialDayDlgToCategory2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppCheckIsContinueSEL, (void*)CFR_App_V1::CheckIsContinue);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppCheckIsOldSubProcessSEL, (void*)CFR_App_V1::CheckIsOldSubProcess);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppGetAppDataRootPathSEL, (void*)CFR_App_V1::GetAppDataRootPath);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppGetActiveTaskNameSEL, (void*)CFR_App_V1::GetActiveTaskName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppShowTaskPane2SEL, (void*)CFR_App_V1::ShowTaskPane2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppIsDocRedactSaveToSaveAsSEL, (void*)CFR_App_V1::IsDocRedactSaveToSaveAs);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppUpdateCustomRecentFileListSEL, (void*)CFR_App_V1::UpdateCustomRecentFileList);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppCreateColorDialogSEL, (void*)CFR_App_V1::CreateColorDialog);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppSetNotifySEL, (void*)CFR_App_V1::SetNotify);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppShowColorDialogSEL, (void*)CFR_App_V1::ShowColorDialog);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppIsTaskPaneInTabSEL, (void*)CFR_App_V1::IsTaskPaneInTab);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppIsRunOfficeEmbededSEL, (void*)CFR_App_V1::IsRunOfficeEmbeded);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppIsStartPageClosedSEL, (void*)CFR_App_V1::IsStartPageClosed);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppShowAboutPluginsSEL, (void*)CFR_App_V1::ShowAboutPlugins);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppSetFindResultHighlightColorSEL, (void*)CFR_App_V1::SetFindResultHighlightColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppGetFindResultHighlightColorSEL, (void*)CFR_App_V1::GetFindResultHighlightColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppSetFindResultHighlightOpacitySEL, (void*)CFR_App_V1::SetFindResultHighlightOpacity);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppGetFindResultHighlightOpacitySEL, (void*)CFR_App_V1::GetFindResultHighlightOpacity);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppRegisterStartPageEventHandlerSEL, (void*)CFR_App_V1::RegisterStartPageEventHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppUnRegisterStartPageEventHandlerSEL, (void*)CFR_App_V1::UnRegisterStartPageEventHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppRegisterUndoEventHandlerSEL, (void*)CFR_App_V1::RegisterUndoEventHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppUnRegisterUndoEventHandlerSEL, (void*)CFR_App_V1::UnRegisterUndoEventHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppGetPDFAViewModeSEL, (void*)CFR_App_V1::GetPDFAViewMode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppIsProtectedModeByPathSEL, (void*)CFR_App_V1::IsProtectedModeByPath);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppAddFileAttachment2SEL, (void*)CFR_App_V1::AddFileAttachment2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppInitAESV4CryptoHandlerSEL, (void*)CFR_App_V1::InitAESV4CryptoHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppCombinePDFSEL, (void*)CFR_App_V1::CombinePDF);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppSEL, FRAppLaunchSEL, (void*)CFR_App_V1::Launch);
	}
};

class CFR_Language_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRLanguageSEL, FRLanguageCreateSEL, (void*)CFR_Language_V1::Create);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRLanguageSEL, FRLanguageReleaseSEL, (void*)CFR_Language_V1::Release);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRLanguageSEL, FRLanguageChangeSEL, (void*)CFR_Language_V1::Change);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRLanguageSEL, FRLanguageGetCurrentIDSEL, (void*)CFR_Language_V1::GetCurrentID);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRLanguageSEL, FRLanguageTranslateMenuSEL, (void*)CFR_Language_V1::TranslateMenu);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRLanguageSEL, FRLanguageTranslateDialogSEL, (void*)CFR_Language_V1::TranslateDialog);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRLanguageSEL, FRLanguageLoadStringSEL, (void*)CFR_Language_V1::LoadString);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRLanguageSEL, FRLanguageLoadVersionResSEL, (void*)CFR_Language_V1::LoadVersionRes);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRLanguageSEL, FRLanguageGetLocalLangNameSEL, (void*)CFR_Language_V1::GetLocalLangName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRLanguageSEL, FRLanguageTranslateDialog2SEL, (void*)CFR_Language_V1::TranslateDialog2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRLanguageSEL, FRLanguageModifyLogFontSEL, (void*)CFR_Language_V1::ModifyLogFont);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRLanguageSEL, FRLanguageFormatExSEL, (void*)CFR_Language_V1::FormatEx);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRLanguageSEL, FRLanguageJSPluginGetMessageSEL, (void*)CFR_Language_V1::JSPluginGetMessage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRLanguageSEL, FRLanguageReleaseDialogUIFontSEL, (void*)CFR_Language_V1::ReleaseDialogUIFont);
	}
};

class CFR_UIProgress_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRUIProgressSEL, FRUIProgressCreateSEL, (void*)CFR_UIProgress_V1::Create);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRUIProgressSEL, FRUIProgressSetTextSEL, (void*)CFR_UIProgress_V1::SetText);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRUIProgressSEL, FRUIProgressSetRangeSEL, (void*)CFR_UIProgress_V1::SetRange);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRUIProgressSEL, FRUIProgressSetCurrValueSEL, (void*)CFR_UIProgress_V1::SetCurrValue);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRUIProgressSEL, FRUIProgressPeekAndPumpSEL, (void*)CFR_UIProgress_V1::PeekAndPump);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRUIProgressSEL, FRUIProgressIsCancelledSEL, (void*)CFR_UIProgress_V1::IsCancelled);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRUIProgressSEL, FRUIProgressGetCurrentValueSEL, (void*)CFR_UIProgress_V1::GetCurrentValue);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRUIProgressSEL, FRUIProgressDestroySEL, (void*)CFR_UIProgress_V1::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRUIProgressSEL, FRUIProgressDoCancelSEL, (void*)CFR_UIProgress_V1::DoCancel);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRUIProgressSEL, FRUIProgressCreate2SEL, (void*)CFR_UIProgress_V1::Create2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRUIProgressSEL, FRUIProgressCreate3SEL, (void*)CFR_UIProgress_V1::Create3);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRUIProgressSEL, FRUIProgressGetHwndSEL, (void*)CFR_UIProgress_V1::GetHwnd);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRUIProgressSEL, FRUIProgressSetSecondLineTextSEL, (void*)CFR_UIProgress_V1::SetSecondLineText);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRUIProgressSEL, FRUIProgressGetTextSEL, (void*)CFR_UIProgress_V1::GetText);
	}
};

// fr_appImpl.h end

// In file fr_barImpl.h
class CFR_ToolButton_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRToolButtonSEL, FRToolButtonNewSEL, (void*)CFR_ToolButton_V1::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRToolButtonSEL, FRToolButtonReleaseSEL, (void*)CFR_ToolButton_V1::Release);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRToolButtonSEL, FRToolButtonGetNameSEL, (void*)CFR_ToolButton_V1::GetName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRToolButtonSEL, FRToolButtonGetLabelTextSEL, (void*)CFR_ToolButton_V1::GetLabelText);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRToolButtonSEL, FRToolButtonSetLabelTextSEL, (void*)CFR_ToolButton_V1::SetLabelText);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRToolButtonSEL, FRToolButtonSetHelpTextSEL, (void*)CFR_ToolButton_V1::SetHelpText);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRToolButtonSEL, FRToolButtonSetIconSEL, (void*)CFR_ToolButton_V1::SetIcon);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRToolButtonSEL, FRToolButtonIsSeparatorSEL, (void*)CFR_ToolButton_V1::IsSeparator);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRToolButtonSEL, FRToolButtonIsVisibleSEL, (void*)CFR_ToolButton_V1::IsVisible);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRToolButtonSEL, FRToolButtonSetExecuteProcSEL, (void*)CFR_ToolButton_V1::SetExecuteProc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRToolButtonSEL, FRToolButtonSetEnableProcSEL, (void*)CFR_ToolButton_V1::SetEnableProc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRToolButtonSEL, FRToolButtonSetMarkedProcSEL, (void*)CFR_ToolButton_V1::SetMarkedProc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRToolButtonSEL, FRToolButtonSetDropDownProcSEL, (void*)CFR_ToolButton_V1::SetDropDownProc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRToolButtonSEL, FRToolButtonGetClientDataSEL, (void*)CFR_ToolButton_V1::GetClientData);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRToolButtonSEL, FRToolButtonExecuteProcSEL, (void*)CFR_ToolButton_V1::ExecuteProc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRToolButtonSEL, FRToolButtonSetFlyoutToolBarSEL, (void*)CFR_ToolButton_V1::SetFlyoutToolBar);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRToolButtonSEL, FRToolButtonGetMapIdSEL, (void*)CFR_ToolButton_V1::GetMapId);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRToolButtonSEL, FRToolButtonSetClientDataSEL, (void*)CFR_ToolButton_V1::SetClientData);
	}
};

class CFR_ToolBar_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRToolBarSEL, FRToolBarNewSEL, (void*)CFR_ToolBar_V1::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRToolBarSEL, FRToolBarNewFlyoutSEL, (void*)CFR_ToolBar_V1::NewFlyout);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRToolBarSEL, FRToolBarReleaseSEL, (void*)CFR_ToolBar_V1::Release);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRToolBarSEL, FRToolBarGetNameSEL, (void*)CFR_ToolBar_V1::GetName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRToolBarSEL, FRToolBarCountButtonsSEL, (void*)CFR_ToolBar_V1::CountButtons);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRToolBarSEL, FRToolBarGetButtonSEL, (void*)CFR_ToolBar_V1::GetButton);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRToolBarSEL, FRToolBarGetTitleSEL, (void*)CFR_ToolBar_V1::GetTitle);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRToolBarSEL, FRToolBarSetTitleSEL, (void*)CFR_ToolBar_V1::SetTitle);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRToolBarSEL, FRToolBarGetButtonByNameSEL, (void*)CFR_ToolBar_V1::GetButtonByName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRToolBarSEL, FRToolBarAddButtonSEL, (void*)CFR_ToolBar_V1::AddButton);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRToolBarSEL, FRToolBarInsertButtonSEL, (void*)CFR_ToolBar_V1::InsertButton);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRToolBarSEL, FRToolBarShowToolBarSEL, (void*)CFR_ToolBar_V1::ShowToolBar);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRToolBarSEL, FRToolBarHideToolBarSEL, (void*)CFR_ToolBar_V1::HideToolBar);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRToolBarSEL, FRToolBarShowToolButtonSEL, (void*)CFR_ToolBar_V1::ShowToolButton);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRToolBarSEL, FRToolBarHideToolButtonSEL, (void*)CFR_ToolBar_V1::HideToolButton);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRToolBarSEL, FRToolBarRemoveButtonSEL, (void*)CFR_ToolBar_V1::RemoveButton);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRToolBarSEL, FRToolBarUpdateButtonStatesSEL, (void*)CFR_ToolBar_V1::UpdateButtonStates);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRToolBarSEL, FRToolBarIsFlyOutToolbarSEL, (void*)CFR_ToolBar_V1::IsFlyOutToolbar);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRToolBarSEL, FRToolBarSetMenuTitleSEL, (void*)CFR_ToolBar_V1::SetMenuTitle);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRToolBarSEL, FRToolBarSetDefaultToolbarSEL, (void*)CFR_ToolBar_V1::SetDefaultToolbar);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRToolBarSEL, FRToolBarHideButtonInBrowserSEL, (void*)CFR_ToolBar_V1::HideButtonInBrowser);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRToolBarSEL, FRToolBarIsVisibleSEL, (void*)CFR_ToolBar_V1::IsVisible);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRToolBarSEL, FRToolBarIsDisableSEL, (void*)CFR_ToolBar_V1::IsDisable);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRToolBarSEL, FRToolBarSetDisableSEL, (void*)CFR_ToolBar_V1::SetDisable);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRToolBarSEL, FRToolBarDockSEL, (void*)CFR_ToolBar_V1::Dock);
	}
};

class CFR_MessageBar_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMessageBarSEL, FRMessageBarCreateSEL, (void*)CFR_MessageBar_V1::Create);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMessageBarSEL, FRMessageBarDestroySEL, (void*)CFR_MessageBar_V1::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMessageBarSEL, FRMessageBarShowSEL, (void*)CFR_MessageBar_V1::Show);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMessageBarSEL, FRMessageBarIsVisibleSEL, (void*)CFR_MessageBar_V1::IsVisible);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMessageBarSEL, FRMessageBarSetTextSEL, (void*)CFR_MessageBar_V1::SetText);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMessageBarSEL, FRMessageBarSetBitmapSEL, (void*)CFR_MessageBar_V1::SetBitmap);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMessageBarSEL, FRMessageBarAddButtonSEL, (void*)CFR_MessageBar_V1::AddButton);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMessageBarSEL, FRMessageBarSetButtonAlignmentSEL, (void*)CFR_MessageBar_V1::SetButtonAlignment);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMessageBarSEL, FRMessageBarSetButtonDropDownProcSEL, (void*)CFR_MessageBar_V1::SetButtonDropDownProc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMessageBarSEL, FRMessageBarSetButtonExecuteProcSEL, (void*)CFR_MessageBar_V1::SetButtonExecuteProc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMessageBarSEL, FRMessageBarSetButtonHelpTextSEL, (void*)CFR_MessageBar_V1::SetButtonHelpText);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMessageBarSEL, FRMessageBarEnableButtonSEL, (void*)CFR_MessageBar_V1::EnableButton);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMessageBarSEL, FRMessageBarSetButtonPressedSEL, (void*)CFR_MessageBar_V1::SetButtonPressed);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMessageBarSEL, FRMessageBarSetClientDataSEL, (void*)CFR_MessageBar_V1::SetClientData);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMessageBarSEL, FRMessageBarAddButtonImageSEL, (void*)CFR_MessageBar_V1::AddButtonImage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMessageBarSEL, FRMessageBarGetButtonImageSEL, (void*)CFR_MessageBar_V1::GetButtonImage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMessageBarSEL, FRMessageBarChangeButtonSEL, (void*)CFR_MessageBar_V1::ChangeButton);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMessageBarSEL, FRMessageBarIsButtonEnableSEL, (void*)CFR_MessageBar_V1::IsButtonEnable);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMessageBarSEL, FRMessageBarCountVisibleMessageBarsSEL, (void*)CFR_MessageBar_V1::CountVisibleMessageBars);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMessageBarSEL, FRMessageBarGetVisibleMessageBarSEL, (void*)CFR_MessageBar_V1::GetVisibleMessageBar);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMessageBarSEL, FRMessageBarSetBitmap2SEL, (void*)CFR_MessageBar_V1::SetBitmap2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMessageBarSEL, FRMessageBarAddButton2SEL, (void*)CFR_MessageBar_V1::AddButton2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMessageBarSEL, FRMessageBarAddButtonImage2SEL, (void*)CFR_MessageBar_V1::AddButtonImage2);
	}
};

// fr_barImpl.h end

// In file fr_docImpl.h
class CFR_Doc_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocOpenFromFileSEL, (void*)CFR_Doc_V1::OpenFromFile);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocOpenFromPDDocSEL, (void*)CFR_Doc_V1::OpenFromPDDoc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocFromPDDocSEL, (void*)CFR_Doc_V1::FromPDDoc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocCloseSEL, (void*)CFR_Doc_V1::Close);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocGetPDDocSEL, (void*)CFR_Doc_V1::GetPDDoc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocSetCustomSecuritySEL, (void*)CFR_Doc_V1::SetCustomSecurity);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocDoSaveSEL, (void*)CFR_Doc_V1::DoSave);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocDoSaveAsSEL, (void*)CFR_Doc_V1::DoSaveAs);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocSetChangeMarkSEL, (void*)CFR_Doc_V1::SetChangeMark);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocGetChangeMarkSEL, (void*)CFR_Doc_V1::GetChangeMark);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocClearChangeMarkSEL, (void*)CFR_Doc_V1::ClearChangeMark);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocWillInsertPagesSEL, (void*)CFR_Doc_V1::WillInsertPages);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocDidInsertPagesSEL, (void*)CFR_Doc_V1::DidInsertPages);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocWillDeletePagesSEL, (void*)CFR_Doc_V1::WillDeletePages);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocDidDeletePagesSEL, (void*)CFR_Doc_V1::DidDeletePages);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocWillRotatePageSEL, (void*)CFR_Doc_V1::WillRotatePage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocDidRotatePageSEL, (void*)CFR_Doc_V1::DidRotatePage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocWillResizePageSEL, (void*)CFR_Doc_V1::WillResizePage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocDidResizePageSEL, (void*)CFR_Doc_V1::DidResizePage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocDoPrintSEL, (void*)CFR_Doc_V1::DoPrint);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocPrintPagesSEL, (void*)CFR_Doc_V1::PrintPages);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocPrintSetupSEL, (void*)CFR_Doc_V1::PrintSetup);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocCountDocViewsSEL, (void*)CFR_Doc_V1::CountDocViews);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocGetDocViewSEL, (void*)CFR_Doc_V1::GetDocView);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocGetCurrentDocViewSEL, (void*)CFR_Doc_V1::GetCurrentDocView);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocGetPermissionsSEL, (void*)CFR_Doc_V1::GetPermissions);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocSetPermissionsSEL, (void*)CFR_Doc_V1::SetPermissions);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocGetFilePathSEL, (void*)CFR_Doc_V1::GetFilePath);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocSetCurSelectionSEL, (void*)CFR_Doc_V1::SetCurSelection);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocAddToCurrentSelectionSEL, (void*)CFR_Doc_V1::AddToCurrentSelection);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocRemoveFromSelectionSEL, (void*)CFR_Doc_V1::RemoveFromSelection);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocGetCurSelectionSEL, (void*)CFR_Doc_V1::GetCurSelection);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocGetCurSelectionTypeSEL, (void*)CFR_Doc_V1::GetCurSelectionType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocShowSelectionSEL, (void*)CFR_Doc_V1::ShowSelection);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocClearSelectionSEL, (void*)CFR_Doc_V1::ClearSelection);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocDeleteSelectionSEL, (void*)CFR_Doc_V1::DeleteSelection);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocCopySelectionSEL, (void*)CFR_Doc_V1::CopySelection);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocSetCurCaptureSEL, (void*)CFR_Doc_V1::SetCurCapture);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocGetCurCaptureSEL, (void*)CFR_Doc_V1::GetCurCapture);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocGetCurCaptureTypeSEL, (void*)CFR_Doc_V1::GetCurCaptureType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocReleaseCurCaptureSEL, (void*)CFR_Doc_V1::ReleaseCurCapture);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocSetMenuEnableByNameSEL, (void*)CFR_Doc_V1::SetMenuEnableByName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocGetParserSEL, (void*)CFR_Doc_V1::GetParser);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocGetPDFCreatorSEL, (void*)CFR_Doc_V1::GetPDFCreator);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocDoPrintSilentlySEL, (void*)CFR_Doc_V1::DoPrintSilently);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocGetTextSelectToolSEL, (void*)CFR_Doc_V1::GetTextSelectTool);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocGetDocumentTypeSEL, (void*)CFR_Doc_V1::GetDocumentType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocCanSecurityMethodBeModifiedSEL, (void*)CFR_Doc_V1::CanSecurityMethodBeModified);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocUpdateSecurityMethodSEL, (void*)CFR_Doc_V1::UpdateSecurityMethod);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocIsEncryptedSEL, (void*)CFR_Doc_V1::IsEncrypted);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocRemoveSecurityMethodSEL, (void*)CFR_Doc_V1::RemoveSecurityMethod);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocEnableRunScriptSEL, (void*)CFR_Doc_V1::EnableRunScript);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocIsEnableRunScriptSEL, (void*)CFR_Doc_V1::IsEnableRunScript);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocChangeDocShowTitleSEL, (void*)CFR_Doc_V1::ChangeDocShowTitle);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocIsMemoryDocSEL, (void*)CFR_Doc_V1::IsMemoryDoc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocGetCurrentSecurityMethodNameSEL, (void*)CFR_Doc_V1::GetCurrentSecurityMethodName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocGetCurrentWndProviderSEL, (void*)CFR_Doc_V1::GetCurrentWndProvider);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocSetCurrentWndProviderSEL, (void*)CFR_Doc_V1::SetCurrentWndProvider);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocGetWndProviderByNameSEL, (void*)CFR_Doc_V1::GetWndProviderByName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocGetReviewTypeSEL, (void*)CFR_Doc_V1::GetReviewType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocSetReviewTypeSEL, (void*)CFR_Doc_V1::SetReviewType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocSetAppPermissionsSEL, (void*)CFR_Doc_V1::SetAppPermissions);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocGetAppPermissionsSEL, (void*)CFR_Doc_V1::GetAppPermissions);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocGetAppPermissionsIISEL, (void*)CFR_Doc_V1::GetAppPermissionsII);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocGetPermissionsIISEL, (void*)CFR_Doc_V1::GetPermissionsII);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocGetMergedPermissionsSEL, (void*)CFR_Doc_V1::GetMergedPermissions);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocKillFocusAnnotSEL, (void*)CFR_Doc_V1::KillFocusAnnot);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocSetPropertiesPDFVersionSEL, (void*)CFR_Doc_V1::SetPropertiesPDFVersion);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocSetPropertiesFilePathSEL, (void*)CFR_Doc_V1::SetPropertiesFilePath);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocDoSaveAs2SEL, (void*)CFR_Doc_V1::DoSaveAs2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocShowSaveProgressCancelButtonSEL, (void*)CFR_Doc_V1::ShowSaveProgressCancelButton);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocSetInputPasswordProcSEL, (void*)CFR_Doc_V1::SetInputPasswordProc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocCheckInDocumentOLESEL, (void*)CFR_Doc_V1::CheckInDocumentOLE);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocIsShowInBrowserSEL, (void*)CFR_Doc_V1::IsShowInBrowser);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocGetUIParentWndSEL, (void*)CFR_Doc_V1::GetUIParentWnd);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocGetDocFrameHandlerSEL, (void*)CFR_Doc_V1::GetDocFrameHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocCreateNewViewByWndProviderSEL, (void*)CFR_Doc_V1::CreateNewViewByWndProvider);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocLoadAnnotsSEL, (void*)CFR_Doc_V1::LoadAnnots);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocGetDocShowTitleSEL, (void*)CFR_Doc_V1::GetDocShowTitle);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocDoSave2SEL, (void*)CFR_Doc_V1::DoSave2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocResetDocTitleColorSEL, (void*)CFR_Doc_V1::ResetDocTitleColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocSetDocTitleColorSEL, (void*)CFR_Doc_V1::SetDocTitleColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocGetOriginalTypeSEL, (void*)CFR_Doc_V1::GetOriginalType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocSetOriginalTypeSEL, (void*)CFR_Doc_V1::SetOriginalType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocSetFocusAnnotSEL, (void*)CFR_Doc_V1::SetFocusAnnot);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocGenerateUR3PermissionSEL, (void*)CFR_Doc_V1::GenerateUR3Permission);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocHasRedactAnnotSEL, (void*)CFR_Doc_V1::HasRedactAnnot);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocGenerateRedactionsSEL, (void*)CFR_Doc_V1::GenerateRedactions);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocReloadPageSEL, (void*)CFR_Doc_V1::ReloadPage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocForbidChangeMarkSEL, (void*)CFR_Doc_V1::ForbidChangeMark);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocOpenFromPDDoc2SEL, (void*)CFR_Doc_V1::OpenFromPDDoc2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocGetCreateDocSourceSEL, (void*)CFR_Doc_V1::GetCreateDocSource);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocSetCreateDocSourceSEL, (void*)CFR_Doc_V1::SetCreateDocSource);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocGetCreateDocSourceFileNameSEL, (void*)CFR_Doc_V1::GetCreateDocSourceFileName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocParsePageSEL, (void*)CFR_Doc_V1::ParsePage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocIsValidAnnotSEL, (void*)CFR_Doc_V1::IsValidAnnot);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocIsWillReopenSEL, (void*)CFR_Doc_V1::IsWillReopen);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocOpenFromFile2SEL, (void*)CFR_Doc_V1::OpenFromFile2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocGetSignaturePermissionsSEL, (void*)CFR_Doc_V1::GetSignaturePermissions);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocConvertPdfToOtherFormatSEL, (void*)CFR_Doc_V1::ConvertPdfToOtherFormat);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocDoPassWordEncryptSEL, (void*)CFR_Doc_V1::DoPassWordEncrypt);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocIsInProtectedViewModeSEL, (void*)CFR_Doc_V1::IsInProtectedViewMode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocGetCreateDocSourceFilePathSEL, (void*)CFR_Doc_V1::GetCreateDocSourceFilePath);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocIsImageBasedDocumentSEL, (void*)CFR_Doc_V1::IsImageBasedDocument);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocSetDocEncryptedSEL, (void*)CFR_Doc_V1::SetDocEncrypted);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocIsVisibleSEL, (void*)CFR_Doc_V1::IsVisible);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocDeprecatedSetDRMSecuritySEL, (void*)CFR_Doc_V1::DeprecatedSetDRMSecurity);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocConvertPdfToOtherFormat2SEL, (void*)CFR_Doc_V1::ConvertPdfToOtherFormat2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocAddWatermarkSEL, (void*)CFR_Doc_V1::AddWatermark);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocAddAndUpdateWatermarkSEL, (void*)CFR_Doc_V1::AddAndUpdateWatermark);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocRemoveWatermarkSEL, (void*)CFR_Doc_V1::RemoveWatermark);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocRemoveAndUpdateWatermarkSEL, (void*)CFR_Doc_V1::RemoveAndUpdateWatermark);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocAddHeaderFooterSEL, (void*)CFR_Doc_V1::AddHeaderFooter);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocAddAndUpdateHeaderFooterSEL, (void*)CFR_Doc_V1::AddAndUpdateHeaderFooter);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocRemoveHeaderFooterSEL, (void*)CFR_Doc_V1::RemoveHeaderFooter);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocRemoveAndUpdateHeaderFooterSEL, (void*)CFR_Doc_V1::RemoveAndUpdateHeaderFooter);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocIsReadSafeModeSEL, (void*)CFR_Doc_V1::IsReadSafeMode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocGetInterFormSEL, (void*)CFR_Doc_V1::GetInterForm);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocReplaceTextToSelectedTextSEL, (void*)CFR_Doc_V1::ReplaceTextToSelectedText);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocGeneratePageContentSEL, (void*)CFR_Doc_V1::GeneratePageContent);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocGetFocusAnnotSEL, (void*)CFR_Doc_V1::GetFocusAnnot);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocGetMenuEnableByNameSEL, (void*)CFR_Doc_V1::GetMenuEnableByName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocClearAllSelectionSEL, (void*)CFR_Doc_V1::ClearAllSelection);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocAddSelectionSEL, (void*)CFR_Doc_V1::AddSelection);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocGetPageFirstAnnotSEL, (void*)CFR_Doc_V1::GetPageFirstAnnot);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocCreateFormControlSEL, (void*)CFR_Doc_V1::CreateFormControl);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocReCalTabOrderSEL, (void*)CFR_Doc_V1::ReCalTabOrder);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocNotifyAddWidgetSEL, (void*)CFR_Doc_V1::NotifyAddWidget);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocUpdateAllViewsSEL, (void*)CFR_Doc_V1::UpdateAllViews);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocGetAnnotByDictSEL, (void*)CFR_Doc_V1::GetAnnotByDict);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocAddAnnotSEL, (void*)CFR_Doc_V1::AddAnnot);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocAddAnnot2SEL, (void*)CFR_Doc_V1::AddAnnot2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocReplacePagesSEL, (void*)CFR_Doc_V1::ReplacePages);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocInsertPagesSEL, (void*)CFR_Doc_V1::InsertPages);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocExtractPagesSEL, (void*)CFR_Doc_V1::ExtractPages);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocGetDocSecurityCanBeModifiedSEL, (void*)CFR_Doc_V1::GetDocSecurityCanBeModified);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocGetDocumentSEL, (void*)CFR_Doc_V1::GetDocument);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocGetAnnotByDict2SEL, (void*)CFR_Doc_V1::GetAnnotByDict2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocGetPageIndexSEL, (void*)CFR_Doc_V1::GetPageIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocRemoveSecurityInfoSEL, (void*)CFR_Doc_V1::RemoveSecurityInfo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocUpdateDocAllViewsSEL, (void*)CFR_Doc_V1::UpdateDocAllViews);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocSendAsAttachmentSEL, (void*)CFR_Doc_V1::SendAsAttachment);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocOnBeforeNotifySumbitSEL, (void*)CFR_Doc_V1::OnBeforeNotifySumbit);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocOnAfterNotifySumbitSEL, (void*)CFR_Doc_V1::OnAfterNotifySumbit);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocConvertPdfToOtherFormat3SEL, (void*)CFR_Doc_V1::ConvertPdfToOtherFormat3);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocGetPageSEL, (void*)CFR_Doc_V1::GetPage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocSetNotifySEL, (void*)CFR_Doc_V1::SetNotify);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocSetTabOrderSEL, (void*)CFR_Doc_V1::SetTabOrder);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocSetTabOrder2SEL, (void*)CFR_Doc_V1::SetTabOrder2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocIsKeepSelectedCheckedSEL, (void*)CFR_Doc_V1::IsKeepSelectedChecked);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocReConStructAcroformSEL, (void*)CFR_Doc_V1::ReConStructAcroform);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocGetOCPropertiesSEL, (void*)CFR_Doc_V1::GetOCProperties);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocResetOCPropertiesSEL, (void*)CFR_Doc_V1::ResetOCProperties);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocSetCertifyDocumentSEL, (void*)CFR_Doc_V1::SetCertifyDocument);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocIsCertifyDocumentSEL, (void*)CFR_Doc_V1::IsCertifyDocument);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocSetSignaturePermissionsSEL, (void*)CFR_Doc_V1::SetSignaturePermissions);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocSetSaveModeSEL, (void*)CFR_Doc_V1::SetSaveMode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocGetSaveModeSEL, (void*)CFR_Doc_V1::GetSaveMode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocSetDocumentTrustBySignatureSEL, (void*)CFR_Doc_V1::SetDocumentTrustBySignature);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocGetXFADocViewSEL, (void*)CFR_Doc_V1::GetXFADocView);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocGetReaderDocumentSEL, (void*)CFR_Doc_V1::GetReaderDocument);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocIsRunningJSActionSEL, (void*)CFR_Doc_V1::IsRunningJSAction);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocCountSelectionSEL, (void*)CFR_Doc_V1::CountSelection);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocGetSelectionSEL, (void*)CFR_Doc_V1::GetSelection);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocGetTopPageStateSEL, (void*)CFR_Doc_V1::GetTopPageState);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocSetValidationStatusSEL, (void*)CFR_Doc_V1::SetValidationStatus);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocSetMemDocCanReopenSEL, (void*)CFR_Doc_V1::SetMemDocCanReopen);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocAppendUnCompressObjectsSEL, (void*)CFR_Doc_V1::AppendUnCompressObjects);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocDoSaveAs3SEL, (void*)CFR_Doc_V1::DoSaveAs3);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocSaveAsOleProcSEL, (void*)CFR_Doc_V1::SaveAsOleProc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocGetUnCompressObjectsSEL, (void*)CFR_Doc_V1::GetUnCompressObjects);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocIsReflowViewModeSEL, (void*)CFR_Doc_V1::IsReflowViewMode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocGetOpenFilePathSEL, (void*)CFR_Doc_V1::GetOpenFilePath);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocGetTabTitleSEL, (void*)CFR_Doc_V1::GetTabTitle);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocGetTextPageSEL, (void*)CFR_Doc_V1::GetTextPage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocCloseFileHandlerSEL, (void*)CFR_Doc_V1::CloseFileHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocResetFileHandlerSEL, (void*)CFR_Doc_V1::ResetFileHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocGetDocPagesSEL, (void*)CFR_Doc_V1::GetDocPages);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocOpenDocumentSEL, (void*)CFR_Doc_V1::OpenDocument);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocGetFileNameSEL, (void*)CFR_Doc_V1::GetFileName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocClearMousePtHandleDataSEL, (void*)CFR_Doc_V1::ClearMousePtHandleData);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocResizePageSEL, (void*)CFR_Doc_V1::ResizePage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocGetPageLabelSEL, (void*)CFR_Doc_V1::GetPageLabel);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocRequestDocPermPDDocSEL, (void*)CFR_Doc_V1::RequestDocPermPDDoc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocGetSelectPageFromPagePanelSEL, (void*)CFR_Doc_V1::GetSelectPageFromPagePanel);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocGetDocOpenJSFinishSEL, (void*)CFR_Doc_V1::GetDocOpenJSFinish);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocGetDocRenderFinishSEL, (void*)CFR_Doc_V1::GetDocRenderFinish);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocReversePagesSEL, (void*)CFR_Doc_V1::ReversePages);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocIsDynamicXFADocumentSEL, (void*)CFR_Doc_V1::IsDynamicXFADocument);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocIsUseLogicalLabelSEL, (void*)CFR_Doc_V1::IsUseLogicalLabel);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocDeletePagesSEL, (void*)CFR_Doc_V1::DeletePages);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocExtractPages2SEL, (void*)CFR_Doc_V1::ExtractPages2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocOnAfterExtractPagesExSEL, (void*)CFR_Doc_V1::OnAfterExtractPagesEx);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocSwapTwoPageSEL, (void*)CFR_Doc_V1::SwapTwoPage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocMovePagesSEL, (void*)CFR_Doc_V1::MovePages);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocGetSnapShotInfoSEL, (void*)CFR_Doc_V1::GetSnapShotInfo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocGetPageIndexByLabelSEL, (void*)CFR_Doc_V1::GetPageIndexByLabel);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocRotatePageSEL, (void*)CFR_Doc_V1::RotatePage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocHasOwnerPermissionSEL, (void*)CFR_Doc_V1::HasOwnerPermission);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocSetSaveParamSEL, (void*)CFR_Doc_V1::SetSaveParam);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocCheckModuleLicenseSEL, (void*)CFR_Doc_V1::CheckModuleLicense);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocGetDocFromContainerDocSEL, (void*)CFR_Doc_V1::GetDocFromContainerDoc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocIsDocClosingSEL, (void*)CFR_Doc_V1::IsDocClosing);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocGetHitImageObjSEL, (void*)CFR_Doc_V1::GetHitImageObj);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocClearHitImageObjSEL, (void*)CFR_Doc_V1::ClearHitImageObj);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocPromptToDetectFileHandleSEL, (void*)CFR_Doc_V1::PromptToDetectFileHandle);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocAddIgnoreObjectsSEL, (void*)CFR_Doc_V1::AddIgnoreObjects);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocInsertPageByDictSEL, (void*)CFR_Doc_V1::InsertPageByDict);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocSaveToXFADocSEL, (void*)CFR_Doc_V1::SaveToXFADoc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocGetDeletePageUndoItemSEL, (void*)CFR_Doc_V1::GetDeletePageUndoItem);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocReleaseDeletePageUndoItemSEL, (void*)CFR_Doc_V1::ReleaseDeletePageUndoItem);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocDeletePagesUndoSEL, (void*)CFR_Doc_V1::DeletePagesUndo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocDeletePagesRedoSEL, (void*)CFR_Doc_V1::DeletePagesRedo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocMergeTwoDocSEL, (void*)CFR_Doc_V1::MergeTwoDoc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocGetCurrentToolSEL, (void*)CFR_Doc_V1::GetCurrentTool);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocIsDocumentShowLineWeightsSEL, (void*)CFR_Doc_V1::IsDocumentShowLineWeights);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocIsCurDocViewShowInContainerFrmSEL, (void*)CFR_Doc_V1::IsCurDocViewShowInContainerFrm);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocMovePages2SEL, (void*)CFR_Doc_V1::MovePages2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocRemoveAnnotSelectionSEL, (void*)CFR_Doc_V1::RemoveAnnotSelection);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocDoSaveAsWithDefaultPathSEL, (void*)CFR_Doc_V1::DoSaveAsWithDefaultPath);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocSplitPageByRectsSEL, (void*)CFR_Doc_V1::SplitPageByRects);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocIsEmbededSEL, (void*)CFR_Doc_V1::IsEmbeded);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocGetSaveSaveAsNotifySEL, (void*)CFR_Doc_V1::GetSaveSaveAsNotify);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocSetSaveSaveAsNotifySEL, (void*)CFR_Doc_V1::SetSaveSaveAsNotify);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocGetCanReopenSEL, (void*)CFR_Doc_V1::GetCanReopen);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocSetTopmostAnnotSEL, (void*)CFR_Doc_V1::SetTopmostAnnot);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocOnAfterRotatePagesSEL, (void*)CFR_Doc_V1::OnAfterRotatePages);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocSetPageLabelSEL, (void*)CFR_Doc_V1::SetPageLabel);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocRunOCRSEL, (void*)CFR_Doc_V1::RunOCR);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocRunPageOCRSEL, (void*)CFR_Doc_V1::RunPageOCR);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocCreateOrganizeNotifySEL, (void*)CFR_Doc_V1::CreateOrganizeNotify);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocDestroyOrganizeNotifySEL, (void*)CFR_Doc_V1::DestroyOrganizeNotify);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocSEL, FRDocExtractPages3SEL, (void*)CFR_Doc_V1::ExtractPages3);
	}
};

// fr_docImpl.h end

// In file fr_fxnetappImpl.h
// fr_fxnetappImpl.h end

// In file fr_menuImpl.h
class CFR_MenuBar_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMenuBarSEL, FRMenuBarGetMenuCountSEL, (void*)CFR_MenuBar_V1::GetMenuCount);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMenuBarSEL, FRMenuBarGetMenuByIndexSEL, (void*)CFR_MenuBar_V1::GetMenuByIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMenuBarSEL, FRMenuBarGetMenuByNameSEL, (void*)CFR_MenuBar_V1::GetMenuByName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMenuBarSEL, FRMenuBarAddMenuSEL, (void*)CFR_MenuBar_V1::AddMenu);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMenuBarSEL, FRMenuBarGetMenuIndexSEL, (void*)CFR_MenuBar_V1::GetMenuIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMenuBarSEL, FRMenuBarDeleteMenuSEL, (void*)CFR_MenuBar_V1::DeleteMenu);
	}
};

class CFR_Menu_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMenuSEL, FRMenuNewSEL, (void*)CFR_Menu_V1::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMenuSEL, FRMenuReleaseSEL, (void*)CFR_Menu_V1::Release);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMenuSEL, FRMenuGetParentMenuItemSEL, (void*)CFR_Menu_V1::GetParentMenuItem);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMenuSEL, FRMenuGetMenuItemByIndexSEL, (void*)CFR_Menu_V1::GetMenuItemByIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMenuSEL, FRMenuGetMenuItemByNameSEL, (void*)CFR_Menu_V1::GetMenuItemByName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMenuSEL, FRMenuGetMenuItemCountSEL, (void*)CFR_Menu_V1::GetMenuItemCount);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMenuSEL, FRMenuAddMenuItemSEL, (void*)CFR_Menu_V1::AddMenuItem);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMenuSEL, FRMenuDeleteMenuItemSEL, (void*)CFR_Menu_V1::DeleteMenuItem);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMenuSEL, FRMenuGetMenuItemIndexSEL, (void*)CFR_Menu_V1::GetMenuItemIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMenuSEL, FRMenuDeleteOwnerDrawHandleSEL, (void*)CFR_Menu_V1::DeleteOwnerDrawHandle);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMenuSEL, FRMenuRegisterOwnerDrawHandleSEL, (void*)CFR_Menu_V1::RegisterOwnerDrawHandle);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMenuSEL, FRMenuTrackPopupSEL, (void*)CFR_Menu_V1::TrackPopup);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMenuSEL, FRMenuSetVisibleSEL, (void*)CFR_Menu_V1::SetVisible);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMenuSEL, FRMenuGetVisibleSEL, (void*)CFR_Menu_V1::GetVisible);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMenuSEL, FRMenuSetTitleSEL, (void*)CFR_Menu_V1::SetTitle);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMenuSEL, FRMenuNewIISEL, (void*)CFR_Menu_V1::NewII);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMenuSEL, FRMenuTrackPopupMenuSEL, (void*)CFR_Menu_V1::TrackPopupMenu);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMenuSEL, FRMenuCloseActivePopupMenuSEL, (void*)CFR_Menu_V1::CloseActivePopupMenu);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMenuSEL, FRMenuNew3SEL, (void*)CFR_Menu_V1::New3);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMenuSEL, FRMenuDoPopupMenuSEL, (void*)CFR_Menu_V1::DoPopupMenu);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMenuSEL, FRMenuTrackPopupMenu2SEL, (void*)CFR_Menu_V1::TrackPopupMenu2);
	}
};

class CFR_MenuItem_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMenuItemSEL, FRMenuItemNewSEL, (void*)CFR_MenuItem_V1::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMenuItemSEL, FRMenuItemReleaseSEL, (void*)CFR_MenuItem_V1::Release);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMenuItemSEL, FRMenuItemGetSubMenuSEL, (void*)CFR_MenuItem_V1::GetSubMenu);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMenuItemSEL, FRMenuItemSetSubMenuSEL, (void*)CFR_MenuItem_V1::SetSubMenu);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMenuItemSEL, FRMenuItemGetParentMenuSEL, (void*)CFR_MenuItem_V1::GetParentMenu);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMenuItemSEL, FRMenuItemGetIconSEL, (void*)CFR_MenuItem_V1::GetIcon);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMenuItemSEL, FRMenuItemSetIconSEL, (void*)CFR_MenuItem_V1::SetIcon);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMenuItemSEL, FRMenuItemGetTitleSEL, (void*)CFR_MenuItem_V1::GetTitle);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMenuItemSEL, FRMenuItemSetTitleSEL, (void*)CFR_MenuItem_V1::SetTitle);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMenuItemSEL, FRMenuItemGetNameSEL, (void*)CFR_MenuItem_V1::GetName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMenuItemSEL, FRMenuItemSetToolTipSEL, (void*)CFR_MenuItem_V1::SetToolTip);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMenuItemSEL, FRMenuItemSetDescribeTextSEL, (void*)CFR_MenuItem_V1::SetDescribeText);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMenuItemSEL, FRMenuItemIsSeparatorSEL, (void*)CFR_MenuItem_V1::IsSeparator);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMenuItemSEL, FRMenuItemSetExecuteProcSEL, (void*)CFR_MenuItem_V1::SetExecuteProc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMenuItemSEL, FRMenuItemSetComputeEnabledProcSEL, (void*)CFR_MenuItem_V1::SetComputeEnabledProc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMenuItemSEL, FRMenuItemSetComputeMarkedProcSEL, (void*)CFR_MenuItem_V1::SetComputeMarkedProc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMenuItemSEL, FRMenuItemDoExecuteProcSEL, (void*)CFR_MenuItem_V1::DoExecuteProc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMenuItemSEL, FRMenuItemIsEnabledSEL, (void*)CFR_MenuItem_V1::IsEnabled);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMenuItemSEL, FRMenuItemIsMarkedSEL, (void*)CFR_MenuItem_V1::IsMarked);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMenuItemSEL, FRMenuItemGetClientDataSEL, (void*)CFR_MenuItem_V1::GetClientData);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMenuItemSEL, FRMenuItemSetAccelKeySEL, (void*)CFR_MenuItem_V1::SetAccelKey);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMenuItemSEL, FRMenuItemGetCmdIDSEL, (void*)CFR_MenuItem_V1::GetCmdID);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMenuItemSEL, FRMenuItemSetClientDataSEL, (void*)CFR_MenuItem_V1::SetClientData);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMenuItemSEL, FRMenuItemSetVisibleSEL, (void*)CFR_MenuItem_V1::SetVisible);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMenuItemSEL, FRMenuItemGetVisibleSEL, (void*)CFR_MenuItem_V1::GetVisible);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMenuItemSEL, FRMenuItemSetBitmapIconWithIndexSEL, (void*)CFR_MenuItem_V1::SetBitmapIconWithIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMenuItemSEL, FRMenuItemSetPDFBitmapNameSEL, (void*)CFR_MenuItem_V1::SetPDFBitmapName);
	}
};

// fr_menuImpl.h end

// In file fr_sysImpl.h
class CFR_Sys_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRSysSEL, FRSysLoadStandarCursorSEL, (void*)CFR_Sys_V1::LoadStandarCursor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRSysSEL, FRSysGetCursorSEL, (void*)CFR_Sys_V1::GetCursor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRSysSEL, FRSysSetCursorSEL, (void*)CFR_Sys_V1::SetCursor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRSysSEL, FRSysShowMessageBoxSEL, (void*)CFR_Sys_V1::ShowMessageBox);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRSysSEL, FRSysInstallDialogSkinThemeSEL, (void*)CFR_Sys_V1::InstallDialogSkinTheme);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRSysSEL, FRSysInstallDialogScrollBarSEL, (void*)CFR_Sys_V1::InstallDialogScrollBar);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRSysSEL, FRSysGetSkinCountSEL, (void*)CFR_Sys_V1::GetSkinCount);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRSysSEL, FRSysGetSkinNameByIndexSEL, (void*)CFR_Sys_V1::GetSkinNameByIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRSysSEL, FRSysSetActiveSkinByIndexSEL, (void*)CFR_Sys_V1::SetActiveSkinByIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRSysSEL, FRSysSetActiveSkinByNameSEL, (void*)CFR_Sys_V1::SetActiveSkinByName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRSysSEL, FRSysShowStopLaunchDlgSEL, (void*)CFR_Sys_V1::ShowStopLaunchDlg);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRSysSEL, FRSysShowMessageBox2SEL, (void*)CFR_Sys_V1::ShowMessageBox2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRSysSEL, FRSysShowMessageBox3SEL, (void*)CFR_Sys_V1::ShowMessageBox3);
	}
};

// fr_sysImpl.h end

// In file fr_viewImpl.h
class CFR_DocView_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocViewSEL, FRDocViewGetDocumentSEL, (void*)CFR_DocView_V1::GetDocument);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocViewSEL, FRDocViewCountPageViewsSEL, (void*)CFR_DocView_V1::CountPageViews);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocViewSEL, FRDocViewGetPageViewSEL, (void*)CFR_DocView_V1::GetPageView);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocViewSEL, FRDocViewGetPageViewAtPointSEL, (void*)CFR_DocView_V1::GetPageViewAtPoint);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocViewSEL, FRDocViewCountVisiblePageViewsSEL, (void*)CFR_DocView_V1::CountVisiblePageViews);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocViewSEL, FRDocViewGetVisiblePageViewSEL, (void*)CFR_DocView_V1::GetVisiblePageView);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocViewSEL, FRDocViewGotoPageViewSEL, (void*)CFR_DocView_V1::GotoPageView);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocViewSEL, FRDocViewGotoPageViewByPointSEL, (void*)CFR_DocView_V1::GotoPageViewByPoint);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocViewSEL, FRDocViewGotoPageViewByRectSEL, (void*)CFR_DocView_V1::GotoPageViewByRect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocViewSEL, FRDocViewGetCurrentPageViewSEL, (void*)CFR_DocView_V1::GetCurrentPageView);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocViewSEL, FRDocViewGetRotationSEL, (void*)CFR_DocView_V1::GetRotation);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocViewSEL, FRDocViewSetRotationSEL, (void*)CFR_DocView_V1::SetRotation);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocViewSEL, FRDocViewGetLayoutModeSEL, (void*)CFR_DocView_V1::GetLayoutMode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocViewSEL, FRDocViewSetLayoutModeSEL, (void*)CFR_DocView_V1::SetLayoutMode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocViewSEL, FRDocViewGetZoomSEL, (void*)CFR_DocView_V1::GetZoom);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocViewSEL, FRDocViewGetZoomTypeSEL, (void*)CFR_DocView_V1::GetZoomType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocViewSEL, FRDocViewZoomToSEL, (void*)CFR_DocView_V1::ZoomTo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocViewSEL, FRDocViewGoBackSEL, (void*)CFR_DocView_V1::GoBack);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocViewSEL, FRDocViewGoForwardSEL, (void*)CFR_DocView_V1::GoForward);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocViewSEL, FRDocViewShowAnnotsSEL, (void*)CFR_DocView_V1::ShowAnnots);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocViewSEL, FRDocViewProcActionSEL, (void*)CFR_DocView_V1::ProcAction);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocViewSEL, FRDocViewScrollToSEL, (void*)CFR_DocView_V1::ScrollTo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocViewSEL, FRDocViewGetMaxScrollingSizeSEL, (void*)CFR_DocView_V1::GetMaxScrollingSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocViewSEL, FRDocViewDrawNowSEL, (void*)CFR_DocView_V1::DrawNow);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocViewSEL, FRDocViewInvalidateRectSEL, (void*)CFR_DocView_V1::InvalidateRect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocViewSEL, FRDocViewDrawRectSEL, (void*)CFR_DocView_V1::DrawRect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocViewSEL, FRDocViewDoPopUpMenuSEL, (void*)CFR_DocView_V1::DoPopUpMenu);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocViewSEL, FRDocViewGetMachinePortSEL, (void*)CFR_DocView_V1::GetMachinePort);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocViewSEL, FRDocViewReleaseMachinePortSEL, (void*)CFR_DocView_V1::ReleaseMachinePort);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocViewSEL, FRDocViewGetOCContextSEL, (void*)CFR_DocView_V1::GetOCContext);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocViewSEL, FRDocViewGetCurrentSnapshotSEL, (void*)CFR_DocView_V1::GetCurrentSnapshot);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocViewSEL, FRDocViewGetThumbnailViewSEL, (void*)CFR_DocView_V1::GetThumbnailView);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocViewSEL, FRDocViewGotoPageViewByStateSEL, (void*)CFR_DocView_V1::GotoPageViewByState);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocViewSEL, FRDocViewMovePageSEL, (void*)CFR_DocView_V1::MovePage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocViewSEL, FRDocViewIsValidPageViewSEL, (void*)CFR_DocView_V1::IsValidPageView);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocViewSEL, FRDocViewGetTagDocViewTextSEL, (void*)CFR_DocView_V1::GetTagDocViewText);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocViewSEL, FRDocViewGetLRDocViewTextSEL, (void*)CFR_DocView_V1::GetLRDocViewText);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocViewSEL, FRDocViewGetWndSEL, (void*)CFR_DocView_V1::GetWnd);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocViewSEL, FRDocViewScrollToCenterPointSEL, (void*)CFR_DocView_V1::ScrollToCenterPoint);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocViewSEL, FRDocViewSetRenderDataChangeSEL, (void*)CFR_DocView_V1::SetRenderDataChange);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocViewSEL, FRDocViewGotoPageViewByAnnotSEL, (void*)CFR_DocView_V1::GotoPageViewByAnnot);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocViewSEL, FRDocViewGotoPageByDestSEL, (void*)CFR_DocView_V1::GotoPageByDest);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocViewSEL, FRDocViewGetHwndSEL, (void*)CFR_DocView_V1::GetHwnd);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocViewSEL, FRDocViewGetRBDPageViewSEL, (void*)CFR_DocView_V1::GetRBDPageView);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocViewSEL, FRDocViewUpdateStatusBarPagesInfoSEL, (void*)CFR_DocView_V1::UpdateStatusBarPagesInfo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocViewSEL, FRDocViewGotoPageViewByRect2SEL, (void*)CFR_DocView_V1::GotoPageViewByRect2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocViewSEL, FRDocViewUpdateAllViewsSEL, (void*)CFR_DocView_V1::UpdateAllViews);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocViewSEL, FRDocViewUpdateAllNotesSEL, (void*)CFR_DocView_V1::UpdateAllNotes);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocViewSEL, FRDocViewIsAutoScrollingSEL, (void*)CFR_DocView_V1::IsAutoScrolling);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocViewSEL, FRDocViewScrollTo2SEL, (void*)CFR_DocView_V1::ScrollTo2);
	}
};

class CFR_PageView_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPageViewSEL, FRPageViewGetDocumentSEL, (void*)CFR_PageView_V1::GetDocument);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPageViewSEL, FRPageViewGetDocViewSEL, (void*)CFR_PageView_V1::GetDocView);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPageViewSEL, FRPageViewGetPDPageSEL, (void*)CFR_PageView_V1::GetPDPage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPageViewSEL, FRPageViewGetPageIndexSEL, (void*)CFR_PageView_V1::GetPageIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPageViewSEL, FRPageViewCountAnnotSEL, (void*)CFR_PageView_V1::CountAnnot);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPageViewSEL, FRPageViewGetCurrentMatrixSEL, (void*)CFR_PageView_V1::GetCurrentMatrix);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPageViewSEL, FRPageViewDevicePointToPageSEL, (void*)CFR_PageView_V1::DevicePointToPage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPageViewSEL, FRPageViewDeviceRectToPageSEL, (void*)CFR_PageView_V1::DeviceRectToPage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPageViewSEL, FRPageViewPointToDeviceSEL, (void*)CFR_PageView_V1::PointToDevice);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPageViewSEL, FRPageViewRectToDeviceSEL, (void*)CFR_PageView_V1::RectToDevice);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPageViewSEL, FRPageViewIsVisibleSEL, (void*)CFR_PageView_V1::IsVisible);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPageViewSEL, FRPageViewGetPageRectSEL, (void*)CFR_PageView_V1::GetPageRect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPageViewSEL, FRPageViewGetPageVisibleRectSEL, (void*)CFR_PageView_V1::GetPageVisibleRect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPageViewSEL, FRPageViewDidContentChangedSEL, (void*)CFR_PageView_V1::DidContentChanged);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPageViewSEL, FRPageViewGetHWndSEL, (void*)CFR_PageView_V1::GetHWnd);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPageViewSEL, FRPageViewDidTextObjectChangedSEL, (void*)CFR_PageView_V1::DidTextObjectChanged);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPageViewSEL, FRPageViewGetAnnotByIndexSEL, (void*)CFR_PageView_V1::GetAnnotByIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPageViewSEL, FRPageViewGetPageStateSEL, (void*)CFR_PageView_V1::GetPageState);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPageViewSEL, FRPageViewDeleteAnnotSEL, (void*)CFR_PageView_V1::DeleteAnnot);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPageViewSEL, FRPageViewGetFocusAnnotSEL, (void*)CFR_PageView_V1::GetFocusAnnot);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPageViewSEL, FRPageViewGetPageScaleSEL, (void*)CFR_PageView_V1::GetPageScale);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPageViewSEL, FRPageViewGetAnnotAtPointSEL, (void*)CFR_PageView_V1::GetAnnotAtPoint);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPageViewSEL, FRPageViewUpdateAllViewsSEL, (void*)CFR_PageView_V1::UpdateAllViews);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPageViewSEL, FRPageViewAddAnnotSEL, (void*)CFR_PageView_V1::AddAnnot);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPageViewSEL, FRPageViewGetRenderOptionsSEL, (void*)CFR_PageView_V1::GetRenderOptions);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPageViewSEL, FRPageViewDidContentChanged2SEL, (void*)CFR_PageView_V1::DidContentChanged2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPageViewSEL, FRPageViewDidContentChanged3SEL, (void*)CFR_PageView_V1::DidContentChanged3);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPageViewSEL, FRPageViewSetContentModificationSEL, (void*)CFR_PageView_V1::SetContentModification);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPageViewSEL, FRPageViewGenerateContentSEL, (void*)CFR_PageView_V1::GenerateContent);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPageViewSEL, FRPageViewUpdateAllViewsRectSEL, (void*)CFR_PageView_V1::UpdateAllViewsRect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPageViewSEL, FRPageViewCountViewsSEL, (void*)CFR_PageView_V1::CountViews);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPageViewSEL, FRPageViewIsValidAnnotSEL, (void*)CFR_PageView_V1::IsValidAnnot);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPageViewSEL, FRPageViewAnnot_OnDrawSEL, (void*)CFR_PageView_V1::Annot_OnDraw);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPageViewSEL, FRPageViewAnnot_OnHitTestSEL, (void*)CFR_PageView_V1::Annot_OnHitTest);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPageViewSEL, FRPageViewGetReaderPageSEL, (void*)CFR_PageView_V1::GetReaderPage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPageViewSEL, FRPageViewPostFormFilerMessageTextSEL, (void*)CFR_PageView_V1::PostFormFilerMessageText);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPageViewSEL, FRPageViewSetIsFindHighlightSEL, (void*)CFR_PageView_V1::SetIsFindHighlight);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPageViewSEL, FRPageViewIsFindHighlightSEL, (void*)CFR_PageView_V1::IsFindHighlight);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPageViewSEL, FRPageViewSetAdvancedFindHighlightSEL, (void*)CFR_PageView_V1::SetAdvancedFindHighlight);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPageViewSEL, FRPageViewIsAdvancedFindHighlightSEL, (void*)CFR_PageView_V1::IsAdvancedFindHighlight);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPageViewSEL, FRPageViewGetPageStateByFitTypeSEL, (void*)CFR_PageView_V1::GetPageStateByFitType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPageViewSEL, FRPageViewGetPageRectIncludeMarginSEL, (void*)CFR_PageView_V1::GetPageRectIncludeMargin);
	}
};

class CFR_TextSelectTool_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRTextSelectToolSEL, FRTextSelectToolCreateSEL, (void*)CFR_TextSelectTool_V1::Create);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRTextSelectToolSEL, FRTextSelectToolDestroyTextSelectToolSEL, (void*)CFR_TextSelectTool_V1::DestroyTextSelectTool);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRTextSelectToolSEL, FRTextSelectToolGetSelectedTextSEL, (void*)CFR_TextSelectTool_V1::GetSelectedText);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRTextSelectToolSEL, FRTextSelectToolDrawSelectionSEL, (void*)CFR_TextSelectTool_V1::DrawSelection);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRTextSelectToolSEL, FRTextSelectToolClearSelectionSEL, (void*)CFR_TextSelectTool_V1::ClearSelection);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRTextSelectToolSEL, FRTextSelectToolDoLButtonUpSEL, (void*)CFR_TextSelectTool_V1::DoLButtonUp);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRTextSelectToolSEL, FRTextSelectToolDoLButtonDownSEL, (void*)CFR_TextSelectTool_V1::DoLButtonDown);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRTextSelectToolSEL, FRTextSelectToolDoLButtonDblClkSEL, (void*)CFR_TextSelectTool_V1::DoLButtonDblClk);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRTextSelectToolSEL, FRTextSelectToolDoRButtonUpSEL, (void*)CFR_TextSelectTool_V1::DoRButtonUp);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRTextSelectToolSEL, FRTextSelectToolDoMouseMoveSEL, (void*)CFR_TextSelectTool_V1::DoMouseMove);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRTextSelectToolSEL, FRTextSelectToolDoMouseWheelSEL, (void*)CFR_TextSelectTool_V1::DoMouseWheel);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRTextSelectToolSEL, FRTextSelectToolIsSelectingSEL, (void*)CFR_TextSelectTool_V1::IsSelecting);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRTextSelectToolSEL, FRTextSelectToolEnumTextObjectRectSEL, (void*)CFR_TextSelectTool_V1::EnumTextObjectRect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRTextSelectToolSEL, FRTextSelectToolAddSelectSEL, (void*)CFR_TextSelectTool_V1::AddSelect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRTextSelectToolSEL, FRTextSelectToolSelect_GetPageRangeSEL, (void*)CFR_TextSelectTool_V1::Select_GetPageRange);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRTextSelectToolSEL, FRTextSelectToolGetSelectedText2SEL, (void*)CFR_TextSelectTool_V1::GetSelectedText2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRTextSelectToolSEL, FRTextSelectToolGetSelectedTextInfoSEL, (void*)CFR_TextSelectTool_V1::GetSelectedTextInfo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRTextSelectToolSEL, FRTextSelectToolReleaseSelectedInfoSEL, (void*)CFR_TextSelectTool_V1::ReleaseSelectedInfo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRTextSelectToolSEL, FRTextSelectToolIsSelectedSEL, (void*)CFR_TextSelectTool_V1::IsSelected);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRTextSelectToolSEL, FRTextSelectToolIsPageSelectAllSEL, (void*)CFR_TextSelectTool_V1::IsPageSelectAll);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRTextSelectToolSEL, FRTextSelectToolGetSelectedDataSEL, (void*)CFR_TextSelectTool_V1::GetSelectedData);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRTextSelectToolSEL, FRTextSelectToolAddSelect2SEL, (void*)CFR_TextSelectTool_V1::AddSelect2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRTextSelectToolSEL, FRTextSelectToolAddSelectTextRectsSEL, (void*)CFR_TextSelectTool_V1::AddSelectTextRects);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRTextSelectToolSEL, FRTextSelectToolGetSelectPDFRectSEL, (void*)CFR_TextSelectTool_V1::GetSelectPDFRect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRTextSelectToolSEL, FRTextSelectToolDeselectAllSEL, (void*)CFR_TextSelectTool_V1::DeselectAll);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRTextSelectToolSEL, FRTextSelectToolAddSelectTextRectsWithPagesSEL, (void*)CFR_TextSelectTool_V1::AddSelectTextRectsWithPages);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRTextSelectToolSEL, FRTextSelectToolGetExportSelectionPageRectsSEL, (void*)CFR_TextSelectTool_V1::GetExportSelectionPageRects);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRTextSelectToolSEL, FRTextSelectToolCopyToClipBoardSEL, (void*)CFR_TextSelectTool_V1::CopyToClipBoard);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRTextSelectToolSEL, FRTextSelectToolSelectEnumTextObjectPathPointSEL, (void*)CFR_TextSelectTool_V1::SelectEnumTextObjectPathPoint);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRTextSelectToolSEL, FRTextSelectToolReleaseTextObjectPathPointsSEL, (void*)CFR_TextSelectTool_V1::ReleaseTextObjectPathPoints);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRTextSelectToolSEL, FRTextSelectToolSelectInitSelectionSEL, (void*)CFR_TextSelectTool_V1::SelectInitSelection);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRTextSelectToolSEL, FRTextSelectToolSelectOnKeyDownSEL, (void*)CFR_TextSelectTool_V1::SelectOnKeyDown);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRTextSelectToolSEL, FRTextSelectToolDoLButtonDown2SEL, (void*)CFR_TextSelectTool_V1::DoLButtonDown2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRTextSelectToolSEL, FRTextSelectToolGetSelectedTextObjectSEL, (void*)CFR_TextSelectTool_V1::GetSelectedTextObject);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRTextSelectToolSEL, FRTextSelectToolDoCopySEL, (void*)CFR_TextSelectTool_V1::DoCopy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRTextSelectToolSEL, FRTextSelectToolToolDrawSEL, (void*)CFR_TextSelectTool_V1::ToolDraw);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRTextSelectToolSEL, FRTextSelectToolSetFloatyShowStateSEL, (void*)CFR_TextSelectTool_V1::SetFloatyShowState);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRTextSelectToolSEL, FRTextSelectToolGetFloatyShowStateSEL, (void*)CFR_TextSelectTool_V1::GetFloatyShowState);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRTextSelectToolSEL, FRTextSelectToolAddHighlightSelectSEL, (void*)CFR_TextSelectTool_V1::AddHighlightSelect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRTextSelectToolSEL, FRTextSelectToolGetHltSelPagesTextPosSEL, (void*)CFR_TextSelectTool_V1::GetHltSelPagesTextPos);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRTextSelectToolSEL, FRTextSelectToolRelHltSelPagesTextPosSEL, (void*)CFR_TextSelectTool_V1::RelHltSelPagesTextPos);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRTextSelectToolSEL, FRTextSelectToolAddHighlightAdvSelectSEL, (void*)CFR_TextSelectTool_V1::AddHighlightAdvSelect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRTextSelectToolSEL, FRTextSelectToolGetHltAdvSelPagesTextPosSEL, (void*)CFR_TextSelectTool_V1::GetHltAdvSelPagesTextPos);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRTextSelectToolSEL, FRTextSelectToolInvalidateHltSelectSEL, (void*)CFR_TextSelectTool_V1::InvalidateHltSelect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRTextSelectToolSEL, FRTextSelectToolClearHltAdvSelectSEL, (void*)CFR_TextSelectTool_V1::ClearHltAdvSelect);
	}
};

// fr_viewImpl.h end

// In file middle_imagecompressImpl.h
// middle_imagecompressImpl.h end

// In file middle_optimizeImpl.h
// middle_optimizeImpl.h end

// In file middle_pdfImpl.h
// middle_pdfImpl.h end

// In file middle_portfolioImpl.h
// middle_portfolioImpl.h end

// In file middle_preflightImpl.h
// middle_preflightImpl.h end

// In file fofd_basicImpl.h
// fofd_basicImpl.h end

// In file fofd_docImpl.h
// fofd_docImpl.h end

// In file fofd_pageImpl.h
// fofd_pageImpl.h end

// In file fofd_renderImpl.h
// fofd_renderImpl.h end

// In file fofd_sigImpl.h
// fofd_sigImpl.h end

// In file fpd_3DImpl.h
// fpd_3DImpl.h end

// In file fpd_barcodeImpl.h
// fpd_barcodeImpl.h end

// In file fpd_convertImpl.h
// fpd_convertImpl.h end

// In file fpd_docImpl.h
class CFPD_Doc_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDocSEL, FPDDocNewSEL, (void*)CFPD_Doc_V1::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDocSEL, FPDDocDestroySEL, (void*)CFPD_Doc_V1::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDocSEL, FPDDocOpenSEL, (void*)CFPD_Doc_V1::Open);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDocSEL, FPDDocOpenMemDocumentSEL, (void*)CFPD_Doc_V1::OpenMemDocument);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDocSEL, FPDDocStartProgressiveLoadSEL, (void*)CFPD_Doc_V1::StartProgressiveLoad);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDocSEL, FPDDocContinueLoadSEL, (void*)CFPD_Doc_V1::ContinueLoad);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDocSEL, FPDDocCloseSEL, (void*)CFPD_Doc_V1::Close);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDocSEL, FPDDocGetRootSEL, (void*)CFPD_Doc_V1::GetRoot);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDocSEL, FPDDocGetInfoSEL, (void*)CFPD_Doc_V1::GetInfo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDocSEL, FPDDocGetIDSEL, (void*)CFPD_Doc_V1::GetID);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDocSEL, FPDDocGetPageCountSEL, (void*)CFPD_Doc_V1::GetPageCount);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDocSEL, FPDDocGetPageSEL, (void*)CFPD_Doc_V1::GetPage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDocSEL, FPDDocGetPageIndexSEL, (void*)CFPD_Doc_V1::GetPageIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDocSEL, FPDDocGetUserPermissionsSEL, (void*)CFPD_Doc_V1::GetUserPermissions);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDocSEL, FPDDocIsOwnerSEL, (void*)CFPD_Doc_V1::IsOwner);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDocSEL, FPDDocIsFormStreamSEL, (void*)CFPD_Doc_V1::IsFormStream);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDocSEL, FPDDocLoadFontSEL, (void*)CFPD_Doc_V1::LoadFont);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDocSEL, FPDDocLoadColorSpaceSEL, (void*)CFPD_Doc_V1::LoadColorSpace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDocSEL, FPDDocLoadPatternSEL, (void*)CFPD_Doc_V1::LoadPattern);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDocSEL, FPDDocLoadImageFSEL, (void*)CFPD_Doc_V1::LoadImageF);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDocSEL, FPDDocLoadFontFileSEL, (void*)CFPD_Doc_V1::LoadFontFile);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDocSEL, FPDDocGetInfoObjNumSEL, (void*)CFPD_Doc_V1::GetInfoObjNum);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDocSEL, FPDDocGetRootObjNumSEL, (void*)CFPD_Doc_V1::GetRootObjNum);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDocSEL, FPDDocEnumPagesSEL, (void*)CFPD_Doc_V1::EnumPages);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDocSEL, FPDDocNewEnumPageHandlerSEL, (void*)CFPD_Doc_V1::NewEnumPageHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDocSEL, FPDDocDeleteEnumPageHandlerSEL, (void*)CFPD_Doc_V1::DeleteEnumPageHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDocSEL, FPDDocSetRootObjNumSEL, (void*)CFPD_Doc_V1::SetRootObjNum);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDocSEL, FPDDocSetInfoObjNumSEL, (void*)CFPD_Doc_V1::SetInfoObjNum);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDocSEL, FPDDocSetIDSEL, (void*)CFPD_Doc_V1::SetID);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDocSEL, FPDDocAddWindowsFontSEL, (void*)CFPD_Doc_V1::AddWindowsFont);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDocSEL, FPDDocAddWindowsFontWSEL, (void*)CFPD_Doc_V1::AddWindowsFontW);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDocSEL, FPDDocAddStandardFontSEL, (void*)CFPD_Doc_V1::AddStandardFont);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDocSEL, FPDDocBuildResourceListSEL, (void*)CFPD_Doc_V1::BuildResourceList);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDocSEL, FPDDocCreateNewPageSEL, (void*)CFPD_Doc_V1::CreateNewPage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDocSEL, FPDDocDeletePageSEL, (void*)CFPD_Doc_V1::DeletePage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDocSEL, FPDDocConvertIndirectObjectsSEL, (void*)CFPD_Doc_V1::ConvertIndirectObjects);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDocSEL, FPDDocGetPageContentModifySEL, (void*)CFPD_Doc_V1::GetPageContentModify);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDocSEL, FPDDocQuickSearchSEL, (void*)CFPD_Doc_V1::QuickSearch);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDocSEL, FPDDocReloadPagesSEL, (void*)CFPD_Doc_V1::ReloadPages);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDocSEL, FPDDocLoadDocSEL, (void*)CFPD_Doc_V1::LoadDoc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDocSEL, FPDDocGetIndirectObjectSEL, (void*)CFPD_Doc_V1::GetIndirectObject);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDocSEL, FPDDocGetIndirectTypeSEL, (void*)CFPD_Doc_V1::GetIndirectType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDocSEL, FPDDocAddIndirectObjectSEL, (void*)CFPD_Doc_V1::AddIndirectObject);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDocSEL, FPDDocReleaseIndirectObjectSEL, (void*)CFPD_Doc_V1::ReleaseIndirectObject);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDocSEL, FPDDocDeleteIndirectObjectSEL, (void*)CFPD_Doc_V1::DeleteIndirectObject);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDocSEL, FPDDocImportIndirectObjectSEL, (void*)CFPD_Doc_V1::ImportIndirectObject);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDocSEL, FPDDocImportExternalObjectSEL, (void*)CFPD_Doc_V1::ImportExternalObject);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDocSEL, FPDDocInsertIndirectObjectSEL, (void*)CFPD_Doc_V1::InsertIndirectObject);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDocSEL, FPDDocGetLastobjNumSEL, (void*)CFPD_Doc_V1::GetLastobjNum);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDocSEL, FPDDocReloadFileStreamsSEL, (void*)CFPD_Doc_V1::ReloadFileStreams);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDocSEL, FPDDocGetStartPositionSEL, (void*)CFPD_Doc_V1::GetStartPosition);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDocSEL, FPDDocGetNextAssocSEL, (void*)CFPD_Doc_V1::GetNextAssoc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDocSEL, FPDDocIsModifiedSEL, (void*)CFPD_Doc_V1::IsModified);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDocSEL, FPDDocClearModifiedSEL, (void*)CFPD_Doc_V1::ClearModified);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDocSEL, FPDDocSaveSEL, (void*)CFPD_Doc_V1::Save);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDocSEL, FPDDocGetParserSEL, (void*)CFPD_Doc_V1::GetParser);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDocSEL, FPDDocCheckSignatureSEL, (void*)CFPD_Doc_V1::CheckSignature);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDocSEL, FPDDocGenerateFileIDSEL, (void*)CFPD_Doc_V1::GenerateFileID);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDocSEL, FPDDocGetReviewTypeSEL, (void*)CFPD_Doc_V1::GetReviewType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDocSEL, FPDDocIsPortfolioSEL, (void*)CFPD_Doc_V1::IsPortfolio);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDocSEL, FPDDocRemoveUR3SEL, (void*)CFPD_Doc_V1::RemoveUR3);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDocSEL, FPDDocAddFXFontSEL, (void*)CFPD_Doc_V1::AddFXFont);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDocSEL, FPDDocGetIndirectObjsCountSEL, (void*)CFPD_Doc_V1::GetIndirectObjsCount);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDocSEL, FPDDocSave2SEL, (void*)CFPD_Doc_V1::Save2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDocSEL, FPDDocInsertDocumentAtPosSEL, (void*)CFPD_Doc_V1::InsertDocumentAtPos);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDocSEL, FPDDocMetadataGetAllCustomKeysSEL, (void*)CFPD_Doc_V1::MetadataGetAllCustomKeys);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDocSEL, FPDDocMetadataDeleteCustomKeySEL, (void*)CFPD_Doc_V1::MetadataDeleteCustomKey);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDocSEL, FPDDocMetadataGetStringSEL, (void*)CFPD_Doc_V1::MetadataGetString);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDocSEL, FPDDocMetadataSetStringSEL, (void*)CFPD_Doc_V1::MetadataSetString);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDocSEL, FPDDocMetadataSyncUpdateSEL, (void*)CFPD_Doc_V1::MetadataSyncUpdate);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDocSEL, FPDDocMetadataSetDateTimeSEL, (void*)CFPD_Doc_V1::MetadataSetDateTime);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDocSEL, FPDDocAddNewIndirectObjectSEL, (void*)CFPD_Doc_V1::AddNewIndirectObject);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDocSEL, FPDDocLoadPagesSEL, (void*)CFPD_Doc_V1::LoadPages);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDocSEL, FPDDocMetadataGetRootSEL, (void*)CFPD_Doc_V1::MetadataGetRoot);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDocSEL, FPDDocConstructFromParserSEL, (void*)CFPD_Doc_V1::ConstructFromParser);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDocSEL, FPDDocMetadataCreateNewMetadataSEL, (void*)CFPD_Doc_V1::MetadataCreateNewMetadata);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDocSEL, FPDDocReferenceIndirectObjectSEL, (void*)CFPD_Doc_V1::ReferenceIndirectObject);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDocSEL, FPDDocMetadataGetRdfXMLStringSEL, (void*)CFPD_Doc_V1::MetadataGetRdfXMLString);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDocSEL, FPDDocCreateChunkFileStreamSEL, (void*)CFPD_Doc_V1::CreateChunkFileStream);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDocSEL, FPDDocReleaseChunkFileStreamSEL, (void*)CFPD_Doc_V1::ReleaseChunkFileStream);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDocSEL, FPDDocBuildResourceList2SEL, (void*)CFPD_Doc_V1::BuildResourceList2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDocSEL, FPDDocSetFileVersionSEL, (void*)CFPD_Doc_V1::SetFileVersion);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDocSEL, FPDDocGetFileVersionSEL, (void*)CFPD_Doc_V1::GetFileVersion);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDocSEL, FPDDocGetAllRdfXMLKeysSEL, (void*)CFPD_Doc_V1::GetAllRdfXMLKeys);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDocSEL, FPDDocCountDeveloperExtensionsSEL, (void*)CFPD_Doc_V1::CountDeveloperExtensions);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDocSEL, FPDDocGetDeveloperExtensionsSEL, (void*)CFPD_Doc_V1::GetDeveloperExtensions);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDocSEL, FPDDocGetDestNameTreeSEL, (void*)CFPD_Doc_V1::GetDestNameTree);
	}
};

class CFPD_NameTree_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDNameTreeSEL, FPDNameTreeNewSEL, (void*)CFPD_NameTree_V1::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDNameTreeSEL, FPDNameTreeNew2SEL, (void*)CFPD_NameTree_V1::New2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDNameTreeSEL, FPDNameTreeDestroySEL, (void*)CFPD_NameTree_V1::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDNameTreeSEL, FPDNameTreeLookupValueSEL, (void*)CFPD_NameTree_V1::LookupValue);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDNameTreeSEL, FPDNameTreeLookupValueByNameSEL, (void*)CFPD_NameTree_V1::LookupValueByName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDNameTreeSEL, FPDNameTreeLookupNamedDestSEL, (void*)CFPD_NameTree_V1::LookupNamedDest);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDNameTreeSEL, FPDNameTreeSetValueSEL, (void*)CFPD_NameTree_V1::SetValue);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDNameTreeSEL, FPDNameTreeGetIndexSEL, (void*)CFPD_NameTree_V1::GetIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDNameTreeSEL, FPDNameTreeRemoveSEL, (void*)CFPD_NameTree_V1::Remove);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDNameTreeSEL, FPDNameTreeGetCountSEL, (void*)CFPD_NameTree_V1::GetCount);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDNameTreeSEL, FPDNameTreeGetRootSEL, (void*)CFPD_NameTree_V1::GetRoot);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDNameTreeSEL, FPDNameTreeLookupValue2SEL, (void*)CFPD_NameTree_V1::LookupValue2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDNameTreeSEL, FPDNameTreeNew3SEL, (void*)CFPD_NameTree_V1::New3);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDNameTreeSEL, FPDNameTreeSetValue2SEL, (void*)CFPD_NameTree_V1::SetValue2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDNameTreeSEL, FPDNameTreeReloadSEL, (void*)CFPD_NameTree_V1::Reload);
	}
};

class CFPD_Bookmark_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDBookmarkSEL, FPDBookmarkNewSEL, (void*)CFPD_Bookmark_V1::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDBookmarkSEL, FPDBookmarkDestroySEL, (void*)CFPD_Bookmark_V1::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDBookmarkSEL, FPDBookmarkIsVaildSEL, (void*)CFPD_Bookmark_V1::IsVaild);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDBookmarkSEL, FPDBookmarkGetColorRefSEL, (void*)CFPD_Bookmark_V1::GetColorRef);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDBookmarkSEL, FPDBookmarkGetFontStyleSEL, (void*)CFPD_Bookmark_V1::GetFontStyle);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDBookmarkSEL, FPDBookmarkGetTitleSEL, (void*)CFPD_Bookmark_V1::GetTitle);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDBookmarkSEL, FPDBookmarkGetDestSEL, (void*)CFPD_Bookmark_V1::GetDest);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDBookmarkSEL, FPDBookmarkGetActionSEL, (void*)CFPD_Bookmark_V1::GetAction);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDBookmarkSEL, FPDBookmarkGetDictionarySEL, (void*)CFPD_Bookmark_V1::GetDictionary);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDBookmarkSEL, FPDBookmarkGetFirstChildSEL, (void*)CFPD_Bookmark_V1::GetFirstChild);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDBookmarkSEL, FPDBookmarkGetNextSiblingSEL, (void*)CFPD_Bookmark_V1::GetNextSibling);
	}
};

class CFPD_Dest_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDestSEL, FPDDestNewSEL, (void*)CFPD_Dest_V1::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDestSEL, FPDDestDestroySEL, (void*)CFPD_Dest_V1::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDestSEL, FPDDestGetRemoteNameSEL, (void*)CFPD_Dest_V1::GetRemoteName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDestSEL, FPDDestGetPageIndexSEL, (void*)CFPD_Dest_V1::GetPageIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDestSEL, FPDDestGetPageObjNumSEL, (void*)CFPD_Dest_V1::GetPageObjNum);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDestSEL, FPDDestGetZoomModeSEL, (void*)CFPD_Dest_V1::GetZoomMode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDestSEL, FPDDestGetParamSEL, (void*)CFPD_Dest_V1::GetParam);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDestSEL, FPDDestGetPDFObjectSEL, (void*)CFPD_Dest_V1::GetPDFObject);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDestSEL, FPDDestCheckObjectIsNullSEL, (void*)CFPD_Dest_V1::CheckObjectIsNull);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDestSEL, FPDDestGetPDFObject2SEL, (void*)CFPD_Dest_V1::GetPDFObject2);
	}
};

class CFPD_OCContext_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOCContextSEL, FPDOCContextNewSEL, (void*)CFPD_OCContext_V1::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOCContextSEL, FPDOCContextDestroySEL, (void*)CFPD_OCContext_V1::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOCContextSEL, FPDOCContextGetDocumentSEL, (void*)CFPD_OCContext_V1::GetDocument);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOCContextSEL, FPDOCContextGetUsageTypeSEL, (void*)CFPD_OCContext_V1::GetUsageType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOCContextSEL, FPDOCContextCheckOCGVisibleSEL, (void*)CFPD_OCContext_V1::CheckOCGVisible);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOCContextSEL, FPDOCContextResetOCContextSEL, (void*)CFPD_OCContext_V1::ResetOCContext);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOCContextSEL, FPDOCContextSetOCGStateSEL, (void*)CFPD_OCContext_V1::SetOCGState);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOCContextSEL, FPDOCContextCheckObjectVisibleSEL, (void*)CFPD_OCContext_V1::CheckObjectVisible);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOCContextSEL, FPDOCContextConvertToFPDOCContextHandlerSEL, (void*)CFPD_OCContext_V1::ConvertToFPDOCContextHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOCContextSEL, FPDOCContextMergeContextSEL, (void*)CFPD_OCContext_V1::MergeContext);
	}
};

class CFPD_OCGroup_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOCGroupSEL, FPDOCGroupNewSEL, (void*)CFPD_OCGroup_V1::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOCGroupSEL, FPDOCGroupDestroySEL, (void*)CFPD_OCGroup_V1::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOCGroupSEL, FPDOCGroupGetNameSEL, (void*)CFPD_OCGroup_V1::GetName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOCGroupSEL, FPDOCGroupSetNameSEL, (void*)CFPD_OCGroup_V1::SetName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOCGroupSEL, FPDOCGroupHasIntentSEL, (void*)CFPD_OCGroup_V1::HasIntent);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOCGroupSEL, FPDOCGroupGetCreatorInfoSEL, (void*)CFPD_OCGroup_V1::GetCreatorInfo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOCGroupSEL, FPDOCGroupGetLanguageInfoSEL, (void*)CFPD_OCGroup_V1::GetLanguageInfo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOCGroupSEL, FPDOCGroupGetExportStateSEL, (void*)CFPD_OCGroup_V1::GetExportState);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOCGroupSEL, FPDOCGroupGetZoomRangeSEL, (void*)CFPD_OCGroup_V1::GetZoomRange);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOCGroupSEL, FPDOCGroupGetPrintInfoSEL, (void*)CFPD_OCGroup_V1::GetPrintInfo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOCGroupSEL, FPDOCGroupGetViewStateSEL, (void*)CFPD_OCGroup_V1::GetViewState);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOCGroupSEL, FPDOCGroupGetUserTypeSEL, (void*)CFPD_OCGroup_V1::GetUserType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOCGroupSEL, FPDOCGroupGetPageElementTypeSEL, (void*)CFPD_OCGroup_V1::GetPageElementType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOCGroupSEL, FPDOCGroupGetDictionarySEL, (void*)CFPD_OCGroup_V1::GetDictionary);
	}
};

class CFPD_OCGroupSet_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOCGroupSetSEL, FPDOCGroupSetNewSEL, (void*)CFPD_OCGroupSet_V1::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOCGroupSetSEL, FPDOCGroupSetDestroySEL, (void*)CFPD_OCGroupSet_V1::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOCGroupSetSEL, FPDOCGroupSetCountElementsSEL, (void*)CFPD_OCGroupSet_V1::CountElements);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOCGroupSetSEL, FPDOCGroupSetIsSubGroupSetSEL, (void*)CFPD_OCGroupSet_V1::IsSubGroupSet);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOCGroupSetSEL, FPDOCGroupSetGetGroupSEL, (void*)CFPD_OCGroupSet_V1::GetGroup);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOCGroupSetSEL, FPDOCGroupSetGetSubGroupSetSEL, (void*)CFPD_OCGroupSet_V1::GetSubGroupSet);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOCGroupSetSEL, FPDOCGroupSetFindGroupSEL, (void*)CFPD_OCGroupSet_V1::FindGroup);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOCGroupSetSEL, FPDOCGroupSetGetSubGroupSetNameSEL, (void*)CFPD_OCGroupSet_V1::GetSubGroupSetName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOCGroupSetSEL, FPDOCGroupSetGetArraySEL, (void*)CFPD_OCGroupSet_V1::GetArray);
	}
};

class CFPD_OCNotify_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOCNotifySEL, FPDOCNotifyFPD_OCNotifyNewSEL, (void*)CFPD_OCNotify_V1::FPD_OCNotifyNew);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOCNotifySEL, FPDOCNotifyFPD_OCNotifyDestroySEL, (void*)CFPD_OCNotify_V1::FPD_OCNotifyDestroy);
	}
};

class CFPD_OCProperties_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOCPropertiesSEL, FPDOCPropertiesNewSEL, (void*)CFPD_OCProperties_V1::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOCPropertiesSEL, FPDOCPropertiesDestroySEL, (void*)CFPD_OCProperties_V1::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOCPropertiesSEL, FPDOCPropertiesGetDocumentSEL, (void*)CFPD_OCProperties_V1::GetDocument);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOCPropertiesSEL, FPDOCPropertiesGetOCGroupsSEL, (void*)CFPD_OCProperties_V1::GetOCGroups);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOCPropertiesSEL, FPDOCPropertiesIsOCGroupSEL, (void*)CFPD_OCProperties_V1::IsOCGroup);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOCPropertiesSEL, FPDOCPropertiesRetrieveOCGPagesSEL, (void*)CFPD_OCProperties_V1::RetrieveOCGPages);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOCPropertiesSEL, FPDOCPropertiesIsOCGInPageSEL, (void*)CFPD_OCProperties_V1::IsOCGInPage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOCPropertiesSEL, FPDOCPropertiesGetOCGroupOrderSEL, (void*)CFPD_OCProperties_V1::GetOCGroupOrder);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOCPropertiesSEL, FPDOCPropertiesCountConfigsSEL, (void*)CFPD_OCProperties_V1::CountConfigs);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOCPropertiesSEL, FPDOCPropertiesGetConfigSEL, (void*)CFPD_OCProperties_V1::GetConfig);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOCPropertiesSEL, FPDOCPropertiesAddOCNotifySEL, (void*)CFPD_OCProperties_V1::AddOCNotify);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOCPropertiesSEL, FPDOCPropertiesRemoveOCNotifySEL, (void*)CFPD_OCProperties_V1::RemoveOCNotify);
	}
};

class CFPD_LWinParam_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLWinParamSEL, FPDLWinParamNewSEL, (void*)CFPD_LWinParam_V1::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLWinParamSEL, FPDLWinParamDestroySEL, (void*)CFPD_LWinParam_V1::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLWinParamSEL, FPDLWinParamGetFileNameSEL, (void*)CFPD_LWinParam_V1::GetFileName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLWinParamSEL, FPDLWinParamSetFileNameSEL, (void*)CFPD_LWinParam_V1::SetFileName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLWinParamSEL, FPDLWinParamGetDefaultDirectorySEL, (void*)CFPD_LWinParam_V1::GetDefaultDirectory);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLWinParamSEL, FPDLWinParamSetDefaultDirectorySEL, (void*)CFPD_LWinParam_V1::SetDefaultDirectory);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLWinParamSEL, FPDLWinParamGetOperationSEL, (void*)CFPD_LWinParam_V1::GetOperation);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLWinParamSEL, FPDLWinParamSetOperationSEL, (void*)CFPD_LWinParam_V1::SetOperation);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLWinParamSEL, FPDLWinParamGetParamSEL, (void*)CFPD_LWinParam_V1::GetParam);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLWinParamSEL, FPDLWinParamSetParamSEL, (void*)CFPD_LWinParam_V1::SetParam);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLWinParamSEL, FPDLWinParamGetDictSEL, (void*)CFPD_LWinParam_V1::GetDict);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLWinParamSEL, FPDLWinParamSetDictSEL, (void*)CFPD_LWinParam_V1::SetDict);
	}
};

class CFPD_ActionFields_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDActionFieldsSEL, FPDActionFieldsNewSEL, (void*)CFPD_ActionFields_V1::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDActionFieldsSEL, FPDActionFieldsDestroySEL, (void*)CFPD_ActionFields_V1::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDActionFieldsSEL, FPDActionFieldsGetFieldsCountSEL, (void*)CFPD_ActionFields_V1::GetFieldsCount);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDActionFieldsSEL, FPDActionFieldsGetAllFieldsSEL, (void*)CFPD_ActionFields_V1::GetAllFields);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDActionFieldsSEL, FPDActionFieldsGetFieldSEL, (void*)CFPD_ActionFields_V1::GetField);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDActionFieldsSEL, FPDActionFieldsInsertFieldSEL, (void*)CFPD_ActionFields_V1::InsertField);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDActionFieldsSEL, FPDActionFieldsRemoveFieldSEL, (void*)CFPD_ActionFields_V1::RemoveField);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDActionFieldsSEL, FPDActionFieldsGetActionSEL, (void*)CFPD_ActionFields_V1::GetAction);
	}
};

class CFPD_Action_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDActionSEL, FPDActionNewSEL, (void*)CFPD_Action_V1::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDActionSEL, FPDActionNew2SEL, (void*)CFPD_Action_V1::New2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDActionSEL, FPDActionNew3SEL, (void*)CFPD_Action_V1::New3);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDActionSEL, FPDActionDestroySEL, (void*)CFPD_Action_V1::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDActionSEL, FPDActionGetTypeNameSEL, (void*)CFPD_Action_V1::GetTypeName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDActionSEL, FPDActionGetTypeSEL, (void*)CFPD_Action_V1::GetType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDActionSEL, FPDActionGetDestSEL, (void*)CFPD_Action_V1::GetDest);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDActionSEL, FPDActionSetDestSEL, (void*)CFPD_Action_V1::SetDest);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDActionSEL, FPDActionGetFilePathSEL, (void*)CFPD_Action_V1::GetFilePath);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDActionSEL, FPDActionSetFilePathSEL, (void*)CFPD_Action_V1::SetFilePath);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDActionSEL, FPDActionGetNewWindowSEL, (void*)CFPD_Action_V1::GetNewWindow);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDActionSEL, FPDActionSetNewWindowSEL, (void*)CFPD_Action_V1::SetNewWindow);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDActionSEL, FPDActionGetWinParamSEL, (void*)CFPD_Action_V1::GetWinParam);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDActionSEL, FPDActionSetWinParamSEL, (void*)CFPD_Action_V1::SetWinParam);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDActionSEL, FPDActionGetURISEL, (void*)CFPD_Action_V1::GetURI);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDActionSEL, FPDActionSetURISEL, (void*)CFPD_Action_V1::SetURI);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDActionSEL, FPDActionGetMouseMapSEL, (void*)CFPD_Action_V1::GetMouseMap);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDActionSEL, FPDActionSetMouseMapSEL, (void*)CFPD_Action_V1::SetMouseMap);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDActionSEL, FPDActionGetWidgetsSEL, (void*)CFPD_Action_V1::GetWidgets);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDActionSEL, FPDActionGetHideStatusSEL, (void*)CFPD_Action_V1::GetHideStatus);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDActionSEL, FPDActionSetHideStatusSEL, (void*)CFPD_Action_V1::SetHideStatus);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDActionSEL, FPDActionGetNameActionSEL, (void*)CFPD_Action_V1::GetNameAction);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDActionSEL, FPDActionSetNameActionSEL, (void*)CFPD_Action_V1::SetNameAction);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDActionSEL, FPDActionGetFlagsSEL, (void*)CFPD_Action_V1::GetFlags);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDActionSEL, FPDActionSetFlagsSEL, (void*)CFPD_Action_V1::SetFlags);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDActionSEL, FPDActionGetJavaScriptSEL, (void*)CFPD_Action_V1::GetJavaScript);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDActionSEL, FPDActionSetJavaScriptSEL, (void*)CFPD_Action_V1::SetJavaScript);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDActionSEL, FPDActionSetJavaScriptWSEL, (void*)CFPD_Action_V1::SetJavaScriptW);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDActionSEL, FPDActionCountRenditionsSEL, (void*)CFPD_Action_V1::CountRenditions);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDActionSEL, FPDActionGetRenditionSEL, (void*)CFPD_Action_V1::GetRendition);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDActionSEL, FPDActionInsertRenditionSEL, (void*)CFPD_Action_V1::InsertRendition);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDActionSEL, FPDActionRemoveRenditionSEL, (void*)CFPD_Action_V1::RemoveRendition);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDActionSEL, FPDActionGetAnnotSEL, (void*)CFPD_Action_V1::GetAnnot);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDActionSEL, FPDActionSetAnnotSEL, (void*)CFPD_Action_V1::SetAnnot);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDActionSEL, FPDActionGetOperationTypeSEL, (void*)CFPD_Action_V1::GetOperationType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDActionSEL, FPDActionSetOperationTypeSEL, (void*)CFPD_Action_V1::SetOperationType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDActionSEL, FPDActionGetSoundStreamSEL, (void*)CFPD_Action_V1::GetSoundStream);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDActionSEL, FPDActionGetVolumeSEL, (void*)CFPD_Action_V1::GetVolume);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDActionSEL, FPDActionIsSynchronousSEL, (void*)CFPD_Action_V1::IsSynchronous);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDActionSEL, FPDActionIsRepeatSEL, (void*)CFPD_Action_V1::IsRepeat);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDActionSEL, FPDActionIsMixPlaySEL, (void*)CFPD_Action_V1::IsMixPlay);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDActionSEL, FPDActionCountOCGStatesSEL, (void*)CFPD_Action_V1::CountOCGStates);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDActionSEL, FPDActionGetOCGStatesSEL, (void*)CFPD_Action_V1::GetOCGStates);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDActionSEL, FPDActionInsertOCGStatesSEL, (void*)CFPD_Action_V1::InsertOCGStates);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDActionSEL, FPDActionReplaceOCGStatesSEL, (void*)CFPD_Action_V1::ReplaceOCGStates);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDActionSEL, FPDActionRemoveOCGStatesSEL, (void*)CFPD_Action_V1::RemoveOCGStates);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDActionSEL, FPDActionIsStatePreservedSEL, (void*)CFPD_Action_V1::IsStatePreserved);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDActionSEL, FPDActionSetStatePreservedSEL, (void*)CFPD_Action_V1::SetStatePreserved);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDActionSEL, FPDActionGetSubActionsCountSEL, (void*)CFPD_Action_V1::GetSubActionsCount);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDActionSEL, FPDActionGetSubActionSEL, (void*)CFPD_Action_V1::GetSubAction);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDActionSEL, FPDActionInsertSubActionSEL, (void*)CFPD_Action_V1::InsertSubAction);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDActionSEL, FPDActionRemoveSubActionSEL, (void*)CFPD_Action_V1::RemoveSubAction);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDActionSEL, FPDActionRemoveAllSubActionsSEL, (void*)CFPD_Action_V1::RemoveAllSubActions);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDActionSEL, FPDActionGetDictSEL, (void*)CFPD_Action_V1::GetDict);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDActionSEL, FPDActionNew4SEL, (void*)CFPD_Action_V1::New4);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDActionSEL, FPDActionCreateGoToESEL, (void*)CFPD_Action_V1::CreateGoToE);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDActionSEL, FPDActionSetDest2SEL, (void*)CFPD_Action_V1::SetDest2);
	}
};

class CFPD_AAction_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDAActionSEL, FPDAActionNewSEL, (void*)CFPD_AAction_V1::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDAActionSEL, FPDAActionDestroySEL, (void*)CFPD_AAction_V1::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDAActionSEL, FPDAActionActionExistSEL, (void*)CFPD_AAction_V1::ActionExist);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDAActionSEL, FPDAActionGetActionSEL, (void*)CFPD_AAction_V1::GetAction);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDAActionSEL, FPDAActionSetActionSEL, (void*)CFPD_AAction_V1::SetAction);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDAActionSEL, FPDAActionRemoveActionSEL, (void*)CFPD_AAction_V1::RemoveAction);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDAActionSEL, FPDAActionGetStartPosSEL, (void*)CFPD_AAction_V1::GetStartPos);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDAActionSEL, FPDAActionGetNextActionSEL, (void*)CFPD_AAction_V1::GetNextAction);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDAActionSEL, FPDAActionGetDictionarySEL, (void*)CFPD_AAction_V1::GetDictionary);
	}
};

class CFPD_DocJSActions_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDocJSActionsSEL, FPDDocJSActionsNewSEL, (void*)CFPD_DocJSActions_V1::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDocJSActionsSEL, FPDDocJSActionsDestroySEL, (void*)CFPD_DocJSActions_V1::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDocJSActionsSEL, FPDDocJSActionsCountJSActionsSEL, (void*)CFPD_DocJSActions_V1::CountJSActions);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDocJSActionsSEL, FPDDocJSActionsGetJSActionSEL, (void*)CFPD_DocJSActions_V1::GetJSAction);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDocJSActionsSEL, FPDDocJSActionsGetJSAction2SEL, (void*)CFPD_DocJSActions_V1::GetJSAction2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDocJSActionsSEL, FPDDocJSActionsSetJSActionSEL, (void*)CFPD_DocJSActions_V1::SetJSAction);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDocJSActionsSEL, FPDDocJSActionsFindJSActionSEL, (void*)CFPD_DocJSActions_V1::FindJSAction);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDocJSActionsSEL, FPDDocJSActionsRemoveJSActionSEL, (void*)CFPD_DocJSActions_V1::RemoveJSAction);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDocJSActionsSEL, FPDDocJSActionsGetDocumentSEL, (void*)CFPD_DocJSActions_V1::GetDocument);
	}
};

class CFPD_FileSpec_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFileSpecSEL, FPDFileSpecNewSEL, (void*)CFPD_FileSpec_V1::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFileSpecSEL, FPDFileSpecNewFromObjSEL, (void*)CFPD_FileSpec_V1::NewFromObj);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFileSpecSEL, FPDFileSpecDestroySEL, (void*)CFPD_FileSpec_V1::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFileSpecSEL, FPDFileSpecIsURLSEL, (void*)CFPD_FileSpec_V1::IsURL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFileSpecSEL, FPDFileSpecGetFileNameSEL, (void*)CFPD_FileSpec_V1::GetFileName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFileSpecSEL, FPDFileSpecGetFileStreamSEL, (void*)CFPD_FileSpec_V1::GetFileStream);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFileSpecSEL, FPDFileSpecSetFileNameSEL, (void*)CFPD_FileSpec_V1::SetFileName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFileSpecSEL, FPDFileSpecSetEmbeddedFileSEL, (void*)CFPD_FileSpec_V1::SetEmbeddedFile);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFileSpecSEL, FPDFileSpecGetPDFObjctSEL, (void*)CFPD_FileSpec_V1::GetPDFObjct);
	}
};

class CFPD_MediaPlayer_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDMediaPlayerSEL, FPDMediaPlayerNewSEL, (void*)CFPD_MediaPlayer_V1::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDMediaPlayerSEL, FPDMediaPlayerNewFromDictSEL, (void*)CFPD_MediaPlayer_V1::NewFromDict);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDMediaPlayerSEL, FPDMediaPlayerDestroySEL, (void*)CFPD_MediaPlayer_V1::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDMediaPlayerSEL, FPDMediaPlayerGetSoftwareURISEL, (void*)CFPD_MediaPlayer_V1::GetSoftwareURI);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDMediaPlayerSEL, FPDMediaPlayerSetSoftwareURISEL, (void*)CFPD_MediaPlayer_V1::SetSoftwareURI);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDMediaPlayerSEL, FPDMediaPlayerGetOSArraySEL, (void*)CFPD_MediaPlayer_V1::GetOSArray);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDMediaPlayerSEL, FPDMediaPlayerSetOSArraySEL, (void*)CFPD_MediaPlayer_V1::SetOSArray);
	}
};

class CFPD_Rendition_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenditionSEL, FPDRenditionNewSEL, (void*)CFPD_Rendition_V1::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenditionSEL, FPDRenditionNewFromDictSEL, (void*)CFPD_Rendition_V1::NewFromDict);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenditionSEL, FPDRenditionDestroySEL, (void*)CFPD_Rendition_V1::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenditionSEL, FPDRenditionHasMediaClipSEL, (void*)CFPD_Rendition_V1::HasMediaClip);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenditionSEL, FPDRenditionGetRenditionNameSEL, (void*)CFPD_Rendition_V1::GetRenditionName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenditionSEL, FPDRenditionSetRenditionNameSEL, (void*)CFPD_Rendition_V1::SetRenditionName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenditionSEL, FPDRenditionGetMediaClipNameSEL, (void*)CFPD_Rendition_V1::GetMediaClipName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenditionSEL, FPDRenditionSetMediaClipNameSEL, (void*)CFPD_Rendition_V1::SetMediaClipName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenditionSEL, FPDRenditionGetMediaClipFileSEL, (void*)CFPD_Rendition_V1::GetMediaClipFile);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenditionSEL, FPDRenditionSetMediaClipFileSEL, (void*)CFPD_Rendition_V1::SetMediaClipFile);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenditionSEL, FPDRenditionGetMediaClipContentTypeSEL, (void*)CFPD_Rendition_V1::GetMediaClipContentType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenditionSEL, FPDRenditionSetMediaClipContentTypeSEL, (void*)CFPD_Rendition_V1::SetMediaClipContentType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenditionSEL, FPDRenditionGetPermissionSEL, (void*)CFPD_Rendition_V1::GetPermission);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenditionSEL, FPDRenditionSetPermissionSEL, (void*)CFPD_Rendition_V1::SetPermission);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenditionSEL, FPDRenditionGetMediaDescriptionsSEL, (void*)CFPD_Rendition_V1::GetMediaDescriptions);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenditionSEL, FPDRenditionSetMediaDescriptionsSEL, (void*)CFPD_Rendition_V1::SetMediaDescriptions);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenditionSEL, FPDRenditionGetMediaBaseURLSEL, (void*)CFPD_Rendition_V1::GetMediaBaseURL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenditionSEL, FPDRenditionSetMediaBaseURLSEL, (void*)CFPD_Rendition_V1::SetMediaBaseURL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenditionSEL, FPDRenditionCountMediaPlayersSEL, (void*)CFPD_Rendition_V1::CountMediaPlayers);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenditionSEL, FPDRenditionGetMediaPlayerSEL, (void*)CFPD_Rendition_V1::GetMediaPlayer);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenditionSEL, FPDRenditionAddMediaPlayerSEL, (void*)CFPD_Rendition_V1::AddMediaPlayer);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenditionSEL, FPDRenditionRemoveMediaPlayerSEL, (void*)CFPD_Rendition_V1::RemoveMediaPlayer);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenditionSEL, FPDRenditionGetVolumnSEL, (void*)CFPD_Rendition_V1::GetVolumn);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenditionSEL, FPDRenditionSetVolumnSEL, (void*)CFPD_Rendition_V1::SetVolumn);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenditionSEL, FPDRenditionIsControlBarVisibleSEL, (void*)CFPD_Rendition_V1::IsControlBarVisible);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenditionSEL, FPDRenditionEnableControlBarVisibleSEL, (void*)CFPD_Rendition_V1::EnableControlBarVisible);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenditionSEL, FPDRenditionGetFitStyleSEL, (void*)CFPD_Rendition_V1::GetFitStyle);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenditionSEL, FPDRenditionSetFitStyleSEL, (void*)CFPD_Rendition_V1::SetFitStyle);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenditionSEL, FPDRenditionGetDurationSEL, (void*)CFPD_Rendition_V1::GetDuration);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenditionSEL, FPDRenditionSetDurationSEL, (void*)CFPD_Rendition_V1::SetDuration);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenditionSEL, FPDRenditionAutoPlaySEL, (void*)CFPD_Rendition_V1::AutoPlay);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenditionSEL, FPDRenditionEnableAutoPlaySEL, (void*)CFPD_Rendition_V1::EnableAutoPlay);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenditionSEL, FPDRenditionRepeatCountSEL, (void*)CFPD_Rendition_V1::RepeatCount);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenditionSEL, FPDRenditionSetRepeatCountSEL, (void*)CFPD_Rendition_V1::SetRepeatCount);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenditionSEL, FPDRenditionGetWindowStatusSEL, (void*)CFPD_Rendition_V1::GetWindowStatus);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenditionSEL, FPDRenditionSetWindowStatusSEL, (void*)CFPD_Rendition_V1::SetWindowStatus);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenditionSEL, FPDRenditionGetBackgroundColorSEL, (void*)CFPD_Rendition_V1::GetBackgroundColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenditionSEL, FPDRenditionSetBackgroundColorSEL, (void*)CFPD_Rendition_V1::SetBackgroundColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenditionSEL, FPDRenditionGetBackgroundOpacitySEL, (void*)CFPD_Rendition_V1::GetBackgroundOpacity);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenditionSEL, FPDRenditionSetBackgroundOpacitySEL, (void*)CFPD_Rendition_V1::SetBackgroundOpacity);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenditionSEL, FPDRenditionGetMonitorSEL, (void*)CFPD_Rendition_V1::GetMonitor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenditionSEL, FPDRenditionSetMonitorSEL, (void*)CFPD_Rendition_V1::SetMonitor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenditionSEL, FPDRenditionGetFloatingWindowSizeSEL, (void*)CFPD_Rendition_V1::GetFloatingWindowSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenditionSEL, FPDRenditionSetFloatingWindowSizeSEL, (void*)CFPD_Rendition_V1::SetFloatingWindowSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenditionSEL, FPDRenditionGetFloatingWindowRelativeTypeSEL, (void*)CFPD_Rendition_V1::GetFloatingWindowRelativeType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenditionSEL, FPDRenditionSetFloatingWindowRelativeTypeSEL, (void*)CFPD_Rendition_V1::SetFloatingWindowRelativeType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenditionSEL, FPDRenditionGetFloatingWindowPositionSEL, (void*)CFPD_Rendition_V1::GetFloatingWindowPosition);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenditionSEL, FPDRenditionSetFloatingWindowPositionSEL, (void*)CFPD_Rendition_V1::SetFloatingWindowPosition);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenditionSEL, FPDRenditionGetFloatingWindowOffscreenSEL, (void*)CFPD_Rendition_V1::GetFloatingWindowOffscreen);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenditionSEL, FPDRenditionSetFloatingWindowOffscreenSEL, (void*)CFPD_Rendition_V1::SetFloatingWindowOffscreen);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenditionSEL, FPDRenditionHasFloatingWindowTitleBarSEL, (void*)CFPD_Rendition_V1::HasFloatingWindowTitleBar);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenditionSEL, FPDRenditionEnableFloatingWindowTitleBarSEL, (void*)CFPD_Rendition_V1::EnableFloatingWindowTitleBar);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenditionSEL, FPDRenditionHasFloatingWindowCloseButtonSEL, (void*)CFPD_Rendition_V1::HasFloatingWindowCloseButton);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenditionSEL, FPDRenditionEnableFloatingWindowCloseButtonSEL, (void*)CFPD_Rendition_V1::EnableFloatingWindowCloseButton);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenditionSEL, FPDRenditionGetFloatingWindowResizeTypeSEL, (void*)CFPD_Rendition_V1::GetFloatingWindowResizeType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenditionSEL, FPDRenditionSetFloatingWindowResizeTypeSEL, (void*)CFPD_Rendition_V1::SetFloatingWindowResizeType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenditionSEL, FPDRenditionGetFloatingWindowTitleSEL, (void*)CFPD_Rendition_V1::GetFloatingWindowTitle);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenditionSEL, FPDRenditionSetFloatingWindowTitleSEL, (void*)CFPD_Rendition_V1::SetFloatingWindowTitle);
	}
};

class CFPD_Link_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLinkSEL, FPDLinkNewSEL, (void*)CFPD_Link_V1::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLinkSEL, FPDLinkDestroySEL, (void*)CFPD_Link_V1::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLinkSEL, FPDLinkGetLinkAtPointSEL, (void*)CFPD_Link_V1::GetLinkAtPoint);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLinkSEL, FPDLinkCountLinksSEL, (void*)CFPD_Link_V1::CountLinks);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLinkSEL, FPDLinkGetLinkSEL, (void*)CFPD_Link_V1::GetLink);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLinkSEL, FPDLinkGetRectSEL, (void*)CFPD_Link_V1::GetRect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLinkSEL, FPDLinkGetDestSEL, (void*)CFPD_Link_V1::GetDest);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLinkSEL, FPDLinkGetActionSEL, (void*)CFPD_Link_V1::GetAction);
	}
};

class CFPD_Annot_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDAnnotSEL, FPDAnnotNewSEL, (void*)CFPD_Annot_V1::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDAnnotSEL, FPDAnnotDestroySEL, (void*)CFPD_Annot_V1::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDAnnotSEL, FPDAnnotGetAnnotDictSEL, (void*)CFPD_Annot_V1::GetAnnotDict);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDAnnotSEL, FPDAnnotGetSubTypeSEL, (void*)CFPD_Annot_V1::GetSubType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDAnnotSEL, FPDAnnotGetFlagsSEL, (void*)CFPD_Annot_V1::GetFlags);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDAnnotSEL, FPDAnnotGetRectSEL, (void*)CFPD_Annot_V1::GetRect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDAnnotSEL, FPDAnnotDrawAppearanceSEL, (void*)CFPD_Annot_V1::DrawAppearance);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDAnnotSEL, FPDAnnotDrawInContextSEL, (void*)CFPD_Annot_V1::DrawInContext);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDAnnotSEL, FPDAnnotClearCachedAPSEL, (void*)CFPD_Annot_V1::ClearCachedAP);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDAnnotSEL, FPDAnnotDrawBorderSEL, (void*)CFPD_Annot_V1::DrawBorder);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDAnnotSEL, FPDAnnotCountIRTNotesSEL, (void*)CFPD_Annot_V1::CountIRTNotes);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDAnnotSEL, FPDAnnotGetIRTNoteSEL, (void*)CFPD_Annot_V1::GetIRTNote);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDAnnotSEL, FPDAnnotGetAPFormSEL, (void*)CFPD_Annot_V1::GetAPForm);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDAnnotSEL, FPDAnnotSetPrivateDataSEL, (void*)CFPD_Annot_V1::SetPrivateData);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDAnnotSEL, FPDAnnotGetPrivateDataSEL, (void*)CFPD_Annot_V1::GetPrivateData);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDAnnotSEL, FPDAnnotGetAnnotListSEL, (void*)CFPD_Annot_V1::GetAnnotList);
	}
};

class CFPD_AnnotList_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDAnnotListSEL, FPDAnnotListNewSEL, (void*)CFPD_AnnotList_V1::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDAnnotListSEL, FPDAnnotListDestroySEL, (void*)CFPD_AnnotList_V1::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDAnnotListSEL, FPDAnnotListDisplayAnnotsSEL, (void*)CFPD_AnnotList_V1::DisplayAnnots);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDAnnotListSEL, FPDAnnotListDisplayAnnotsExSEL, (void*)CFPD_AnnotList_V1::DisplayAnnotsEx);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDAnnotListSEL, FPDAnnotListGetAtSEL, (void*)CFPD_AnnotList_V1::GetAt);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDAnnotListSEL, FPDAnnotListCountSEL, (void*)CFPD_AnnotList_V1::Count);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDAnnotListSEL, FPDAnnotListGetIndexSEL, (void*)CFPD_AnnotList_V1::GetIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDAnnotListSEL, FPDAnnotListRemoveAllSEL, (void*)CFPD_AnnotList_V1::RemoveAll);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDAnnotListSEL, FPDAnnotListReplaceSEL, (void*)CFPD_AnnotList_V1::Replace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDAnnotListSEL, FPDAnnotListInsertSEL, (void*)CFPD_AnnotList_V1::Insert);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDAnnotListSEL, FPDAnnotListRemoveSEL, (void*)CFPD_AnnotList_V1::Remove);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDAnnotListSEL, FPDAnnotListRemoveTempSEL, (void*)CFPD_AnnotList_V1::RemoveTemp);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDAnnotListSEL, FPDAnnotListMoveToFirstSEL, (void*)CFPD_AnnotList_V1::MoveToFirst);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDAnnotListSEL, FPDAnnotListMoveToLastSEL, (void*)CFPD_AnnotList_V1::MoveToLast);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDAnnotListSEL, FPDAnnotListMoveToSEL, (void*)CFPD_AnnotList_V1::MoveTo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDAnnotListSEL, FPDAnnotListGetDocumentSEL, (void*)CFPD_AnnotList_V1::GetDocument);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDAnnotListSEL, FPDAnnotListSetFixedIconParamsSEL, (void*)CFPD_AnnotList_V1::SetFixedIconParams);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDAnnotListSEL, FPDAnnotListGetAnnotMatrixSEL, (void*)CFPD_AnnotList_V1::GetAnnotMatrix);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDAnnotListSEL, FPDAnnotListGetAnnotRectSEL, (void*)CFPD_AnnotList_V1::GetAnnotRect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDAnnotListSEL, FPDAnnotListGetPageSEL, (void*)CFPD_AnnotList_V1::GetPage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDAnnotListSEL, FPDAnnotListGetAnnotByDictSEL, (void*)CFPD_AnnotList_V1::GetAnnotByDict);
	}
};

class CFPD_DefaultAppearance_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDefaultAppearanceSEL, FPDDefaultAppearanceNewSEL, (void*)CFPD_DefaultAppearance_V1::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDefaultAppearanceSEL, FPDDefaultAppearanceDestroySEL, (void*)CFPD_DefaultAppearance_V1::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDefaultAppearanceSEL, FPDDefaultAppearanceHasFontSEL, (void*)CFPD_DefaultAppearance_V1::HasFont);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDefaultAppearanceSEL, FPDDefaultAppearanceGetFontStringSEL, (void*)CFPD_DefaultAppearance_V1::GetFontString);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDefaultAppearanceSEL, FPDDefaultAppearanceGetFontSEL, (void*)CFPD_DefaultAppearance_V1::GetFont);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDefaultAppearanceSEL, FPDDefaultAppearanceSetFontSEL, (void*)CFPD_DefaultAppearance_V1::SetFont);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDefaultAppearanceSEL, FPDDefaultAppearanceHasColorSEL, (void*)CFPD_DefaultAppearance_V1::HasColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDefaultAppearanceSEL, FPDDefaultAppearanceGetColorStringSEL, (void*)CFPD_DefaultAppearance_V1::GetColorString);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDefaultAppearanceSEL, FPDDefaultAppearanceGetColorInclueCMYKSEL, (void*)CFPD_DefaultAppearance_V1::GetColorInclueCMYK);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDefaultAppearanceSEL, FPDDefaultAppearanceGetColorSEL, (void*)CFPD_DefaultAppearance_V1::GetColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDefaultAppearanceSEL, FPDDefaultAppearanceSetColorSEL, (void*)CFPD_DefaultAppearance_V1::SetColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDefaultAppearanceSEL, FPDDefaultAppearanceHasTextMatrixSEL, (void*)CFPD_DefaultAppearance_V1::HasTextMatrix);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDefaultAppearanceSEL, FPDDefaultAppearanceGetTextMatrixStringSEL, (void*)CFPD_DefaultAppearance_V1::GetTextMatrixString);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDefaultAppearanceSEL, FPDDefaultAppearanceGetTextMatrixSEL, (void*)CFPD_DefaultAppearance_V1::GetTextMatrix);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDefaultAppearanceSEL, FPDDefaultAppearanceSetTextMatrixSEL, (void*)CFPD_DefaultAppearance_V1::SetTextMatrix);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDefaultAppearanceSEL, FPDDefaultAppearanceGetFontSizeSEL, (void*)CFPD_DefaultAppearance_V1::GetFontSize);
	}
};

class CFPD_FormNotify_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormNotifySEL, FPDFormNotifyNewSEL, (void*)CFPD_FormNotify_V1::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormNotifySEL, FPDFormNotifyDestroySEL, (void*)CFPD_FormNotify_V1::Destroy);
	}
};

class CFPD_InterForm_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDInterFormSEL, FPDInterFormNewSEL, (void*)CFPD_InterForm_V1::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDInterFormSEL, FPDInterFormDestroySEL, (void*)CFPD_InterForm_V1::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDInterFormSEL, FPDInterFormEnableUpdateAPSEL, (void*)CFPD_InterForm_V1::EnableUpdateAP);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDInterFormSEL, FPDInterFormUpdatingAPEnabledSEL, (void*)CFPD_InterForm_V1::UpdatingAPEnabled);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDInterFormSEL, FPDInterFormGenerateNewResourceNameSEL, (void*)CFPD_InterForm_V1::GenerateNewResourceName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDInterFormSEL, FPDInterFormAddSystemDefaultFontSEL, (void*)CFPD_InterForm_V1::AddSystemDefaultFont);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDInterFormSEL, FPDInterFormAddSystemFontSEL, (void*)CFPD_InterForm_V1::AddSystemFont);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDInterFormSEL, FPDInterFormAddSystemFontWSEL, (void*)CFPD_InterForm_V1::AddSystemFontW);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDInterFormSEL, FPDInterFormAddStandardFontSEL, (void*)CFPD_InterForm_V1::AddStandardFont);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDInterFormSEL, FPDInterFormGetNativeFontSEL, (void*)CFPD_InterForm_V1::GetNativeFont);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDInterFormSEL, FPDInterFormGetNativeFont2SEL, (void*)CFPD_InterForm_V1::GetNativeFont2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDInterFormSEL, FPDInterFormAddNativeFontSEL, (void*)CFPD_InterForm_V1::AddNativeFont);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDInterFormSEL, FPDInterFormAddNativeFont2SEL, (void*)CFPD_InterForm_V1::AddNativeFont2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDInterFormSEL, FPDInterFormValidateFieldNameSEL, (void*)CFPD_InterForm_V1::ValidateFieldName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDInterFormSEL, FPDInterFormValidateFieldName2SEL, (void*)CFPD_InterForm_V1::ValidateFieldName2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDInterFormSEL, FPDInterFormValidateFieldName3SEL, (void*)CFPD_InterForm_V1::ValidateFieldName3);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDInterFormSEL, FPDInterFormNewFieldSEL, (void*)CFPD_InterForm_V1::NewField);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDInterFormSEL, FPDInterFormNewControlSEL, (void*)CFPD_InterForm_V1::NewControl);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDInterFormSEL, FPDInterFormCountFieldsSEL, (void*)CFPD_InterForm_V1::CountFields);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDInterFormSEL, FPDInterFormGetFieldSEL, (void*)CFPD_InterForm_V1::GetField);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDInterFormSEL, FPDInterFormGetAllFieldNamesSEL, (void*)CFPD_InterForm_V1::GetAllFieldNames);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDInterFormSEL, FPDInterFormIsValidFormFieldSEL, (void*)CFPD_InterForm_V1::IsValidFormField);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDInterFormSEL, FPDInterFormGetFieldByDictSEL, (void*)CFPD_InterForm_V1::GetFieldByDict);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDInterFormSEL, FPDInterFormCountControlsSEL, (void*)CFPD_InterForm_V1::CountControls);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDInterFormSEL, FPDInterFormGetControlSEL, (void*)CFPD_InterForm_V1::GetControl);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDInterFormSEL, FPDInterFormIsValidFormControlSEL, (void*)CFPD_InterForm_V1::IsValidFormControl);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDInterFormSEL, FPDInterFormCountPageControlsSEL, (void*)CFPD_InterForm_V1::CountPageControls);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDInterFormSEL, FPDInterFormGetPageControlSEL, (void*)CFPD_InterForm_V1::GetPageControl);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDInterFormSEL, FPDInterFormGetControlAtPointSEL, (void*)CFPD_InterForm_V1::GetControlAtPoint);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDInterFormSEL, FPDInterFormGetControlByDictSEL, (void*)CFPD_InterForm_V1::GetControlByDict);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDInterFormSEL, FPDInterFormRenameFieldSEL, (void*)CFPD_InterForm_V1::RenameField);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDInterFormSEL, FPDInterFormRenameField2SEL, (void*)CFPD_InterForm_V1::RenameField2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDInterFormSEL, FPDInterFormRenameControlSEL, (void*)CFPD_InterForm_V1::RenameControl);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDInterFormSEL, FPDInterFormDeleteFieldSEL, (void*)CFPD_InterForm_V1::DeleteField);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDInterFormSEL, FPDInterFormDeleteField2SEL, (void*)CFPD_InterForm_V1::DeleteField2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDInterFormSEL, FPDInterFormDeleteControlSEL, (void*)CFPD_InterForm_V1::DeleteControl);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDInterFormSEL, FPDInterFormCountInternalFieldsSEL, (void*)CFPD_InterForm_V1::CountInternalFields);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDInterFormSEL, FPDInterFormGetInternalFieldSEL, (void*)CFPD_InterForm_V1::GetInternalField);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDInterFormSEL, FPDInterFormGetDocumentSEL, (void*)CFPD_InterForm_V1::GetDocument);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDInterFormSEL, FPDInterFormGetFormDictSEL, (void*)CFPD_InterForm_V1::GetFormDict);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDInterFormSEL, FPDInterFormNeedConstructAPSEL, (void*)CFPD_InterForm_V1::NeedConstructAP);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDInterFormSEL, FPDInterFormNeedConstructAP2SEL, (void*)CFPD_InterForm_V1::NeedConstructAP2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDInterFormSEL, FPDInterFormCountFieldsInCalculationOrderSEL, (void*)CFPD_InterForm_V1::CountFieldsInCalculationOrder);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDInterFormSEL, FPDInterFormGetFieldInCalculationOrderSEL, (void*)CFPD_InterForm_V1::GetFieldInCalculationOrder);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDInterFormSEL, FPDInterFormFindFieldInCalculationOrderSEL, (void*)CFPD_InterForm_V1::FindFieldInCalculationOrder);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDInterFormSEL, FPDInterFormInsertFieldInCalculationOrderSEL, (void*)CFPD_InterForm_V1::InsertFieldInCalculationOrder);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDInterFormSEL, FPDInterFormMoveFieldInCalculationOrderSEL, (void*)CFPD_InterForm_V1::MoveFieldInCalculationOrder);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDInterFormSEL, FPDInterFormRemoveFieldInCalculationOrderSEL, (void*)CFPD_InterForm_V1::RemoveFieldInCalculationOrder);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDInterFormSEL, FPDInterFormCountFormFontsSEL, (void*)CFPD_InterForm_V1::CountFormFonts);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDInterFormSEL, FPDInterFormGetFormFontSEL, (void*)CFPD_InterForm_V1::GetFormFont);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDInterFormSEL, FPDInterFormGetFormFont2SEL, (void*)CFPD_InterForm_V1::GetFormFont2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDInterFormSEL, FPDInterFormGetFormFont3SEL, (void*)CFPD_InterForm_V1::GetFormFont3);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDInterFormSEL, FPDInterFormGetNativeFormFontSEL, (void*)CFPD_InterForm_V1::GetNativeFormFont);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDInterFormSEL, FPDInterFormGetNativeFormFont2SEL, (void*)CFPD_InterForm_V1::GetNativeFormFont2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDInterFormSEL, FPDInterFormFindFormFontSEL, (void*)CFPD_InterForm_V1::FindFormFont);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDInterFormSEL, FPDInterFormFindFormFont2SEL, (void*)CFPD_InterForm_V1::FindFormFont2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDInterFormSEL, FPDInterFormFindFormFont3SEL, (void*)CFPD_InterForm_V1::FindFormFont3);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDInterFormSEL, FPDInterFormAddFormFontSEL, (void*)CFPD_InterForm_V1::AddFormFont);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDInterFormSEL, FPDInterFormAddNativeFormFontSEL, (void*)CFPD_InterForm_V1::AddNativeFormFont);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDInterFormSEL, FPDInterFormAddNativeFormFont2SEL, (void*)CFPD_InterForm_V1::AddNativeFormFont2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDInterFormSEL, FPDInterFormRemoveFormFontSEL, (void*)CFPD_InterForm_V1::RemoveFormFont);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDInterFormSEL, FPDInterFormRemoveFormFont2SEL, (void*)CFPD_InterForm_V1::RemoveFormFont2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDInterFormSEL, FPDInterFormGetDefaultAppearanceSEL, (void*)CFPD_InterForm_V1::GetDefaultAppearance);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDInterFormSEL, FPDInterFormSetDefaultAppearanceSEL, (void*)CFPD_InterForm_V1::SetDefaultAppearance);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDInterFormSEL, FPDInterFormGetDefaultFormFontSEL, (void*)CFPD_InterForm_V1::GetDefaultFormFont);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDInterFormSEL, FPDInterFormSetDefaultFormFontSEL, (void*)CFPD_InterForm_V1::SetDefaultFormFont);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDInterFormSEL, FPDInterFormGetFormAlignmentSEL, (void*)CFPD_InterForm_V1::GetFormAlignment);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDInterFormSEL, FPDInterFormSetFormAlignmentSEL, (void*)CFPD_InterForm_V1::SetFormAlignment);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDInterFormSEL, FPDInterFormCheckRequiredFieldsSEL, (void*)CFPD_InterForm_V1::CheckRequiredFields);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDInterFormSEL, FPDInterFormExportToFDFSEL, (void*)CFPD_InterForm_V1::ExportToFDF);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDInterFormSEL, FPDInterFormExportToFDF2SEL, (void*)CFPD_InterForm_V1::ExportToFDF2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDInterFormSEL, FPDInterFormImportFromFDFSEL, (void*)CFPD_InterForm_V1::ImportFromFDF);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDInterFormSEL, FPDInterFormResetFormSEL, (void*)CFPD_InterForm_V1::ResetForm);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDInterFormSEL, FPDInterFormResetForm2SEL, (void*)CFPD_InterForm_V1::ResetForm2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDInterFormSEL, FPDInterFormReloadFormSEL, (void*)CFPD_InterForm_V1::ReloadForm);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDInterFormSEL, FPDInterFormGetFormNotifySEL, (void*)CFPD_InterForm_V1::GetFormNotify);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDInterFormSEL, FPDInterFormSetFormNotifySEL, (void*)CFPD_InterForm_V1::SetFormNotify);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDInterFormSEL, FPDInterFormGetPageWithWidgetSEL, (void*)CFPD_InterForm_V1::GetPageWithWidget);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDInterFormSEL, FPDInterFormIsUpdatedSEL, (void*)CFPD_InterForm_V1::IsUpdated);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDInterFormSEL, FPDInterFormClearUpdatedFlagSEL, (void*)CFPD_InterForm_V1::ClearUpdatedFlag);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDInterFormSEL, FPDInterFormFixPageFieldsSEL, (void*)CFPD_InterForm_V1::FixPageFields);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDInterFormSEL, FPDInterFormAddControlSEL, (void*)CFPD_InterForm_V1::AddControl);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDInterFormSEL, FPDInterFormNew2SEL, (void*)CFPD_InterForm_V1::New2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDInterFormSEL, FPDInterFormExportToFDF3SEL, (void*)CFPD_InterForm_V1::ExportToFDF3);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDInterFormSEL, FPDInterFormCreateFieldSEL, (void*)CFPD_InterForm_V1::CreateField);
	}
};

class CFPD_FormField_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormFieldSEL, FPDFormFieldGetFullNameSEL, (void*)CFPD_FormField_V1::GetFullName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormFieldSEL, FPDFormFieldGetTypeSEL, (void*)CFPD_FormField_V1::GetType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormFieldSEL, FPDFormFieldGetFlagsSEL, (void*)CFPD_FormField_V1::GetFlags);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormFieldSEL, FPDFormFieldGetInterFormSEL, (void*)CFPD_FormField_V1::GetInterForm);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormFieldSEL, FPDFormFieldGetFieldDictSEL, (void*)CFPD_FormField_V1::GetFieldDict);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormFieldSEL, FPDFormFieldResetFieldSEL, (void*)CFPD_FormField_V1::ResetField);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormFieldSEL, FPDFormFieldCountControlsSEL, (void*)CFPD_FormField_V1::CountControls);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormFieldSEL, FPDFormFieldGetControlSEL, (void*)CFPD_FormField_V1::GetControl);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormFieldSEL, FPDFormFieldGetControlIndexSEL, (void*)CFPD_FormField_V1::GetControlIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormFieldSEL, FPDFormFieldGetFieldTypeSEL, (void*)CFPD_FormField_V1::GetFieldType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormFieldSEL, FPDFormFieldGetAdditionalActionSEL, (void*)CFPD_FormField_V1::GetAdditionalAction);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormFieldSEL, FPDFormFieldSetAdditionalActionSEL, (void*)CFPD_FormField_V1::SetAdditionalAction);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormFieldSEL, FPDFormFieldGetAlternateNameSEL, (void*)CFPD_FormField_V1::GetAlternateName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormFieldSEL, FPDFormFieldSetAlternateNameSEL, (void*)CFPD_FormField_V1::SetAlternateName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormFieldSEL, FPDFormFieldSetAlternateNameWSEL, (void*)CFPD_FormField_V1::SetAlternateNameW);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormFieldSEL, FPDFormFieldGetMappingNameSEL, (void*)CFPD_FormField_V1::GetMappingName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormFieldSEL, FPDFormFieldSetMappingNameSEL, (void*)CFPD_FormField_V1::SetMappingName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormFieldSEL, FPDFormFieldSetMappingNameWSEL, (void*)CFPD_FormField_V1::SetMappingNameW);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormFieldSEL, FPDFormFieldGetFieldFlagsSEL, (void*)CFPD_FormField_V1::GetFieldFlags);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormFieldSEL, FPDFormFieldSetFieldFlagsSEL, (void*)CFPD_FormField_V1::SetFieldFlags);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormFieldSEL, FPDFormFieldGetDefaultStyleSEL, (void*)CFPD_FormField_V1::GetDefaultStyle);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormFieldSEL, FPDFormFieldSetDefaultStyleSEL, (void*)CFPD_FormField_V1::SetDefaultStyle);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormFieldSEL, FPDFormFieldGetRichTextStringSEL, (void*)CFPD_FormField_V1::GetRichTextString);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormFieldSEL, FPDFormFieldSetRichTextStringSEL, (void*)CFPD_FormField_V1::SetRichTextString);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormFieldSEL, FPDFormFieldSetRichTextStringWSEL, (void*)CFPD_FormField_V1::SetRichTextStringW);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormFieldSEL, FPDFormFieldGetValueSEL, (void*)CFPD_FormField_V1::GetValue);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormFieldSEL, FPDFormFieldGetDefaultValueSEL, (void*)CFPD_FormField_V1::GetDefaultValue);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormFieldSEL, FPDFormFieldSetValueSEL, (void*)CFPD_FormField_V1::SetValue);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormFieldSEL, FPDFormFieldSetDefaultValueSEL, (void*)CFPD_FormField_V1::SetDefaultValue);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormFieldSEL, FPDFormFieldGetMaxLenSEL, (void*)CFPD_FormField_V1::GetMaxLen);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormFieldSEL, FPDFormFieldSetMaxLenSEL, (void*)CFPD_FormField_V1::SetMaxLen);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormFieldSEL, FPDFormFieldCountSelectedItemsSEL, (void*)CFPD_FormField_V1::CountSelectedItems);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormFieldSEL, FPDFormFieldGetSelectedIndexSEL, (void*)CFPD_FormField_V1::GetSelectedIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormFieldSEL, FPDFormFieldClearSelectionSEL, (void*)CFPD_FormField_V1::ClearSelection);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormFieldSEL, FPDFormFieldIsItemSelectedSEL, (void*)CFPD_FormField_V1::IsItemSelected);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormFieldSEL, FPDFormFieldSetItemSelectionSEL, (void*)CFPD_FormField_V1::SetItemSelection);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormFieldSEL, FPDFormFieldIsItemDefaultSelectedSEL, (void*)CFPD_FormField_V1::IsItemDefaultSelected);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormFieldSEL, FPDFormFieldSetItemDefaultSelectionSEL, (void*)CFPD_FormField_V1::SetItemDefaultSelection);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormFieldSEL, FPDFormFieldGetDefaultSelectedItemSEL, (void*)CFPD_FormField_V1::GetDefaultSelectedItem);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormFieldSEL, FPDFormFieldCountOptionsSEL, (void*)CFPD_FormField_V1::CountOptions);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormFieldSEL, FPDFormFieldGetOptionLabelSEL, (void*)CFPD_FormField_V1::GetOptionLabel);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormFieldSEL, FPDFormFieldGetOptionValueSEL, (void*)CFPD_FormField_V1::GetOptionValue);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormFieldSEL, FPDFormFieldInsertOptionSEL, (void*)CFPD_FormField_V1::InsertOption);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormFieldSEL, FPDFormFieldFindOptionSEL, (void*)CFPD_FormField_V1::FindOption);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormFieldSEL, FPDFormFieldFindOptionValueSEL, (void*)CFPD_FormField_V1::FindOptionValue);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormFieldSEL, FPDFormFieldSetOptionLabelSEL, (void*)CFPD_FormField_V1::SetOptionLabel);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormFieldSEL, FPDFormFieldSetOptionValueSEL, (void*)CFPD_FormField_V1::SetOptionValue);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormFieldSEL, FPDFormFieldDeleteOptionSEL, (void*)CFPD_FormField_V1::DeleteOption);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormFieldSEL, FPDFormFieldClearOptionsSEL, (void*)CFPD_FormField_V1::ClearOptions);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormFieldSEL, FPDFormFieldCheckControlSEL, (void*)CFPD_FormField_V1::CheckControl);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormFieldSEL, FPDFormFieldDefaultCheckControlSEL, (void*)CFPD_FormField_V1::DefaultCheckControl);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormFieldSEL, FPDFormFieldUpdateUnisonStatusSEL, (void*)CFPD_FormField_V1::UpdateUnisonStatus);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormFieldSEL, FPDFormFieldGetTopVisibleIndexSEL, (void*)CFPD_FormField_V1::GetTopVisibleIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormFieldSEL, FPDFormFieldSetTopVisibleIndexSEL, (void*)CFPD_FormField_V1::SetTopVisibleIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormFieldSEL, FPDFormFieldCountSelectedOptionsSEL, (void*)CFPD_FormField_V1::CountSelectedOptions);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormFieldSEL, FPDFormFieldGetSelectedOptionIndexSEL, (void*)CFPD_FormField_V1::GetSelectedOptionIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormFieldSEL, FPDFormFieldIsOptionSelectedSEL, (void*)CFPD_FormField_V1::IsOptionSelected);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormFieldSEL, FPDFormFieldSelectOptionSEL, (void*)CFPD_FormField_V1::SelectOption);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormFieldSEL, FPDFormFieldClearSelectedOptionsSEL, (void*)CFPD_FormField_V1::ClearSelectedOptions);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormFieldSEL, FPDFormFieldGetFontSizeSEL, (void*)CFPD_FormField_V1::GetFontSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormFieldSEL, FPDFormFieldGetFontSEL, (void*)CFPD_FormField_V1::GetFont);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormFieldSEL, FPDFormFieldSetItemDefaultSelection2SEL, (void*)CFPD_FormField_V1::SetItemDefaultSelection2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormFieldSEL, FPDFormFieldGetDefaultSelectedItemArraySEL, (void*)CFPD_FormField_V1::GetDefaultSelectedItemArray);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormFieldSEL, FPDFormFieldIsTextOverflowSEL, (void*)CFPD_FormField_V1::IsTextOverflow);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormFieldSEL, FPDFormFieldGetListBoxValuesSEL, (void*)CFPD_FormField_V1::GetListBoxValues);
	}
};

class CFPD_IconFit_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIconFitSEL, FPDIconFitNewSEL, (void*)CFPD_IconFit_V1::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIconFitSEL, FPDIconFitDestroySEL, (void*)CFPD_IconFit_V1::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIconFitSEL, FPDIconFitGetScaleMethodSEL, (void*)CFPD_IconFit_V1::GetScaleMethod);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIconFitSEL, FPDIconFitSetScaleMethodSEL, (void*)CFPD_IconFit_V1::SetScaleMethod);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIconFitSEL, FPDIconFitIsProportionalScaleSEL, (void*)CFPD_IconFit_V1::IsProportionalScale);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIconFitSEL, FPDIconFitProportionalScaleSEL, (void*)CFPD_IconFit_V1::ProportionalScale);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIconFitSEL, FPDIconFitGetIconPositionSEL, (void*)CFPD_IconFit_V1::GetIconPosition);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIconFitSEL, FPDIconFitSetIconPositionSEL, (void*)CFPD_IconFit_V1::SetIconPosition);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIconFitSEL, FPDIconFitGetFittingBoundsSEL, (void*)CFPD_IconFit_V1::GetFittingBounds);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIconFitSEL, FPDIconFitSetFittingBoundsSEL, (void*)CFPD_IconFit_V1::SetFittingBounds);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIconFitSEL, FPDIconFitGetDictSEL, (void*)CFPD_IconFit_V1::GetDict);
	}
};

class CFPD_FormControl_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormControlSEL, FPDFormControlGetTypeSEL, (void*)CFPD_FormControl_V1::GetType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormControlSEL, FPDFormControlGetInterFormSEL, (void*)CFPD_FormControl_V1::GetInterForm);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormControlSEL, FPDFormControlGetFieldSEL, (void*)CFPD_FormControl_V1::GetField);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormControlSEL, FPDFormControlGetWidgetSEL, (void*)CFPD_FormControl_V1::GetWidget);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormControlSEL, FPDFormControlGetRectSEL, (void*)CFPD_FormControl_V1::GetRect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormControlSEL, FPDFormControlDrawControlSEL, (void*)CFPD_FormControl_V1::DrawControl);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormControlSEL, FPDFormControlGetCheckedAPStateSEL, (void*)CFPD_FormControl_V1::GetCheckedAPState);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormControlSEL, FPDFormControlGetExportValueSEL, (void*)CFPD_FormControl_V1::GetExportValue);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormControlSEL, FPDFormControlSetExportValueSEL, (void*)CFPD_FormControl_V1::SetExportValue);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormControlSEL, FPDFormControlIsCheckedSEL, (void*)CFPD_FormControl_V1::IsChecked);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormControlSEL, FPDFormControlIsDefaultCheckedSEL, (void*)CFPD_FormControl_V1::IsDefaultChecked);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormControlSEL, FPDFormControlGetHighlightingModeSEL, (void*)CFPD_FormControl_V1::GetHighlightingMode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormControlSEL, FPDFormControlSetHighlightingModeSEL, (void*)CFPD_FormControl_V1::SetHighlightingMode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormControlSEL, FPDFormControlHasMKEntrySEL, (void*)CFPD_FormControl_V1::HasMKEntry);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormControlSEL, FPDFormControlRemoveMKEntrySEL, (void*)CFPD_FormControl_V1::RemoveMKEntry);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormControlSEL, FPDFormControlGetRotationSEL, (void*)CFPD_FormControl_V1::GetRotation);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormControlSEL, FPDFormControlSetRotationSEL, (void*)CFPD_FormControl_V1::SetRotation);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormControlSEL, FPDFormControlGetBorderColorSEL, (void*)CFPD_FormControl_V1::GetBorderColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormControlSEL, FPDFormControlGetOriginalBorderColorSEL, (void*)CFPD_FormControl_V1::GetOriginalBorderColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormControlSEL, FPDFormControlGetOriginalBorderColor2SEL, (void*)CFPD_FormControl_V1::GetOriginalBorderColor2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormControlSEL, FPDFormControlSetBorderColorSEL, (void*)CFPD_FormControl_V1::SetBorderColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormControlSEL, FPDFormControlGetBackgroundColorSEL, (void*)CFPD_FormControl_V1::GetBackgroundColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormControlSEL, FPDFormControlGetOriginalBackgroundColorSEL, (void*)CFPD_FormControl_V1::GetOriginalBackgroundColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormControlSEL, FPDFormControlGetOriginalBackgroundColor2SEL, (void*)CFPD_FormControl_V1::GetOriginalBackgroundColor2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormControlSEL, FPDFormControlSetBackgroundColorSEL, (void*)CFPD_FormControl_V1::SetBackgroundColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormControlSEL, FPDFormControlGetNormalCaptionSEL, (void*)CFPD_FormControl_V1::GetNormalCaption);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormControlSEL, FPDFormControlSetNormalCaptionSEL, (void*)CFPD_FormControl_V1::SetNormalCaption);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormControlSEL, FPDFormControlSetNormalCaptionWSEL, (void*)CFPD_FormControl_V1::SetNormalCaptionW);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormControlSEL, FPDFormControlGetRolloverCaptionSEL, (void*)CFPD_FormControl_V1::GetRolloverCaption);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormControlSEL, FPDFormControlSetRolloverCaptionSEL, (void*)CFPD_FormControl_V1::SetRolloverCaption);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormControlSEL, FPDFormControlSetRolloverCaptionWSEL, (void*)CFPD_FormControl_V1::SetRolloverCaptionW);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormControlSEL, FPDFormControlGetDownCaptionSEL, (void*)CFPD_FormControl_V1::GetDownCaption);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormControlSEL, FPDFormControlSetDownCaptionSEL, (void*)CFPD_FormControl_V1::SetDownCaption);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormControlSEL, FPDFormControlSetDownCaptionWSEL, (void*)CFPD_FormControl_V1::SetDownCaptionW);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormControlSEL, FPDFormControlGetNormalIconSEL, (void*)CFPD_FormControl_V1::GetNormalIcon);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormControlSEL, FPDFormControlSetNormalIconSEL, (void*)CFPD_FormControl_V1::SetNormalIcon);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormControlSEL, FPDFormControlGetRolloverIconSEL, (void*)CFPD_FormControl_V1::GetRolloverIcon);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormControlSEL, FPDFormControlSetRolloverIconSEL, (void*)CFPD_FormControl_V1::SetRolloverIcon);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormControlSEL, FPDFormControlGetDownIconSEL, (void*)CFPD_FormControl_V1::GetDownIcon);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormControlSEL, FPDFormControlSetDownIconSEL, (void*)CFPD_FormControl_V1::SetDownIcon);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormControlSEL, FPDFormControlGetIconFitSEL, (void*)CFPD_FormControl_V1::GetIconFit);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormControlSEL, FPDFormControlSetIconFitSEL, (void*)CFPD_FormControl_V1::SetIconFit);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormControlSEL, FPDFormControlGetTextPositionSEL, (void*)CFPD_FormControl_V1::GetTextPosition);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormControlSEL, FPDFormControlSetTextPositionSEL, (void*)CFPD_FormControl_V1::SetTextPosition);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormControlSEL, FPDFormControlGetActionSEL, (void*)CFPD_FormControl_V1::GetAction);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormControlSEL, FPDFormControlSetActionSEL, (void*)CFPD_FormControl_V1::SetAction);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormControlSEL, FPDFormControlGetAdditionalActionSEL, (void*)CFPD_FormControl_V1::GetAdditionalAction);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormControlSEL, FPDFormControlSetAdditionalActionSEL, (void*)CFPD_FormControl_V1::SetAdditionalAction);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormControlSEL, FPDFormControlGetDefaultAppearanceSEL, (void*)CFPD_FormControl_V1::GetDefaultAppearance);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormControlSEL, FPDFormControlSetDefaultAppearanceSEL, (void*)CFPD_FormControl_V1::SetDefaultAppearance);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormControlSEL, FPDFormControlGetDefaultControlFontSEL, (void*)CFPD_FormControl_V1::GetDefaultControlFont);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormControlSEL, FPDFormControlSetDefaultControlFontSEL, (void*)CFPD_FormControl_V1::SetDefaultControlFont);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormControlSEL, FPDFormControlGetControlAlignmentSEL, (void*)CFPD_FormControl_V1::GetControlAlignment);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormControlSEL, FPDFormControlSetControlAlignmentSEL, (void*)CFPD_FormControl_V1::SetControlAlignment);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormControlSEL, FPDFormControlDrawControl2SEL, (void*)CFPD_FormControl_V1::DrawControl2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormControlSEL, FPDFormControlGetAActionSEL, (void*)CFPD_FormControl_V1::GetAAction);
	}
};

class CFPD_FDFDoc_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFDFDocSEL, FPDFDFDocNewSEL, (void*)CFPD_FDFDoc_V1::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFDFDocSEL, FPDFDFDocOpenFromFileSEL, (void*)CFPD_FDFDoc_V1::OpenFromFile);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFDFDocSEL, FPDFDFDocPareMemorySEL, (void*)CFPD_FDFDoc_V1::PareMemory);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFDFDocSEL, FPDFDFDocDestroySEL, (void*)CFPD_FDFDoc_V1::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFDFDocSEL, FPDFDFDocWriteFileSEL, (void*)CFPD_FDFDoc_V1::WriteFile);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFDFDocSEL, FPDFDFDocGetRootSEL, (void*)CFPD_FDFDoc_V1::GetRoot);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFDFDocSEL, FPDFDFDocGetWin32PathSEL, (void*)CFPD_FDFDoc_V1::GetWin32Path);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFDFDocSEL, FPDFDFDocGetIndirectObjectSEL, (void*)CFPD_FDFDoc_V1::GetIndirectObject);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFDFDocSEL, FPDFDFDocGetIndirectTypeSEL, (void*)CFPD_FDFDoc_V1::GetIndirectType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFDFDocSEL, FPDFDFDocAddIndirectObjectSEL, (void*)CFPD_FDFDoc_V1::AddIndirectObject);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFDFDocSEL, FPDFDFDocReleaseIndirectObjectSEL, (void*)CFPD_FDFDoc_V1::ReleaseIndirectObject);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFDFDocSEL, FPDFDFDocDeleteIndirectObjectSEL, (void*)CFPD_FDFDoc_V1::DeleteIndirectObject);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFDFDocSEL, FPDFDFDocImportIndirectObjectSEL, (void*)CFPD_FDFDoc_V1::ImportIndirectObject);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFDFDocSEL, FPDFDFDocImportExternalObjectSEL, (void*)CFPD_FDFDoc_V1::ImportExternalObject);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFDFDocSEL, FPDFDFDocInsertIndirectObjectSEL, (void*)CFPD_FDFDoc_V1::InsertIndirectObject);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFDFDocSEL, FPDFDFDocGetLastobjNumSEL, (void*)CFPD_FDFDoc_V1::GetLastobjNum);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFDFDocSEL, FPDFDFDocReloadFileStreamsSEL, (void*)CFPD_FDFDoc_V1::ReloadFileStreams);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFDFDocSEL, FPDFDFDocGetStartPositionSEL, (void*)CFPD_FDFDoc_V1::GetStartPosition);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFDFDocSEL, FPDFDFDocGetNextAssocSEL, (void*)CFPD_FDFDoc_V1::GetNextAssoc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFDFDocSEL, FPDFDFDocIsModifiedSEL, (void*)CFPD_FDFDoc_V1::IsModified);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFDFDocSEL, FPDFDFDocClearModifiedSEL, (void*)CFPD_FDFDoc_V1::ClearModified);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFDFDocSEL, FPDFDFDocWriteBufSEL, (void*)CFPD_FDFDoc_V1::WriteBuf);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFDFDocSEL, FPDFDFDocGetAnnotCountSEL, (void*)CFPD_FDFDoc_V1::GetAnnotCount);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFDFDocSEL, FPDFDFDocGetAnnotDictSEL, (void*)CFPD_FDFDoc_V1::GetAnnotDict);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFDFDocSEL, FPDFDFDocGetAnnotPageIndexSEL, (void*)CFPD_FDFDoc_V1::GetAnnotPageIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFDFDocSEL, FPDFDFDocExportAnnotToPDFPageSEL, (void*)CFPD_FDFDoc_V1::ExportAnnotToPDFPage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFDFDocSEL, FPDFDFDocImportPDFAnnotSEL, (void*)CFPD_FDFDoc_V1::ImportPDFAnnot);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFDFDocSEL, FPDFDFDocSetPDFPathSEL, (void*)CFPD_FDFDoc_V1::SetPDFPath);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFDFDocSEL, FPDFDFDocGetFieldAttrSEL, (void*)CFPD_FDFDoc_V1::GetFieldAttr);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFDFDocSEL, FPDFDFDocGetFieldAttrTBSEL, (void*)CFPD_FDFDoc_V1::GetFieldAttrTB);
	}
};

// fpd_docImpl.h end

// In file fpd_editImpl.h
// fpd_editImpl.h end

// In file fpd_epubImpl.h
// fpd_epubImpl.h end

// In file fpd_fontmgrImpl.h
// fpd_fontmgrImpl.h end

// In file fpd_fxxfaImpl.h
// fpd_fxxfaImpl.h end

// In file fpd_jsImpl.h
// fpd_jsImpl.h end

// In file fpd_lrImpl.h
// fpd_lrImpl.h end

// In file fpd_mathImpl.h
// fpd_mathImpl.h end

// In file fpd_objsImpl.h
class CFPD_Object_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDObjectSEL, FPDObjectGetTypeSEL, (void*)CFPD_Object_V1::GetType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDObjectSEL, FPDObjectGetobjNumSEL, (void*)CFPD_Object_V1::GetobjNum);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDObjectSEL, FPDObjectIsIdenticalSEL, (void*)CFPD_Object_V1::IsIdentical);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDObjectSEL, FPDObjectCloneSEL, (void*)CFPD_Object_V1::Clone);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDObjectSEL, FPDObjectCloneRefToDocSEL, (void*)CFPD_Object_V1::CloneRefToDoc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDObjectSEL, FPDObjectCloneRefToFDFDocSEL, (void*)CFPD_Object_V1::CloneRefToFDFDoc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDObjectSEL, FPDObjectGetDirectSEL, (void*)CFPD_Object_V1::GetDirect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDObjectSEL, FPDObjectDestroySEL, (void*)CFPD_Object_V1::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDObjectSEL, FPDObjectGetStringSEL, (void*)CFPD_Object_V1::GetString);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDObjectSEL, FPDObjectGetUnicodeTextSEL, (void*)CFPD_Object_V1::GetUnicodeText);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDObjectSEL, FPDObjectGetNumberSEL, (void*)CFPD_Object_V1::GetNumber);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDObjectSEL, FPDObjectGetIntegerSEL, (void*)CFPD_Object_V1::GetInteger);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDObjectSEL, FPDObjectGetDictSEL, (void*)CFPD_Object_V1::GetDict);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDObjectSEL, FPDObjectGetArraySEL, (void*)CFPD_Object_V1::GetArray);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDObjectSEL, FPDObjectSetStringSEL, (void*)CFPD_Object_V1::SetString);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDObjectSEL, FPDObjectSetUnicodeTextSEL, (void*)CFPD_Object_V1::SetUnicodeText);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDObjectSEL, FPDObjectGetDirectTypeSEL, (void*)CFPD_Object_V1::GetDirectType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDObjectSEL, FPDObjectIsModifiedSEL, (void*)CFPD_Object_V1::IsModified);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDObjectSEL, FPDObjectSetModifiedSEL, (void*)CFPD_Object_V1::SetModified);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDObjectSEL, FPDObjectGetContainerSEL, (void*)CFPD_Object_V1::GetContainer);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDObjectSEL, FPDObjectSetContainerSEL, (void*)CFPD_Object_V1::SetContainer);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDObjectSEL, FPDObjectParseStringSEL, (void*)CFPD_Object_V1::ParseString);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDObjectSEL, FPDObjectGetConstStringSEL, (void*)CFPD_Object_V1::GetConstString);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDObjectSEL, FPDObjectIsNewCreatedSEL, (void*)CFPD_Object_V1::IsNewCreated);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDObjectSEL, FPDObjectGetUnicodeText2SEL, (void*)CFPD_Object_V1::GetUnicodeText2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDObjectSEL, FPDObjectDeepCloneSEL, (void*)CFPD_Object_V1::DeepClone);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDObjectSEL, FPDObjectCreateClonePredicateHandlerSEL, (void*)CFPD_Object_V1::CreateClonePredicateHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDObjectSEL, FPDObjectDestroyClonePredicateHandlerSEL, (void*)CFPD_Object_V1::DestroyClonePredicateHandler);
	}
};

class CFPD_Boolean_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDBooleanSEL, FPDBooleanNewSEL, (void*)CFPD_Boolean_V1::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDBooleanSEL, FPDBooleanIdenticalSEL, (void*)CFPD_Boolean_V1::Identical);
	}
};

class CFPD_Number_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDNumberSEL, FPDNumberNewByIntSEL, (void*)CFPD_Number_V1::NewByInt);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDNumberSEL, FPDNumberNewByFloatSEL, (void*)CFPD_Number_V1::NewByFloat);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDNumberSEL, FPDNumberNewByStrSEL, (void*)CFPD_Number_V1::NewByStr);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDNumberSEL, FPDNumberNewFromDataSEL, (void*)CFPD_Number_V1::NewFromData);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDNumberSEL, FPDNumberIdenticalSEL, (void*)CFPD_Number_V1::Identical);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDNumberSEL, FPDNumberGetStringSEL, (void*)CFPD_Number_V1::GetString);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDNumberSEL, FPDNumberSetStringSEL, (void*)CFPD_Number_V1::SetString);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDNumberSEL, FPDNumberIsIntegerSEL, (void*)CFPD_Number_V1::IsInteger);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDNumberSEL, FPDNumberGetIntegerSEL, (void*)CFPD_Number_V1::GetInteger);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDNumberSEL, FPDNumberGetNumberSEL, (void*)CFPD_Number_V1::GetNumber);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDNumberSEL, FPDNumberSetNumberSEL, (void*)CFPD_Number_V1::SetNumber);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDNumberSEL, FPDNumberGetFloatSEL, (void*)CFPD_Number_V1::GetFloat);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDNumberSEL, FPDNumberNewByFloat2SEL, (void*)CFPD_Number_V1::NewByFloat2);
	}
};

class CFPD_String_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDStringSEL, FPDStringNewSEL, (void*)CFPD_String_V1::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDStringSEL, FPDStringNewWSEL, (void*)CFPD_String_V1::NewW);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDStringSEL, FPDStringGetStringSEL, (void*)CFPD_String_V1::GetString);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDStringSEL, FPDStringIdenticalSEL, (void*)CFPD_String_V1::Identical);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDStringSEL, FPDStringSetHexSEL, (void*)CFPD_String_V1::SetHex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDStringSEL, FPDStringIsHexSEL, (void*)CFPD_String_V1::IsHex);
	}
};

class CFPD_Name_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDNameSEL, FPDNameNewSEL, (void*)CFPD_Name_V1::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDNameSEL, FPDNameGetStringSEL, (void*)CFPD_Name_V1::GetString);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDNameSEL, FPDNameIdenticalSEL, (void*)CFPD_Name_V1::Identical);
	}
};

class CFPD_Array_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDArraySEL, FPDArrayNewSEL, (void*)CFPD_Array_V1::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDArraySEL, FPDArrayGetCountSEL, (void*)CFPD_Array_V1::GetCount);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDArraySEL, FPDArrayGetElementSEL, (void*)CFPD_Array_V1::GetElement);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDArraySEL, FPDArrayGetElementValueSEL, (void*)CFPD_Array_V1::GetElementValue);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDArraySEL, FPDArrayGetMatrixSEL, (void*)CFPD_Array_V1::GetMatrix);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDArraySEL, FPDArrayGetRectSEL, (void*)CFPD_Array_V1::GetRect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDArraySEL, FPDArrayGetStringSEL, (void*)CFPD_Array_V1::GetString);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDArraySEL, FPDArrayGetIntegerSEL, (void*)CFPD_Array_V1::GetInteger);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDArraySEL, FPDArrayGetNumberSEL, (void*)CFPD_Array_V1::GetNumber);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDArraySEL, FPDArrayGetDictSEL, (void*)CFPD_Array_V1::GetDict);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDArraySEL, FPDArrayGetStreamSEL, (void*)CFPD_Array_V1::GetStream);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDArraySEL, FPDArrayGetArraySEL, (void*)CFPD_Array_V1::GetArray);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDArraySEL, FPDArrayGetFloatSEL, (void*)CFPD_Array_V1::GetFloat);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDArraySEL, FPDArraySetAtSEL, (void*)CFPD_Array_V1::SetAt);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDArraySEL, FPDArrayInsertAtSEL, (void*)CFPD_Array_V1::InsertAt);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDArraySEL, FPDArrayRemoveAtSEL, (void*)CFPD_Array_V1::RemoveAt);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDArraySEL, FPDArrayAddSEL, (void*)CFPD_Array_V1::Add);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDArraySEL, FPDArrayAddNumberSEL, (void*)CFPD_Array_V1::AddNumber);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDArraySEL, FPDArrayAddIntegerSEL, (void*)CFPD_Array_V1::AddInteger);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDArraySEL, FPDArrayAddStringSEL, (void*)CFPD_Array_V1::AddString);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDArraySEL, FPDArrayAddNameSEL, (void*)CFPD_Array_V1::AddName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDArraySEL, FPDArrayAddReferenceToDocSEL, (void*)CFPD_Array_V1::AddReferenceToDoc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDArraySEL, FPDArrayAddReferenceToFDFDocSEL, (void*)CFPD_Array_V1::AddReferenceToFDFDoc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDArraySEL, FPDArrayAddReference2ToDocSEL, (void*)CFPD_Array_V1::AddReference2ToDoc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDArraySEL, FPDArrayAddReference2ToFDFDocSEL, (void*)CFPD_Array_V1::AddReference2ToFDFDoc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDArraySEL, FPDArrayIsIdenticalSEL, (void*)CFPD_Array_V1::IsIdentical);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDArraySEL, FPDArrayRemoveAt2SEL, (void*)CFPD_Array_V1::RemoveAt2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDArraySEL, FPDArrayAddNewSEL, (void*)CFPD_Array_V1::AddNew);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDArraySEL, FPDArrayReleaseSEL, (void*)CFPD_Array_V1::Release);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDArraySEL, FPDArrayAdd2SEL, (void*)CFPD_Array_V1::Add2);
	}
};

class CFPD_Dictionary_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDictionarySEL, FPDDictionaryNewSEL, (void*)CFPD_Dictionary_V1::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDictionarySEL, FPDDictionaryGetElementSEL, (void*)CFPD_Dictionary_V1::GetElement);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDictionarySEL, FPDDictionaryGetElementValueSEL, (void*)CFPD_Dictionary_V1::GetElementValue);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDictionarySEL, FPDDictionaryGetStringSEL, (void*)CFPD_Dictionary_V1::GetString);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDictionarySEL, FPDDictionaryGetUnicodeTextSEL, (void*)CFPD_Dictionary_V1::GetUnicodeText);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDictionarySEL, FPDDictionaryGetIntegerSEL, (void*)CFPD_Dictionary_V1::GetInteger);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDictionarySEL, FPDDictionaryGetInteger2SEL, (void*)CFPD_Dictionary_V1::GetInteger2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDictionarySEL, FPDDictionaryGetBooleanSEL, (void*)CFPD_Dictionary_V1::GetBoolean);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDictionarySEL, FPDDictionaryGetNumberSEL, (void*)CFPD_Dictionary_V1::GetNumber);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDictionarySEL, FPDDictionaryGetDictSEL, (void*)CFPD_Dictionary_V1::GetDict);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDictionarySEL, FPDDictionaryGetStreamSEL, (void*)CFPD_Dictionary_V1::GetStream);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDictionarySEL, FPDDictionaryGetArraySEL, (void*)CFPD_Dictionary_V1::GetArray);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDictionarySEL, FPDDictionaryGetRectSEL, (void*)CFPD_Dictionary_V1::GetRect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDictionarySEL, FPDDictionaryGetMatrixSEL, (void*)CFPD_Dictionary_V1::GetMatrix);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDictionarySEL, FPDDictionaryGetFloatSEL, (void*)CFPD_Dictionary_V1::GetFloat);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDictionarySEL, FPDDictionaryKeyExistSEL, (void*)CFPD_Dictionary_V1::KeyExist);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDictionarySEL, FPDDictionaryGetStartPositionSEL, (void*)CFPD_Dictionary_V1::GetStartPosition);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDictionarySEL, FPDDictionaryGetNextElementSEL, (void*)CFPD_Dictionary_V1::GetNextElement);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDictionarySEL, FPDDictionarySetAtSEL, (void*)CFPD_Dictionary_V1::SetAt);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDictionarySEL, FPDDictionarySetAtNameSEL, (void*)CFPD_Dictionary_V1::SetAtName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDictionarySEL, FPDDictionarySetAtStringSEL, (void*)CFPD_Dictionary_V1::SetAtString);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDictionarySEL, FPDDictionarySetAtIntegerSEL, (void*)CFPD_Dictionary_V1::SetAtInteger);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDictionarySEL, FPDDictionarySetAtNumberSEL, (void*)CFPD_Dictionary_V1::SetAtNumber);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDictionarySEL, FPDDictionarySetAtReferenceToDocSEL, (void*)CFPD_Dictionary_V1::SetAtReferenceToDoc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDictionarySEL, FPDDictionarySetAtReferenceToFDFDocSEL, (void*)CFPD_Dictionary_V1::SetAtReferenceToFDFDoc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDictionarySEL, FPDDictionarySetAtReference2ToDocSEL, (void*)CFPD_Dictionary_V1::SetAtReference2ToDoc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDictionarySEL, FPDDictionarySetAtReference2ToFDFDocSEL, (void*)CFPD_Dictionary_V1::SetAtReference2ToFDFDoc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDictionarySEL, FPDDictionarySetAtRectSEL, (void*)CFPD_Dictionary_V1::SetAtRect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDictionarySEL, FPDDictionarySetAtMatrixSEL, (void*)CFPD_Dictionary_V1::SetAtMatrix);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDictionarySEL, FPDDictionarySetAtBooleanSEL, (void*)CFPD_Dictionary_V1::SetAtBoolean);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDictionarySEL, FPDDictionaryRemoveAtSEL, (void*)CFPD_Dictionary_V1::RemoveAt);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDictionarySEL, FPDDictionaryReplaceKeySEL, (void*)CFPD_Dictionary_V1::ReplaceKey);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDictionarySEL, FPDDictionaryIdenticalSEL, (void*)CFPD_Dictionary_V1::Identical);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDictionarySEL, FPDDictionaryGetCountSEL, (void*)CFPD_Dictionary_V1::GetCount);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDictionarySEL, FPDDictionaryAddValueSEL, (void*)CFPD_Dictionary_V1::AddValue);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDictionarySEL, FPDDictionaryGetBoolean2SEL, (void*)CFPD_Dictionary_V1::GetBoolean2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDictionarySEL, FPDDictionarySetAtName2SEL, (void*)CFPD_Dictionary_V1::SetAtName2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDictionarySEL, FPDDictionarySetNewAtSEL, (void*)CFPD_Dictionary_V1::SetNewAt);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDictionarySEL, FPDDictionaryAddReferenceSEL, (void*)CFPD_Dictionary_V1::AddReference);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDictionarySEL, FPDDictionaryGetString2SEL, (void*)CFPD_Dictionary_V1::GetString2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDictionarySEL, FPDDictionaryReleaseSEL, (void*)CFPD_Dictionary_V1::Release);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDictionarySEL, FPDDictionarySetAtString2SEL, (void*)CFPD_Dictionary_V1::SetAtString2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDictionarySEL, FPDDictionaryMoveDataSEL, (void*)CFPD_Dictionary_V1::MoveData);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDictionarySEL, FPDDictionarySetAt2SEL, (void*)CFPD_Dictionary_V1::SetAt2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDictionarySEL, FPDDictionaryRemoveAt2SEL, (void*)CFPD_Dictionary_V1::RemoveAt2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDictionarySEL, FPDDictionaryAddReference2SEL, (void*)CFPD_Dictionary_V1::AddReference2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDictionarySEL, FPDDictionaryAddReference3SEL, (void*)CFPD_Dictionary_V1::AddReference3);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDictionarySEL, FPDDictionaryAddReference4SEL, (void*)CFPD_Dictionary_V1::AddReference4);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDictionarySEL, FPDDictionaryGetNameSEL, (void*)CFPD_Dictionary_V1::GetName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDictionarySEL, FPDDictionaryGetInteger64SEL, (void*)CFPD_Dictionary_V1::GetInteger64);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDictionarySEL, FPDDictionaryGetInteger64ByDefaultSEL, (void*)CFPD_Dictionary_V1::GetInteger64ByDefault);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDictionarySEL, FPDDictionarySetAt3SEL, (void*)CFPD_Dictionary_V1::SetAt3);
	}
};

class CFPD_Stream_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDStreamSEL, FPDStreamNewSEL, (void*)CFPD_Stream_V1::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDStreamSEL, FPDStreamInitStreamSEL, (void*)CFPD_Stream_V1::InitStream);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDStreamSEL, FPDStreamGetDictSEL, (void*)CFPD_Stream_V1::GetDict);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDStreamSEL, FPDStreamSetDataSEL, (void*)CFPD_Stream_V1::SetData);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDStreamSEL, FPDStreamIdenticalSEL, (void*)CFPD_Stream_V1::Identical);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDStreamSEL, FPDStreamGetStreamFilterSEL, (void*)CFPD_Stream_V1::GetStreamFilter);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDStreamSEL, FPDStreamGetRawSizeSEL, (void*)CFPD_Stream_V1::GetRawSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDStreamSEL, FPDStreamReadRawDataSEL, (void*)CFPD_Stream_V1::ReadRawData);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDStreamSEL, FPDStreamIsMemoryBasedSEL, (void*)CFPD_Stream_V1::IsMemoryBased);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDStreamSEL, FPDStreamCloneSEL, (void*)CFPD_Stream_V1::Clone);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDStreamSEL, FPDStreamCreateSEL, (void*)CFPD_Stream_V1::Create);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDStreamSEL, FPDStreamNew2SEL, (void*)CFPD_Stream_V1::New2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDStreamSEL, FPDStreamSetStreamFileSEL, (void*)CFPD_Stream_V1::SetStreamFile);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDStreamSEL, FPDStreamDecryptStreamSEL, (void*)CFPD_Stream_V1::DecryptStream);
	}
};

class CFPD_StreamAcc_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDStreamAccSEL, FPDStreamAccNewSEL, (void*)CFPD_StreamAcc_V1::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDStreamAccSEL, FPDStreamAccDestroySEL, (void*)CFPD_StreamAcc_V1::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDStreamAccSEL, FPDStreamAccLoadAllDataSEL, (void*)CFPD_StreamAcc_V1::LoadAllData);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDStreamAccSEL, FPDStreamAccGetStreamSEL, (void*)CFPD_StreamAcc_V1::GetStream);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDStreamAccSEL, FPDStreamAccGetDictSEL, (void*)CFPD_StreamAcc_V1::GetDict);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDStreamAccSEL, FPDStreamAccGetDataSEL, (void*)CFPD_StreamAcc_V1::GetData);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDStreamAccSEL, FPDStreamAccGetSizeSEL, (void*)CFPD_StreamAcc_V1::GetSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDStreamAccSEL, FPDStreamAccDetachDataSEL, (void*)CFPD_StreamAcc_V1::DetachData);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDStreamAccSEL, FPDStreamAccGetImageDecoderSEL, (void*)CFPD_StreamAcc_V1::GetImageDecoder);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDStreamAccSEL, FPDStreamAccGetImageParamSEL, (void*)CFPD_StreamAcc_V1::GetImageParam);
	}
};

class CFPD_StreamFilter_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDStreamFilterSEL, FPDStreamFilterDestroySEL, (void*)CFPD_StreamFilter_V1::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDStreamFilterSEL, FPDStreamFilterReadBlockSEL, (void*)CFPD_StreamFilter_V1::ReadBlock);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDStreamFilterSEL, FPDStreamFilterGetSrcPosSEL, (void*)CFPD_StreamFilter_V1::GetSrcPos);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDStreamFilterSEL, FPDStreamFilterGetStreamSEL, (void*)CFPD_StreamFilter_V1::GetStream);
	}
};

class CFPD_Null_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDNullSEL, FPDNullNewSEL, (void*)CFPD_Null_V1::New);
	}
};

class CFPD_Reference_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDReferenceSEL, FPDReferenceNewSEL, (void*)CFPD_Reference_V1::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDReferenceSEL, FPDReferenceNew2SEL, (void*)CFPD_Reference_V1::New2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDReferenceSEL, FPDReferenceGetRefObjNumSEL, (void*)CFPD_Reference_V1::GetRefObjNum);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDReferenceSEL, FPDReferenceSetRefToDocSEL, (void*)CFPD_Reference_V1::SetRefToDoc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDReferenceSEL, FPDReferenceSetRefToFDFDocSEL, (void*)CFPD_Reference_V1::SetRefToFDFDoc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDReferenceSEL, FPDReferenceIdenticalSEL, (void*)CFPD_Reference_V1::Identical);
	}
};

// fpd_objsImpl.h end

// In file fpd_pageImpl.h
class CFPD_Page_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageSEL, FPDPageNewSEL, (void*)CFPD_Page_V1::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageSEL, FPDPageDestroySEL, (void*)CFPD_Page_V1::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageSEL, FPDPageContinueParseSEL, (void*)CFPD_Page_V1::ContinueParse);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageSEL, FPDPageGetParseStateSEL, (void*)CFPD_Page_V1::GetParseState);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageSEL, FPDPageIsParsedSEL, (void*)CFPD_Page_V1::IsParsed);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageSEL, FPDPageEstimateParseProgressSEL, (void*)CFPD_Page_V1::EstimateParseProgress);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageSEL, FPDPageGetFirstObjectPositionSEL, (void*)CFPD_Page_V1::GetFirstObjectPosition);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageSEL, FPDPageGetLastObjectPositionSEL, (void*)CFPD_Page_V1::GetLastObjectPosition);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageSEL, FPDPageGetNextObjectSEL, (void*)CFPD_Page_V1::GetNextObject);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageSEL, FPDPageGetPrevObjectSEL, (void*)CFPD_Page_V1::GetPrevObject);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageSEL, FPDPageGetObjectAtSEL, (void*)CFPD_Page_V1::GetObjectAt);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageSEL, FPDPageCountObjectsSEL, (void*)CFPD_Page_V1::CountObjects);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageSEL, FPDPageGetObjectIndexSEL, (void*)CFPD_Page_V1::GetObjectIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageSEL, FPDPageGetObjectByIndexSEL, (void*)CFPD_Page_V1::GetObjectByIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageSEL, FPDPageReplaceObjectSEL, (void*)CFPD_Page_V1::ReplaceObject);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageSEL, FPDPageInsertObjectSEL, (void*)CFPD_Page_V1::InsertObject);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageSEL, FPDPageRemoveObjectSEL, (void*)CFPD_Page_V1::RemoveObject);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageSEL, FPDPageMoveObjectSEL, (void*)CFPD_Page_V1::MoveObject);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageSEL, FPDPageDebugOutputSEL, (void*)CFPD_Page_V1::DebugOutput);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageSEL, FPDPageTransformSEL, (void*)CFPD_Page_V1::Transform);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageSEL, FPDPageBackgroundAlphaNeededSEL, (void*)CFPD_Page_V1::BackgroundAlphaNeeded);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageSEL, FPDPageCalcBoundingBoxSEL, (void*)CFPD_Page_V1::CalcBoundingBox);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageSEL, FPDPageGetDictSEL, (void*)CFPD_Page_V1::GetDict);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageSEL, FPDPageGetDocumentSEL, (void*)CFPD_Page_V1::GetDocument);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageSEL, FPDPageRealizeResourceSEL, (void*)CFPD_Page_V1::RealizeResource);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageSEL, FPDPageFindCSNameSEL, (void*)CFPD_Page_V1::FindCSName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageSEL, FPDPageFindFontNameSEL, (void*)CFPD_Page_V1::FindFontName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageSEL, FPDPageLoadSEL, (void*)CFPD_Page_V1::Load);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageSEL, FPDPageStartParseSEL, (void*)CFPD_Page_V1::StartParse);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageSEL, FPDPageParseContentSEL, (void*)CFPD_Page_V1::ParseContent);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageSEL, FPDPageGetDisplayMatrixSEL, (void*)CFPD_Page_V1::GetDisplayMatrix);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageSEL, FPDPageGetPageWidthSEL, (void*)CFPD_Page_V1::GetPageWidth);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageSEL, FPDPageGetPageHeightSEL, (void*)CFPD_Page_V1::GetPageHeight);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageSEL, FPDPageGetPageBBoxSEL, (void*)CFPD_Page_V1::GetPageBBox);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageSEL, FPDPageGetPageMatrixSEL, (void*)CFPD_Page_V1::GetPageMatrix);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageSEL, FPDPageGetPageAttrSEL, (void*)CFPD_Page_V1::GetPageAttr);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageSEL, FPDPageGetRenderCacheSEL, (void*)CFPD_Page_V1::GetRenderCache);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageSEL, FPDPageClearRenderCacheSEL, (void*)CFPD_Page_V1::ClearRenderCache);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageSEL, FPDPageGenerateContentSEL, (void*)CFPD_Page_V1::GenerateContent);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageSEL, FPDPageGetPageTextSEL, (void*)CFPD_Page_V1::GetPageText);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageSEL, FPDPageGetPageText_UnicodeSEL, (void*)CFPD_Page_V1::GetPageText_Unicode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageSEL, FPDPageNewContentGeneratorSEL, (void*)CFPD_Page_V1::NewContentGenerator);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageSEL, FPDPageDestroyContentGeneratorSEL, (void*)CFPD_Page_V1::DestroyContentGenerator);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageSEL, FPDPageStartGenerateContentSEL, (void*)CFPD_Page_V1::StartGenerateContent);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageSEL, FPDPageContinueGenerateContentSEL, (void*)CFPD_Page_V1::ContinueGenerateContent);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageSEL, FPDPageGetResourcesDictionarySEL, (void*)CFPD_Page_V1::GetResourcesDictionary);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageSEL, FPDPageSetResourcesDictionarySEL, (void*)CFPD_Page_V1::SetResourcesDictionary);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageSEL, FPDPageStartGenerateContent2SEL, (void*)CFPD_Page_V1::StartGenerateContent2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageSEL, FPDPageGetPageRotationSEL, (void*)CFPD_Page_V1::GetPageRotation);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageSEL, FPDPageGetPageResourcesSEL, (void*)CFPD_Page_V1::GetPageResources);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageSEL, FPDPageGetPageBleedBoxSEL, (void*)CFPD_Page_V1::GetPageBleedBox);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageSEL, FPDPageNew2SEL, (void*)CFPD_Page_V1::New2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageSEL, FPDPageSetFormStreamSEL, (void*)CFPD_Page_V1::SetFormStream);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageSEL, FPDPageSetFormDictSEL, (void*)CFPD_Page_V1::SetFormDict);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageSEL, FPDPageCastToFPDGraphicsObjectsSEL, (void*)CFPD_Page_V1::CastToFPDGraphicsObjects);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageSEL, FPDPageGenerateContent2SEL, (void*)CFPD_Page_V1::GenerateContent2);
	}
};

class CFPD_ParseOptions_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDParseOptionsSEL, FPDParseOptionsNewSEL, (void*)CFPD_ParseOptions_V1::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDParseOptionsSEL, FPDParseOptionsDestroySEL, (void*)CFPD_ParseOptions_V1::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDParseOptionsSEL, FPDParseOptionsSetTextFlagSEL, (void*)CFPD_ParseOptions_V1::SetTextFlag);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDParseOptionsSEL, FPDParseOptionsSetMarkedContentLoadFlagSEL, (void*)CFPD_ParseOptions_V1::SetMarkedContentLoadFlag);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDParseOptionsSEL, FPDParseOptionsSetFormGenerateFlagSEL, (void*)CFPD_ParseOptions_V1::SetFormGenerateFlag);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDParseOptionsSEL, FPDParseOptionsSetInlineImageDecodeFlagSEL, (void*)CFPD_ParseOptions_V1::SetInlineImageDecodeFlag);
	}
};

class CFPD_Form_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormSEL, FPDFormNewSEL, (void*)CFPD_Form_V1::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormSEL, FPDFormDestroySEL, (void*)CFPD_Form_V1::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormSEL, FPDFormContinueParseSEL, (void*)CFPD_Form_V1::ContinueParse);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormSEL, FPDFormGetParseStateSEL, (void*)CFPD_Form_V1::GetParseState);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormSEL, FPDFormIsParsedSEL, (void*)CFPD_Form_V1::IsParsed);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormSEL, FPDFormEstimateParseProgressSEL, (void*)CFPD_Form_V1::EstimateParseProgress);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormSEL, FPDFormGetFirstObjectPositionSEL, (void*)CFPD_Form_V1::GetFirstObjectPosition);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormSEL, FPDFormGetLastObjectPositionSEL, (void*)CFPD_Form_V1::GetLastObjectPosition);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormSEL, FPDFormGetNextObjectSEL, (void*)CFPD_Form_V1::GetNextObject);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormSEL, FPDFormGetPrevObjectSEL, (void*)CFPD_Form_V1::GetPrevObject);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormSEL, FPDFormGetObjectAtSEL, (void*)CFPD_Form_V1::GetObjectAt);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormSEL, FPDFormCountObjectsSEL, (void*)CFPD_Form_V1::CountObjects);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormSEL, FPDFormGetObjectIndexSEL, (void*)CFPD_Form_V1::GetObjectIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormSEL, FPDFormGetObjectByIndexSEL, (void*)CFPD_Form_V1::GetObjectByIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormSEL, FPDFormReplaceObjectSEL, (void*)CFPD_Form_V1::ReplaceObject);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormSEL, FPDFormInsertObjectSEL, (void*)CFPD_Form_V1::InsertObject);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormSEL, FPDFormRemoveObjectSEL, (void*)CFPD_Form_V1::RemoveObject);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormSEL, FPDFormMoveObjectSEL, (void*)CFPD_Form_V1::MoveObject);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormSEL, FPDFormDebugOutputSEL, (void*)CFPD_Form_V1::DebugOutput);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormSEL, FPDFormTransformSEL, (void*)CFPD_Form_V1::Transform);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormSEL, FPDFormBackgroundAlphaNeededSEL, (void*)CFPD_Form_V1::BackgroundAlphaNeeded);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormSEL, FPDFormCalcBoundingBoxSEL, (void*)CFPD_Form_V1::CalcBoundingBox);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormSEL, FPDFormGetDictSEL, (void*)CFPD_Form_V1::GetDict);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormSEL, FPDFormGetDocumentSEL, (void*)CFPD_Form_V1::GetDocument);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormSEL, FPDFormRealizeResourceSEL, (void*)CFPD_Form_V1::RealizeResource);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormSEL, FPDFormFindCSNameSEL, (void*)CFPD_Form_V1::FindCSName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormSEL, FPDFormFindFontNameSEL, (void*)CFPD_Form_V1::FindFontName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormSEL, FPDFormGetFormStreamSEL, (void*)CFPD_Form_V1::GetFormStream);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormSEL, FPDFormStartParseSEL, (void*)CFPD_Form_V1::StartParse);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormSEL, FPDFormParseContentSEL, (void*)CFPD_Form_V1::ParseContent);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormSEL, FPDFormCloneSEL, (void*)CFPD_Form_V1::Clone);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormSEL, FPDFormGenerateContentSEL, (void*)CFPD_Form_V1::GenerateContent);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormSEL, FPDFormNewContentGeneratorSEL, (void*)CFPD_Form_V1::NewContentGenerator);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormSEL, FPDFormDestroyContentGeneratorSEL, (void*)CFPD_Form_V1::DestroyContentGenerator);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormSEL, FPDFormStartGenerateContentSEL, (void*)CFPD_Form_V1::StartGenerateContent);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormSEL, FPDFormContinueGenerateContentSEL, (void*)CFPD_Form_V1::ContinueGenerateContent);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormSEL, FPDFormGetResourcesDictionarySEL, (void*)CFPD_Form_V1::GetResourcesDictionary);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormSEL, FPDFormSetResourcesDictionarySEL, (void*)CFPD_Form_V1::SetResourcesDictionary);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormSEL, FPDFormSetFormStreamSEL, (void*)CFPD_Form_V1::SetFormStream);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormSEL, FPDFormSetFormDictSEL, (void*)CFPD_Form_V1::SetFormDict);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormSEL, FPDFormCastToFPDGraphicsObjectsSEL, (void*)CFPD_Form_V1::CastToFPDGraphicsObjects);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormSEL, FPDFormStartGenerateContent2SEL, (void*)CFPD_Form_V1::StartGenerateContent2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormSEL, FPDFormGenerateContent2SEL, (void*)CFPD_Form_V1::GenerateContent2);
	}
};

// fpd_pageImpl.h end

// In file fpd_pageobjImpl.h
class CFPD_Path_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPathSEL, FPDPathNewSEL, (void*)CFPD_Path_V1::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPathSEL, FPDPathDestroySEL, (void*)CFPD_Path_V1::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPathSEL, FPDPathGetPointCountSEL, (void*)CFPD_Path_V1::GetPointCount);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPathSEL, FPDPathGetFlagSEL, (void*)CFPD_Path_V1::GetFlag);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPathSEL, FPDPathGetPointXSEL, (void*)CFPD_Path_V1::GetPointX);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPathSEL, FPDPathGetPointYSEL, (void*)CFPD_Path_V1::GetPointY);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPathSEL, FPDPathGetPointSEL, (void*)CFPD_Path_V1::GetPoint);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPathSEL, FPDPathGetBoundingBoxSEL, (void*)CFPD_Path_V1::GetBoundingBox);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPathSEL, FPDPathGetBoundingBox2SEL, (void*)CFPD_Path_V1::GetBoundingBox2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPathSEL, FPDPathTransformSEL, (void*)CFPD_Path_V1::Transform);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPathSEL, FPDPathAppendSEL, (void*)CFPD_Path_V1::Append);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPathSEL, FPDPathAppendRectSEL, (void*)CFPD_Path_V1::AppendRect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPathSEL, FPDPathIsRectSEL, (void*)CFPD_Path_V1::IsRect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPathSEL, FPDPathSetPointCountSEL, (void*)CFPD_Path_V1::SetPointCount);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPathSEL, FPDPathSetPointSEL, (void*)CFPD_Path_V1::SetPoint);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPathSEL, FPDPathGetModifySEL, (void*)CFPD_Path_V1::GetModify);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPathSEL, FPDPathTrimPointsSEL, (void*)CFPD_Path_V1::TrimPoints);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPathSEL, FPDPathTransformPathDataSEL, (void*)CFPD_Path_V1::TransformPathData);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPathSEL, FPDPathCopySEL, (void*)CFPD_Path_V1::Copy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPathSEL, FPDPathAddPointCountSEL, (void*)CFPD_Path_V1::AddPointCount);
	}
};

class CFPD_ClipPath_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDClipPathSEL, FPDClipPathNewSEL, (void*)CFPD_ClipPath_V1::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDClipPathSEL, FPDClipPathDestroySEL, (void*)CFPD_ClipPath_V1::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDClipPathSEL, FPDClipPathAppendPathSEL, (void*)CFPD_ClipPath_V1::AppendPath);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDClipPathSEL, FPDClipPathDeletePathSEL, (void*)CFPD_ClipPath_V1::DeletePath);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDClipPathSEL, FPDClipPathGetPathCountSEL, (void*)CFPD_ClipPath_V1::GetPathCount);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDClipPathSEL, FPDClipPathTransformSEL, (void*)CFPD_ClipPath_V1::Transform);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDClipPathSEL, FPDClipPathGetPathSEL, (void*)CFPD_ClipPath_V1::GetPath);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDClipPathSEL, FPDClipPathGetClipTypeSEL, (void*)CFPD_ClipPath_V1::GetClipType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDClipPathSEL, FPDClipPathGetTextCountSEL, (void*)CFPD_ClipPath_V1::GetTextCount);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDClipPathSEL, FPDClipPathGetClipBoxSEL, (void*)CFPD_ClipPath_V1::GetClipBox);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDClipPathSEL, FPDClipPathGetTextSEL, (void*)CFPD_ClipPath_V1::GetText);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDClipPathSEL, FPDClipPathAppendTextsSEL, (void*)CFPD_ClipPath_V1::AppendTexts);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDClipPathSEL, FPDClipPathSetCountSEL, (void*)CFPD_ClipPath_V1::SetCount);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDClipPathSEL, FPDClipPathIsNullSEL, (void*)CFPD_ClipPath_V1::IsNull);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDClipPathSEL, FPDClipPathGetModifySEL, (void*)CFPD_ClipPath_V1::GetModify);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDClipPathSEL, FPDClipPathGetPathPointerSEL, (void*)CFPD_ClipPath_V1::GetPathPointer);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDClipPathSEL, FPDClipPathCopySEL, (void*)CFPD_ClipPath_V1::Copy);
	}
};

class CFPD_ColorState_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDColorStateSEL, FPDColorStateNewSEL, (void*)CFPD_ColorState_V1::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDColorStateSEL, FPDColorStateDestroySEL, (void*)CFPD_ColorState_V1::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDColorStateSEL, FPDColorStateGetFillColorSEL, (void*)CFPD_ColorState_V1::GetFillColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDColorStateSEL, FPDColorStateGetStrokeColorSEL, (void*)CFPD_ColorState_V1::GetStrokeColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDColorStateSEL, FPDColorStateSetFillColorSEL, (void*)CFPD_ColorState_V1::SetFillColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDColorStateSEL, FPDColorStateSetStrokeColorSEL, (void*)CFPD_ColorState_V1::SetStrokeColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDColorStateSEL, FPDColorStateSetFillPatternColorSEL, (void*)CFPD_ColorState_V1::SetFillPatternColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDColorStateSEL, FPDColorStateSetStrokePatternColorSEL, (void*)CFPD_ColorState_V1::SetStrokePatternColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDColorStateSEL, FPDColorStateIsNullSEL, (void*)CFPD_ColorState_V1::IsNull);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDColorStateSEL, FPDColorStateGetModifySEL, (void*)CFPD_ColorState_V1::GetModify);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDColorStateSEL, FPDColorStateNotUseFillColorSEL, (void*)CFPD_ColorState_V1::NotUseFillColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDColorStateSEL, FPDColorStateCopySEL, (void*)CFPD_ColorState_V1::Copy);
	}
};

class CFPD_TextState_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextStateSEL, FPDTextStateNewSEL, (void*)CFPD_TextState_V1::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextStateSEL, FPDTextStateDestroySEL, (void*)CFPD_TextState_V1::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextStateSEL, FPDTextStateGetFontSEL, (void*)CFPD_TextState_V1::GetFont);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextStateSEL, FPDTextStateSetFontSEL, (void*)CFPD_TextState_V1::SetFont);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextStateSEL, FPDTextStateGetFontSizeSEL, (void*)CFPD_TextState_V1::GetFontSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextStateSEL, FPDTextStateGetMatrixSEL, (void*)CFPD_TextState_V1::GetMatrix);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextStateSEL, FPDTextStateGetFontSizeVSEL, (void*)CFPD_TextState_V1::GetFontSizeV);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextStateSEL, FPDTextStateGetFontSizeHSEL, (void*)CFPD_TextState_V1::GetFontSizeH);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextStateSEL, FPDTextStateGetBaselineAngleSEL, (void*)CFPD_TextState_V1::GetBaselineAngle);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextStateSEL, FPDTextStateGetShearAngleSEL, (void*)CFPD_TextState_V1::GetShearAngle);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextStateSEL, FPDTextStateSetFontSizeSEL, (void*)CFPD_TextState_V1::SetFontSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextStateSEL, FPDTextStateSetCharSpaceSEL, (void*)CFPD_TextState_V1::SetCharSpace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextStateSEL, FPDTextStateSetWordSpaceSEL, (void*)CFPD_TextState_V1::SetWordSpace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextStateSEL, FPDTextStateSetMatrixSEL, (void*)CFPD_TextState_V1::SetMatrix);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextStateSEL, FPDTextStateSetTextModeSEL, (void*)CFPD_TextState_V1::SetTextMode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextStateSEL, FPDTextStateSetTextCTMSEL, (void*)CFPD_TextState_V1::SetTextCTM);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextStateSEL, FPDTextStateGetTextModeSEL, (void*)CFPD_TextState_V1::GetTextMode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextStateSEL, FPDTextStateGetTextCTMSEL, (void*)CFPD_TextState_V1::GetTextCTM);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextStateSEL, FPDTextStateGetCharSpaceSEL, (void*)CFPD_TextState_V1::GetCharSpace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextStateSEL, FPDTextStateGetWordSpaceSEL, (void*)CFPD_TextState_V1::GetWordSpace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextStateSEL, FPDTextStateIsNullSEL, (void*)CFPD_TextState_V1::IsNull);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextStateSEL, FPDTextStateGetModifySEL, (void*)CFPD_TextState_V1::GetModify);
	}
};

class CFPD_GeneralState_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDGeneralStateSEL, FPDGeneralStateNewSEL, (void*)CFPD_GeneralState_V1::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDGeneralStateSEL, FPDGeneralStateDestroySEL, (void*)CFPD_GeneralState_V1::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDGeneralStateSEL, FPDGeneralStateSetRenderIntentSEL, (void*)CFPD_GeneralState_V1::SetRenderIntent);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDGeneralStateSEL, FPDGeneralStateGetBlendTypeSEL, (void*)CFPD_GeneralState_V1::GetBlendType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDGeneralStateSEL, FPDGeneralStateGetAlphaSEL, (void*)CFPD_GeneralState_V1::GetAlpha);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDGeneralStateSEL, FPDGeneralStateSetBlendModeSEL, (void*)CFPD_GeneralState_V1::SetBlendMode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDGeneralStateSEL, FPDGeneralStateSetBlendTypeSEL, (void*)CFPD_GeneralState_V1::SetBlendType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDGeneralStateSEL, FPDGeneralStateSetSoftMaskSEL, (void*)CFPD_GeneralState_V1::SetSoftMask);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDGeneralStateSEL, FPDGeneralStateSetSoftMaskMatrixSEL, (void*)CFPD_GeneralState_V1::SetSoftMaskMatrix);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDGeneralStateSEL, FPDGeneralStateSetStrokeAlphaSEL, (void*)CFPD_GeneralState_V1::SetStrokeAlpha);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDGeneralStateSEL, FPDGeneralStateSetFillAlphaSEL, (void*)CFPD_GeneralState_V1::SetFillAlpha);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDGeneralStateSEL, FPDGeneralStateIsNullSEL, (void*)CFPD_GeneralState_V1::IsNull);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDGeneralStateSEL, FPDGeneralStateGetModifySEL, (void*)CFPD_GeneralState_V1::GetModify);
	}
};

class CFPD_GraphState_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDGraphStateSEL, FPDGraphStateNewSEL, (void*)CFPD_GraphState_V1::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDGraphStateSEL, FPDGraphStateDestroySEL, (void*)CFPD_GraphState_V1::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDGraphStateSEL, FPDGraphStateSetDashCountSEL, (void*)CFPD_GraphState_V1::SetDashCount);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDGraphStateSEL, FPDGraphStateGetDashCountSEL, (void*)CFPD_GraphState_V1::GetDashCount);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDGraphStateSEL, FPDGraphStateGetDashArraySEL, (void*)CFPD_GraphState_V1::GetDashArray);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDGraphStateSEL, FPDGraphStateGetDashPhaseSEL, (void*)CFPD_GraphState_V1::GetDashPhase);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDGraphStateSEL, FPDGraphStateSetDashPhaseSEL, (void*)CFPD_GraphState_V1::SetDashPhase);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDGraphStateSEL, FPDGraphStateGetLineCapSEL, (void*)CFPD_GraphState_V1::GetLineCap);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDGraphStateSEL, FPDGraphStateSetLineCapSEL, (void*)CFPD_GraphState_V1::SetLineCap);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDGraphStateSEL, FPDGraphStateGetLineJoinSEL, (void*)CFPD_GraphState_V1::GetLineJoin);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDGraphStateSEL, FPDGraphStateSetLineJoinSEL, (void*)CFPD_GraphState_V1::SetLineJoin);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDGraphStateSEL, FPDGraphStateGetMiterLimitSEL, (void*)CFPD_GraphState_V1::GetMiterLimit);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDGraphStateSEL, FPDGraphStateSetMiterLimitSEL, (void*)CFPD_GraphState_V1::SetMiterLimit);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDGraphStateSEL, FPDGraphStateGetLineWidthSEL, (void*)CFPD_GraphState_V1::GetLineWidth);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDGraphStateSEL, FPDGraphStateSetLineWidthSEL, (void*)CFPD_GraphState_V1::SetLineWidth);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDGraphStateSEL, FPDGraphStateIsNullSEL, (void*)CFPD_GraphState_V1::IsNull);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDGraphStateSEL, FPDGraphStateGetModifySEL, (void*)CFPD_GraphState_V1::GetModify);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDGraphStateSEL, FPDGraphStateSetDashArraySEL, (void*)CFPD_GraphState_V1::SetDashArray);
	}
};

class CFPD_PageObject_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageObjectSEL, FPDPageObjectNewSEL, (void*)CFPD_PageObject_V1::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageObjectSEL, FPDPageObjectDestroySEL, (void*)CFPD_PageObject_V1::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageObjectSEL, FPDPageObjectCloneSEL, (void*)CFPD_PageObject_V1::Clone);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageObjectSEL, FPDPageObjectCopySEL, (void*)CFPD_PageObject_V1::Copy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageObjectSEL, FPDPageObjectRemoveClipPathSEL, (void*)CFPD_PageObject_V1::RemoveClipPath);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageObjectSEL, FPDPageObjectAppendClipPathSEL, (void*)CFPD_PageObject_V1::AppendClipPath);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageObjectSEL, FPDPageObjectCopyClipPathSEL, (void*)CFPD_PageObject_V1::CopyClipPath);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageObjectSEL, FPDPageObjectTransformClipPathSEL, (void*)CFPD_PageObject_V1::TransformClipPath);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageObjectSEL, FPDPageObjectSetColorStateSEL, (void*)CFPD_PageObject_V1::SetColorState);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageObjectSEL, FPDPageObjectGetBBoxSEL, (void*)CFPD_PageObject_V1::GetBBox);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageObjectSEL, FPDPageObjectGetOriginalBBoxSEL, (void*)CFPD_PageObject_V1::GetOriginalBBox);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageObjectSEL, FPDPageObjectGetTypeSEL, (void*)CFPD_PageObject_V1::GetType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageObjectSEL, FPDPageObjectGetClipPathSEL, (void*)CFPD_PageObject_V1::GetClipPath);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageObjectSEL, FPDPageObjectGetGraphStateSEL, (void*)CFPD_PageObject_V1::GetGraphState);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageObjectSEL, FPDPageObjectGetColorStateSEL, (void*)CFPD_PageObject_V1::GetColorState);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageObjectSEL, FPDPageObjectGetTextStateSEL, (void*)CFPD_PageObject_V1::GetTextState);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageObjectSEL, FPDPageObjectGetGeneralStateSEL, (void*)CFPD_PageObject_V1::GetGeneralState);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageObjectSEL, FPDPageObjectGetContentMarkSEL, (void*)CFPD_PageObject_V1::GetContentMark);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageObjectSEL, FPDPageObjectDefaultStatesSEL, (void*)CFPD_PageObject_V1::DefaultStates);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageObjectSEL, FPDPageObjectCopyStatesSEL, (void*)CFPD_PageObject_V1::CopyStates);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageObjectSEL, FPDPageObjectSetGraphStateSEL, (void*)CFPD_PageObject_V1::SetGraphState);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageObjectSEL, FPDPageObjectSetTextStateSEL, (void*)CFPD_PageObject_V1::SetTextState);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageObjectSEL, FPDPageObjectSetGeneralStateSEL, (void*)CFPD_PageObject_V1::SetGeneralState);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageObjectSEL, FPDPageObjectHasClipPathSEL, (void*)CFPD_PageObject_V1::HasClipPath);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageObjectSEL, FPDPageObjectGetContentMark2SEL, (void*)CFPD_PageObject_V1::GetContentMark2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageObjectSEL, FPDPageObjectTransformGeneralStateSEL, (void*)CFPD_PageObject_V1::TransformGeneralState);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageObjectSEL, FPDPageObjectTransformSEL, (void*)CFPD_PageObject_V1::Transform);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageObjectSEL, FPDPageObjectCastToFormObjectSEL, (void*)CFPD_PageObject_V1::CastToFormObject);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageObjectSEL, FPDPageObjectSetContentMarkSEL, (void*)CFPD_PageObject_V1::SetContentMark);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageObjectSEL, FPDPageObjectGetClipPath2SEL, (void*)CFPD_PageObject_V1::GetClipPath2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageObjectSEL, FPDPageObjectGetColorState2SEL, (void*)CFPD_PageObject_V1::GetColorState2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageObjectSEL, FPDPageObjectClone2SEL, (void*)CFPD_PageObject_V1::Clone2);
	}
};

class CFPD_TextObject_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextObjectSEL, FPDTextObjectNewSEL, (void*)CFPD_TextObject_V1::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextObjectSEL, FPDTextObjectDestroySEL, (void*)CFPD_TextObject_V1::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextObjectSEL, FPDTextObjectCountItemsSEL, (void*)CFPD_TextObject_V1::CountItems);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextObjectSEL, FPDTextObjectGetItemInfoSEL, (void*)CFPD_TextObject_V1::GetItemInfo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextObjectSEL, FPDTextObjectCountCharsSEL, (void*)CFPD_TextObject_V1::CountChars);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextObjectSEL, FPDTextObjectGetCharInfoSEL, (void*)CFPD_TextObject_V1::GetCharInfo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextObjectSEL, FPDTextObjectGetPosXSEL, (void*)CFPD_TextObject_V1::GetPosX);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextObjectSEL, FPDTextObjectGetPosYSEL, (void*)CFPD_TextObject_V1::GetPosY);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextObjectSEL, FPDTextObjectGetTextMatrixSEL, (void*)CFPD_TextObject_V1::GetTextMatrix);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextObjectSEL, FPDTextObjectGetFontSEL, (void*)CFPD_TextObject_V1::GetFont);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextObjectSEL, FPDTextObjectGetFontSizeSEL, (void*)CFPD_TextObject_V1::GetFontSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextObjectSEL, FPDTextObjectSetEmptySEL, (void*)CFPD_TextObject_V1::SetEmpty);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextObjectSEL, FPDTextObjectSetTextSEL, (void*)CFPD_TextObject_V1::SetText);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextObjectSEL, FPDTextObjectSetText2SEL, (void*)CFPD_TextObject_V1::SetText2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextObjectSEL, FPDTextObjectSetText3SEL, (void*)CFPD_TextObject_V1::SetText3);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextObjectSEL, FPDTextObjectSetPositionSEL, (void*)CFPD_TextObject_V1::SetPosition);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextObjectSEL, FPDTextObjectSetTextStateSEL, (void*)CFPD_TextObject_V1::SetTextState);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextObjectSEL, FPDTextObjectTransformSEL, (void*)CFPD_TextObject_V1::Transform);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextObjectSEL, FPDTextObjectCalcCharPosSEL, (void*)CFPD_TextObject_V1::CalcCharPos);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextObjectSEL, FPDTextObjectSetDataSEL, (void*)CFPD_TextObject_V1::SetData);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextObjectSEL, FPDTextObjectGetDataSEL, (void*)CFPD_TextObject_V1::GetData);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextObjectSEL, FPDTextObjectRecalcPositionDataSEL, (void*)CFPD_TextObject_V1::RecalcPositionData);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextObjectSEL, FPDTextObjectGetCharRectSEL, (void*)CFPD_TextObject_V1::GetCharRect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextObjectSEL, FPDTextObjectGetSpaceCharWidthSEL, (void*)CFPD_TextObject_V1::GetSpaceCharWidth);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextObjectSEL, FPDTextObjectGetCharInfo2SEL, (void*)CFPD_TextObject_V1::GetCharInfo2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextObjectSEL, FPDTextObjectGetIndexSEL, (void*)CFPD_TextObject_V1::GetIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextObjectSEL, FPDTextObjectSetIndexSEL, (void*)CFPD_TextObject_V1::SetIndex);
	}
};

class CFPD_PathObject_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPathObjectSEL, FPDPathObjectNewSEL, (void*)CFPD_PathObject_V1::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPathObjectSEL, FPDPathObjectDestroySEL, (void*)CFPD_PathObject_V1::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPathObjectSEL, FPDPathObjectTransformSEL, (void*)CFPD_PathObject_V1::Transform);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPathObjectSEL, FPDPathObjectSetGraphStateSEL, (void*)CFPD_PathObject_V1::SetGraphState);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPathObjectSEL, FPDPathObjectCalcBoundingBoxSEL, (void*)CFPD_PathObject_V1::CalcBoundingBox);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPathObjectSEL, FPDPathObjectGetTransformMatrixSEL, (void*)CFPD_PathObject_V1::GetTransformMatrix);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPathObjectSEL, FPDPathObjectSetTransformMatrixSEL, (void*)CFPD_PathObject_V1::SetTransformMatrix);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPathObjectSEL, FPDPathObjectGetPathSEL, (void*)CFPD_PathObject_V1::GetPath);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPathObjectSEL, FPDPathObjectIsStrokeModeSEL, (void*)CFPD_PathObject_V1::IsStrokeMode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPathObjectSEL, FPDPathObjectSetStrokeModeSEL, (void*)CFPD_PathObject_V1::SetStrokeMode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPathObjectSEL, FPDPathObjectGetFillModeSEL, (void*)CFPD_PathObject_V1::GetFillMode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPathObjectSEL, FPDPathObjectSetFillModeSEL, (void*)CFPD_PathObject_V1::SetFillMode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPathObjectSEL, FPDPathObjectGetPath2SEL, (void*)CFPD_PathObject_V1::GetPath2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPathObjectSEL, FPDPathObjectSetPathSEL, (void*)CFPD_PathObject_V1::SetPath);
	}
};

class CFPD_ImageObject_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageObjectSEL, FPDImageObjectNewSEL, (void*)CFPD_ImageObject_V1::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageObjectSEL, FPDImageObjectDestroySEL, (void*)CFPD_ImageObject_V1::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageObjectSEL, FPDImageObjectTransformSEL, (void*)CFPD_ImageObject_V1::Transform);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageObjectSEL, FPDImageObjectCalcBoundingBoxSEL, (void*)CFPD_ImageObject_V1::CalcBoundingBox);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageObjectSEL, FPDImageObjectGetTransformMatrixSEL, (void*)CFPD_ImageObject_V1::GetTransformMatrix);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageObjectSEL, FPDImageObjectSetTransformMatrixSEL, (void*)CFPD_ImageObject_V1::SetTransformMatrix);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageObjectSEL, FPDImageObjectGetImageSEL, (void*)CFPD_ImageObject_V1::GetImage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageObjectSEL, FPDImageObjectSetImageSEL, (void*)CFPD_ImageObject_V1::SetImage);
	}
};

class CFPD_ShadingObject_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDShadingObjectSEL, FPDShadingObjectNewSEL, (void*)CFPD_ShadingObject_V1::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDShadingObjectSEL, FPDShadingObjectDestroySEL, (void*)CFPD_ShadingObject_V1::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDShadingObjectSEL, FPDShadingObjectTransformSEL, (void*)CFPD_ShadingObject_V1::Transform);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDShadingObjectSEL, FPDShadingObjectCalcBoundingBoxSEL, (void*)CFPD_ShadingObject_V1::CalcBoundingBox);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDShadingObjectSEL, FPDShadingObjectGetTransformMatrixSEL, (void*)CFPD_ShadingObject_V1::GetTransformMatrix);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDShadingObjectSEL, FPDShadingObjectSetTransformMatrixSEL, (void*)CFPD_ShadingObject_V1::SetTransformMatrix);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDShadingObjectSEL, FPDShadingObjectGetPageSEL, (void*)CFPD_ShadingObject_V1::GetPage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDShadingObjectSEL, FPDShadingObjectSetPageSEL, (void*)CFPD_ShadingObject_V1::SetPage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDShadingObjectSEL, FPDShadingObjectGetShadingPatternSEL, (void*)CFPD_ShadingObject_V1::GetShadingPattern);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDShadingObjectSEL, FPDShadingObjectSetShadingPatternSEL, (void*)CFPD_ShadingObject_V1::SetShadingPattern);
	}
};

class CFPD_FormObject_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormObjectSEL, FPDFormObjectNewSEL, (void*)CFPD_FormObject_V1::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormObjectSEL, FPDFormObjectDestroySEL, (void*)CFPD_FormObject_V1::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormObjectSEL, FPDFormObjectTransformSEL, (void*)CFPD_FormObject_V1::Transform);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormObjectSEL, FPDFormObjectCalcBoundingBoxSEL, (void*)CFPD_FormObject_V1::CalcBoundingBox);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormObjectSEL, FPDFormObjectGetTransformMatrixSEL, (void*)CFPD_FormObject_V1::GetTransformMatrix);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormObjectSEL, FPDFormObjectSetTransformMatrixSEL, (void*)CFPD_FormObject_V1::SetTransformMatrix);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormObjectSEL, FPDFormObjectGetFormSEL, (void*)CFPD_FormObject_V1::GetForm);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormObjectSEL, FPDFormObjectSetFormSEL, (void*)CFPD_FormObject_V1::SetForm);
	}
};

class CFPD_InlineImages_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDInlineImagesSEL, FPDInlineImagesNewSEL, (void*)CFPD_InlineImages_V1::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDInlineImagesSEL, FPDInlineImagesDestroySEL, (void*)CFPD_InlineImages_V1::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDInlineImagesSEL, FPDInlineImagesAddMatrixSEL, (void*)CFPD_InlineImages_V1::AddMatrix);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDInlineImagesSEL, FPDInlineImagesCountMatrixSEL, (void*)CFPD_InlineImages_V1::CountMatrix);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDInlineImagesSEL, FPDInlineImagesGetMatrixSEL, (void*)CFPD_InlineImages_V1::GetMatrix);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDInlineImagesSEL, FPDInlineImagesGetStreamSEL, (void*)CFPD_InlineImages_V1::GetStream);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDInlineImagesSEL, FPDInlineImagesSetStreamSEL, (void*)CFPD_InlineImages_V1::SetStream);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDInlineImagesSEL, FPDInlineImagesGetDIBitmapSEL, (void*)CFPD_InlineImages_V1::GetDIBitmap);
	}
};

class CFPD_ContentMarkItem_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDContentMarkItemSEL, FPDContentMarkItemNewSEL, (void*)CFPD_ContentMarkItem_V1::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDContentMarkItemSEL, FPDContentMarkItemDestroySEL, (void*)CFPD_ContentMarkItem_V1::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDContentMarkItemSEL, FPDContentMarkItemGetNameSEL, (void*)CFPD_ContentMarkItem_V1::GetName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDContentMarkItemSEL, FPDContentMarkItemGetParamTypeSEL, (void*)CFPD_ContentMarkItem_V1::GetParamType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDContentMarkItemSEL, FPDContentMarkItemGetParamSEL, (void*)CFPD_ContentMarkItem_V1::GetParam);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDContentMarkItemSEL, FPDContentMarkItemSetNameSEL, (void*)CFPD_ContentMarkItem_V1::SetName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDContentMarkItemSEL, FPDContentMarkItemSetParamSEL, (void*)CFPD_ContentMarkItem_V1::SetParam);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDContentMarkItemSEL, FPDContentMarkItemHasMCIDSEL, (void*)CFPD_ContentMarkItem_V1::HasMCID);
	}
};

class CFPD_ContentMark_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDContentMarkSEL, FPDContentMarkNewSEL, (void*)CFPD_ContentMark_V1::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDContentMarkSEL, FPDContentMarkDestroySEL, (void*)CFPD_ContentMark_V1::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDContentMarkSEL, FPDContentMarkGetMCIDSEL, (void*)CFPD_ContentMark_V1::GetMCID);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDContentMarkSEL, FPDContentMarkHasMarkSEL, (void*)CFPD_ContentMark_V1::HasMark);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDContentMarkSEL, FPDContentMarkLookupMarkSEL, (void*)CFPD_ContentMark_V1::LookupMark);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDContentMarkSEL, FPDContentMarkCountItemsSEL, (void*)CFPD_ContentMark_V1::CountItems);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDContentMarkSEL, FPDContentMarkGetItemSEL, (void*)CFPD_ContentMark_V1::GetItem);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDContentMarkSEL, FPDContentMarkAddMarkSEL, (void*)CFPD_ContentMark_V1::AddMark);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDContentMarkSEL, FPDContentMarkDeleteMarkSEL, (void*)CFPD_ContentMark_V1::DeleteMark);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDContentMarkSEL, FPDContentMarkDeleteLastMarkSEL, (void*)CFPD_ContentMark_V1::DeleteLastMark);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDContentMarkSEL, FPDContentMarkIsNullSEL, (void*)CFPD_ContentMark_V1::IsNull);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDContentMarkSEL, FPDContentMarkCopySEL, (void*)CFPD_ContentMark_V1::Copy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDContentMarkSEL, FPDContentMarkGetContentMarkDataMCIDSEL, (void*)CFPD_ContentMark_V1::GetContentMarkDataMCID);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDContentMarkSEL, FPDContentMarkCheckContentMarkDataIsNULLSEL, (void*)CFPD_ContentMark_V1::CheckContentMarkDataIsNULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDContentMarkSEL, FPDContentMarkGetItem2SEL, (void*)CFPD_ContentMark_V1::GetItem2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDContentMarkSEL, FPDContentMarkAddMark2SEL, (void*)CFPD_ContentMark_V1::AddMark2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDContentMarkSEL, FPDContentMarkGetItemsSEL, (void*)CFPD_ContentMark_V1::GetItems);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDContentMarkSEL, FPDContentMarkGetModifySEL, (void*)CFPD_ContentMark_V1::GetModify);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDContentMarkSEL, FPDContentMarkDoObjectNewSEL, (void*)CFPD_ContentMark_V1::DoObjectNew);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDContentMarkSEL, FPDContentMarkIsEqualSEL, (void*)CFPD_ContentMark_V1::IsEqual);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDContentMarkSEL, FPDContentMarkCopy2SEL, (void*)CFPD_ContentMark_V1::Copy2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDContentMarkSEL, FPDContentMarkGetItem3SEL, (void*)CFPD_ContentMark_V1::GetItem3);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDContentMarkSEL, FPDContentMarkRemoveItemSEL, (void*)CFPD_ContentMark_V1::RemoveItem);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDContentMarkSEL, FPDContentMarkRemoveAllItemsSEL, (void*)CFPD_ContentMark_V1::RemoveAllItems);
	}
};

// fpd_pageobjImpl.h end

// In file fpd_parserImpl.h
class CFPD_Parser_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDParserSEL, FPDParserNewSEL, (void*)CFPD_Parser_V1::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDParserSEL, FPDParserDestroySEL, (void*)CFPD_Parser_V1::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDParserSEL, FPDParserStartParseSEL, (void*)CFPD_Parser_V1::StartParse);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDParserSEL, FPDParserStartParseWSEL, (void*)CFPD_Parser_V1::StartParseW);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDParserSEL, FPDParserStartParseFormMemSEL, (void*)CFPD_Parser_V1::StartParseFormMem);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDParserSEL, FPDParserStartParseCustomFileSEL, (void*)CFPD_Parser_V1::StartParseCustomFile);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDParserSEL, FPDParserCloseParserSEL, (void*)CFPD_Parser_V1::CloseParser);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDParserSEL, FPDParserGetPermissionsSEL, (void*)CFPD_Parser_V1::GetPermissions);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDParserSEL, FPDParserIsOwnerSEL, (void*)CFPD_Parser_V1::IsOwner);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDParserSEL, FPDParserSetPasswordSEL, (void*)CFPD_Parser_V1::SetPassword);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDParserSEL, FPDParserGetPasswordSEL, (void*)CFPD_Parser_V1::GetPassword);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDParserSEL, FPDParserGetTrailerSEL, (void*)CFPD_Parser_V1::GetTrailer);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDParserSEL, FPDParserGetLastXRefOffsetSEL, (void*)CFPD_Parser_V1::GetLastXRefOffset);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDParserSEL, FPDParserGetDocumentSEL, (void*)CFPD_Parser_V1::GetDocument);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDParserSEL, FPDParserCountOtherTrailersSEL, (void*)CFPD_Parser_V1::CountOtherTrailers);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDParserSEL, FPDParserGetOtherTrailerByIndexSEL, (void*)CFPD_Parser_V1::GetOtherTrailerByIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDParserSEL, FPDParserGetRootObjNumSEL, (void*)CFPD_Parser_V1::GetRootObjNum);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDParserSEL, FPDParserGetInfoObjNumSEL, (void*)CFPD_Parser_V1::GetInfoObjNum);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDParserSEL, FPDParserGetIDArraySEL, (void*)CFPD_Parser_V1::GetIDArray);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDParserSEL, FPDParserGetEncryptDictSEL, (void*)CFPD_Parser_V1::GetEncryptDict);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDParserSEL, FPDParserParseIndirectObjectSEL, (void*)CFPD_Parser_V1::ParseIndirectObject);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDParserSEL, FPDParserGetLastObjNumSEL, (void*)CFPD_Parser_V1::GetLastObjNum);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDParserSEL, FPDParserIsFormStreamSEL, (void*)CFPD_Parser_V1::IsFormStream);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDParserSEL, FPDParserReloadFileStreamSEL, (void*)CFPD_Parser_V1::ReloadFileStream);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDParserSEL, FPDParserDeleteIndirectObjectSEL, (void*)CFPD_Parser_V1::DeleteIndirectObject);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDParserSEL, FPDParserGetLengthOfVersionsSEL, (void*)CFPD_Parser_V1::GetLengthOfVersions);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDParserSEL, FPDParserGetObjectOffsetSEL, (void*)CFPD_Parser_V1::GetObjectOffset);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDParserSEL, FPDParserGetObjectSizeSEL, (void*)CFPD_Parser_V1::GetObjectSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDParserSEL, FPDParserGetObjectVersionSEL, (void*)CFPD_Parser_V1::GetObjectVersion);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDParserSEL, FPDParserGetIndirectBinarySEL, (void*)CFPD_Parser_V1::GetIndirectBinary);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDParserSEL, FPDParserParseStreamPosSEL, (void*)CFPD_Parser_V1::ParseStreamPos);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDParserSEL, FPDParserParseIndirectObjectsAtRangeSEL, (void*)CFPD_Parser_V1::ParseIndirectObjectsAtRange);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDParserSEL, FPDParserGetFileStreamOptionSEL, (void*)CFPD_Parser_V1::GetFileStreamOption);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDParserSEL, FPDParserSetFileStreamOptionSEL, (void*)CFPD_Parser_V1::SetFileStreamOption);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDParserSEL, FPDParserGetFileAccessSEL, (void*)CFPD_Parser_V1::GetFileAccess);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDParserSEL, FPDParserGetFileVersionSEL, (void*)CFPD_Parser_V1::GetFileVersion);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDParserSEL, FPDParserIsXRefStreamSEL, (void*)CFPD_Parser_V1::IsXRefStream);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDParserSEL, FPDParserParseIndirectObjectAtSEL, (void*)CFPD_Parser_V1::ParseIndirectObjectAt);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDParserSEL, FPDParserStartAsynParseSEL, (void*)CFPD_Parser_V1::StartAsynParse);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDParserSEL, FPDParserGetFirstPageNoSEL, (void*)CFPD_Parser_V1::GetFirstPageNo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDParserSEL, FPDParserGetSecurityPermissionsSEL, (void*)CFPD_Parser_V1::GetSecurityPermissions);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDParserSEL, FPDParserIsSecurityOwnerSEL, (void*)CFPD_Parser_V1::IsSecurityOwner);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDParserSEL, FPDParserGetSecurityCryptInfoSEL, (void*)CFPD_Parser_V1::GetSecurityCryptInfo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDParserSEL, FPDParserIsMetadataEncryptedBySecuritySEL, (void*)CFPD_Parser_V1::IsMetadataEncryptedBySecurity);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDParserSEL, FPDParserGetStandardSecurityUserPasswordSEL, (void*)CFPD_Parser_V1::GetStandardSecurityUserPassword);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDParserSEL, FPDParserGetStandardSecurityVersionSEL, (void*)CFPD_Parser_V1::GetStandardSecurityVersion);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDParserSEL, FPDParserGetStandardSecurityRevisionSEL, (void*)CFPD_Parser_V1::GetStandardSecurityRevision);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDParserSEL, FPDParserCheckStandardSecurityPasswordSEL, (void*)CFPD_Parser_V1::CheckStandardSecurityPassword);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDParserSEL, FPDParserCheckEmbeddedSecuritySEL, (void*)CFPD_Parser_V1::CheckEmbeddedSecurity);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDParserSEL, FPDParserLoadAttachmentStreamSEL, (void*)CFPD_Parser_V1::LoadAttachmentStream);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDParserSEL, FPDParserSetUnicodePasswordSEL, (void*)CFPD_Parser_V1::SetUnicodePassword);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDParserSEL, FPDParserGetUnicodePasswordSEL, (void*)CFPD_Parser_V1::GetUnicodePassword);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDParserSEL, FPDParserCheckPasswordSEL, (void*)CFPD_Parser_V1::CheckPassword);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDParserSEL, FPDParserSetPassword2SEL, (void*)CFPD_Parser_V1::SetPassword2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDParserSEL, FPDParserSetPassword3SEL, (void*)CFPD_Parser_V1::SetPassword3);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDParserSEL, FPDParserCheckHasCryptoHandlerSEL, (void*)CFPD_Parser_V1::CheckHasCryptoHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDParserSEL, FPDParserCheckPassword2SEL, (void*)CFPD_Parser_V1::CheckPassword2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDParserSEL, FPDParserIsParsingLinearizedSEL, (void*)CFPD_Parser_V1::IsParsingLinearized);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDParserSEL, FPDParserHasRebuildXRefSEL, (void*)CFPD_Parser_V1::HasRebuildXRef);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDParserSEL, FPDParserGetSizeAnalysisSEL, (void*)CFPD_Parser_V1::GetSizeAnalysis);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDParserSEL, FPDParserEnableSizeAnalysisSEL, (void*)CFPD_Parser_V1::EnableSizeAnalysis);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDParserSEL, FPDParserSetObjStmCacheLimitSizeSEL, (void*)CFPD_Parser_V1::SetObjStmCacheLimitSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDParserSEL, FPDParserContinueSEL, (void*)CFPD_Parser_V1::Continue);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDParserSEL, FPDParserSetRecipientSEL, (void*)CFPD_Parser_V1::SetRecipient);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDParserSEL, FPDParserCheckStandardSecurityPassword2SEL, (void*)CFPD_Parser_V1::CheckStandardSecurityPassword2);
	}
};

// fpd_parserImpl.h end

// In file fpd_psiImpl.h
// fpd_psiImpl.h end

// In file fpd_pwlImpl.h
// fpd_pwlImpl.h end

// In file fpd_renderImpl.h
class CFPD_RenderOptions_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenderOptionsSEL, FPDRenderOptionsNewSEL, (void*)CFPD_RenderOptions_V1::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenderOptionsSEL, FPDRenderOptionsDestroySEL, (void*)CFPD_RenderOptions_V1::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenderOptionsSEL, FPDRenderOptionsGetColorModeSEL, (void*)CFPD_RenderOptions_V1::GetColorMode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenderOptionsSEL, FPDRenderOptionsSetColorModeSEL, (void*)CFPD_RenderOptions_V1::SetColorMode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenderOptionsSEL, FPDRenderOptionsGetBackColorSEL, (void*)CFPD_RenderOptions_V1::GetBackColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenderOptionsSEL, FPDRenderOptionsSetBackColorSEL, (void*)CFPD_RenderOptions_V1::SetBackColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenderOptionsSEL, FPDRenderOptionsGetForeColorSEL, (void*)CFPD_RenderOptions_V1::GetForeColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenderOptionsSEL, FPDRenderOptionsSetForeColorSEL, (void*)CFPD_RenderOptions_V1::SetForeColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenderOptionsSEL, FPDRenderOptionsGetRenderFlagSEL, (void*)CFPD_RenderOptions_V1::GetRenderFlag);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenderOptionsSEL, FPDRenderOptionsSetRenderFlagSEL, (void*)CFPD_RenderOptions_V1::SetRenderFlag);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenderOptionsSEL, FPDRenderOptionsGetAddtionalFlagSEL, (void*)CFPD_RenderOptions_V1::GetAddtionalFlag);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenderOptionsSEL, FPDRenderOptionsSetAddtionalFlagSEL, (void*)CFPD_RenderOptions_V1::SetAddtionalFlag);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenderOptionsSEL, FPDRenderOptionsSetOCCHandlerSEL, (void*)CFPD_RenderOptions_V1::SetOCCHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenderOptionsSEL, FPDRenderOptionsTranslateColorSEL, (void*)CFPD_RenderOptions_V1::TranslateColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenderOptionsSEL, FPDRenderOptionsCreateOCContextHandlerSEL, (void*)CFPD_RenderOptions_V1::CreateOCContextHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenderOptionsSEL, FPDRenderOptionsDeleteOCContextHandlerSEL, (void*)CFPD_RenderOptions_V1::DeleteOCContextHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenderOptionsSEL, FPDRenderOptionsSetDocTextColorSEL, (void*)CFPD_RenderOptions_V1::SetDocTextColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenderOptionsSEL, FPDRenderOptionsGetDocTextColorSEL, (void*)CFPD_RenderOptions_V1::GetDocTextColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenderOptionsSEL, FPDRenderOptionsSetCustomColorModeSEL, (void*)CFPD_RenderOptions_V1::SetCustomColorMode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenderOptionsSEL, FPDRenderOptionsGetCustomColorModeSEL, (void*)CFPD_RenderOptions_V1::GetCustomColorMode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenderOptionsSEL, FPDRenderOptionsTranslateColor2SEL, (void*)CFPD_RenderOptions_V1::TranslateColor2);
	}
};

class CFPD_RenderContext_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenderContextSEL, FPDRenderContextNewSEL, (void*)CFPD_RenderContext_V1::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenderContextSEL, FPDRenderContextNew2SEL, (void*)CFPD_RenderContext_V1::New2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenderContextSEL, FPDRenderContextDestroySEL, (void*)CFPD_RenderContext_V1::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenderContextSEL, FPDRenderContextDrawStreamSEL, (void*)CFPD_RenderContext_V1::DrawStream);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenderContextSEL, FPDRenderContextAppendPageSEL, (void*)CFPD_RenderContext_V1::AppendPage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenderContextSEL, FPDRenderContextAppendFormSEL, (void*)CFPD_RenderContext_V1::AppendForm);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenderContextSEL, FPDRenderContextSetBackgroundSEL, (void*)CFPD_RenderContext_V1::SetBackground);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenderContextSEL, FPDRenderContextCreateBackgroundDrawHandlerSEL, (void*)CFPD_RenderContext_V1::CreateBackgroundDrawHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenderContextSEL, FPDRenderContextDeleteBackgroundDrawHandlerSEL, (void*)CFPD_RenderContext_V1::DeleteBackgroundDrawHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenderContextSEL, FPDRenderContextRenderSEL, (void*)CFPD_RenderContext_V1::Render);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenderContextSEL, FPDRenderContextDrawPageSEL, (void*)CFPD_RenderContext_V1::DrawPage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenderContextSEL, FPDRenderContextDrawFormSEL, (void*)CFPD_RenderContext_V1::DrawForm);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenderContextSEL, FPDRenderContextQuickDrawSEL, (void*)CFPD_RenderContext_V1::QuickDraw);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenderContextSEL, FPDRenderContextGetBackgroundSEL, (void*)CFPD_RenderContext_V1::GetBackground);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenderContextSEL, FPDRenderContextGetPageCacheSEL, (void*)CFPD_RenderContext_V1::GetPageCache);
	}
};

class CFPD_ProgressiveRender_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDProgressiveRenderSEL, FPDProgressiveRenderNewSEL, (void*)CFPD_ProgressiveRender_V1::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDProgressiveRenderSEL, FPDProgressiveRenderDestroySEL, (void*)CFPD_ProgressiveRender_V1::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDProgressiveRenderSEL, FPDProgressiveRenderStartSEL, (void*)CFPD_ProgressiveRender_V1::Start);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDProgressiveRenderSEL, FPDProgressiveRenderContinueSEL, (void*)CFPD_ProgressiveRender_V1::Continue);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDProgressiveRenderSEL, FPDProgressiveRenderEstimateProgressSEL, (void*)CFPD_ProgressiveRender_V1::EstimateProgress);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDProgressiveRenderSEL, FPDProgressiveRenderClearSEL, (void*)CFPD_ProgressiveRender_V1::Clear);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDProgressiveRenderSEL, FPDProgressiveRenderGetStatusSEL, (void*)CFPD_ProgressiveRender_V1::GetStatus);
	}
};

class CFPD_RenderDevice_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenderDeviceSEL, FPDRenderDeviceNewSEL, (void*)CFPD_RenderDevice_V1::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenderDeviceSEL, FPDRenderDeviceDestroySEL, (void*)CFPD_RenderDevice_V1::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenderDeviceSEL, FPDRenderDeviceStartRenderingSEL, (void*)CFPD_RenderDevice_V1::StartRendering);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenderDeviceSEL, FPDRenderDeviceEndRenderingSEL, (void*)CFPD_RenderDevice_V1::EndRendering);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenderDeviceSEL, FPDRenderDeviceSaveStateSEL, (void*)CFPD_RenderDevice_V1::SaveState);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenderDeviceSEL, FPDRenderDeviceRestoreStateSEL, (void*)CFPD_RenderDevice_V1::RestoreState);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenderDeviceSEL, FPDRenderDeviceGetWidthSEL, (void*)CFPD_RenderDevice_V1::GetWidth);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenderDeviceSEL, FPDRenderDeviceGetHeightSEL, (void*)CFPD_RenderDevice_V1::GetHeight);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenderDeviceSEL, FPDRenderDeviceGetBPPSEL, (void*)CFPD_RenderDevice_V1::GetBPP);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenderDeviceSEL, FPDRenderDeviceGetRenderCapsSEL, (void*)CFPD_RenderDevice_V1::GetRenderCaps);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenderDeviceSEL, FPDRenderDeviceGetDeviceCapsXYSEL, (void*)CFPD_RenderDevice_V1::GetDeviceCapsXY);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenderDeviceSEL, FPDRenderDeviceGetBitmapSEL, (void*)CFPD_RenderDevice_V1::GetBitmap);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenderDeviceSEL, FPDRenderDeviceSetBitmapSEL, (void*)CFPD_RenderDevice_V1::SetBitmap);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenderDeviceSEL, FPDRenderDeviceSetPixelSEL, (void*)CFPD_RenderDevice_V1::SetPixel);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenderDeviceSEL, FPDRenderDeviceSetClip_RectSEL, (void*)CFPD_RenderDevice_V1::SetClip_Rect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenderDeviceSEL, FPDRenderDeviceCreateCompatibleBitmapSEL, (void*)CFPD_RenderDevice_V1::CreateCompatibleBitmap);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenderDeviceSEL, FPDRenderDeviceFillRectSEL, (void*)CFPD_RenderDevice_V1::FillRect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenderDeviceSEL, FPDRenderDeviceDrawCosmeticLineSEL, (void*)CFPD_RenderDevice_V1::DrawCosmeticLine);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenderDeviceSEL, FPDRenderDeviceGetDIBitsSEL, (void*)CFPD_RenderDevice_V1::GetDIBits);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenderDeviceSEL, FPDRenderDeviceSetDIBitsSEL, (void*)CFPD_RenderDevice_V1::SetDIBits);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenderDeviceSEL, FPDRenderDeviceStretchDIBitsSEL, (void*)CFPD_RenderDevice_V1::StretchDIBits);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenderDeviceSEL, FPDRenderDeviceSetBitMaskSEL, (void*)CFPD_RenderDevice_V1::SetBitMask);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenderDeviceSEL, FPDRenderDeviceStretchBitMaskSEL, (void*)CFPD_RenderDevice_V1::StretchBitMask);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenderDeviceSEL, FPDRenderDeviceGetDitherBitsSEL, (void*)CFPD_RenderDevice_V1::GetDitherBits);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenderDeviceSEL, FPDRenderDeviceDrawTextStringSEL, (void*)CFPD_RenderDevice_V1::DrawTextString);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenderDeviceSEL, FPDRenderDeviceDrawTextString2SEL, (void*)CFPD_RenderDevice_V1::DrawTextString2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenderDeviceSEL, FPDRenderDeviceDrawTextPathSEL, (void*)CFPD_RenderDevice_V1::DrawTextPath);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenderDeviceSEL, FPDRenderDeviceDrawNormalTextSEL, (void*)CFPD_RenderDevice_V1::DrawNormalText);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenderDeviceSEL, FPDRenderDeviceDrawType3TextSEL, (void*)CFPD_RenderDevice_V1::DrawType3Text);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenderDeviceSEL, FPDRenderDeviceDrawPathSEL, (void*)CFPD_RenderDevice_V1::DrawPath);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenderDeviceSEL, FPDRenderDeviceSetClip_PathFillSEL, (void*)CFPD_RenderDevice_V1::SetClip_PathFill);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenderDeviceSEL, FPDRenderDeviceSetClip_PathFill2SEL, (void*)CFPD_RenderDevice_V1::SetClip_PathFill2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRenderDeviceSEL, FPDRenderDeviceGetMatrixSEL, (void*)CFPD_RenderDevice_V1::GetMatrix);
	}
};

class CFPD_FxgeDevice_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFxgeDeviceSEL, FPDFxgeDeviceNewSEL, (void*)CFPD_FxgeDevice_V1::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFxgeDeviceSEL, FPDFxgeDeviceCreateSEL, (void*)CFPD_FxgeDevice_V1::Create);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFxgeDeviceSEL, FPDFxgeDeviceDestroySEL, (void*)CFPD_FxgeDevice_V1::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFxgeDeviceSEL, FPDFxgeDeviceAttachSEL, (void*)CFPD_FxgeDevice_V1::Attach);
	}
};

class CFPD_WindowsDevice_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDWindowsDeviceSEL, FPDWindowsDeviceNewSEL, (void*)CFPD_WindowsDevice_V1::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDWindowsDeviceSEL, FPDWindowsDeviceDestroySEL, (void*)CFPD_WindowsDevice_V1::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDWindowsDeviceSEL, FPDWindowsDeviceGetDCSEL, (void*)CFPD_WindowsDevice_V1::GetDC);
	}
};

class CFPD_PageRenderCache_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageRenderCacheSEL, FPDPageRenderCacheNewSEL, (void*)CFPD_PageRenderCache_V1::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageRenderCacheSEL, FPDPageRenderCacheDestroySEL, (void*)CFPD_PageRenderCache_V1::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageRenderCacheSEL, FPDPageRenderCacheClearAllSEL, (void*)CFPD_PageRenderCache_V1::ClearAll);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageRenderCacheSEL, FPDPageRenderCacheClearImageDataSEL, (void*)CFPD_PageRenderCache_V1::ClearImageData);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageRenderCacheSEL, FPDPageRenderCacheEstimateSizeSEL, (void*)CFPD_PageRenderCache_V1::EstimateSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageRenderCacheSEL, FPDPageRenderCacheGetCachedBitmapSEL, (void*)CFPD_PageRenderCache_V1::GetCachedBitmap);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageRenderCacheSEL, FPDPageRenderCacheResetBitmapSEL, (void*)CFPD_PageRenderCache_V1::ResetBitmap);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageRenderCacheSEL, FPDPageRenderCacheCalcBitmapMarginSEL, (void*)CFPD_PageRenderCache_V1::CalcBitmapMargin);
	}
};

// fpd_renderImpl.h end

// In file fpd_resourceImpl.h
class CFPD_Font_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFontSEL, FPDFontNewSEL, (void*)CFPD_Font_V1::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFontSEL, FPDFontDestroySEL, (void*)CFPD_Font_V1::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFontSEL, FPDFontGetStockFontSEL, (void*)CFPD_Font_V1::GetStockFont);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFontSEL, FPDFontGetFontTypeSEL, (void*)CFPD_Font_V1::GetFontType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFontSEL, FPDFontGetFontTypeNameSEL, (void*)CFPD_Font_V1::GetFontTypeName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFontSEL, FPDFontGetBaseFontSEL, (void*)CFPD_Font_V1::GetBaseFont);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFontSEL, FPDFontGetSubstFontSEL, (void*)CFPD_Font_V1::GetSubstFont);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFontSEL, FPDFontGetFlagsSEL, (void*)CFPD_Font_V1::GetFlags);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFontSEL, FPDFontGetType1FontSEL, (void*)CFPD_Font_V1::GetType1Font);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFontSEL, FPDFontGetTrueTypeFontSEL, (void*)CFPD_Font_V1::GetTrueTypeFont);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFontSEL, FPDFontGetCIDFontSEL, (void*)CFPD_Font_V1::GetCIDFont);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFontSEL, FPDFontGetType3FontSEL, (void*)CFPD_Font_V1::GetType3Font);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFontSEL, FPDFontIsEmbeddedSEL, (void*)CFPD_Font_V1::IsEmbedded);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFontSEL, FPDFontIsUnicodeCompatibleSEL, (void*)CFPD_Font_V1::IsUnicodeCompatible);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFontSEL, FPDFontGetFontFileSEL, (void*)CFPD_Font_V1::GetFontFile);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFontSEL, FPDFontGetFontDictSEL, (void*)CFPD_Font_V1::GetFontDict);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFontSEL, FPDFontIsStandardFontSEL, (void*)CFPD_Font_V1::IsStandardFont);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFontSEL, FPDFontGetFaceSEL, (void*)CFPD_Font_V1::GetFace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFontSEL, FPDFontGetNextCharSEL, (void*)CFPD_Font_V1::GetNextChar);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFontSEL, FPDFontCountCharSEL, (void*)CFPD_Font_V1::CountChar);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFontSEL, FPDFontAppendCharSEL, (void*)CFPD_Font_V1::AppendChar);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFontSEL, FPDFontAppendChar2SEL, (void*)CFPD_Font_V1::AppendChar2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFontSEL, FPDFontGetCharSizeSEL, (void*)CFPD_Font_V1::GetCharSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFontSEL, FPDFontGlyphFromCharCodeSEL, (void*)CFPD_Font_V1::GlyphFromCharCode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFontSEL, FPDFontUnicodeFromCharCodeSEL, (void*)CFPD_Font_V1::UnicodeFromCharCode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFontSEL, FPDFontCharCodeFromUnicodeSEL, (void*)CFPD_Font_V1::CharCodeFromUnicode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFontSEL, FPDFontIsCharEmbeddedSEL, (void*)CFPD_Font_V1::IsCharEmbedded);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFontSEL, FPDFontGetCharMapSEL, (void*)CFPD_Font_V1::GetCharMap);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFontSEL, FPDFontEncodeStringSEL, (void*)CFPD_Font_V1::EncodeString);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFontSEL, FPDFontDecodeStringSEL, (void*)CFPD_Font_V1::DecodeString);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFontSEL, FPDFontRecognizeCharSEL, (void*)CFPD_Font_V1::RecognizeChar);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFontSEL, FPDFontGetFontBBoxSEL, (void*)CFPD_Font_V1::GetFontBBox);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFontSEL, FPDFontGetTypeAscentSEL, (void*)CFPD_Font_V1::GetTypeAscent);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFontSEL, FPDFontGetTypeDescentSEL, (void*)CFPD_Font_V1::GetTypeDescent);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFontSEL, FPDFontGetItalicAngleSEL, (void*)CFPD_Font_V1::GetItalicAngle);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFontSEL, FPDFontGetStringWidthSEL, (void*)CFPD_Font_V1::GetStringWidth);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFontSEL, FPDFontGetCharWidthFSEL, (void*)CFPD_Font_V1::GetCharWidthF);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFontSEL, FPDFontGetCharTypeWidthSEL, (void*)CFPD_Font_V1::GetCharTypeWidth);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFontSEL, FPDFontGetCharBBoxSEL, (void*)CFPD_Font_V1::GetCharBBox);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFontSEL, FPDFontGetPDFDocSEL, (void*)CFPD_Font_V1::GetPDFDoc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFontSEL, FPDFontLoadGlyphPathSEL, (void*)CFPD_Font_V1::LoadGlyphPath);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFontSEL, FPDFontGetSubstFontCharsetSEL, (void*)CFPD_Font_V1::GetSubstFontCharset);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFontSEL, FPDFontIsVertWritingSEL, (void*)CFPD_Font_V1::IsVertWriting);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFontSEL, FPDFontGetFXFontSEL, (void*)CFPD_Font_V1::GetFXFont);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFontSEL, FPDFontFXFontGetFaceNameSEL, (void*)CFPD_Font_V1::FXFontGetFaceName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFontSEL, FPDFontFXFontGetPsNameSEL, (void*)CFPD_Font_V1::FXFontGetPsName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFontSEL, FPDFontFXFontGetFamilyNameSEL, (void*)CFPD_Font_V1::FXFontGetFamilyName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFontSEL, FPDFontFXFontIsItalicSEL, (void*)CFPD_Font_V1::FXFontIsItalic);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFontSEL, FPDFontFXFontIsBoldSEL, (void*)CFPD_Font_V1::FXFontIsBold);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFontSEL, FPDFontUnicodeFromCharCodeExSEL, (void*)CFPD_Font_V1::UnicodeFromCharCodeEx);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFontSEL, FPDFontGetSubstFontWeightSEL, (void*)CFPD_Font_V1::GetSubstFontWeight);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFontSEL, FPDFontFXFontLoadSubstSEL, (void*)CFPD_Font_V1::FXFontLoadSubst);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFontSEL, FPDFontGetUnicodeBaseFontSEL, (void*)CFPD_Font_V1::GetUnicodeBaseFont);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFontSEL, FPDFontIsTTFontSEL, (void*)CFPD_Font_V1::IsTTFont);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFontSEL, FPDFontNewFXFontSEL, (void*)CFPD_Font_V1::NewFXFont);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFontSEL, FPDFontDeleteFXFontSEL, (void*)CFPD_Font_V1::DeleteFXFont);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFontSEL, FPDFontGetCharOutBBoxSEL, (void*)CFPD_Font_V1::GetCharOutBBox);
	}
};

class CFPD_FontEncoding_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFontEncodingSEL, FPDFontEncodingNewSEL, (void*)CFPD_FontEncoding_V1::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFontEncodingSEL, FPDFontEncodingNew2SEL, (void*)CFPD_FontEncoding_V1::New2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFontEncodingSEL, FPDFontEncodingDestroySEL, (void*)CFPD_FontEncoding_V1::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFontEncodingSEL, FPDFontEncodingLoadEncodingSEL, (void*)CFPD_FontEncoding_V1::LoadEncoding);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFontEncodingSEL, FPDFontEncodingIsIdenticalSEL, (void*)CFPD_FontEncoding_V1::IsIdentical);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFontEncodingSEL, FPDFontEncodingUnicodeFromCharCodeSEL, (void*)CFPD_FontEncoding_V1::UnicodeFromCharCode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFontEncodingSEL, FPDFontEncodingCharCodeFromUnicodeSEL, (void*)CFPD_FontEncoding_V1::CharCodeFromUnicode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFontEncodingSEL, FPDFontEncodingSetUnicodeSEL, (void*)CFPD_FontEncoding_V1::SetUnicode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFontEncodingSEL, FPDFontEncodingRealizeSEL, (void*)CFPD_FontEncoding_V1::Realize);
	}
};

class CFPD_Type1Font_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDType1FontSEL, FPDType1FontNewSEL, (void*)CFPD_Type1Font_V1::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDType1FontSEL, FPDType1FontDestroySEL, (void*)CFPD_Type1Font_V1::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDType1FontSEL, FPDType1FontGetEncodingSEL, (void*)CFPD_Type1Font_V1::GetEncoding);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDType1FontSEL, FPDType1FontGetCharWidthFSEL, (void*)CFPD_Type1Font_V1::GetCharWidthF);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDType1FontSEL, FPDType1FontGetCharBBoxSEL, (void*)CFPD_Type1Font_V1::GetCharBBox);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDType1FontSEL, FPDType1FontGlyphFromCharCodeSEL, (void*)CFPD_Type1Font_V1::GlyphFromCharCode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDType1FontSEL, FPDType1FontIsUnicodeCompatibleSEL, (void*)CFPD_Type1Font_V1::IsUnicodeCompatible);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDType1FontSEL, FPDType1FontGetBase14FontSEL, (void*)CFPD_Type1Font_V1::GetBase14Font);
	}
};

class CFPD_TrueTypeFont_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTrueTypeFontSEL, FPDTrueTypeFontNewSEL, (void*)CFPD_TrueTypeFont_V1::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTrueTypeFontSEL, FPDTrueTypeFontDestroySEL, (void*)CFPD_TrueTypeFont_V1::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTrueTypeFontSEL, FPDTrueTypeFontGetEncodingSEL, (void*)CFPD_TrueTypeFont_V1::GetEncoding);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTrueTypeFontSEL, FPDTrueTypeFontGetCharWidthFSEL, (void*)CFPD_TrueTypeFont_V1::GetCharWidthF);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTrueTypeFontSEL, FPDTrueTypeFontGetCharBBoxSEL, (void*)CFPD_TrueTypeFont_V1::GetCharBBox);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTrueTypeFontSEL, FPDTrueTypeFontGlyphFromCharCodeSEL, (void*)CFPD_TrueTypeFont_V1::GlyphFromCharCode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTrueTypeFontSEL, FPDTrueTypeFontIsUnicodeCompatibleSEL, (void*)CFPD_TrueTypeFont_V1::IsUnicodeCompatible);
	}
};

class CFPD_Type3Char_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDType3CharSEL, FPDType3CharNewSEL, (void*)CFPD_Type3Char_V1::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDType3CharSEL, FPDType3CharDestroySEL, (void*)CFPD_Type3Char_V1::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDType3CharSEL, FPDType3CharIsColoredSEL, (void*)CFPD_Type3Char_V1::IsColored);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDType3CharSEL, FPDType3CharIsPageRequiredSEL, (void*)CFPD_Type3Char_V1::IsPageRequired);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDType3CharSEL, FPDType3CharGetFormSEL, (void*)CFPD_Type3Char_V1::GetForm);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDType3CharSEL, FPDType3CharGetImageMatrixSEL, (void*)CFPD_Type3Char_V1::GetImageMatrix);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDType3CharSEL, FPDType3CharGetDIBitmapSEL, (void*)CFPD_Type3Char_V1::GetDIBitmap);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDType3CharSEL, FPDType3CharGetWidthSEL, (void*)CFPD_Type3Char_V1::GetWidth);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDType3CharSEL, FPDType3CharGetBBoxSEL, (void*)CFPD_Type3Char_V1::GetBBox);
	}
};

class CFPD_Type3Font_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDType3FontSEL, FPDType3FontNewSEL, (void*)CFPD_Type3Font_V1::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDType3FontSEL, FPDType3FontDestroySEL, (void*)CFPD_Type3Font_V1::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDType3FontSEL, FPDType3FontGetEncodingSEL, (void*)CFPD_Type3Font_V1::GetEncoding);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDType3FontSEL, FPDType3FontGetCharWidthFSEL, (void*)CFPD_Type3Font_V1::GetCharWidthF);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDType3FontSEL, FPDType3FontGetCharBBoxSEL, (void*)CFPD_Type3Font_V1::GetCharBBox);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDType3FontSEL, FPDType3FontGlyphFromCharCodeSEL, (void*)CFPD_Type3Font_V1::GlyphFromCharCode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDType3FontSEL, FPDType3FontIsUnicodeCompatibleSEL, (void*)CFPD_Type3Font_V1::IsUnicodeCompatible);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDType3FontSEL, FPDType3FontSetPageResourcesSEL, (void*)CFPD_Type3Font_V1::SetPageResources);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDType3FontSEL, FPDType3FontLoadCharSEL, (void*)CFPD_Type3Font_V1::LoadChar);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDType3FontSEL, FPDType3FontGetCharTypeWidthSEL, (void*)CFPD_Type3Font_V1::GetCharTypeWidth);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDType3FontSEL, FPDType3FontGetFontMatrixSEL, (void*)CFPD_Type3Font_V1::GetFontMatrix);
	}
};

class CFPD_CIDFont_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCIDFontSEL, FPDCIDFontNewSEL, (void*)CFPD_CIDFont_V1::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCIDFontSEL, FPDCIDFontDestroySEL, (void*)CFPD_CIDFont_V1::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCIDFontSEL, FPDCIDFontGetCharWidthFSEL, (void*)CFPD_CIDFont_V1::GetCharWidthF);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCIDFontSEL, FPDCIDFontGetCharBBoxSEL, (void*)CFPD_CIDFont_V1::GetCharBBox);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCIDFontSEL, FPDCIDFontGlyphFromCharCodeSEL, (void*)CFPD_CIDFont_V1::GlyphFromCharCode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCIDFontSEL, FPDCIDFontIsUnicodeCompatibleSEL, (void*)CFPD_CIDFont_V1::IsUnicodeCompatible);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCIDFontSEL, FPDCIDFontGetNextCharSEL, (void*)CFPD_CIDFont_V1::GetNextChar);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCIDFontSEL, FPDCIDFontCountCharSEL, (void*)CFPD_CIDFont_V1::CountChar);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCIDFontSEL, FPDCIDFontAppendCharSEL, (void*)CFPD_CIDFont_V1::AppendChar);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCIDFontSEL, FPDCIDFontGetCharSizeSEL, (void*)CFPD_CIDFont_V1::GetCharSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCIDFontSEL, FPDCIDFontLoadGB2312SEL, (void*)CFPD_CIDFont_V1::LoadGB2312);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCIDFontSEL, FPDCIDFontCIDFromCharCodeSEL, (void*)CFPD_CIDFont_V1::CIDFromCharCode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCIDFontSEL, FPDCIDFontIsTrueTypeSEL, (void*)CFPD_CIDFont_V1::IsTrueType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCIDFontSEL, FPDCIDFontGetCharsetSEL, (void*)CFPD_CIDFont_V1::GetCharset);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCIDFontSEL, FPDCIDFontGetCIDTransformSEL, (void*)CFPD_CIDFont_V1::GetCIDTransform);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCIDFontSEL, FPDCIDFontIsVertWritingSEL, (void*)CFPD_CIDFont_V1::IsVertWriting);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCIDFontSEL, FPDCIDFontGetVertWidthSEL, (void*)CFPD_CIDFont_V1::GetVertWidth);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCIDFontSEL, FPDCIDFontGetVertOriginSEL, (void*)CFPD_CIDFont_V1::GetVertOrigin);
	}
};

class CFPD_CIDUtil_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCIDUtilSEL, FPDCIDUtilIsVerticalJapanCIDSEL, (void*)CFPD_CIDUtil_V1::IsVerticalJapanCID);
	}
};

class CFPD_ColorSpace_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDColorSpaceSEL, FPDColorSpaceGetStockCSSEL, (void*)CFPD_ColorSpace_V1::GetStockCS);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDColorSpaceSEL, FPDColorSpaceLoadSEL, (void*)CFPD_ColorSpace_V1::Load);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDColorSpaceSEL, FPDColorSpaceReleaseCSSEL, (void*)CFPD_ColorSpace_V1::ReleaseCS);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDColorSpaceSEL, FPDColorSpaceGetBufSizeSEL, (void*)CFPD_ColorSpace_V1::GetBufSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDColorSpaceSEL, FPDColorSpaceCreateBufSEL, (void*)CFPD_ColorSpace_V1::CreateBuf);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDColorSpaceSEL, FPDColorSpaceGetDefaultColorSEL, (void*)CFPD_ColorSpace_V1::GetDefaultColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDColorSpaceSEL, FPDColorSpaceCountComponentsSEL, (void*)CFPD_ColorSpace_V1::CountComponents);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDColorSpaceSEL, FPDColorSpaceGetFamilySEL, (void*)CFPD_ColorSpace_V1::GetFamily);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDColorSpaceSEL, FPDColorSpaceGetDefaultValueSEL, (void*)CFPD_ColorSpace_V1::GetDefaultValue);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDColorSpaceSEL, FPDColorSpacesRGBSEL, (void*)CFPD_ColorSpace_V1::sRGB);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDColorSpaceSEL, FPDColorSpaceGetRGBSEL, (void*)CFPD_ColorSpace_V1::GetRGB);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDColorSpaceSEL, FPDColorSpaceSetRGBSEL, (void*)CFPD_ColorSpace_V1::SetRGB);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDColorSpaceSEL, FPDColorSpaceGetCMYKSEL, (void*)CFPD_ColorSpace_V1::GetCMYK);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDColorSpaceSEL, FPDColorSpaceSetCMYKSEL, (void*)CFPD_ColorSpace_V1::SetCMYK);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDColorSpaceSEL, FPDColorSpaceTranslateImageLineSEL, (void*)CFPD_ColorSpace_V1::TranslateImageLine);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDColorSpaceSEL, FPDColorSpaceGetArraySEL, (void*)CFPD_ColorSpace_V1::GetArray);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDColorSpaceSEL, FPDColorSpaceGetMaxIndexSEL, (void*)CFPD_ColorSpace_V1::GetMaxIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDColorSpaceSEL, FPDColorSpaceGetBaseCSSEL, (void*)CFPD_ColorSpace_V1::GetBaseCS);
	}
};

class CFPD_Color_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDColorSEL, FPDColorNewSEL, (void*)CFPD_Color_V1::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDColorSEL, FPDColorDestroySEL, (void*)CFPD_Color_V1::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDColorSEL, FPDColorIsNullSEL, (void*)CFPD_Color_V1::IsNull);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDColorSEL, FPDColorIsEqualSEL, (void*)CFPD_Color_V1::IsEqual);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDColorSEL, FPDColorIsPatternSEL, (void*)CFPD_Color_V1::IsPattern);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDColorSEL, FPDColorCopySEL, (void*)CFPD_Color_V1::Copy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDColorSEL, FPDColorSetColorSpaceSEL, (void*)CFPD_Color_V1::SetColorSpace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDColorSEL, FPDColorGetColorSpaceSEL, (void*)CFPD_Color_V1::GetColorSpace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDColorSEL, FPDColorSetValueSEL, (void*)CFPD_Color_V1::SetValue);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDColorSEL, FPDColorSetValue2SEL, (void*)CFPD_Color_V1::SetValue2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDColorSEL, FPDColorGetRGBSEL, (void*)CFPD_Color_V1::GetRGB);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDColorSEL, FPDColorGetPatternSEL, (void*)CFPD_Color_V1::GetPattern);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDColorSEL, FPDColorGetPatternCSSEL, (void*)CFPD_Color_V1::GetPatternCS);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDColorSEL, FPDColorGetPatternColorSEL, (void*)CFPD_Color_V1::GetPatternColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDColorSEL, FPDColorGetColorBufferSEL, (void*)CFPD_Color_V1::GetColorBuffer);
	}
};

class CFPD_Pattern_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPatternSEL, FPDPatternDestroySEL, (void*)CFPD_Pattern_V1::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPatternSEL, FPDPatternGetPatternObjSEL, (void*)CFPD_Pattern_V1::GetPatternObj);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPatternSEL, FPDPatternGetPatternTypeSEL, (void*)CFPD_Pattern_V1::GetPatternType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPatternSEL, FPDPatternGetPatternMatrixSEL, (void*)CFPD_Pattern_V1::GetPatternMatrix);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPatternSEL, FPDPatternGetPDDocSEL, (void*)CFPD_Pattern_V1::GetPDDoc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPatternSEL, FPDPatternCastToShadingPatternObjSEL, (void*)CFPD_Pattern_V1::CastToShadingPatternObj);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPatternSEL, FPDPatternCastToTilingPatternObjSEL, (void*)CFPD_Pattern_V1::CastToTilingPatternObj);
	}
};

class CFPD_TilingPattern_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTilingPatternSEL, FPDTilingPatternNewSEL, (void*)CFPD_TilingPattern_V1::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTilingPatternSEL, FPDTilingPatternDestroySEL, (void*)CFPD_TilingPattern_V1::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTilingPatternSEL, FPDTilingPatternGetPatternObjSEL, (void*)CFPD_TilingPattern_V1::GetPatternObj);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTilingPatternSEL, FPDTilingPatternGetPatternTypeSEL, (void*)CFPD_TilingPattern_V1::GetPatternType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTilingPatternSEL, FPDTilingPatternGetPatternMatrixSEL, (void*)CFPD_TilingPattern_V1::GetPatternMatrix);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTilingPatternSEL, FPDTilingPatternGetPDDocSEL, (void*)CFPD_TilingPattern_V1::GetPDDoc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTilingPatternSEL, FPDTilingPatternLoadSEL, (void*)CFPD_TilingPattern_V1::Load);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTilingPatternSEL, FPDTilingPatternIsColoredSEL, (void*)CFPD_TilingPattern_V1::IsColored);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTilingPatternSEL, FPDTilingPatternGetBBoxSEL, (void*)CFPD_TilingPattern_V1::GetBBox);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTilingPatternSEL, FPDTilingPatternGetXStepSEL, (void*)CFPD_TilingPattern_V1::GetXStep);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTilingPatternSEL, FPDTilingPatternGetYStepSEL, (void*)CFPD_TilingPattern_V1::GetYStep);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTilingPatternSEL, FPDTilingPatternGetFormSEL, (void*)CFPD_TilingPattern_V1::GetForm);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTilingPatternSEL, FPDTilingPatternNewIISEL, (void*)CFPD_TilingPattern_V1::NewII);
	}
};

class CFPD_ShadingPattern_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDShadingPatternSEL, FPDShadingPatternNewSEL, (void*)CFPD_ShadingPattern_V1::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDShadingPatternSEL, FPDShadingPatternDestroySEL, (void*)CFPD_ShadingPattern_V1::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDShadingPatternSEL, FPDShadingPatternGetPatternObjSEL, (void*)CFPD_ShadingPattern_V1::GetPatternObj);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDShadingPatternSEL, FPDShadingPatternGetPatternTypeSEL, (void*)CFPD_ShadingPattern_V1::GetPatternType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDShadingPatternSEL, FPDShadingPatternGetPatternMatrixSEL, (void*)CFPD_ShadingPattern_V1::GetPatternMatrix);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDShadingPatternSEL, FPDShadingPatternGetPDDocSEL, (void*)CFPD_ShadingPattern_V1::GetPDDoc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDShadingPatternSEL, FPDShadingPatternLoadSEL, (void*)CFPD_ShadingPattern_V1::Load);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDShadingPatternSEL, FPDShadingPatternReLoadSEL, (void*)CFPD_ShadingPattern_V1::ReLoad);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDShadingPatternSEL, FPDShadingPatternGetColorSpaceSEL, (void*)CFPD_ShadingPattern_V1::GetColorSpace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDShadingPatternSEL, FPDShadingPatternGetFuncSEL, (void*)CFPD_ShadingPattern_V1::GetFunc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDShadingPatternSEL, FPDShadingPatternGetFuncsCountSEL, (void*)CFPD_ShadingPattern_V1::GetFuncsCount);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDShadingPatternSEL, FPDShadingPatternSetColorSpaceSEL, (void*)CFPD_ShadingPattern_V1::SetColorSpace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDShadingPatternSEL, FPDShadingPatternGetShadingObjectSEL, (void*)CFPD_ShadingPattern_V1::GetShadingObject);
	}
};

class CFPD_MeshStream_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDMeshStreamSEL, FPDMeshStreamNewSEL, (void*)CFPD_MeshStream_V1::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDMeshStreamSEL, FPDMeshStreamDestroySEL, (void*)CFPD_MeshStream_V1::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDMeshStreamSEL, FPDMeshStreamGetFlagSEL, (void*)CFPD_MeshStream_V1::GetFlag);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDMeshStreamSEL, FPDMeshStreamGetCoordsSEL, (void*)CFPD_MeshStream_V1::GetCoords);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDMeshStreamSEL, FPDMeshStreamGetColorSEL, (void*)CFPD_MeshStream_V1::GetColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDMeshStreamSEL, FPDMeshStreamGetVertexSEL, (void*)CFPD_MeshStream_V1::GetVertex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDMeshStreamSEL, FPDMeshStreamGetVertexRowSEL, (void*)CFPD_MeshStream_V1::GetVertexRow);
	}
};

class CFPD_Image_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageSEL, FPDImageNewSEL, (void*)CFPD_Image_V1::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageSEL, FPDImageDestroySEL, (void*)CFPD_Image_V1::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageSEL, FPDImageLoadImageFSEL, (void*)CFPD_Image_V1::LoadImageF);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageSEL, FPDImageCloneSEL, (void*)CFPD_Image_V1::Clone);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageSEL, FPDImageGetStreamSEL, (void*)CFPD_Image_V1::GetStream);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageSEL, FPDImageGetDictSEL, (void*)CFPD_Image_V1::GetDict);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageSEL, FPDImageGetOCSEL, (void*)CFPD_Image_V1::GetOC);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageSEL, FPDImageGetDocumentSEL, (void*)CFPD_Image_V1::GetDocument);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageSEL, FPDImageGetPixelHeightSEL, (void*)CFPD_Image_V1::GetPixelHeight);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageSEL, FPDImageGetPixelWidthSEL, (void*)CFPD_Image_V1::GetPixelWidth);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageSEL, FPDImageIsMaskSEL, (void*)CFPD_Image_V1::IsMask);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageSEL, FPDImageIsInterpolSEL, (void*)CFPD_Image_V1::IsInterpol);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageSEL, FPDImageLoadDIBitmapSEL, (void*)CFPD_Image_V1::LoadDIBitmap);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageSEL, FPDImageSetImageSEL, (void*)CFPD_Image_V1::SetImage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageSEL, FPDImageSetJpegImageSEL, (void*)CFPD_Image_V1::SetJpegImage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageSEL, FPDImageResetCacheSEL, (void*)CFPD_Image_V1::ResetCache);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageSEL, FPDImageLoadDIBitmapProgressiveSEL, (void*)CFPD_Image_V1::LoadDIBitmapProgressive);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageSEL, FPDImageGetDIBSourceSEL, (void*)CFPD_Image_V1::GetDIBSource);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageSEL, FPDImageGetMaskSEL, (void*)CFPD_Image_V1::GetMask);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageSEL, FPDImageGetMatteColorSEL, (void*)CFPD_Image_V1::GetMatteColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageSEL, FPDImageSetImage2SEL, (void*)CFPD_Image_V1::SetImage2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageSEL, FPDImageDetachBitmapSEL, (void*)CFPD_Image_V1::DetachBitmap);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageSEL, FPDImageDetachMaskSEL, (void*)CFPD_Image_V1::DetachMask);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageSEL, FPDImageGetInlineDictSEL, (void*)CFPD_Image_V1::GetInlineDict);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageSEL, FPDImageGetDIBSource2SEL, (void*)CFPD_Image_V1::GetDIBSource2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageSEL, FPDImageGetMask2SEL, (void*)CFPD_Image_V1::GetMask2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageSEL, FPDImageDetachBitmap2SEL, (void*)CFPD_Image_V1::DetachBitmap2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageSEL, FPDImageDetachMask2SEL, (void*)CFPD_Image_V1::DetachMask2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageSEL, FPDImageLoadDIBitmap2SEL, (void*)CFPD_Image_V1::LoadDIBitmap2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageSEL, FPDImageIsInlineSEL, (void*)CFPD_Image_V1::IsInline);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageSEL, FPDImageReleaseSEL, (void*)CFPD_Image_V1::Release);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageSEL, FPDImageSetJpegImage2SEL, (void*)CFPD_Image_V1::SetJpegImage2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageSEL, FPDImageSetPngFileReadSEL, (void*)CFPD_Image_V1::SetPngFileRead);
	}
};

// fpd_resourceImpl.h end

// In file fpd_serialImpl.h
class CFPD_ObjArchiveSaver_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDObjArchiveSaverSEL, FPDObjArchiveSaverNewSEL, (void*)CFPD_ObjArchiveSaver_V1::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDObjArchiveSaverSEL, FPDObjArchiveSaverDestroySEL, (void*)CFPD_ObjArchiveSaver_V1::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDObjArchiveSaverSEL, FPDObjArchiveSaverSaveObjectSEL, (void*)CFPD_ObjArchiveSaver_V1::SaveObject);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDObjArchiveSaverSEL, FPDObjArchiveSaverGetLengthSEL, (void*)CFPD_ObjArchiveSaver_V1::GetLength);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDObjArchiveSaverSEL, FPDObjArchiveSaverGetBufferSEL, (void*)CFPD_ObjArchiveSaver_V1::GetBuffer);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDObjArchiveSaverSEL, FPDObjArchiveSaverSaveByteSEL, (void*)CFPD_ObjArchiveSaver_V1::SaveByte);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDObjArchiveSaverSEL, FPDObjArchiveSaverSaveIntegerSEL, (void*)CFPD_ObjArchiveSaver_V1::SaveInteger);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDObjArchiveSaverSEL, FPDObjArchiveSaverSaveDWORDSEL, (void*)CFPD_ObjArchiveSaver_V1::SaveDWORD);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDObjArchiveSaverSEL, FPDObjArchiveSaverSaveFloatSEL, (void*)CFPD_ObjArchiveSaver_V1::SaveFloat);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDObjArchiveSaverSEL, FPDObjArchiveSaverSaveByteStringSEL, (void*)CFPD_ObjArchiveSaver_V1::SaveByteString);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDObjArchiveSaverSEL, FPDObjArchiveSaverSaveWideStringSEL, (void*)CFPD_ObjArchiveSaver_V1::SaveWideString);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDObjArchiveSaverSEL, FPDObjArchiveSaverSaveWideStringIISEL, (void*)CFPD_ObjArchiveSaver_V1::SaveWideStringII);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDObjArchiveSaverSEL, FPDObjArchiveSaverWriteSEL, (void*)CFPD_ObjArchiveSaver_V1::Write);
	}
};

class CFPD_ObjArchiveLoader_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDObjArchiveLoaderSEL, FPDObjArchiveLoaderNewSEL, (void*)CFPD_ObjArchiveLoader_V1::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDObjArchiveLoaderSEL, FPDObjArchiveLoaderDestroySEL, (void*)CFPD_ObjArchiveLoader_V1::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDObjArchiveLoaderSEL, FPDObjArchiveLoaderLoadObjectSEL, (void*)CFPD_ObjArchiveLoader_V1::LoadObject);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDObjArchiveLoaderSEL, FPDObjArchiveLoaderIsEOFSEL, (void*)CFPD_ObjArchiveLoader_V1::IsEOF);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDObjArchiveLoaderSEL, FPDObjArchiveLoaderReadSEL, (void*)CFPD_ObjArchiveLoader_V1::Read);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDObjArchiveLoaderSEL, FPDObjArchiveLoaderLoadByteSEL, (void*)CFPD_ObjArchiveLoader_V1::LoadByte);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDObjArchiveLoaderSEL, FPDObjArchiveLoaderLoadIntegerSEL, (void*)CFPD_ObjArchiveLoader_V1::LoadInteger);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDObjArchiveLoaderSEL, FPDObjArchiveLoaderLoadDWORDSEL, (void*)CFPD_ObjArchiveLoader_V1::LoadDWORD);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDObjArchiveLoaderSEL, FPDObjArchiveLoaderLoadFloatSEL, (void*)CFPD_ObjArchiveLoader_V1::LoadFloat);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDObjArchiveLoaderSEL, FPDObjArchiveLoaderLoadByteStringSEL, (void*)CFPD_ObjArchiveLoader_V1::LoadByteString);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDObjArchiveLoaderSEL, FPDObjArchiveLoaderLoadWideStringSEL, (void*)CFPD_ObjArchiveLoader_V1::LoadWideString);
	}
};

class CFPD_PageArchiveSaver_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageArchiveSaverSEL, FPDPageArchiveSaverNewSEL, (void*)CFPD_PageArchiveSaver_V1::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageArchiveSaverSEL, FPDPageArchiveSaverDestroySEL, (void*)CFPD_PageArchiveSaver_V1::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageArchiveSaverSEL, FPDPageArchiveSaverSavePageObjectSEL, (void*)CFPD_PageArchiveSaver_V1::SavePageObject);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageArchiveSaverSEL, FPDPageArchiveSaverSaveClipPathSEL, (void*)CFPD_PageArchiveSaver_V1::SaveClipPath);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageArchiveSaverSEL, FPDPageArchiveSaverSaveGraphStateSEL, (void*)CFPD_PageArchiveSaver_V1::SaveGraphState);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageArchiveSaverSEL, FPDPageArchiveSaverSaveTextStateSEL, (void*)CFPD_PageArchiveSaver_V1::SaveTextState);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageArchiveSaverSEL, FPDPageArchiveSaverSaveColorStateSEL, (void*)CFPD_PageArchiveSaver_V1::SaveColorState);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageArchiveSaverSEL, FPDPageArchiveSaverSaveGeneralStateSEL, (void*)CFPD_PageArchiveSaver_V1::SaveGeneralState);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageArchiveSaverSEL, FPDPageArchiveSaverNew2SEL, (void*)CFPD_PageArchiveSaver_V1::New2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageArchiveSaverSEL, FPDPageArchiveSaverSetStreamSEL, (void*)CFPD_PageArchiveSaver_V1::SetStream);
	}
};

class CFPD_PageArchiveLoader_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageArchiveLoaderSEL, FPDPageArchiveLoaderNewSEL, (void*)CFPD_PageArchiveLoader_V1::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageArchiveLoaderSEL, FPDPageArchiveLoaderDestroySEL, (void*)CFPD_PageArchiveLoader_V1::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageArchiveLoaderSEL, FPDPageArchiveLoaderLoadObjectSEL, (void*)CFPD_PageArchiveLoader_V1::LoadObject);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageArchiveLoaderSEL, FPDPageArchiveLoaderLoadClipPathSEL, (void*)CFPD_PageArchiveLoader_V1::LoadClipPath);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageArchiveLoaderSEL, FPDPageArchiveLoaderLoadGraphStateSEL, (void*)CFPD_PageArchiveLoader_V1::LoadGraphState);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageArchiveLoaderSEL, FPDPageArchiveLoaderLoadTextStateSEL, (void*)CFPD_PageArchiveLoader_V1::LoadTextState);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageArchiveLoaderSEL, FPDPageArchiveLoaderLoadColorStateSEL, (void*)CFPD_PageArchiveLoader_V1::LoadColorState);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageArchiveLoaderSEL, FPDPageArchiveLoaderLoadGeneralStateSEL, (void*)CFPD_PageArchiveLoader_V1::LoadGeneralState);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageArchiveLoaderSEL, FPDPageArchiveLoaderNew2SEL, (void*)CFPD_PageArchiveLoader_V1::New2);
	}
};

class CFPD_Creator_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCreatorSEL, FPDCreatorNewSEL, (void*)CFPD_Creator_V1::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCreatorSEL, FPDCreatorDestroySEL, (void*)CFPD_Creator_V1::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCreatorSEL, FPDCreatorCompressSEL, (void*)CFPD_Creator_V1::Compress);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCreatorSEL, FPDCreatorSetStandardSecuritySEL, (void*)CFPD_Creator_V1::SetStandardSecurity);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCreatorSEL, FPDCreatorModifyR5SecuritySEL, (void*)CFPD_Creator_V1::ModifyR5Security);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCreatorSEL, FPDCreatorSetCustomSecuritySEL, (void*)CFPD_Creator_V1::SetCustomSecurity);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCreatorSEL, FPDCreatorReleaseCustomSecurityDataSEL, (void*)CFPD_Creator_V1::ReleaseCustomSecurityData);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCreatorSEL, FPDCreatorRemoveSecuritySEL, (void*)CFPD_Creator_V1::RemoveSecurity);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCreatorSEL, FPDCreatorCreateSEL, (void*)CFPD_Creator_V1::Create);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCreatorSEL, FPDCreatorCreate2SEL, (void*)CFPD_Creator_V1::Create2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCreatorSEL, FPDCreatorCreate3SEL, (void*)CFPD_Creator_V1::Create3);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCreatorSEL, FPDCreatorGetObjectOffsetSEL, (void*)CFPD_Creator_V1::GetObjectOffset);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCreatorSEL, FPDCreatorGetObjectSizeSEL, (void*)CFPD_Creator_V1::GetObjectSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCreatorSEL, FPDCreatorSetProgressiveEncryptHandlerSEL, (void*)CFPD_Creator_V1::SetProgressiveEncryptHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCreatorSEL, FPDCreatorReleaseProgressiveEncryptHandlerSEL, (void*)CFPD_Creator_V1::ReleaseProgressiveEncryptHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCreatorSEL, FPDCreatorSetOptionSEL, (void*)CFPD_Creator_V1::SetOption);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCreatorSEL, FPDCreatorReleaseOptionSEL, (void*)CFPD_Creator_V1::ReleaseOption);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCreatorSEL, FPDCreatorDeprecatedSetDRMSecuritySEL, (void*)CFPD_Creator_V1::DeprecatedSetDRMSecurity);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCreatorSEL, FPDCreatorDeprecatedReleaseDRMSecurityDataSEL, (void*)CFPD_Creator_V1::DeprecatedReleaseDRMSecurityData);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCreatorSEL, FPDCreatorDeprecatedSetDRMProgressiveEncryptHandlerSEL, (void*)CFPD_Creator_V1::DeprecatedSetDRMProgressiveEncryptHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCreatorSEL, FPDCreatorDeprecatedReleaseDRMProgressiveEncryptHandlerSEL, (void*)CFPD_Creator_V1::DeprecatedReleaseDRMProgressiveEncryptHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCreatorSEL, FPDCreatorSetProgressiveEncryptHandler2SEL, (void*)CFPD_Creator_V1::SetProgressiveEncryptHandler2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCreatorSEL, FPDCreatorSetCustomSecurity2SEL, (void*)CFPD_Creator_V1::SetCustomSecurity2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCreatorSEL, FPDCreatorSetCustomSecurity3SEL, (void*)CFPD_Creator_V1::SetCustomSecurity3);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCreatorSEL, FPDCreatorAttachUncompressObjectsSEL, (void*)CFPD_Creator_V1::AttachUncompressObjects);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCreatorSEL, FPDCreatorGetStandardLinearizationObjSEL, (void*)CFPD_Creator_V1::GetStandardLinearizationObj);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCreatorSEL, FPDCreatorCreate4SEL, (void*)CFPD_Creator_V1::Create4);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCreatorSEL, FPDCreatorSetStandardSecurity2SEL, (void*)CFPD_Creator_V1::SetStandardSecurity2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCreatorSEL, FPDCreatorModifyR5Security2SEL, (void*)CFPD_Creator_V1::ModifyR5Security2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCreatorSEL, FPDCreatorAttachIgnoredObjectsSEL, (void*)CFPD_Creator_V1::AttachIgnoredObjects);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCreatorSEL, FPDCreatorSetAESV4GCMSecuritySEL, (void*)CFPD_Creator_V1::SetAESV4GCMSecurity);
	}
};

// fpd_serialImpl.h end

// In file fpd_textImpl.h
class CFPD_ProgressiveSearch_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDProgressiveSearchSEL, FPDProgressiveSearchNewSEL, (void*)CFPD_ProgressiveSearch_V1::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDProgressiveSearchSEL, FPDProgressiveSearchDestroySEL, (void*)CFPD_ProgressiveSearch_V1::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDProgressiveSearchSEL, FPDProgressiveSearchGetStatusSEL, (void*)CFPD_ProgressiveSearch_V1::GetStatus);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDProgressiveSearchSEL, FPDProgressiveSearchFindFromSEL, (void*)CFPD_ProgressiveSearch_V1::FindFrom);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDProgressiveSearchSEL, FPDProgressiveSearchContinueSEL, (void*)CFPD_ProgressiveSearch_V1::Continue);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDProgressiveSearchSEL, FPDProgressiveSearchFindNextSEL, (void*)CFPD_ProgressiveSearch_V1::FindNext);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDProgressiveSearchSEL, FPDProgressiveSearchFindPrevSEL, (void*)CFPD_ProgressiveSearch_V1::FindPrev);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDProgressiveSearchSEL, FPDProgressiveSearchCountRectsSEL, (void*)CFPD_ProgressiveSearch_V1::CountRects);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDProgressiveSearchSEL, FPDProgressiveSearchGetRectSEL, (void*)CFPD_ProgressiveSearch_V1::GetRect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDProgressiveSearchSEL, FPDProgressiveSearchGetPosSEL, (void*)CFPD_ProgressiveSearch_V1::GetPos);
	}
};

class CFPD_TextPage_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextPageSEL, FPDTextPageNewSEL, (void*)CFPD_TextPage_V1::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextPageSEL, FPDTextPageDestroySEL, (void*)CFPD_TextPage_V1::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextPageSEL, FPDTextPageParseTextPageSEL, (void*)CFPD_TextPage_V1::ParseTextPage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextPageSEL, FPDTextPageIsParseredSEL, (void*)CFPD_TextPage_V1::IsParsered);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextPageSEL, FPDTextPageCountCharsSEL, (void*)CFPD_TextPage_V1::CountChars);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextPageSEL, FPDTextPageGetCharInfoSEL, (void*)CFPD_TextPage_V1::GetCharInfo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextPageSEL, FPDTextPageGetRectArraySEL, (void*)CFPD_TextPage_V1::GetRectArray);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextPageSEL, FPDTextPageGetIndexAtPosSEL, (void*)CFPD_TextPage_V1::GetIndexAtPos);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextPageSEL, FPDTextPageGetOrderByDirectionSEL, (void*)CFPD_TextPage_V1::GetOrderByDirection);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextPageSEL, FPDTextPageGetTextByRectSEL, (void*)CFPD_TextPage_V1::GetTextByRect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextPageSEL, FPDTextPageGetRectsArrayByRectSEL, (void*)CFPD_TextPage_V1::GetRectsArrayByRect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextPageSEL, FPDTextPageCountRectsSEL, (void*)CFPD_TextPage_V1::CountRects);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextPageSEL, FPDTextPageGetRectSEL, (void*)CFPD_TextPage_V1::GetRect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextPageSEL, FPDTextPageCountBoundedSegmentsSEL, (void*)CFPD_TextPage_V1::CountBoundedSegments);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextPageSEL, FPDTextPageGetBoundedSegmentSEL, (void*)CFPD_TextPage_V1::GetBoundedSegment);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextPageSEL, FPDTextPageGetWordBreakSEL, (void*)CFPD_TextPage_V1::GetWordBreak);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextPageSEL, FPDTextPageGetPageTextSEL, (void*)CFPD_TextPage_V1::GetPageText);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextPageSEL, FPDTextPageGetUnicodePropertiesSEL, (void*)CFPD_TextPage_V1::GetUnicodeProperties);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextPageSEL, FPDTextPageNew2SEL, (void*)CFPD_TextPage_V1::New2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextPageSEL, FPDTextPageNew3SEL, (void*)CFPD_TextPage_V1::New3);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextPageSEL, FPDTextPageGetRectArray2SEL, (void*)CFPD_TextPage_V1::GetRectArray2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextPageSEL, FPDTextPageCharIndexFromTextIndexSEL, (void*)CFPD_TextPage_V1::CharIndexFromTextIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextPageSEL, FPDTextPageTextIndexFromCharIndexSEL, (void*)CFPD_TextPage_V1::TextIndexFromCharIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextPageSEL, FPDTextPageGetRectArrayPathDataSEL, (void*)CFPD_TextPage_V1::GetRectArrayPathData);
	}
};

class CFPD_TextPageFind_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextPageFindSEL, FPDTextPageFindNewSEL, (void*)CFPD_TextPageFind_V1::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextPageFindSEL, FPDTextPageFindDestroySEL, (void*)CFPD_TextPageFind_V1::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextPageFindSEL, FPDTextPageFindFindFirstSEL, (void*)CFPD_TextPageFind_V1::FindFirst);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextPageFindSEL, FPDTextPageFindFindNextSEL, (void*)CFPD_TextPageFind_V1::FindNext);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextPageFindSEL, FPDTextPageFindFindPrevSEL, (void*)CFPD_TextPageFind_V1::FindPrev);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextPageFindSEL, FPDTextPageFindGetRectArraySEL, (void*)CFPD_TextPageFind_V1::GetRectArray);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextPageFindSEL, FPDTextPageFindGetCurOrderSEL, (void*)CFPD_TextPageFind_V1::GetCurOrder);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextPageFindSEL, FPDTextPageFindGetMatchedCountSEL, (void*)CFPD_TextPageFind_V1::GetMatchedCount);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextPageFindSEL, FPDTextPageFindGetRectPathDataSEL, (void*)CFPD_TextPageFind_V1::GetRectPathData);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextPageFindSEL, FPDTextPageFindReleasePathDataSEL, (void*)CFPD_TextPageFind_V1::ReleasePathData);
	}
};

class CFPD_LinkExtract_V1_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLinkExtractSEL, FPDLinkExtractNewSEL, (void*)CFPD_LinkExtract_V1::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLinkExtractSEL, FPDLinkExtractDestroySEL, (void*)CFPD_LinkExtract_V1::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLinkExtractSEL, FPDLinkExtractExtractLinksSEL, (void*)CFPD_LinkExtract_V1::ExtractLinks);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLinkExtractSEL, FPDLinkExtractCountLinksSEL, (void*)CFPD_LinkExtract_V1::CountLinks);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLinkExtractSEL, FPDLinkExtractGetURLSEL, (void*)CFPD_LinkExtract_V1::GetURL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLinkExtractSEL, FPDLinkExtractGetRectsSEL, (void*)CFPD_LinkExtract_V1::GetRects);
	}
};

// fpd_textImpl.h end

// In file fpd_validateImpl.h
// fpd_validateImpl.h end

//----------_V2----------
// In file fs_basicImpl.h
class CFS_Base64Encoder_V2_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSBase64EncoderSEL, FSBase64EncoderNewSEL, (void*)CFS_Base64Encoder_V2::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSBase64EncoderSEL, FSBase64EncoderDestroySEL, (void*)CFS_Base64Encoder_V2::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSBase64EncoderSEL, FSBase64EncoderSetEncoderSEL, (void*)CFS_Base64Encoder_V2::SetEncoder);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSBase64EncoderSEL, FSBase64EncoderEncodeSEL, (void*)CFS_Base64Encoder_V2::Encode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSBase64EncoderSEL, FSBase64EncoderEncode2SEL, (void*)CFS_Base64Encoder_V2::Encode2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSBase64EncoderSEL, FSBase64EncoderEncode3SEL, (void*)CFS_Base64Encoder_V2::Encode3);
	}
};

class CFS_Base64Decoder_V2_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSBase64DecoderSEL, FSBase64DecoderNewSEL, (void*)CFS_Base64Decoder_V2::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSBase64DecoderSEL, FSBase64DecoderDestroySEL, (void*)CFS_Base64Decoder_V2::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSBase64DecoderSEL, FSBase64DecoderSetDecoderSEL, (void*)CFS_Base64Decoder_V2::SetDecoder);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSBase64DecoderSEL, FSBase64DecoderDecodeSEL, (void*)CFS_Base64Decoder_V2::Decode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSBase64DecoderSEL, FSBase64DecoderDecode2SEL, (void*)CFS_Base64Decoder_V2::Decode2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSBase64DecoderSEL, FSBase64DecoderDecode3SEL, (void*)CFS_Base64Decoder_V2::Decode3);
	}
};

class CFS_FileWriteHandler_V2_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSFileWriteHandlerSEL, FSFileWriteHandlerNewSEL, (void*)CFS_FileWriteHandler_V2::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSFileWriteHandlerSEL, FSFileWriteHandlerDestroySEL, (void*)CFS_FileWriteHandler_V2::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSFileWriteHandlerSEL, FSFileWriteHandlerNew2SEL, (void*)CFS_FileWriteHandler_V2::New2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSFileWriteHandlerSEL, FSFileWriteHandlerReleaseSEL, (void*)CFS_FileWriteHandler_V2::Release);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSFileWriteHandlerSEL, FSFileWriteHandlerGetSizeSEL, (void*)CFS_FileWriteHandler_V2::GetSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSFileWriteHandlerSEL, FSFileWriteHandlerFlushSEL, (void*)CFS_FileWriteHandler_V2::Flush);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSFileWriteHandlerSEL, FSFileWriteHandlerWriteBlockSEL, (void*)CFS_FileWriteHandler_V2::WriteBlock);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSFileWriteHandlerSEL, FSFileWriteHandlerWriteBlock2SEL, (void*)CFS_FileWriteHandler_V2::WriteBlock2);
	}
};

class CFS_XMLElement_V2_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSXMLElementSEL, FSXMLElementparseSEL, (void*)CFS_XMLElement_V2::parse);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSXMLElementSEL, FSXMLElementparse2SEL, (void*)CFS_XMLElement_V2::parse2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSXMLElementSEL, FSXMLElementNewSEL, (void*)CFS_XMLElement_V2::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSXMLElementSEL, FSXMLElementNew2SEL, (void*)CFS_XMLElement_V2::New2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSXMLElementSEL, FSXMLElementNew3SEL, (void*)CFS_XMLElement_V2::New3);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSXMLElementSEL, FSXMLElementDestroySEL, (void*)CFS_XMLElement_V2::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSXMLElementSEL, FSXMLElementGetTagNameSEL, (void*)CFS_XMLElement_V2::GetTagName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSXMLElementSEL, FSXMLElementGetNamespaceSEL, (void*)CFS_XMLElement_V2::GetNamespace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSXMLElementSEL, FSXMLElementGetNamespaceURISEL, (void*)CFS_XMLElement_V2::GetNamespaceURI);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSXMLElementSEL, FSXMLElementGetParentSEL, (void*)CFS_XMLElement_V2::GetParent);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSXMLElementSEL, FSXMLElementCountAttrsSEL, (void*)CFS_XMLElement_V2::CountAttrs);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSXMLElementSEL, FSXMLElementGetAttrByIndexSEL, (void*)CFS_XMLElement_V2::GetAttrByIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSXMLElementSEL, FSXMLElementHasAttrSEL, (void*)CFS_XMLElement_V2::HasAttr);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSXMLElementSEL, FSXMLElementGetAttrValueSEL, (void*)CFS_XMLElement_V2::GetAttrValue);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSXMLElementSEL, FSXMLElementGetAttrValue2SEL, (void*)CFS_XMLElement_V2::GetAttrValue2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSXMLElementSEL, FSXMLElementGetAttrIntegerSEL, (void*)CFS_XMLElement_V2::GetAttrInteger);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSXMLElementSEL, FSXMLElementGetAttrInteger2SEL, (void*)CFS_XMLElement_V2::GetAttrInteger2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSXMLElementSEL, FSXMLElementGetAttrFloatSEL, (void*)CFS_XMLElement_V2::GetAttrFloat);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSXMLElementSEL, FSXMLElementGetAttrFloat2SEL, (void*)CFS_XMLElement_V2::GetAttrFloat2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSXMLElementSEL, FSXMLElementCountChildrenSEL, (void*)CFS_XMLElement_V2::CountChildren);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSXMLElementSEL, FSXMLElementGetChildTypeSEL, (void*)CFS_XMLElement_V2::GetChildType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSXMLElementSEL, FSXMLElementGetContentSEL, (void*)CFS_XMLElement_V2::GetContent);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSXMLElementSEL, FSXMLElementGetElementSEL, (void*)CFS_XMLElement_V2::GetElement);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSXMLElementSEL, FSXMLElementGetElement2SEL, (void*)CFS_XMLElement_V2::GetElement2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSXMLElementSEL, FSXMLElementGetElement3SEL, (void*)CFS_XMLElement_V2::GetElement3);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSXMLElementSEL, FSXMLElementCountElementsSEL, (void*)CFS_XMLElement_V2::CountElements);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSXMLElementSEL, FSXMLElementFindElementSEL, (void*)CFS_XMLElement_V2::FindElement);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSXMLElementSEL, FSXMLElementSetTagSEL, (void*)CFS_XMLElement_V2::SetTag);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSXMLElementSEL, FSXMLElementSetTag2SEL, (void*)CFS_XMLElement_V2::SetTag2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSXMLElementSEL, FSXMLElementSetAttrValueSEL, (void*)CFS_XMLElement_V2::SetAttrValue);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSXMLElementSEL, FSXMLElementSetAttrValue2SEL, (void*)CFS_XMLElement_V2::SetAttrValue2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSXMLElementSEL, FSXMLElementSetAttrValue3SEL, (void*)CFS_XMLElement_V2::SetAttrValue3);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSXMLElementSEL, FSXMLElementRemoveAttrSEL, (void*)CFS_XMLElement_V2::RemoveAttr);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSXMLElementSEL, FSXMLElementAddChildElementSEL, (void*)CFS_XMLElement_V2::AddChildElement);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSXMLElementSEL, FSXMLElementAddChildContentSEL, (void*)CFS_XMLElement_V2::AddChildContent);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSXMLElementSEL, FSXMLElementInsertChildElementSEL, (void*)CFS_XMLElement_V2::InsertChildElement);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSXMLElementSEL, FSXMLElementInsertChildContentSEL, (void*)CFS_XMLElement_V2::InsertChildContent);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSXMLElementSEL, FSXMLElementRemoveChildrenSEL, (void*)CFS_XMLElement_V2::RemoveChildren);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSXMLElementSEL, FSXMLElementRemoveChildSEL, (void*)CFS_XMLElement_V2::RemoveChild);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSXMLElementSEL, FSXMLElementOutputStreamSEL, (void*)CFS_XMLElement_V2::OutputStream);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSXMLElementSEL, FSXMLElementOutputStream2SEL, (void*)CFS_XMLElement_V2::OutputStream2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSXMLElementSEL, FSXMLElementCloneSEL, (void*)CFS_XMLElement_V2::Clone);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSXMLElementSEL, FSXMLElementparse3SEL, (void*)CFS_XMLElement_V2::parse3);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSXMLElementSEL, FSXMLElementparse4SEL, (void*)CFS_XMLElement_V2::parse4);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSXMLElementSEL, FSXMLElementOutputStream3SEL, (void*)CFS_XMLElement_V2::OutputStream3);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSXMLElementSEL, FSXMLElementOutputStream4SEL, (void*)CFS_XMLElement_V2::OutputStream4);
	}
};

// fs_basicImpl.h end

// In file fs_stringImpl.h
// fs_stringImpl.h end

// In file fdrm_descImpl.h
class CFDRM_CategoryRead_V2_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMCategoryReadSEL, FDRMCategoryReadCountSubCategoriesSEL, (void*)CFDRM_CategoryRead_V2::CountSubCategories);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMCategoryReadSEL, FDRMCategoryReadGetSubCategorySEL, (void*)CFDRM_CategoryRead_V2::GetSubCategory);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMCategoryReadSEL, FDRMCategoryReadFindSubCategorySEL, (void*)CFDRM_CategoryRead_V2::FindSubCategory);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMCategoryReadSEL, FDRMCategoryReadGetParentCategorySEL, (void*)CFDRM_CategoryRead_V2::GetParentCategory);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMCategoryReadSEL, FDRMCategoryReadGetCategoryNameSEL, (void*)CFDRM_CategoryRead_V2::GetCategoryName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMCategoryReadSEL, FDRMCategoryReadCountAttributesSEL, (void*)CFDRM_CategoryRead_V2::CountAttributes);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMCategoryReadSEL, FDRMCategoryReadGetAttributeSEL, (void*)CFDRM_CategoryRead_V2::GetAttribute);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMCategoryReadSEL, FDRMCategoryReadGetAttributeValueSEL, (void*)CFDRM_CategoryRead_V2::GetAttributeValue);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMCategoryReadSEL, FDRMCategoryReadGetCategoryDataSEL, (void*)CFDRM_CategoryRead_V2::GetCategoryData);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMCategoryReadSEL, FDRMCategoryReadDestroySEL, (void*)CFDRM_CategoryRead_V2::Destroy);
	}
};

class CFDRM_CategoryWrite_V2_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMCategoryWriteSEL, FDRMCategoryWriteAddCategorySEL, (void*)CFDRM_CategoryWrite_V2::AddCategory);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMCategoryWriteSEL, FDRMCategoryWriteAddCategory2SEL, (void*)CFDRM_CategoryWrite_V2::AddCategory2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMCategoryWriteSEL, FDRMCategoryWriteSetAttributeSEL, (void*)CFDRM_CategoryWrite_V2::SetAttribute);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMCategoryWriteSEL, FDRMCategoryWriteRemoveAttributeSEL, (void*)CFDRM_CategoryWrite_V2::RemoveAttribute);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMCategoryWriteSEL, FDRMCategoryWriteSetCategoryDataSEL, (void*)CFDRM_CategoryWrite_V2::SetCategoryData);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMCategoryWriteSEL, FDRMCategoryWriteRemoveCategorySEL, (void*)CFDRM_CategoryWrite_V2::RemoveCategory);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMCategoryWriteSEL, FDRMCategoryWriteRemoveCategory2SEL, (void*)CFDRM_CategoryWrite_V2::RemoveCategory2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMCategoryWriteSEL, FDRMCategoryWriteRemoveCategory3SEL, (void*)CFDRM_CategoryWrite_V2::RemoveCategory3);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMCategoryWriteSEL, FDRMCategoryWriteCastToCategoryReadSEL, (void*)CFDRM_CategoryWrite_V2::CastToCategoryRead);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMCategoryWriteSEL, FDRMCategoryWriteDestroySEL, (void*)CFDRM_CategoryWrite_V2::Destroy);
	}
};

class CFDRM_DescData_V2_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMDescDataSEL, FDRMDescDataNewSEL, (void*)CFDRM_DescData_V2::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMDescDataSEL, FDRMDescDataDestroySEL, (void*)CFDRM_DescData_V2::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMDescDataSEL, FDRMDescDataGetPackageNameSEL, (void*)CFDRM_DescData_V2::GetPackageName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMDescDataSEL, FDRMDescDataGetDefNameSpaceSEL, (void*)CFDRM_DescData_V2::GetDefNameSpace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMDescDataSEL, FDRMDescDataGetFDRMNameSpaceSEL, (void*)CFDRM_DescData_V2::GetFDRMNameSpace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMDescDataSEL, FDRMDescDataSetPackageNameSEL, (void*)CFDRM_DescData_V2::SetPackageName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMDescDataSEL, FDRMDescDataSetDefNameSpaceSEL, (void*)CFDRM_DescData_V2::SetDefNameSpace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMDescDataSEL, FDRMDescDataSetFDRMNameSpaceSEL, (void*)CFDRM_DescData_V2::SetFDRMNameSpace);
	}
};

class CFDRM_ScriptData_V2_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMScriptDataSEL, FDRMScriptDataNewSEL, (void*)CFDRM_ScriptData_V2::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMScriptDataSEL, FDRMScriptDataDestroySEL, (void*)CFDRM_ScriptData_V2::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMScriptDataSEL, FDRMScriptDataGetDivisionSEL, (void*)CFDRM_ScriptData_V2::GetDivision);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMScriptDataSEL, FDRMScriptDataGetFormatOrgSEL, (void*)CFDRM_ScriptData_V2::GetFormatOrg);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMScriptDataSEL, FDRMScriptDataGetFormatVerSEL, (void*)CFDRM_ScriptData_V2::GetFormatVer);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMScriptDataSEL, FDRMScriptDataGetAppOrgSEL, (void*)CFDRM_ScriptData_V2::GetAppOrg);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMScriptDataSEL, FDRMScriptDataGetAppVerSEL, (void*)CFDRM_ScriptData_V2::GetAppVer);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMScriptDataSEL, FDRMScriptDataGetAuthoritySEL, (void*)CFDRM_ScriptData_V2::GetAuthority);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMScriptDataSEL, FDRMScriptDataSetDivisionSEL, (void*)CFDRM_ScriptData_V2::SetDivision);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMScriptDataSEL, FDRMScriptDataSetFormatOrgSEL, (void*)CFDRM_ScriptData_V2::SetFormatOrg);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMScriptDataSEL, FDRMScriptDataSetFormatVerSEL, (void*)CFDRM_ScriptData_V2::SetFormatVer);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMScriptDataSEL, FDRMScriptDataSetAppOrgSEL, (void*)CFDRM_ScriptData_V2::SetAppOrg);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMScriptDataSEL, FDRMScriptDataSetAppVerSEL, (void*)CFDRM_ScriptData_V2::SetAppVer);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMScriptDataSEL, FDRMScriptDataSetAuthoritySEL, (void*)CFDRM_ScriptData_V2::SetAuthority);
	}
};

class CFDRM_PresentationData_V2_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMPresentationDataSEL, FDRMPresentationDataNewSEL, (void*)CFDRM_PresentationData_V2::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMPresentationDataSEL, FDRMPresentationDataDestroySEL, (void*)CFDRM_PresentationData_V2::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMPresentationDataSEL, FDRMPresentationDataGetDivisionSEL, (void*)CFDRM_PresentationData_V2::GetDivision);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMPresentationDataSEL, FDRMPresentationDataGetAuthoritySEL, (void*)CFDRM_PresentationData_V2::GetAuthority);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMPresentationDataSEL, FDRMPresentationDataSetDivisionSEL, (void*)CFDRM_PresentationData_V2::SetDivision);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMPresentationDataSEL, FDRMPresentationDataSetAuthoritySEL, (void*)CFDRM_PresentationData_V2::SetAuthority);
	}
};

class CFDRM_SignatureData_V2_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMSignatureDataSEL, FDRMSignatureDataNewSEL, (void*)CFDRM_SignatureData_V2::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMSignatureDataSEL, FDRMSignatureDataDestroySEL, (void*)CFDRM_SignatureData_V2::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMSignatureDataSEL, FDRMSignatureDataGetDivisionSEL, (void*)CFDRM_SignatureData_V2::GetDivision);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMSignatureDataSEL, FDRMSignatureDataGetAgentOrgSEL, (void*)CFDRM_SignatureData_V2::GetAgentOrg);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMSignatureDataSEL, FDRMSignatureDataGetAgentVerSEL, (void*)CFDRM_SignatureData_V2::GetAgentVer);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMSignatureDataSEL, FDRMSignatureDataGetFormatOrgSEL, (void*)CFDRM_SignatureData_V2::GetFormatOrg);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMSignatureDataSEL, FDRMSignatureDataGetFormatVerSEL, (void*)CFDRM_SignatureData_V2::GetFormatVer);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMSignatureDataSEL, FDRMSignatureDataGetKeySEL, (void*)CFDRM_SignatureData_V2::GetKey);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMSignatureDataSEL, FDRMSignatureDataSetDivisionSEL, (void*)CFDRM_SignatureData_V2::SetDivision);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMSignatureDataSEL, FDRMSignatureDataSetAgentOrgSEL, (void*)CFDRM_SignatureData_V2::SetAgentOrg);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMSignatureDataSEL, FDRMSignatureDataSetAgentVerSEL, (void*)CFDRM_SignatureData_V2::SetAgentVer);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMSignatureDataSEL, FDRMSignatureDataSetFormatOrgSEL, (void*)CFDRM_SignatureData_V2::SetFormatOrg);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMSignatureDataSEL, FDRMSignatureDataSetFormatVerSEL, (void*)CFDRM_SignatureData_V2::SetFormatVer);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMSignatureDataSEL, FDRMSignatureDataSetKeySEL, (void*)CFDRM_SignatureData_V2::SetKey);
	}
};

class CFDRM_DescRead_V2_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMDescReadSEL, FDRMDescReadNewSEL, (void*)CFDRM_DescRead_V2::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMDescReadSEL, FDRMDescReadDestroySEL, (void*)CFDRM_DescRead_V2::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMDescReadSEL, FDRMDescReadLoadSEL, (void*)CFDRM_DescRead_V2::Load);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMDescReadSEL, FDRMDescReadVerifyDescriptorSEL, (void*)CFDRM_DescRead_V2::VerifyDescriptor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMDescReadSEL, FDRMDescReadGetDescTypeSEL, (void*)CFDRM_DescRead_V2::GetDescType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMDescReadSEL, FDRMDescReadGetScriptSEL, (void*)CFDRM_DescRead_V2::GetScript);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMDescReadSEL, FDRMDescReadCountScriptsSEL, (void*)CFDRM_DescRead_V2::CountScripts);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMDescReadSEL, FDRMDescReadGetScript2SEL, (void*)CFDRM_DescRead_V2::GetScript2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMDescReadSEL, FDRMDescReadGetScriptDataSEL, (void*)CFDRM_DescRead_V2::GetScriptData);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMDescReadSEL, FDRMDescReadGetScriptParamsSEL, (void*)CFDRM_DescRead_V2::GetScriptParams);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMDescReadSEL, FDRMDescReadGetPresentationSEL, (void*)CFDRM_DescRead_V2::GetPresentation);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMDescReadSEL, FDRMDescReadGetPresentationDataSEL, (void*)CFDRM_DescRead_V2::GetPresentationData);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMDescReadSEL, FDRMDescReadGetPresentationParamsSEL, (void*)CFDRM_DescRead_V2::GetPresentationParams);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMDescReadSEL, FDRMDescReadGetSignatureSEL, (void*)CFDRM_DescRead_V2::GetSignature);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMDescReadSEL, FDRMDescReadGetSignatureDataSEL, (void*)CFDRM_DescRead_V2::GetSignatureData);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMDescReadSEL, FDRMDescReadGetSignatureParamsSEL, (void*)CFDRM_DescRead_V2::GetSignatureParams);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMDescReadSEL, FDRMDescReadGetSignatureData2SEL, (void*)CFDRM_DescRead_V2::GetSignatureData2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMDescReadSEL, FDRMDescReadCheckSignatureSEL, (void*)CFDRM_DescRead_V2::CheckSignature);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMDescReadSEL, FDRMDescReadVerifyValidationSEL, (void*)CFDRM_DescRead_V2::VerifyValidation);
	}
};

class CFDRM_DescWrite_V2_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMDescWriteSEL, FDRMDescWriteNewSEL, (void*)CFDRM_DescWrite_V2::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMDescWriteSEL, FDRMDescWriteDestroySEL, (void*)CFDRM_DescWrite_V2::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMDescWriteSEL, FDRMDescWriteInitDescriptorSEL, (void*)CFDRM_DescWrite_V2::InitDescriptor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMDescWriteSEL, FDRMDescWriteRemoveScriptSEL, (void*)CFDRM_DescWrite_V2::RemoveScript);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMDescWriteSEL, FDRMDescWriteAddScriptSEL, (void*)CFDRM_DescWrite_V2::AddScript);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMDescWriteSEL, FDRMDescWriteSetScriptFormatSEL, (void*)CFDRM_DescWrite_V2::SetScriptFormat);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMDescWriteSEL, FDRMDescWriteSetScriptApplicationSEL, (void*)CFDRM_DescWrite_V2::SetScriptApplication);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMDescWriteSEL, FDRMDescWriteSetScriptAuthoritySEL, (void*)CFDRM_DescWrite_V2::SetScriptAuthority);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMDescWriteSEL, FDRMDescWriteSetScriptParamsSEL, (void*)CFDRM_DescWrite_V2::SetScriptParams);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMDescWriteSEL, FDRMDescWriteRemovePresentationSEL, (void*)CFDRM_DescWrite_V2::RemovePresentation);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMDescWriteSEL, FDRMDescWriteAddPresentationSEL, (void*)CFDRM_DescWrite_V2::AddPresentation);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMDescWriteSEL, FDRMDescWriteSetPresentationAuthoritySEL, (void*)CFDRM_DescWrite_V2::SetPresentationAuthority);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMDescWriteSEL, FDRMDescWriteSetPresentationParamsSEL, (void*)CFDRM_DescWrite_V2::SetPresentationParams);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMDescWriteSEL, FDRMDescWriteRemoveSignatureSEL, (void*)CFDRM_DescWrite_V2::RemoveSignature);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMDescWriteSEL, FDRMDescWriteAddSignatureSEL, (void*)CFDRM_DescWrite_V2::AddSignature);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMDescWriteSEL, FDRMDescWriteSetSignatureAgentSEL, (void*)CFDRM_DescWrite_V2::SetSignatureAgent);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMDescWriteSEL, FDRMDescWriteSetSignatureFormatSEL, (void*)CFDRM_DescWrite_V2::SetSignatureFormat);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMDescWriteSEL, FDRMDescWriteSetSignatureParamsSEL, (void*)CFDRM_DescWrite_V2::SetSignatureParams);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMDescWriteSEL, FDRMDescWriteSetSignatureKeySEL, (void*)CFDRM_DescWrite_V2::SetSignatureKey);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMDescWriteSEL, FDRMDescWriteSaveSEL, (void*)CFDRM_DescWrite_V2::Save);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMDescWriteSEL, FDRMDescWriteCastToDescReadSEL, (void*)CFDRM_DescWrite_V2::CastToDescRead);
	}
};

class CFDRM_FoacRead_V2_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMFoacReadSEL, FDRMFoacReadNewSEL, (void*)CFDRM_FoacRead_V2::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMFoacReadSEL, FDRMFoacReadDestroySEL, (void*)CFDRM_FoacRead_V2::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMFoacReadSEL, FDRMFoacReadGetDescReadSEL, (void*)CFDRM_FoacRead_V2::GetDescRead);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMFoacReadSEL, FDRMFoacReadVerifyFoacSEL, (void*)CFDRM_FoacRead_V2::VerifyFoac);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMFoacReadSEL, FDRMFoacReadGetTypeSEL, (void*)CFDRM_FoacRead_V2::GetType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMFoacReadSEL, FDRMFoacReadGetSessionIDSEL, (void*)CFDRM_FoacRead_V2::GetSessionID);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMFoacReadSEL, FDRMFoacReadGetRequestIDSEL, (void*)CFDRM_FoacRead_V2::GetRequestID);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMFoacReadSEL, FDRMFoacReadGetRequestDataSEL, (void*)CFDRM_FoacRead_V2::GetRequestData);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMFoacReadSEL, FDRMFoacReadGetAnswerStateSEL, (void*)CFDRM_FoacRead_V2::GetAnswerState);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMFoacReadSEL, FDRMFoacReadGetAnswerDataSEL, (void*)CFDRM_FoacRead_V2::GetAnswerData);
	}
};

class CFDRM_FoacWrite_V2_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMFoacWriteSEL, FDRMFoacWriteNewSEL, (void*)CFDRM_FoacWrite_V2::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMFoacWriteSEL, FDRMFoacWriteDestroySEL, (void*)CFDRM_FoacWrite_V2::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMFoacWriteSEL, FDRMFoacWriteGetDescWriteSEL, (void*)CFDRM_FoacWrite_V2::GetDescWrite);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMFoacWriteSEL, FDRMFoacWriteInitFoacSEL, (void*)CFDRM_FoacWrite_V2::InitFoac);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMFoacWriteSEL, FDRMFoacWriteSetSessionIDSEL, (void*)CFDRM_FoacWrite_V2::SetSessionID);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMFoacWriteSEL, FDRMFoacWriteSetRequestIDSEL, (void*)CFDRM_FoacWrite_V2::SetRequestID);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMFoacWriteSEL, FDRMFoacWriteSetRequestDataSEL, (void*)CFDRM_FoacWrite_V2::SetRequestData);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMFoacWriteSEL, FDRMFoacWriteSetAnswerStateSEL, (void*)CFDRM_FoacWrite_V2::SetAnswerState);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMFoacWriteSEL, FDRMFoacWriteSetAnswerDataSEL, (void*)CFDRM_FoacWrite_V2::SetAnswerData);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMFoacWriteSEL, FDRMFoacWriteCastToFoacReadSEL, (void*)CFDRM_FoacWrite_V2::CastToFoacRead);
	}
};

class CFDRM_EnvelopeRead_V2_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMEnvelopeReadSEL, FDRMEnvelopeReadNewSEL, (void*)CFDRM_EnvelopeRead_V2::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMEnvelopeReadSEL, FDRMEnvelopeReadDestroySEL, (void*)CFDRM_EnvelopeRead_V2::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMEnvelopeReadSEL, FDRMEnvelopeReadLoadEnvelopeSEL, (void*)CFDRM_EnvelopeRead_V2::LoadEnvelope);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMEnvelopeReadSEL, FDRMEnvelopeReadGetFormatSEL, (void*)CFDRM_EnvelopeRead_V2::GetFormat);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMEnvelopeReadSEL, FDRMEnvelopeReadGetApplicationSEL, (void*)CFDRM_EnvelopeRead_V2::GetApplication);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMEnvelopeReadSEL, FDRMEnvelopeReadGetEnvelopeSNSEL, (void*)CFDRM_EnvelopeRead_V2::GetEnvelopeSN);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMEnvelopeReadSEL, FDRMEnvelopeReadGetFileIDSEL, (void*)CFDRM_EnvelopeRead_V2::GetFileID);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMEnvelopeReadSEL, FDRMEnvelopeReadGetIssuerSEL, (void*)CFDRM_EnvelopeRead_V2::GetIssuer);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMEnvelopeReadSEL, FDRMEnvelopeReadGetConsumerIdSEL, (void*)CFDRM_EnvelopeRead_V2::GetConsumerId);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMEnvelopeReadSEL, FDRMEnvelopeReadCountAuthKeysSEL, (void*)CFDRM_EnvelopeRead_V2::CountAuthKeys);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMEnvelopeReadSEL, FDRMEnvelopeReadGetAuthKeySEL, (void*)CFDRM_EnvelopeRead_V2::GetAuthKey);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMEnvelopeReadSEL, FDRMEnvelopeReadCountLimitsSEL, (void*)CFDRM_EnvelopeRead_V2::CountLimits);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMEnvelopeReadSEL, FDRMEnvelopeReadGetLimitSEL, (void*)CFDRM_EnvelopeRead_V2::GetLimit);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMEnvelopeReadSEL, FDRMEnvelopeReadCountRightsSEL, (void*)CFDRM_EnvelopeRead_V2::CountRights);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMEnvelopeReadSEL, FDRMEnvelopeReadGetRightSEL, (void*)CFDRM_EnvelopeRead_V2::GetRight);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMEnvelopeReadSEL, FDRMEnvelopeReadGetCipherSEL, (void*)CFDRM_EnvelopeRead_V2::GetCipher);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMEnvelopeReadSEL, FDRMEnvelopeReadValidateEnvelopeSEL, (void*)CFDRM_EnvelopeRead_V2::ValidateEnvelope);
	}
};

// fdrm_descImpl.h end

// In file fdrm_managerImpl.h
class CFDRM_Mgr_V2_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMMgrSEL, FDRMMgrCreateDefSEL, (void*)CFDRM_Mgr_V2::CreateDef);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMMgrSEL, FDRMMgrGetCurrentUseSEL, (void*)CFDRM_Mgr_V2::GetCurrentUse);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMMgrSEL, FDRMMgrSetCurrentUseSEL, (void*)CFDRM_Mgr_V2::SetCurrentUse);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMMgrSEL, FDRMMgrDestroySEL, (void*)CFDRM_Mgr_V2::Destroy);
	}
};

// fdrm_managerImpl.h end

// In file fdrm_pdfImpl.h
class CFDRM_PDFSecurityHandler_V2_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMPDFSecurityHandlerSEL, FDRMPDFSecurityHandlerNewSEL, (void*)CFDRM_PDFSecurityHandler_V2::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMPDFSecurityHandlerSEL, FDRMPDFSecurityHandlerDestroySEL, (void*)CFDRM_PDFSecurityHandler_V2::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMPDFSecurityHandlerSEL, FDRMPDFSecurityHandlerInitSEL, (void*)CFDRM_PDFSecurityHandler_V2::Init);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMPDFSecurityHandlerSEL, FDRMPDFSecurityHandlerGetPermissionsSEL, (void*)CFDRM_PDFSecurityHandler_V2::GetPermissions);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMPDFSecurityHandlerSEL, FDRMPDFSecurityHandlerIsOwnerSEL, (void*)CFDRM_PDFSecurityHandler_V2::IsOwner);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMPDFSecurityHandlerSEL, FDRMPDFSecurityHandlerGetCryptInfoSEL, (void*)CFDRM_PDFSecurityHandler_V2::GetCryptInfo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMPDFSecurityHandlerSEL, FDRMPDFSecurityHandlerSetSubFilterSEL, (void*)CFDRM_PDFSecurityHandler_V2::SetSubFilter);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMPDFSecurityHandlerSEL, FDRMPDFSecurityHandlerSetIdentityEntrySEL, (void*)CFDRM_PDFSecurityHandler_V2::SetIdentityEntry);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMPDFSecurityHandlerSEL, FDRMPDFSecurityHandlerGetSubFilterSEL, (void*)CFDRM_PDFSecurityHandler_V2::GetSubFilter);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMPDFSecurityHandlerSEL, FDRMPDFSecurityHandlerGetIdentityEntrySEL, (void*)CFDRM_PDFSecurityHandler_V2::GetIdentityEntry);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMPDFSecurityHandlerSEL, FDRMPDFSecurityHandlerSetCryptInfoSEL, (void*)CFDRM_PDFSecurityHandler_V2::SetCryptInfo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMPDFSecurityHandlerSEL, FDRMPDFSecurityHandlerCheckValiditySEL, (void*)CFDRM_PDFSecurityHandler_V2::CheckValidity);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMPDFSecurityHandlerSEL, FDRMPDFSecurityHandlerCreateCryptoHandlerSEL, (void*)CFDRM_PDFSecurityHandler_V2::CreateCryptoHandler);
	}
};

class CFDRM_PDFSchema_V2_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMPDFSchemaSEL, FDRMPDFSchemaNewSEL, (void*)CFDRM_PDFSchema_V2::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMPDFSchemaSEL, FDRMPDFSchemaDestroySEL, (void*)CFDRM_PDFSchema_V2::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMPDFSchemaSEL, FDRMPDFSchemaLoadSchemaSEL, (void*)CFDRM_PDFSchema_V2::LoadSchema);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMPDFSchemaSEL, FDRMPDFSchemaGetPDFFileSizeSEL, (void*)CFDRM_PDFSchema_V2::GetPDFFileSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMPDFSchemaSEL, FDRMPDFSchemaGetXRefOffsetSEL, (void*)CFDRM_PDFSchema_V2::GetXRefOffset);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMPDFSchemaSEL, FDRMPDFSchemaCountPagesSEL, (void*)CFDRM_PDFSchema_V2::CountPages);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMPDFSchemaSEL, FDRMPDFSchemaGetSchemaInfoSEL, (void*)CFDRM_PDFSchema_V2::GetSchemaInfo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMPDFSchemaSEL, FDRMPDFSchemaGetPageSizeSEL, (void*)CFDRM_PDFSchema_V2::GetPageSize);
	}
};

class CFDRM_EncryptDictRead_V2_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMEncryptDictReadSEL, FDRMEncryptDictReadNewSEL, (void*)CFDRM_EncryptDictRead_V2::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMEncryptDictReadSEL, FDRMEncryptDictReadDestroySEL, (void*)CFDRM_EncryptDictRead_V2::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMEncryptDictReadSEL, FDRMEncryptDictReadVerifySEL, (void*)CFDRM_EncryptDictRead_V2::Verify);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMEncryptDictReadSEL, FDRMEncryptDictReadGetSubFilterSEL, (void*)CFDRM_EncryptDictRead_V2::GetSubFilter);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMEncryptDictReadSEL, FDRMEncryptDictReadGetIssuerSEL, (void*)CFDRM_EncryptDictRead_V2::GetIssuer);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMEncryptDictReadSEL, FDRMEncryptDictReadGetCreatorSEL, (void*)CFDRM_EncryptDictRead_V2::GetCreator);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMEncryptDictReadSEL, FDRMEncryptDictReadGetFileIdSEL, (void*)CFDRM_EncryptDictRead_V2::GetFileId);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMEncryptDictReadSEL, FDRMEncryptDictReadGetFlowCodeSEL, (void*)CFDRM_EncryptDictRead_V2::GetFlowCode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMEncryptDictReadSEL, FDRMEncryptDictReadGetOrderSEL, (void*)CFDRM_EncryptDictRead_V2::GetOrder);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMEncryptDictReadSEL, FDRMEncryptDictReadGetUserSEL, (void*)CFDRM_EncryptDictRead_V2::GetUser);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMEncryptDictReadSEL, FDRMEncryptDictReadGetServiceURLSEL, (void*)CFDRM_EncryptDictRead_V2::GetServiceURL);
	}
};

class CFDRM_Encryptor_V2_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMEncryptorSEL, FDRMEncryptorArcFourCryptBlockSEL, (void*)CFDRM_Encryptor_V2::ArcFourCryptBlock);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMEncryptorSEL, FDRMEncryptorArcFourSetupSEL, (void*)CFDRM_Encryptor_V2::ArcFourSetup);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMEncryptorSEL, FDRMEncryptorArcFourCryptSEL, (void*)CFDRM_Encryptor_V2::ArcFourCrypt);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMEncryptorSEL, FDRMEncryptorSHA256StartSEL, (void*)CFDRM_Encryptor_V2::SHA256Start);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMEncryptorSEL, FDRMEncryptorSHA256UpdateSEL, (void*)CFDRM_Encryptor_V2::SHA256Update);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMEncryptorSEL, FDRMEncryptorSHA256FinishSEL, (void*)CFDRM_Encryptor_V2::SHA256Finish);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMEncryptorSEL, FDRMEncryptorSHA256DigestGenerateSEL, (void*)CFDRM_Encryptor_V2::SHA256DigestGenerate);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMEncryptorSEL, FDRMEncryptorHashMD5128SEL, (void*)CFDRM_Encryptor_V2::HashMD5128);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMEncryptorSEL, FDRMEncryptorAESSetKeySEL, (void*)CFDRM_Encryptor_V2::AESSetKey);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMEncryptorSEL, FDRMEncryptorAESSetIVSEL, (void*)CFDRM_Encryptor_V2::AESSetIV);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMEncryptorSEL, FDRMEncryptorAESDecryptSEL, (void*)CFDRM_Encryptor_V2::AESDecrypt);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMEncryptorSEL, FDRMEncryptorAESEncryptSEL, (void*)CFDRM_Encryptor_V2::AESEncrypt);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMEncryptorSEL, FDRMEncryptorAESSetKey2SEL, (void*)CFDRM_Encryptor_V2::AESSetKey2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMEncryptorSEL, FDRMEncryptorMD5StartSEL, (void*)CFDRM_Encryptor_V2::MD5Start);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMEncryptorSEL, FDRMEncryptorMD5UpdateSEL, (void*)CFDRM_Encryptor_V2::MD5Update);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMEncryptorSEL, FDRMEncryptorMD5FinishSEL, (void*)CFDRM_Encryptor_V2::MD5Finish);
	}
};

// fdrm_pdfImpl.h end

// In file fdrm_pkiImpl.h
class CFDRM_PKI_V2_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMPKISEL, FDRMPKICreateRsaKeySEL, (void*)CFDRM_PKI_V2::CreateRsaKey);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMPKISEL, FDRMPKIRsaEncryptSEL, (void*)CFDRM_PKI_V2::RsaEncrypt);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMPKISEL, FDRMPKIRsaDecryptSEL, (void*)CFDRM_PKI_V2::RsaDecrypt);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMPKISEL, FDRMPKIRsaSignSEL, (void*)CFDRM_PKI_V2::RsaSign);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMPKISEL, FDRMPKIVerifyRsaSignSEL, (void*)CFDRM_PKI_V2::VerifyRsaSign);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMPKISEL, FDRMPKICreateDsaKeySEL, (void*)CFDRM_PKI_V2::CreateDsaKey);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMPKISEL, FDRMPKIDsaSignSEL, (void*)CFDRM_PKI_V2::DsaSign);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMPKISEL, FDRMPKIVerifyDsaSignSEL, (void*)CFDRM_PKI_V2::VerifyDsaSign);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMPKISEL, FDRMPKIVerifyRsaKeySEL, (void*)CFDRM_PKI_V2::VerifyRsaKey);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMPKISEL, FDRMPKIVerifyDasKeySEL, (void*)CFDRM_PKI_V2::VerifyDasKey);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FDRMPKISEL, FDRMPKIGenMD5DigestSEL, (void*)CFDRM_PKI_V2::GenMD5Digest);
	}
};

// fdrm_pkiImpl.h end

// In file fhtml_impl.h
// fhtml_impl.h end

// In file fr_appImpl.h
// fr_appImpl.h end

// In file fr_barImpl.h
// fr_barImpl.h end

// In file fr_docImpl.h
// fr_docImpl.h end

// In file fr_fxnetappImpl.h
// fr_fxnetappImpl.h end

// In file fr_menuImpl.h
// fr_menuImpl.h end

// In file fr_sysImpl.h
// fr_sysImpl.h end

// In file fr_viewImpl.h
// fr_viewImpl.h end

// In file middle_imagecompressImpl.h
// middle_imagecompressImpl.h end

// In file middle_optimizeImpl.h
// middle_optimizeImpl.h end

// In file middle_pdfImpl.h
// middle_pdfImpl.h end

// In file middle_portfolioImpl.h
// middle_portfolioImpl.h end

// In file middle_preflightImpl.h
// middle_preflightImpl.h end

// In file fofd_basicImpl.h
// fofd_basicImpl.h end

// In file fofd_docImpl.h
// fofd_docImpl.h end

// In file fofd_pageImpl.h
// fofd_pageImpl.h end

// In file fofd_renderImpl.h
// fofd_renderImpl.h end

// In file fofd_sigImpl.h
// fofd_sigImpl.h end

// In file fpd_3DImpl.h
// fpd_3DImpl.h end

// In file fpd_barcodeImpl.h
// fpd_barcodeImpl.h end

// In file fpd_convertImpl.h
// fpd_convertImpl.h end

// In file fpd_docImpl.h
// fpd_docImpl.h end

// In file fpd_editImpl.h
// fpd_editImpl.h end

// In file fpd_epubImpl.h
// fpd_epubImpl.h end

// In file fpd_fontmgrImpl.h
// fpd_fontmgrImpl.h end

// In file fpd_fxxfaImpl.h
// fpd_fxxfaImpl.h end

// In file fpd_jsImpl.h
// fpd_jsImpl.h end

// In file fpd_lrImpl.h
// fpd_lrImpl.h end

// In file fpd_mathImpl.h
// fpd_mathImpl.h end

// In file fpd_objsImpl.h
// fpd_objsImpl.h end

// In file fpd_pageImpl.h
// fpd_pageImpl.h end

// In file fpd_pageobjImpl.h
// fpd_pageobjImpl.h end

// In file fpd_parserImpl.h
// fpd_parserImpl.h end

// In file fpd_psiImpl.h
// fpd_psiImpl.h end

// In file fpd_pwlImpl.h
// fpd_pwlImpl.h end

// In file fpd_renderImpl.h
// fpd_renderImpl.h end

// In file fpd_resourceImpl.h
// fpd_resourceImpl.h end

// In file fpd_serialImpl.h
class CFPD_WrapperCreator_V2_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDWrapperCreatorSEL, FPDWrapperCreatorNewSEL, (void*)CFPD_WrapperCreator_V2::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDWrapperCreatorSEL, FPDWrapperCreatorDestroySEL, (void*)CFPD_WrapperCreator_V2::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDWrapperCreatorSEL, FPDWrapperCreatorSetWrapperDataSEL, (void*)CFPD_WrapperCreator_V2::SetWrapperData);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDWrapperCreatorSEL, FPDWrapperCreatorCreateSEL, (void*)CFPD_WrapperCreator_V2::Create);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDWrapperCreatorSEL, FPDWrapperCreatorSetStandardSecuritySEL, (void*)CFPD_WrapperCreator_V2::SetStandardSecurity);
	}
};

// fpd_serialImpl.h end

// In file fpd_textImpl.h
// fpd_textImpl.h end

// In file fpd_validateImpl.h
// fpd_validateImpl.h end

//----------_V3----------
// In file fs_basicImpl.h
// fs_basicImpl.h end

// In file fs_stringImpl.h
// fs_stringImpl.h end

// In file fdrm_descImpl.h
// fdrm_descImpl.h end

// In file fdrm_managerImpl.h
// fdrm_managerImpl.h end

// In file fdrm_pdfImpl.h
// fdrm_pdfImpl.h end

// In file fdrm_pkiImpl.h
// fdrm_pkiImpl.h end

// In file fhtml_impl.h
// fhtml_impl.h end

// In file fr_appImpl.h
// fr_appImpl.h end

// In file fr_barImpl.h
// fr_barImpl.h end

// In file fr_docImpl.h
// fr_docImpl.h end

// In file fr_fxnetappImpl.h
// fr_fxnetappImpl.h end

// In file fr_menuImpl.h
// fr_menuImpl.h end

// In file fr_sysImpl.h
// fr_sysImpl.h end

// In file fr_viewImpl.h
class CFR_ThumbnailView_V3_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRThumbnailViewSEL, FRThumbnailViewCountPageSEL, (void*)CFR_ThumbnailView_V3::CountPage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRThumbnailViewSEL, FRThumbnailViewCountVisiblePageSEL, (void*)CFR_ThumbnailView_V3::CountVisiblePage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRThumbnailViewSEL, FRThumbnailViewGetPageRectSEL, (void*)CFR_ThumbnailView_V3::GetPageRect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRThumbnailViewSEL, FRThumbnailViewGetVisiblePageRangeSEL, (void*)CFR_ThumbnailView_V3::GetVisiblePageRange);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRThumbnailViewSEL, FRThumbnailViewGetPDPageSEL, (void*)CFR_ThumbnailView_V3::GetPDPage);
	}
};

// fr_viewImpl.h end

// In file middle_imagecompressImpl.h
// middle_imagecompressImpl.h end

// In file middle_optimizeImpl.h
// middle_optimizeImpl.h end

// In file middle_pdfImpl.h
// middle_pdfImpl.h end

// In file middle_portfolioImpl.h
// middle_portfolioImpl.h end

// In file middle_preflightImpl.h
// middle_preflightImpl.h end

// In file fofd_basicImpl.h
// fofd_basicImpl.h end

// In file fofd_docImpl.h
// fofd_docImpl.h end

// In file fofd_pageImpl.h
// fofd_pageImpl.h end

// In file fofd_renderImpl.h
// fofd_renderImpl.h end

// In file fofd_sigImpl.h
// fofd_sigImpl.h end

// In file fpd_3DImpl.h
// fpd_3DImpl.h end

// In file fpd_barcodeImpl.h
// fpd_barcodeImpl.h end

// In file fpd_convertImpl.h
// fpd_convertImpl.h end

// In file fpd_docImpl.h
// fpd_docImpl.h end

// In file fpd_editImpl.h
// fpd_editImpl.h end

// In file fpd_epubImpl.h
// fpd_epubImpl.h end

// In file fpd_fontmgrImpl.h
// fpd_fontmgrImpl.h end

// In file fpd_fxxfaImpl.h
// fpd_fxxfaImpl.h end

// In file fpd_jsImpl.h
// fpd_jsImpl.h end

// In file fpd_lrImpl.h
// fpd_lrImpl.h end

// In file fpd_mathImpl.h
// fpd_mathImpl.h end

// In file fpd_objsImpl.h
// fpd_objsImpl.h end

// In file fpd_pageImpl.h
// fpd_pageImpl.h end

// In file fpd_pageobjImpl.h
// fpd_pageobjImpl.h end

// In file fpd_parserImpl.h
// fpd_parserImpl.h end

// In file fpd_psiImpl.h
// fpd_psiImpl.h end

// In file fpd_pwlImpl.h
// fpd_pwlImpl.h end

// In file fpd_renderImpl.h
// fpd_renderImpl.h end

// In file fpd_resourceImpl.h
// fpd_resourceImpl.h end

// In file fpd_serialImpl.h
// fpd_serialImpl.h end

// In file fpd_textImpl.h
// fpd_textImpl.h end

// In file fpd_validateImpl.h
// fpd_validateImpl.h end

//----------_V4----------
// In file fs_basicImpl.h
// fs_basicImpl.h end

// In file fs_stringImpl.h
// fs_stringImpl.h end

// In file fdrm_descImpl.h
// fdrm_descImpl.h end

// In file fdrm_managerImpl.h
// fdrm_managerImpl.h end

// In file fdrm_pdfImpl.h
// fdrm_pdfImpl.h end

// In file fdrm_pkiImpl.h
// fdrm_pkiImpl.h end

// In file fhtml_impl.h
// fhtml_impl.h end

// In file fr_appImpl.h
// fr_appImpl.h end

// In file fr_barImpl.h
class CFR_TabBand_V4_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRTabBandSEL, FRTabBandGetSEL, (void*)CFR_TabBand_V4::Get);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRTabBandSEL, FRTabBandGetTabWndSEL, (void*)CFR_TabBand_V4::GetTabWnd);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRTabBandSEL, FRTabBandGetActiveTabWndSEL, (void*)CFR_TabBand_V4::GetActiveTabWnd);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRTabBandSEL, FRTabBandGetTabsNumSEL, (void*)CFR_TabBand_V4::GetTabsNum);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRTabBandSEL, FRTabBandCloseTabWndSEL, (void*)CFR_TabBand_V4::CloseTabWnd);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRTabBandSEL, FRTabBandGetActiveTabSEL, (void*)CFR_TabBand_V4::GetActiveTab);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRTabBandSEL, FRTabBandSetActiveTabSEL, (void*)CFR_TabBand_V4::SetActiveTab);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRTabBandSEL, FRTabBandRegisterAddBtnHandlerSEL, (void*)CFR_TabBand_V4::RegisterAddBtnHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRTabBandSEL, FRTabBandSetTabTitleSEL, (void*)CFR_TabBand_V4::SetTabTitle);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRTabBandSEL, FRTabBandSetTabIconSEL, (void*)CFR_TabBand_V4::SetTabIcon);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRTabBandSEL, FRTabBandGet2SEL, (void*)CFR_TabBand_V4::Get2);
	}
};

// fr_barImpl.h end

// In file fr_docImpl.h
// fr_docImpl.h end

// In file fr_fxnetappImpl.h
// fr_fxnetappImpl.h end

// In file fr_menuImpl.h
// fr_menuImpl.h end

// In file fr_sysImpl.h
// fr_sysImpl.h end

// In file fr_viewImpl.h
// fr_viewImpl.h end

// In file middle_imagecompressImpl.h
// middle_imagecompressImpl.h end

// In file middle_optimizeImpl.h
// middle_optimizeImpl.h end

// In file middle_pdfImpl.h
// middle_pdfImpl.h end

// In file middle_portfolioImpl.h
// middle_portfolioImpl.h end

// In file middle_preflightImpl.h
// middle_preflightImpl.h end

// In file fofd_basicImpl.h
// fofd_basicImpl.h end

// In file fofd_docImpl.h
// fofd_docImpl.h end

// In file fofd_pageImpl.h
// fofd_pageImpl.h end

// In file fofd_renderImpl.h
// fofd_renderImpl.h end

// In file fofd_sigImpl.h
// fofd_sigImpl.h end

// In file fpd_3DImpl.h
// fpd_3DImpl.h end

// In file fpd_barcodeImpl.h
// fpd_barcodeImpl.h end

// In file fpd_convertImpl.h
// fpd_convertImpl.h end

// In file fpd_docImpl.h
// fpd_docImpl.h end

// In file fpd_editImpl.h
// fpd_editImpl.h end

// In file fpd_epubImpl.h
// fpd_epubImpl.h end

// In file fpd_fontmgrImpl.h
// fpd_fontmgrImpl.h end

// In file fpd_fxxfaImpl.h
// fpd_fxxfaImpl.h end

// In file fpd_jsImpl.h
// fpd_jsImpl.h end

// In file fpd_lrImpl.h
// fpd_lrImpl.h end

// In file fpd_mathImpl.h
// fpd_mathImpl.h end

// In file fpd_objsImpl.h
// fpd_objsImpl.h end

// In file fpd_pageImpl.h
// fpd_pageImpl.h end

// In file fpd_pageobjImpl.h
// fpd_pageobjImpl.h end

// In file fpd_parserImpl.h
// fpd_parserImpl.h end

// In file fpd_psiImpl.h
// fpd_psiImpl.h end

// In file fpd_pwlImpl.h
// fpd_pwlImpl.h end

// In file fpd_renderImpl.h
// fpd_renderImpl.h end

// In file fpd_resourceImpl.h
// fpd_resourceImpl.h end

// In file fpd_serialImpl.h
// fpd_serialImpl.h end

// In file fpd_textImpl.h
// fpd_textImpl.h end

// In file fpd_validateImpl.h
// fpd_validateImpl.h end

//----------_V5----------
// In file fs_basicImpl.h
class CFS_UTF8Decoder_V5_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSUTF8DecoderSEL, FSUTF8DecoderNewSEL, (void*)CFS_UTF8Decoder_V5::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSUTF8DecoderSEL, FSUTF8DecoderDestroySEL, (void*)CFS_UTF8Decoder_V5::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSUTF8DecoderSEL, FSUTF8DecoderClearSEL, (void*)CFS_UTF8Decoder_V5::Clear);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSUTF8DecoderSEL, FSUTF8DecoderInputSEL, (void*)CFS_UTF8Decoder_V5::Input);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSUTF8DecoderSEL, FSUTF8DecoderAppendCharSEL, (void*)CFS_UTF8Decoder_V5::AppendChar);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSUTF8DecoderSEL, FSUTF8DecoderClearStatusSEL, (void*)CFS_UTF8Decoder_V5::ClearStatus);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSUTF8DecoderSEL, FSUTF8DecoderGetResultSEL, (void*)CFS_UTF8Decoder_V5::GetResult);
	}
};

class CFS_UTF8Encoder_V5_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSUTF8EncoderSEL, FSUTF8EncoderNewSEL, (void*)CFS_UTF8Encoder_V5::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSUTF8EncoderSEL, FSUTF8EncoderDestroySEL, (void*)CFS_UTF8Encoder_V5::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSUTF8EncoderSEL, FSUTF8EncoderInputSEL, (void*)CFS_UTF8Encoder_V5::Input);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSUTF8EncoderSEL, FSUTF8EncoderAppendStrSEL, (void*)CFS_UTF8Encoder_V5::AppendStr);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSUTF8EncoderSEL, FSUTF8EncoderGetResultSEL, (void*)CFS_UTF8Encoder_V5::GetResult);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSUTF8EncoderSEL, FSUTF8EncoderIsUTF8DataSEL, (void*)CFS_UTF8Encoder_V5::IsUTF8Data);
	}
};

// fs_basicImpl.h end

// In file fs_stringImpl.h
// fs_stringImpl.h end

// In file fdrm_descImpl.h
// fdrm_descImpl.h end

// In file fdrm_managerImpl.h
// fdrm_managerImpl.h end

// In file fdrm_pdfImpl.h
// fdrm_pdfImpl.h end

// In file fdrm_pkiImpl.h
// fdrm_pkiImpl.h end

// In file fhtml_impl.h
// fhtml_impl.h end

// In file fr_appImpl.h
class CFR_Internal_V5_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalDoPrintCommentSummarySEL, (void*)CFR_Internal_V5::DoPrintCommentSummary);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalOptimizerModuleFlatDocumentSEL, (void*)CFR_Internal_V5::OptimizerModuleFlatDocument);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalGlobalWndOpenPassWordSEL, (void*)CFR_Internal_V5::GlobalWndOpenPassWord);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalGlobalWndCheckFileSizeSEL, (void*)CFR_Internal_V5::GlobalWndCheckFileSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalOpenCertifiedPDFSEL, (void*)CFR_Internal_V5::OpenCertifiedPDF);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalPWLWndCreationParamNewSEL, (void*)CFR_Internal_V5::PWLWndCreationParamNew);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalPWLWndCreationParamSetFontMapSEL, (void*)CFR_Internal_V5::PWLWndCreationParamSetFontMap);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalPWLWndCreationParamSetFontIndexSEL, (void*)CFR_Internal_V5::PWLWndCreationParamSetFontIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalPWLWndCreationParamSetFlagSEL, (void*)CFR_Internal_V5::PWLWndCreationParamSetFlag);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalPWLWndCreationParamSetFontSizeSEL, (void*)CFR_Internal_V5::PWLWndCreationParamSetFontSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalPWLWndCreationParamSetTextColorSEL, (void*)CFR_Internal_V5::PWLWndCreationParamSetTextColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalPWLWndCreationParamSetTextColorIISEL, (void*)CFR_Internal_V5::PWLWndCreationParamSetTextColorII);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalPWLWndCreationParamSetRectSEL, (void*)CFR_Internal_V5::PWLWndCreationParamSetRect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalPWLWndCreationParamDestroySEL, (void*)CFR_Internal_V5::PWLWndCreationParamDestroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalPWLWndEditNewSEL, (void*)CFR_Internal_V5::PWLWndEditNew);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalPWLWndEditSetTextColorSEL, (void*)CFR_Internal_V5::PWLWndEditSetTextColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalPWLWndEditSetTextColorIISEL, (void*)CFR_Internal_V5::PWLWndEditSetTextColorII);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalPWLWndEditSetTextSEL, (void*)CFR_Internal_V5::PWLWndEditSetText);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalPWLWndEditGetContentRectSEL, (void*)CFR_Internal_V5::PWLWndEditGetContentRect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalPWLWndEditGeneratePageObjectsSEL, (void*)CFR_Internal_V5::PWLWndEditGeneratePageObjects);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalPWLWndEditGeneratePageObjectsIISEL, (void*)CFR_Internal_V5::PWLWndEditGeneratePageObjectsII);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalPWLWndEditDestroySEL, (void*)CFR_Internal_V5::PWLWndEditDestroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalSetReviewJSSEL, (void*)CFR_Internal_V5::SetReviewJS);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalGetReviewJSSEL, (void*)CFR_Internal_V5::GetReviewJS);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalRemoveReviewJSSEL, (void*)CFR_Internal_V5::RemoveReviewJS);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalExportAnnotToXFDFSEL, (void*)CFR_Internal_V5::ExportAnnotToXFDF);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalImprotAnnotFromXFDFSEL, (void*)CFR_Internal_V5::ImprotAnnotFromXFDF);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEnableAnnotSEL, (void*)CFR_Internal_V5::EnableAnnot);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalDeleteAnnotSEL, (void*)CFR_Internal_V5::DeleteAnnot);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalUpdateAnnotAuthorSEL, (void*)CFR_Internal_V5::UpdateAnnotAuthor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalUpdateAnnotAuthor2SEL, (void*)CFR_Internal_V5::UpdateAnnotAuthor2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalSetIcommentsAnnotNotifySEL, (void*)CFR_Internal_V5::SetIcommentsAnnotNotify);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalRemoveIcommentsAnnotNotifySEL, (void*)CFR_Internal_V5::RemoveIcommentsAnnotNotify);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalShowChildScrollBarSEL, (void*)CFR_Internal_V5::ShowChildScrollBar);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalChangeZoomScaleInfoSEL, (void*)CFR_Internal_V5::ChangeZoomScaleInfo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalAdvEditingSEL, (void*)CFR_Internal_V5::AdvEditing);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalToolbarModuleGetSysFontFaceNameSEL, (void*)CFR_Internal_V5::ToolbarModuleGetSysFontFaceName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalWordPlaceNewSEL, (void*)CFR_Internal_V5::WordPlaceNew);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalWordPlaceDestroySEL, (void*)CFR_Internal_V5::WordPlaceDestroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalWordPlaceSetDefaultSEL, (void*)CFR_Internal_V5::WordPlaceSetDefault);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalWordPlaceEqualSEL, (void*)CFR_Internal_V5::WordPlaceEqual);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalWordPlaceWordCmpSEL, (void*)CFR_Internal_V5::WordPlaceWordCmp);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalWordPlaceLineCmpSEL, (void*)CFR_Internal_V5::WordPlaceLineCmp);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalWordPlaceSecCmpSEL, (void*)CFR_Internal_V5::WordPlaceSecCmp);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalWordPlaceSetSectionIndexSEL, (void*)CFR_Internal_V5::WordPlaceSetSectionIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalWordPlaceGetSectionIndexSEL, (void*)CFR_Internal_V5::WordPlaceGetSectionIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalWordPlaceSetLineIndexSEL, (void*)CFR_Internal_V5::WordPlaceSetLineIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalWordPlaceGetLineIndexSEL, (void*)CFR_Internal_V5::WordPlaceGetLineIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalWordPlaceSetWordIndexSEL, (void*)CFR_Internal_V5::WordPlaceSetWordIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalWordPlaceGetWordIndexSEL, (void*)CFR_Internal_V5::WordPlaceGetWordIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalWordRangeNewSEL, (void*)CFR_Internal_V5::WordRangeNew);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalWordRangeDestroySEL, (void*)CFR_Internal_V5::WordRangeDestroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalWordRangeSetDefaultSEL, (void*)CFR_Internal_V5::WordRangeSetDefault);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalWordRangeSetSEL, (void*)CFR_Internal_V5::WordRangeSet);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalWordRangeSetBeginPosSEL, (void*)CFR_Internal_V5::WordRangeSetBeginPos);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalWordRangeSetEndPosSEL, (void*)CFR_Internal_V5::WordRangeSetEndPos);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalWordRangeIsExistSEL, (void*)CFR_Internal_V5::WordRangeIsExist);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalWordRangeEqualSEL, (void*)CFR_Internal_V5::WordRangeEqual);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalWordRangeSwapWordPlaceSEL, (void*)CFR_Internal_V5::WordRangeSwapWordPlace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalWordRangeGetBeginPosSEL, (void*)CFR_Internal_V5::WordRangeGetBeginPos);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalWordRangeGetEndPosSEL, (void*)CFR_Internal_V5::WordRangeGetEndPos);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalSecPropsNewSEL, (void*)CFR_Internal_V5::SecPropsNew);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalSecPropsNewIISEL, (void*)CFR_Internal_V5::SecPropsNewII);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalSecPropsDestroySEL, (void*)CFR_Internal_V5::SecPropsDestroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalSecPropsSetLineLeadingSEL, (void*)CFR_Internal_V5::SecPropsSetLineLeading);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalSecPropsGetLineLeadingSEL, (void*)CFR_Internal_V5::SecPropsGetLineLeading);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalSecPropsSetLineIndentSEL, (void*)CFR_Internal_V5::SecPropsSetLineIndent);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalSecPropsGetLineIndentSEL, (void*)CFR_Internal_V5::SecPropsGetLineIndent);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalSecPropsSetAlignmentSEL, (void*)CFR_Internal_V5::SecPropsSetAlignment);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalSecPropsGetAlignmentSEL, (void*)CFR_Internal_V5::SecPropsGetAlignment);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalSecPropsSetSoftReturnSEL, (void*)CFR_Internal_V5::SecPropsSetSoftReturn);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalSecPropsGetSoftReturnSEL, (void*)CFR_Internal_V5::SecPropsGetSoftReturn);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalSecPropsSetRTLSEL, (void*)CFR_Internal_V5::SecPropsSetRTL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalSecPropsGetRTLSEL, (void*)CFR_Internal_V5::SecPropsGetRTL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalWordPropsNewSEL, (void*)CFR_Internal_V5::WordPropsNew);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalWordPropsNewIISEL, (void*)CFR_Internal_V5::WordPropsNewII);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalWordPropsDestroySEL, (void*)CFR_Internal_V5::WordPropsDestroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalWordPropsSetFontIndexSEL, (void*)CFR_Internal_V5::WordPropsSetFontIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalWordPropsGetFontIndexSEL, (void*)CFR_Internal_V5::WordPropsGetFontIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalWordPropsSetFontSizeSEL, (void*)CFR_Internal_V5::WordPropsSetFontSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalWordPropsGetFontSizeSEL, (void*)CFR_Internal_V5::WordPropsGetFontSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalWordPropsSetWordColorSEL, (void*)CFR_Internal_V5::WordPropsSetWordColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalWordPropsGetWordColorSEL, (void*)CFR_Internal_V5::WordPropsGetWordColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalWordPropsSetStrokeColorSEL, (void*)CFR_Internal_V5::WordPropsSetStrokeColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalWordPropsGetStrokeColorSEL, (void*)CFR_Internal_V5::WordPropsGetStrokeColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalWordPropsSetScriptTypeSEL, (void*)CFR_Internal_V5::WordPropsSetScriptType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalWordPropsGetScriptTypeSEL, (void*)CFR_Internal_V5::WordPropsGetScriptType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalWordPropsSetWordStyleSEL, (void*)CFR_Internal_V5::WordPropsSetWordStyle);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalWordPropsGetWordStyleSEL, (void*)CFR_Internal_V5::WordPropsGetWordStyle);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalWordPropsSetCharSpaceSEL, (void*)CFR_Internal_V5::WordPropsSetCharSpace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalWordPropsGetCharSpaceSEL, (void*)CFR_Internal_V5::WordPropsGetCharSpace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalWordPropsSetHorzScaleSEL, (void*)CFR_Internal_V5::WordPropsSetHorzScale);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalWordPropsGetHorzScaleSEL, (void*)CFR_Internal_V5::WordPropsGetHorzScale);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalWordPropsSetXOffsetSEL, (void*)CFR_Internal_V5::WordPropsSetXOffset);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalWordPropsGetXOffsetSEL, (void*)CFR_Internal_V5::WordPropsGetXOffset);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalWordPropsSetYOffsetSEL, (void*)CFR_Internal_V5::WordPropsSetYOffset);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalWordPropsGetYOffsetSEL, (void*)CFR_Internal_V5::WordPropsGetYOffset);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalWordPropsSetRenderingModeSEL, (void*)CFR_Internal_V5::WordPropsSetRenderingMode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalWordPropsGetRenderingModeSEL, (void*)CFR_Internal_V5::WordPropsGetRenderingMode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalWordPropsSetClientDataSEL, (void*)CFR_Internal_V5::WordPropsSetClientData);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalWordPropsGetClientDataSEL, (void*)CFR_Internal_V5::WordPropsGetClientData);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalWordPropsSetLineWidthSEL, (void*)CFR_Internal_V5::WordPropsSetLineWidth);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalWordPropsGetLineWidthSEL, (void*)CFR_Internal_V5::WordPropsGetLineWidth);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalWordPropsSetWordSpaceSEL, (void*)CFR_Internal_V5::WordPropsSetWordSpace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalWordPropsGetWordSpaceSEL, (void*)CFR_Internal_V5::WordPropsGetWordSpace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalWordPropsSetCharCodeSEL, (void*)CFR_Internal_V5::WordPropsSetCharCode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalWordPropsGetCharCodeSEL, (void*)CFR_Internal_V5::WordPropsGetCharCode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalWordPropsSetAlphaSEL, (void*)CFR_Internal_V5::WordPropsSetAlpha);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalWordPropsGetAlphaSEL, (void*)CFR_Internal_V5::WordPropsGetAlpha);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalWordNewSEL, (void*)CFR_Internal_V5::WordNew);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalWordDestroySEL, (void*)CFR_Internal_V5::WordDestroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalWordSetWordSEL, (void*)CFR_Internal_V5::WordSetWord);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalWordGetWordSEL, (void*)CFR_Internal_V5::WordGetWord);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalWordSetWordDisplaySEL, (void*)CFR_Internal_V5::WordSetWordDisplay);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalWordGetWordDisplaySEL, (void*)CFR_Internal_V5::WordGetWordDisplay);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalWordSetBidiOrderSEL, (void*)CFR_Internal_V5::WordSetBidiOrder);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalWordGetBidiOrderSEL, (void*)CFR_Internal_V5::WordGetBidiOrder);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalWordSetCharsetSEL, (void*)CFR_Internal_V5::WordSetCharset);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalWordGetCharsetSEL, (void*)CFR_Internal_V5::WordGetCharset);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalWordSetWordPlaceSEL, (void*)CFR_Internal_V5::WordSetWordPlace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalWordGetWordPlaceSEL, (void*)CFR_Internal_V5::WordGetWordPlace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalWordSetWordPointSEL, (void*)CFR_Internal_V5::WordSetWordPoint);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalWordGetWordPointSEL, (void*)CFR_Internal_V5::WordGetWordPoint);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalWordSetAscentSEL, (void*)CFR_Internal_V5::WordSetAscent);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalWordGetAscentSEL, (void*)CFR_Internal_V5::WordGetAscent);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalWordSetDescentSEL, (void*)CFR_Internal_V5::WordSetDescent);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalWordGetDescentSEL, (void*)CFR_Internal_V5::WordGetDescent);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalWordSetWidthSEL, (void*)CFR_Internal_V5::WordSetWidth);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalWordGetWidthSEL, (void*)CFR_Internal_V5::WordGetWidth);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalWordSetFontIndexSEL, (void*)CFR_Internal_V5::WordSetFontIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalWordGetFontIndexSEL, (void*)CFR_Internal_V5::WordGetFontIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalWordSetFontSizeSEL, (void*)CFR_Internal_V5::WordSetFontSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalWordGetFontSizeSEL, (void*)CFR_Internal_V5::WordGetFontSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalWordSetWordPropsSEL, (void*)CFR_Internal_V5::WordSetWordProps);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalWordGetWordPropsSEL, (void*)CFR_Internal_V5::WordGetWordProps);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalLineNewSEL, (void*)CFR_Internal_V5::LineNew);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalLineDestroySEL, (void*)CFR_Internal_V5::LineDestroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalLineSetStartWordPlaceSEL, (void*)CFR_Internal_V5::LineSetStartWordPlace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalLineGetStartWordPlaceSEL, (void*)CFR_Internal_V5::LineGetStartWordPlace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalLineSetEndWordPlaceSEL, (void*)CFR_Internal_V5::LineSetEndWordPlace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalLineGetEndWordPlaceSEL, (void*)CFR_Internal_V5::LineGetEndWordPlace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalLineSetOriginalPositionSEL, (void*)CFR_Internal_V5::LineSetOriginalPosition);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalLineGetOriginalPositionSEL, (void*)CFR_Internal_V5::LineGetOriginalPosition);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalLineSetWidthSEL, (void*)CFR_Internal_V5::LineSetWidth);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalLineGetWidthSEL, (void*)CFR_Internal_V5::LineGetWidth);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalLineSetAscentSEL, (void*)CFR_Internal_V5::LineSetAscent);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalLineGetAscentSEL, (void*)CFR_Internal_V5::LineGetAscent);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalLineSetDescentSEL, (void*)CFR_Internal_V5::LineSetDescent);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalLineGetDescentSEL, (void*)CFR_Internal_V5::LineGetDescent);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalSectionNewSEL, (void*)CFR_Internal_V5::SectionNew);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalSectionDestroySEL, (void*)CFR_Internal_V5::SectionDestroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalSectionSetStartWordPlaceSEL, (void*)CFR_Internal_V5::SectionSetStartWordPlace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalSectionGetStartWordPlaceSEL, (void*)CFR_Internal_V5::SectionGetStartWordPlace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalSectionSetRectSEL, (void*)CFR_Internal_V5::SectionSetRect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalSectionGetRectSEL, (void*)CFR_Internal_V5::SectionGetRect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalSectionSetSectionPropertiesSEL, (void*)CFR_Internal_V5::SectionSetSectionProperties);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalSectionGetSectionPropertiesSEL, (void*)CFR_Internal_V5::SectionGetSectionProperties);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalSectionSetWordPropertiesSEL, (void*)CFR_Internal_V5::SectionSetWordProperties);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalSectionGetWordPropertiesSEL, (void*)CFR_Internal_V5::SectionGetWordProperties);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalVTIteratorNextWordSEL, (void*)CFR_Internal_V5::VTIteratorNextWord);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalVTIteratorPrevWordSEL, (void*)CFR_Internal_V5::VTIteratorPrevWord);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalVTIteratorNextLineSEL, (void*)CFR_Internal_V5::VTIteratorNextLine);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalVTIteratorPrevLineSEL, (void*)CFR_Internal_V5::VTIteratorPrevLine);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalVTIteratorNextSectionSEL, (void*)CFR_Internal_V5::VTIteratorNextSection);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalVTIteratorPrevSectionSEL, (void*)CFR_Internal_V5::VTIteratorPrevSection);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalVTIteratorGetWordSEL, (void*)CFR_Internal_V5::VTIteratorGetWord);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalVTIteratorSetWordSEL, (void*)CFR_Internal_V5::VTIteratorSetWord);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalVTIteratorGetLineSEL, (void*)CFR_Internal_V5::VTIteratorGetLine);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalVTIteratorGetSectionSEL, (void*)CFR_Internal_V5::VTIteratorGetSection);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalVTIteratorSetSectionSEL, (void*)CFR_Internal_V5::VTIteratorSetSection);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalVTIteratorSetAtSEL, (void*)CFR_Internal_V5::VTIteratorSetAt);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalVTIteratorSetAtIISEL, (void*)CFR_Internal_V5::VTIteratorSetAtII);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalVTIteratorGetAtSEL, (void*)CFR_Internal_V5::VTIteratorGetAt);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalVTIteratorGetDisplayWordSEL, (void*)CFR_Internal_V5::VTIteratorGetDisplayWord);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalVariableTextNewSEL, (void*)CFR_Internal_V5::VariableTextNew);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalVariableTextDestroySEL, (void*)CFR_Internal_V5::VariableTextDestroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalVariableTextProviderNewSEL, (void*)CFR_Internal_V5::VariableTextProviderNew);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalVariableTextProviderDestroySEL, (void*)CFR_Internal_V5::VariableTextProviderDestroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalVariableTextSetProviderSEL, (void*)CFR_Internal_V5::VariableTextSetProvider);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalVariableTextGetIteratorSEL, (void*)CFR_Internal_V5::VariableTextGetIterator);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalVariableTextSetPlateRectSEL, (void*)CFR_Internal_V5::VariableTextSetPlateRect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalVariableTextIsVerticalWritingSEL, (void*)CFR_Internal_V5::VariableTextIsVerticalWriting);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalVariableTextSetAlignmentSEL, (void*)CFR_Internal_V5::VariableTextSetAlignment);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalVariableTextSetPasswordCharSEL, (void*)CFR_Internal_V5::VariableTextSetPasswordChar);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalVariableTextSetLimitCharSEL, (void*)CFR_Internal_V5::VariableTextSetLimitChar);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalVariableTextSetCharArraySEL, (void*)CFR_Internal_V5::VariableTextSetCharArray);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalVariableTextSetCharSpaceSEL, (void*)CFR_Internal_V5::VariableTextSetCharSpace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalVariableTextSetWordSpaceSEL, (void*)CFR_Internal_V5::VariableTextSetWordSpace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalVariableTextSetHorzScaleSEL, (void*)CFR_Internal_V5::VariableTextSetHorzScale);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalVariableTextSetMultiLineSEL, (void*)CFR_Internal_V5::VariableTextSetMultiLine);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalVariableTextSetAutoReturnSEL, (void*)CFR_Internal_V5::VariableTextSetAutoReturn);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalVariableTextSetAutoFontSizeSEL, (void*)CFR_Internal_V5::VariableTextSetAutoFontSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalVariableTextSetFontSizeSEL, (void*)CFR_Internal_V5::VariableTextSetFontSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalVariableTextSetLineLeadingSEL, (void*)CFR_Internal_V5::VariableTextSetLineLeading);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalVariableTextSetRichTextSEL, (void*)CFR_Internal_V5::VariableTextSetRichText);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalVariableTextSetDirectionRTLSEL, (void*)CFR_Internal_V5::VariableTextSetDirectionRTL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalVariableTextInitializeSEL, (void*)CFR_Internal_V5::VariableTextInitialize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalVariableTextIsValidSEL, (void*)CFR_Internal_V5::VariableTextIsValid);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalVariableTextIsRichTextSEL, (void*)CFR_Internal_V5::VariableTextIsRichText);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalVariableTextRearrangeAllSEL, (void*)CFR_Internal_V5::VariableTextRearrangeAll);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalVariableTextRearrangePartSEL, (void*)CFR_Internal_V5::VariableTextRearrangePart);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalVariableTextResetAllSEL, (void*)CFR_Internal_V5::VariableTextResetAll);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalVariableTextSetTextSEL, (void*)CFR_Internal_V5::VariableTextSetText);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalVariableTextInsertWordSEL, (void*)CFR_Internal_V5::VariableTextInsertWord);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalVariableTextInsertSectionSEL, (void*)CFR_Internal_V5::VariableTextInsertSection);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalVariableTextInsertTextSEL, (void*)CFR_Internal_V5::VariableTextInsertText);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalVariableTextDeleteWordsSEL, (void*)CFR_Internal_V5::VariableTextDeleteWords);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalVariableTextDeleteWordSEL, (void*)CFR_Internal_V5::VariableTextDeleteWord);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalVariableTextBackSpaceWordSEL, (void*)CFR_Internal_V5::VariableTextBackSpaceWord);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalVariableTextGetPlateRectSEL, (void*)CFR_Internal_V5::VariableTextGetPlateRect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalVariableTextGetContentRectSEL, (void*)CFR_Internal_V5::VariableTextGetContentRect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalVariableTextGetTotalWordsSEL, (void*)CFR_Internal_V5::VariableTextGetTotalWords);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalVariableTextGetFontSizeSEL, (void*)CFR_Internal_V5::VariableTextGetFontSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalVariableTextGetAlignmentSEL, (void*)CFR_Internal_V5::VariableTextGetAlignment);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalVariableTextGetWordSpaceSEL, (void*)CFR_Internal_V5::VariableTextGetWordSpace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalVariableTextGetPasswordCharSEL, (void*)CFR_Internal_V5::VariableTextGetPasswordChar);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalVariableTextGetCharArraySEL, (void*)CFR_Internal_V5::VariableTextGetCharArray);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalVariableTextGetLimitCharSEL, (void*)CFR_Internal_V5::VariableTextGetLimitChar);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalVariableTextIsMultiLineSEL, (void*)CFR_Internal_V5::VariableTextIsMultiLine);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalVariableTextIsAutoReturnSEL, (void*)CFR_Internal_V5::VariableTextIsAutoReturn);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalVariableTextGetHorzScaleSEL, (void*)CFR_Internal_V5::VariableTextGetHorzScale);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalVariableTextGetCharSpaceSEL, (void*)CFR_Internal_V5::VariableTextGetCharSpace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalVariableTextGetBeginWordPlaceSEL, (void*)CFR_Internal_V5::VariableTextGetBeginWordPlace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalVariableTextGetEndWordPlaceSEL, (void*)CFR_Internal_V5::VariableTextGetEndWordPlace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalVariableTextGetPrevWordPlaceSEL, (void*)CFR_Internal_V5::VariableTextGetPrevWordPlace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalVariableTextGetNextWordPlaceSEL, (void*)CFR_Internal_V5::VariableTextGetNextWordPlace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalVariableTextSearchWordPlaceSEL, (void*)CFR_Internal_V5::VariableTextSearchWordPlace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalVariableTextGetUpWordPlaceSEL, (void*)CFR_Internal_V5::VariableTextGetUpWordPlace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalVariableTextGetDownWordPlaceSEL, (void*)CFR_Internal_V5::VariableTextGetDownWordPlace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalVariableTextGetLineBeginPlaceSEL, (void*)CFR_Internal_V5::VariableTextGetLineBeginPlace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalVariableTextGetLineEndPlaceSEL, (void*)CFR_Internal_V5::VariableTextGetLineEndPlace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalVariableTextGetSectionBeginPlaceSEL, (void*)CFR_Internal_V5::VariableTextGetSectionBeginPlace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalVariableTextGetSectionEndPlaceSEL, (void*)CFR_Internal_V5::VariableTextGetSectionEndPlace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalVariableTextUpdateWordPlaceSEL, (void*)CFR_Internal_V5::VariableTextUpdateWordPlace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalVariableTextAjustLineHeaderSEL, (void*)CFR_Internal_V5::VariableTextAjustLineHeader);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalVariableTextWordPlaceToWordIndexSEL, (void*)CFR_Internal_V5::VariableTextWordPlaceToWordIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalVariableTextWordIndexToWordPlaceSEL, (void*)CFR_Internal_V5::VariableTextWordIndexToWordPlace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalVariableTextIsSectionComplexScriptSEL, (void*)CFR_Internal_V5::VariableTextIsSectionComplexScript);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalVariableTextIsVerticalFontSEL, (void*)CFR_Internal_V5::VariableTextIsVerticalFont);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalGetBulletIteratorSEL, (void*)CFR_Internal_V5::GetBulletIterator);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditFontMapGetDocFontMapSEL, (void*)CFR_Internal_V5::EditFontMapGetDocFontMap);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditFontMapEncodeFontAliasSEL, (void*)CFR_Internal_V5::EditFontMapEncodeFontAlias);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditFontMapGetFontNameSEL, (void*)CFR_Internal_V5::EditFontMapGetFontName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditFontMapGetCharsetSEL, (void*)CFR_Internal_V5::EditFontMapGetCharset);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditFontMapGetFXFontSEL, (void*)CFR_Internal_V5::EditFontMapGetFXFont);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditFontMapGetPDFFontSEL, (void*)CFR_Internal_V5::EditFontMapGetPDFFont);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditFontMapGetCharWidthFSEL, (void*)CFR_Internal_V5::EditFontMapGetCharWidthF);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditFontMapCharCodeFromUnicodeSEL, (void*)CFR_Internal_V5::EditFontMapCharCodeFromUnicode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditFontMapGlyphFromCharCodeSEL, (void*)CFR_Internal_V5::EditFontMapGlyphFromCharCode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditFontMapCharSetFromUnicodeSEL, (void*)CFR_Internal_V5::EditFontMapCharSetFromUnicode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditFontMapGetFontIndexByUnicodeSEL, (void*)CFR_Internal_V5::EditFontMapGetFontIndexByUnicode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditFontMapGetFontIndexSEL, (void*)CFR_Internal_V5::EditFontMapGetFontIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalIsEmbeddedSEL, (void*)CFR_Internal_V5::IsEmbedded);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalSetFXFMEditFontSEL, (void*)CFR_Internal_V5::SetFXFMEditFont);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalGlyphFromCharCode2SEL, (void*)CFR_Internal_V5::GlyphFromCharCode2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditFontMapAddFXFontSEL, (void*)CFR_Internal_V5::EditFontMapAddFXFont);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditFontMapAddPDFFontSEL, (void*)CFR_Internal_V5::EditFontMapAddPDFFont);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditFontMapGetDocumentSEL, (void*)CFR_Internal_V5::EditFontMapGetDocument);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditFontMapLoadAllFontByDictSEL, (void*)CFR_Internal_V5::EditFontMapLoadAllFontByDict);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditFontMapCheckCharacterIsSupportedSEL, (void*)CFR_Internal_V5::EditFontMapCheckCharacterIsSupported);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditFontMapGetStandardFontSEL, (void*)CFR_Internal_V5::EditFontMapGetStandardFont);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditFontMapIsExternalEmbedFontSEL, (void*)CFR_Internal_V5::EditFontMapIsExternalEmbedFont);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditIteratorNextWordSEL, (void*)CFR_Internal_V5::EditIteratorNextWord);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditIteratorNextLineSEL, (void*)CFR_Internal_V5::EditIteratorNextLine);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditIteratorNextSectionSEL, (void*)CFR_Internal_V5::EditIteratorNextSection);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditIteratorPrevWordSEL, (void*)CFR_Internal_V5::EditIteratorPrevWord);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditIteratorPrevLineSEL, (void*)CFR_Internal_V5::EditIteratorPrevLine);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditIteratorPrevSectionSEL, (void*)CFR_Internal_V5::EditIteratorPrevSection);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditIteratorGetWordSEL, (void*)CFR_Internal_V5::EditIteratorGetWord);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditIteratorGetDisplayWordSEL, (void*)CFR_Internal_V5::EditIteratorGetDisplayWord);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditIteratorGetLineSEL, (void*)CFR_Internal_V5::EditIteratorGetLine);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditIteratorGetSectionSEL, (void*)CFR_Internal_V5::EditIteratorGetSection);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditIteratorSetAtSEL, (void*)CFR_Internal_V5::EditIteratorSetAt);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditIteratorSetAtIISEL, (void*)CFR_Internal_V5::EditIteratorSetAtII);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditIteratorGetAtSEL, (void*)CFR_Internal_V5::EditIteratorGetAt);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditIteratorGetEditSEL, (void*)CFR_Internal_V5::EditIteratorGetEdit);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditNewSEL, (void*)CFR_Internal_V5::EditNew);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditDelSEL, (void*)CFR_Internal_V5::EditDel);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditSetFontMapSEL, (void*)CFR_Internal_V5::EditSetFontMap);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditSetVTProviderSEL, (void*)CFR_Internal_V5::EditSetVTProvider);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditSetNotifySEL, (void*)CFR_Internal_V5::EditSetNotify);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditSetOprNotifySEL, (void*)CFR_Internal_V5::EditSetOprNotify);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditGetIteratorSEL, (void*)CFR_Internal_V5::EditGetIterator);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditGetVariableTextSEL, (void*)CFR_Internal_V5::EditGetVariableText);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditGetFontMapSEL, (void*)CFR_Internal_V5::EditGetFontMap);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditInitializeSEL, (void*)CFR_Internal_V5::EditInitialize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditSetPlateRectSEL, (void*)CFR_Internal_V5::EditSetPlateRect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditSetScrollPosSEL, (void*)CFR_Internal_V5::EditSetScrollPos);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditIsVerticalWritingSEL, (void*)CFR_Internal_V5::EditIsVerticalWriting);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditSetAlignmentHSEL, (void*)CFR_Internal_V5::EditSetAlignmentH);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditSetAlignmentVSEL, (void*)CFR_Internal_V5::EditSetAlignmentV);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditSetPasswordCharSEL, (void*)CFR_Internal_V5::EditSetPasswordChar);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditSetLimitCharSEL, (void*)CFR_Internal_V5::EditSetLimitChar);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditSetCharArraySEL, (void*)CFR_Internal_V5::EditSetCharArray);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditSetCharSpaceSEL, (void*)CFR_Internal_V5::EditSetCharSpace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditSetWordSpaceSEL, (void*)CFR_Internal_V5::EditSetWordSpace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditSetHorzScaleSEL, (void*)CFR_Internal_V5::EditSetHorzScale);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditSetLineLeadingSEL, (void*)CFR_Internal_V5::EditSetLineLeading);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditSetMultiLineSEL, (void*)CFR_Internal_V5::EditSetMultiLine);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditSetAutoReturnSEL, (void*)CFR_Internal_V5::EditSetAutoReturn);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditSetAutoFontSizeSEL, (void*)CFR_Internal_V5::EditSetAutoFontSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditSetAutoScrollSEL, (void*)CFR_Internal_V5::EditSetAutoScroll);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditSetFontSizeSEL, (void*)CFR_Internal_V5::EditSetFontSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditSetTextOverflowSEL, (void*)CFR_Internal_V5::EditSetTextOverflow);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalSetDirectionRTLSEL, (void*)CFR_Internal_V5::SetDirectionRTL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditIsRichTextSEL, (void*)CFR_Internal_V5::EditIsRichText);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditSetRichTextSEL, (void*)CFR_Internal_V5::EditSetRichText);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditSetRichTextFontSEL, (void*)CFR_Internal_V5::EditSetRichTextFont);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalSetRichTextIsBoldSEL, (void*)CFR_Internal_V5::SetRichTextIsBold);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalSetRichTextIsItalicSEL, (void*)CFR_Internal_V5::SetRichTextIsItalic);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditSetRichFontSizeSEL, (void*)CFR_Internal_V5::EditSetRichFontSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditSetRichTextColorSEL, (void*)CFR_Internal_V5::EditSetRichTextColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditSetRichTextStrokeColorSEL, (void*)CFR_Internal_V5::EditSetRichTextStrokeColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditSetRichRenderingModeSEL, (void*)CFR_Internal_V5::EditSetRichRenderingMode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditSetRichTextScriptSEL, (void*)CFR_Internal_V5::EditSetRichTextScript);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditSetRichTextUnderlineSEL, (void*)CFR_Internal_V5::EditSetRichTextUnderline);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditSetRichTextCrossoutSEL, (void*)CFR_Internal_V5::EditSetRichTextCrossout);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditSetRichTextCharSpaceSEL, (void*)CFR_Internal_V5::EditSetRichTextCharSpace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditSetRichTextWordSpaceSEL, (void*)CFR_Internal_V5::EditSetRichTextWordSpace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditSetRichTextHorzScaleSEL, (void*)CFR_Internal_V5::EditSetRichTextHorzScale);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditSetRichTextLineLeadingSEL, (void*)CFR_Internal_V5::EditSetRichTextLineLeading);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditSetRichTextLineIndentSEL, (void*)CFR_Internal_V5::EditSetRichTextLineIndent);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditSetRichTextAlignmentSEL, (void*)CFR_Internal_V5::EditSetRichTextAlignment);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditSetRichTextSoftReturnSEL, (void*)CFR_Internal_V5::EditSetRichTextSoftReturn);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditSetSelSEL, (void*)CFR_Internal_V5::EditSetSel);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditGetSelSEL, (void*)CFR_Internal_V5::EditGetSel);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditSelectAllSEL, (void*)CFR_Internal_V5::EditSelectAll);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditSelectNoneSEL, (void*)CFR_Internal_V5::EditSelectNone);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditGetCaretSEL, (void*)CFR_Internal_V5::EditGetCaret);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditGetCaretWordPlaceSEL, (void*)CFR_Internal_V5::EditGetCaretWordPlace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditGetSelTextSEL, (void*)CFR_Internal_V5::EditGetSelText);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditGetTextSEL, (void*)CFR_Internal_V5::EditGetText);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditGetRichTextXMLSEL, (void*)CFR_Internal_V5::EditGetRichTextXML);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditIsSelectedSEL, (void*)CFR_Internal_V5::EditIsSelected);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditGetScrollPosSEL, (void*)CFR_Internal_V5::EditGetScrollPos);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditGetPlateRectSEL, (void*)CFR_Internal_V5::EditGetPlateRect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditGetContentRectSEL, (void*)CFR_Internal_V5::EditGetContentRect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditGetVisibleWordRangeSEL, (void*)CFR_Internal_V5::EditGetVisibleWordRange);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditGetWholeWordRangeSEL, (void*)CFR_Internal_V5::EditGetWholeWordRange);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditGetSelectWordRangeSEL, (void*)CFR_Internal_V5::EditGetSelectWordRange);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditOnMouseDownSEL, (void*)CFR_Internal_V5::EditOnMouseDown);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditOnMouseMoveSEL, (void*)CFR_Internal_V5::EditOnMouseMove);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditOnVK_UPSEL, (void*)CFR_Internal_V5::EditOnVK_UP);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditOnVK_DOWNSEL, (void*)CFR_Internal_V5::EditOnVK_DOWN);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditOnVK_LEFTSEL, (void*)CFR_Internal_V5::EditOnVK_LEFT);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditOnVK_RIGHTSEL, (void*)CFR_Internal_V5::EditOnVK_RIGHT);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditOnVK_HOMESEL, (void*)CFR_Internal_V5::EditOnVK_HOME);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditOnVK_ENDSEL, (void*)CFR_Internal_V5::EditOnVK_END);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditSetTextSEL, (void*)CFR_Internal_V5::EditSetText);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditSetRichTextByXMLSEL, (void*)CFR_Internal_V5::EditSetRichTextByXML);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditInsertWordSEL, (void*)CFR_Internal_V5::EditInsertWord);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditInsertReturnSEL, (void*)CFR_Internal_V5::EditInsertReturn);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditInsertTextSEL, (void*)CFR_Internal_V5::EditInsertText);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditBackspaceSEL, (void*)CFR_Internal_V5::EditBackspace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditDeleteSEL, (void*)CFR_Internal_V5::EditDelete);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditClearSEL, (void*)CFR_Internal_V5::EditClear);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditRedoSEL, (void*)CFR_Internal_V5::EditRedo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditUndoSEL, (void*)CFR_Internal_V5::EditUndo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditSetCaretSEL, (void*)CFR_Internal_V5::EditSetCaret);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditPaintSEL, (void*)CFR_Internal_V5::EditPaint);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditEnableRefreshSEL, (void*)CFR_Internal_V5::EditEnableRefresh);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditRefreshWordRangeSEL, (void*)CFR_Internal_V5::EditRefreshWordRange);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditEnableUndoSEL, (void*)CFR_Internal_V5::EditEnableUndo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditEnableNotifySEL, (void*)CFR_Internal_V5::EditEnableNotify);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditEnableOprNotifySEL, (void*)CFR_Internal_V5::EditEnableOprNotify);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditWordPlaceToWordIndexSEL, (void*)CFR_Internal_V5::EditWordPlaceToWordIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditWordIndexToWordPlaceSEL, (void*)CFR_Internal_V5::EditWordIndexToWordPlace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditGetLineBeginPlaceSEL, (void*)CFR_Internal_V5::EditGetLineBeginPlace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditGetLineEndPlaceSEL, (void*)CFR_Internal_V5::EditGetLineEndPlace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditGetSectionBeginPlaceSEL, (void*)CFR_Internal_V5::EditGetSectionBeginPlace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditGetSectionEndPlaceSEL, (void*)CFR_Internal_V5::EditGetSectionEndPlace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditSearchWordPlaceSEL, (void*)CFR_Internal_V5::EditSearchWordPlace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditGetFontSizeSEL, (void*)CFR_Internal_V5::EditGetFontSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditGetPasswordCharSEL, (void*)CFR_Internal_V5::EditGetPasswordChar);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditGetCharArraySEL, (void*)CFR_Internal_V5::EditGetCharArray);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditGetHorzScaleSEL, (void*)CFR_Internal_V5::EditGetHorzScale);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditGetCharSpaceSEL, (void*)CFR_Internal_V5::EditGetCharSpace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditGetRangeTextSEL, (void*)CFR_Internal_V5::EditGetRangeText);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditIsTextFullSEL, (void*)CFR_Internal_V5::EditIsTextFull);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditCanUndoSEL, (void*)CFR_Internal_V5::EditCanUndo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditCanRedoSEL, (void*)CFR_Internal_V5::EditCanRedo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditResetUndoSEL, (void*)CFR_Internal_V5::EditResetUndo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditIsModifiedSEL, (void*)CFR_Internal_V5::EditIsModified);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditGetTotalWordsSEL, (void*)CFR_Internal_V5::EditGetTotalWords);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditAddUndoItemSEL, (void*)CFR_Internal_V5::EditAddUndoItem);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalBeginGroupUndoSEL, (void*)CFR_Internal_V5::BeginGroupUndo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEndGroupUndoSEL, (void*)CFR_Internal_V5::EndGroupUndo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditSaveLineOffsetSEL, (void*)CFR_Internal_V5::EditSaveLineOffset);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditGetEditAppearanceStreamSEL, (void*)CFR_Internal_V5::EditGetEditAppearanceStream);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditGetRichEditAppearanceStreamSEL, (void*)CFR_Internal_V5::EditGetRichEditAppearanceStream);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditGetSelectAppearanceStreamSEL, (void*)CFR_Internal_V5::EditGetSelectAppearanceStream);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditDrawEditSEL, (void*)CFR_Internal_V5::EditDrawEdit);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditDrawUnderlineSEL, (void*)CFR_Internal_V5::EditDrawUnderline);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditDrawRichEditSEL, (void*)CFR_Internal_V5::EditDrawRichEdit);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditGeneratePageObjectsSEL, (void*)CFR_Internal_V5::EditGeneratePageObjects);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditGenerateRichPageObjectsSEL, (void*)CFR_Internal_V5::EditGenerateRichPageObjects);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditGenerateUnderlineObjectsSEL, (void*)CFR_Internal_V5::EditGenerateUnderlineObjects);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditGetRichTextPlainTextSEL, (void*)CFR_Internal_V5::EditGetRichTextPlainText);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalGetTouchupSEL, (void*)CFR_Internal_V5::GetTouchup);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalBeginEditTextObjectSEL, (void*)CFR_Internal_V5::BeginEditTextObject);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEndEditTextObjectSEL, (void*)CFR_Internal_V5::EndEditTextObject);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEmailUtilSendMailUseConfigSEL, (void*)CFR_Internal_V5::EmailUtilSendMailUseConfig);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEmailUtilShowAddressBookSEL, (void*)CFR_Internal_V5::EmailUtilShowAddressBook);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalIsKeyAndTrialValidSEL, (void*)CFR_Internal_V5::IsKeyAndTrialValid);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalCheckLicenseSEL, (void*)CFR_Internal_V5::CheckLicense);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditIsPunctuationSEL, (void*)CFR_Internal_V5::EditIsPunctuation);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditIsCJKSEL, (void*)CFR_Internal_V5::EditIsCJK);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditIsLatinSEL, (void*)CFR_Internal_V5::EditIsLatin);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditIsNeedToConvertSpaceSEL, (void*)CFR_Internal_V5::EditIsNeedToConvertSpace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalGetCustomStringSEL, (void*)CFR_Internal_V5::GetCustomString);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditDestroyNotifySEL, (void*)CFR_Internal_V5::EditDestroyNotify);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditDestroyOprNotifySEL, (void*)CFR_Internal_V5::EditDestroyOprNotify);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalSetDocReviewIdentitySEL, (void*)CFR_Internal_V5::SetDocReviewIdentity);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalGetDocReviewIdentityNameSEL, (void*)CFR_Internal_V5::GetDocReviewIdentityName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalGetDocReviewIdentityEmailSEL, (void*)CFR_Internal_V5::GetDocReviewIdentityEmail);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalHasVisibleTextObjSEL, (void*)CFR_Internal_V5::HasVisibleTextObj);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalGetProfStoreManagerSEL, (void*)CFR_Internal_V5::GetProfStoreManager);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalProfStoreGetStringSEL, (void*)CFR_Internal_V5::ProfStoreGetString);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalProfStoreGetIntSEL, (void*)CFR_Internal_V5::ProfStoreGetInt);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalProfStoreGetBooleanSEL, (void*)CFR_Internal_V5::ProfStoreGetBoolean);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalProfStoreEnumAllKeyNameSEL, (void*)CFR_Internal_V5::ProfStoreEnumAllKeyName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalProfStoreEnumKeyNameSEL, (void*)CFR_Internal_V5::ProfStoreEnumKeyName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalProfStoreEnumKeyValueNameSEL, (void*)CFR_Internal_V5::ProfStoreEnumKeyValueName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalProfStoreEnumKeyValueSEL, (void*)CFR_Internal_V5::ProfStoreEnumKeyValue);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalGWL10NHelperAutoResizeDropWidthSEL, (void*)CFR_Internal_V5::GWL10NHelperAutoResizeDropWidth);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalGWL10NHelperResetItemDropWidthSEL, (void*)CFR_Internal_V5::GWL10NHelperResetItemDropWidth);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalGetActivePopupMenuMessageWndSEL, (void*)CFR_Internal_V5::GetActivePopupMenuMessageWnd);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalGetPhoneNumberSEL, (void*)CFR_Internal_V5::GetPhoneNumber);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalGetEditionTitleSEL, (void*)CFR_Internal_V5::GetEditionTitle);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalGetEmailSEL, (void*)CFR_Internal_V5::GetEmail);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditGetWordLatinSmallLigatureSEL, (void*)CFR_Internal_V5::EditGetWordLatinSmallLigature);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalGetClonedDocSEL, (void*)CFR_Internal_V5::GetClonedDoc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditFontMapReleaseDocFontMapSEL, (void*)CFR_Internal_V5::EditFontMapReleaseDocFontMap);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalCreateActionWizardHandlerMgrSEL, (void*)CFR_Internal_V5::CreateActionWizardHandlerMgr);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalDestroyActionWizardHandlerMgrSEL, (void*)CFR_Internal_V5::DestroyActionWizardHandlerMgr);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalSetActionWizardHandlerMgrSEL, (void*)CFR_Internal_V5::SetActionWizardHandlerMgr);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalGetActionWizardHandlerMgrSEL, (void*)CFR_Internal_V5::GetActionWizardHandlerMgr);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalCreateActionWizardHandlerSEL, (void*)CFR_Internal_V5::CreateActionWizardHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalDestroyActionWizardHandlerSEL, (void*)CFR_Internal_V5::DestroyActionWizardHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalRegisterActionWizardHandlerSEL, (void*)CFR_Internal_V5::RegisterActionWizardHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalUnRegisterActionWizardHandlerSEL, (void*)CFR_Internal_V5::UnRegisterActionWizardHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalActionWizardHandlerGetNameSEL, (void*)CFR_Internal_V5::ActionWizardHandlerGetName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalActionWizardHandlerGetCommandNameSEL, (void*)CFR_Internal_V5::ActionWizardHandlerGetCommandName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalActionWizardHandlerGetPresetFlagSEL, (void*)CFR_Internal_V5::ActionWizardHandlerGetPresetFlag);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalActionWizardHandlerSettingSEL, (void*)CFR_Internal_V5::ActionWizardHandlerSetting);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalActionWizardHandlerExecuteSEL, (void*)CFR_Internal_V5::ActionWizardHandlerExecute);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalActionWizardHandlerGetTitleSEL, (void*)CFR_Internal_V5::ActionWizardHandlerGetTitle);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalActionWizardHandlerNeedReopenSEL, (void*)CFR_Internal_V5::ActionWizardHandlerNeedReopen);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalActionWizardHandlerNeedChangeExecuteDocSEL, (void*)CFR_Internal_V5::ActionWizardHandlerNeedChangeExecuteDoc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalExportAnnotToXFDF2SEL, (void*)CFR_Internal_V5::ExportAnnotToXFDF2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalImprotAnnotFromXFDF2SEL, (void*)CFR_Internal_V5::ImprotAnnotFromXFDF2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalSubscribeShowRibbonUISEL, (void*)CFR_Internal_V5::SubscribeShowRibbonUI);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalSubscribeStartWorkflowSEL, (void*)CFR_Internal_V5::SubscribeStartWorkflow);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalSubscribeIsLicenseRevokedSEL, (void*)CFR_Internal_V5::SubscribeIsLicenseRevoked);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalSubscribeShowFlashSEL, (void*)CFR_Internal_V5::SubscribeShowFlash);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalCPDFPluginProviderSetSEL, (void*)CFR_Internal_V5::CPDFPluginProviderSet);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalCPDFPluginProviderDestroySEL, (void*)CFR_Internal_V5::CPDFPluginProviderDestroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalCPDFPluginProviderGetSEL, (void*)CFR_Internal_V5::CPDFPluginProviderGet);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalCPDFPluginProviderShowConnectedPDFAdDialogSEL, (void*)CFR_Internal_V5::CPDFPluginProviderShowConnectedPDFAdDialog);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalGetRemainDaysSEL, (void*)CFR_Internal_V5::GetRemainDays);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalCommentsAnnotSetUpdateServerTimeSEL, (void*)CFR_Internal_V5::CommentsAnnotSetUpdateServerTime);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalGetLicenseSNSEL, (void*)CFR_Internal_V5::GetLicenseSN);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalGetKeyfileTypeSEL, (void*)CFR_Internal_V5::GetKeyfileType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalGetFormatSymbolStringSEL, (void*)CFR_Internal_V5::GetFormatSymbolString);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalGetLocalFormatTimeStringSEL, (void*)CFR_Internal_V5::GetLocalFormatTimeString);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalConvertToPDFGetFileTypeSEL, (void*)CFR_Internal_V5::ConvertToPDFGetFileType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalGetFileFilterSEL, (void*)CFR_Internal_V5::GetFileFilter);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalRegisterDocHandlerOfPDDocForActionWizardSEL, (void*)CFR_Internal_V5::RegisterDocHandlerOfPDDocForActionWizard);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalCommentsAnnotSetIconStateSEL, (void*)CFR_Internal_V5::CommentsAnnotSetIconState);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalGetAnnotInputFontNameSEL, (void*)CFR_Internal_V5::GetAnnotInputFontName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalIsDisableCPDFSEL, (void*)CFR_Internal_V5::IsDisableCPDF);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalRunJSPluginByFlagSEL, (void*)CFR_Internal_V5::RunJSPluginByFlag);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalRunJSPluginByNameSEL, (void*)CFR_Internal_V5::RunJSPluginByName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalIsJSPanelActivatedSEL, (void*)CFR_Internal_V5::IsJSPanelActivated);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalExpandJSPanelSEL, (void*)CFR_Internal_V5::ExpandJSPanel);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditSetDrawNotifySEL, (void*)CFR_Internal_V5::EditSetDrawNotify);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditDestroyDrawNotifySEL, (void*)CFR_Internal_V5::EditDestroyDrawNotify);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEmailUtilRegisterPreSendMailHandlerSEL, (void*)CFR_Internal_V5::EmailUtilRegisterPreSendMailHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalGetCurEditonTitleSEL, (void*)CFR_Internal_V5::GetCurEditonTitle);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalIsDisableInternetSEL, (void*)CFR_Internal_V5::IsDisableInternet);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalIsUseSystemSelectionColorSEL, (void*)CFR_Internal_V5::IsUseSystemSelectionColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditSetSelBkColorSEL, (void*)CFR_Internal_V5::EditSetSelBkColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditDrawRichEdit2SEL, (void*)CFR_Internal_V5::EditDrawRichEdit2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalIsJSPluginDisabledSEL, (void*)CFR_Internal_V5::IsJSPluginDisabled);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalGetAccReadingOrderModeSEL, (void*)CFR_Internal_V5::GetAccReadingOrderMode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalIsAccOverrideReadingOrderSEL, (void*)CFR_Internal_V5::IsAccOverrideReadingOrder);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalGetDocAccReadingOrderSEL, (void*)CFR_Internal_V5::GetDocAccReadingOrder);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalGetDocAccReadingModeSEL, (void*)CFR_Internal_V5::GetDocAccReadingMode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalSetReadActivateStatusSEL, (void*)CFR_Internal_V5::SetReadActivateStatus);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalGetReadActivateStatusSEL, (void*)CFR_Internal_V5::GetReadActivateStatus);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalWIPPluginProviderSetSEL, (void*)CFR_Internal_V5::WIPPluginProviderSet);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalWIPPluginProviderDestroySEL, (void*)CFR_Internal_V5::WIPPluginProviderDestroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalWIPPluginProviderGetSEL, (void*)CFR_Internal_V5::WIPPluginProviderGet);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalWIPPluginProviderAllowedPasteSEL, (void*)CFR_Internal_V5::WIPPluginProviderAllowedPaste);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalThemeCheckHCMTSEL, (void*)CFR_Internal_V5::ThemeCheckHCMT);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalThemeGetTextColorSEL, (void*)CFR_Internal_V5::ThemeGetTextColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalThemeGetDisableTextColorSEL, (void*)CFR_Internal_V5::ThemeGetDisableTextColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalThemeGetHyperlinkTextColorSEL, (void*)CFR_Internal_V5::ThemeGetHyperlinkTextColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalThemeGetSelectedTextColorSEL, (void*)CFR_Internal_V5::ThemeGetSelectedTextColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalThemeGetButtonTextColorSEL, (void*)CFR_Internal_V5::ThemeGetButtonTextColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalThemeGetTooltipColorSEL, (void*)CFR_Internal_V5::ThemeGetTooltipColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalThemeGetBackgroundColorSEL, (void*)CFR_Internal_V5::ThemeGetBackgroundColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEmailUtilRegisterAttachmentNameModifierSEL, (void*)CFR_Internal_V5::EmailUtilRegisterAttachmentNameModifier);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalGetAppSaveAsLocationSEL, (void*)CFR_Internal_V5::GetAppSaveAsLocation);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalLoadJSPluginSEL, (void*)CFR_Internal_V5::LoadJSPlugin);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalActionWizardHandlerIsEnableExecuteSEL, (void*)CFR_Internal_V5::ActionWizardHandlerIsEnableExecute);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalActionWizardHandlerExecuteDoneSEL, (void*)CFR_Internal_V5::ActionWizardHandlerExecuteDone);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditFontMapGetFontIndexByUnicode2SEL, (void*)CFR_Internal_V5::EditFontMapGetFontIndexByUnicode2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditFontMapGetFontIndex2SEL, (void*)CFR_Internal_V5::EditFontMapGetFontIndex2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalCompareGetDifInfosSEL, (void*)CFR_Internal_V5::CompareGetDifInfos);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalCompareReleaseDifInfosSEL, (void*)CFR_Internal_V5::CompareReleaseDifInfos);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalCompareDrawNoteAPSEL, (void*)CFR_Internal_V5::CompareDrawNoteAP);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalGetCreationDateSEL, (void*)CFR_Internal_V5::GetCreationDate);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalSetReadStatusSEL, (void*)CFR_Internal_V5::SetReadStatus);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalGetReadStatusSEL, (void*)CFR_Internal_V5::GetReadStatus);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalCheckActualLicenseSEL, (void*)CFR_Internal_V5::CheckActualLicense);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalOpenCreatedPDFDocSEL, (void*)CFR_Internal_V5::OpenCreatedPDFDoc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalGetIsPheeModeSEL, (void*)CFR_Internal_V5::GetIsPheeMode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditSetEastenArabicNumeralModeSEL, (void*)CFR_Internal_V5::EditSetEastenArabicNumeralMode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalActionWizardLogCreateSEL, (void*)CFR_Internal_V5::ActionWizardLogCreate);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalActionWizardLogWriteDetailInfoSEL, (void*)CFR_Internal_V5::ActionWizardLogWriteDetailInfo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalActionWizardLogWriteCurrentTimeSEL, (void*)CFR_Internal_V5::ActionWizardLogWriteCurrentTime);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalActionWizardLogWriteBoundaryInfoSEL, (void*)CFR_Internal_V5::ActionWizardLogWriteBoundaryInfo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalActionWizardLogGenerateSEL, (void*)CFR_Internal_V5::ActionWizardLogGenerate);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalActionWizardLogCloseSEL, (void*)CFR_Internal_V5::ActionWizardLogClose);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalActionWizardLogWriteSEL, (void*)CFR_Internal_V5::ActionWizardLogWrite);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalActionWizardLogGetStateSEL, (void*)CFR_Internal_V5::ActionWizardLogGetState);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalActionWizardLogGetLastFilePathSEL, (void*)CFR_Internal_V5::ActionWizardLogGetLastFilePath);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalActionWizardLogSetCurFilePathSEL, (void*)CFR_Internal_V5::ActionWizardLogSetCurFilePath);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalActionWizardLogSetExcuteFileStatusSEL, (void*)CFR_Internal_V5::ActionWizardLogSetExcuteFileStatus);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalGetUpgExpDateSEL, (void*)CFR_Internal_V5::GetUpgExpDate);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalIsUsedAnotherPerpetualLicenseSEL, (void*)CFR_Internal_V5::IsUsedAnotherPerpetualLicense);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalBaseAnnoteIsSnap2GridEnabledSEL, (void*)CFR_Internal_V5::BaseAnnoteIsSnap2GridEnabled);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalBaseAnnoteGetGridLineSEL, (void*)CFR_Internal_V5::BaseAnnoteGetGridLine);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalBaseAnnoteGetGridMainLineSEL, (void*)CFR_Internal_V5::BaseAnnoteGetGridMainLine);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalAddDocToPrivilegedListSEL, (void*)CFR_Internal_V5::AddDocToPrivilegedList);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalIsPrivilegedFileSEL, (void*)CFR_Internal_V5::IsPrivilegedFile);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalIsDisableInternet2SEL, (void*)CFR_Internal_V5::IsDisableInternet2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalIsSimpleChineseVersionSEL, (void*)CFR_Internal_V5::IsSimpleChineseVersion);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalGetLicenseeSEL, (void*)CFR_Internal_V5::GetLicensee);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditFontMapGetFontIndexByUnicode3SEL, (void*)CFR_Internal_V5::EditFontMapGetFontIndexByUnicode3);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditFontMapGetFontIndex3SEL, (void*)CFR_Internal_V5::EditFontMapGetFontIndex3);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditFontMapAddFXFont2SEL, (void*)CFR_Internal_V5::EditFontMapAddFXFont2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditFontMapAddPDFFont2SEL, (void*)CFR_Internal_V5::EditFontMapAddPDFFont2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditSetRichTextFont2SEL, (void*)CFR_Internal_V5::EditSetRichTextFont2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditFontMapGetFontName2SEL, (void*)CFR_Internal_V5::EditFontMapGetFontName2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalClearDragRectsSEL, (void*)CFR_Internal_V5::ClearDragRects);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalOnMovedByPointSEL, (void*)CFR_Internal_V5::OnMovedByPoint);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalOnMovedByRectSEL, (void*)CFR_Internal_V5::OnMovedByRect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalSaveKeepToolSelectedToRegistrySEL, (void*)CFR_Internal_V5::SaveKeepToolSelectedToRegistry);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEnableKeepToolSelectedSEL, (void*)CFR_Internal_V5::EnableKeepToolSelected);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalChangeKeepToolSelectedStateFromRegistrySEL, (void*)CFR_Internal_V5::ChangeKeepToolSelectedStateFromRegistry);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalAddDragRectSEL, (void*)CFR_Internal_V5::AddDragRect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalResetSEL, (void*)CFR_Internal_V5::Reset);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalRunPageFlatSEL, (void*)CFR_Internal_V5::RunPageFlat);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalGetCurrentUserNameSEL, (void*)CFR_Internal_V5::GetCurrentUserName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEncryptAttachmentSEL, (void*)CFR_Internal_V5::EncryptAttachment);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalGetAllFormatFontSizeSEL, (void*)CFR_Internal_V5::GetAllFormatFontSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalGetAtAllFormatFontSEL, (void*)CFR_Internal_V5::GetAtAllFormatFont);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalGetFontFaceNameBoldItalicSEL, (void*)CFR_Internal_V5::GetFontFaceNameBoldItalic);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalGetFontStyleSEL, (void*)CFR_Internal_V5::GetFontStyle);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditSetEnableMLAutoFullFontSizeSEL, (void*)CFR_Internal_V5::EditSetEnableMLAutoFullFontSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalFlattenDynamicXFADocSEL, (void*)CFR_Internal_V5::FlattenDynamicXFADoc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalIsSelfSignCertGenSEL, (void*)CFR_Internal_V5::IsSelfSignCertGen);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalGetIsCheckPrivateKeyCertSEL, (void*)CFR_Internal_V5::GetIsCheckPrivateKeyCert);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalParseMailtoURISEL, (void*)CFR_Internal_V5::ParseMailtoURI);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalIsMailtoURISEL, (void*)CFR_Internal_V5::IsMailtoURI);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalAsyncUpdateCheckerInfoSEL, (void*)CFR_Internal_V5::AsyncUpdateCheckerInfo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalIsCurrentToolSEL, (void*)CFR_Internal_V5::IsCurrentTool);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalSetToolModeSEL, (void*)CFR_Internal_V5::SetToolMode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalGetToolModeSEL, (void*)CFR_Internal_V5::GetToolMode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalSetPreToolHandlerSEL, (void*)CFR_Internal_V5::SetPreToolHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEmailUtilSendMailUseConfig2SEL, (void*)CFR_Internal_V5::EmailUtilSendMailUseConfig2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalDIBSourceToBmpSEL, (void*)CFR_Internal_V5::DIBSourceToBmp);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalBeginBulletEditingSEL, (void*)CFR_Internal_V5::BeginBulletEditing);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalBeginBulletEditing2SEL, (void*)CFR_Internal_V5::BeginBulletEditing2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalSetNotifySEL, (void*)CFR_Internal_V5::SetNotify);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalOnCharTabSEL, (void*)CFR_Internal_V5::OnCharTab);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalGetLicenseEditonSEL, (void*)CFR_Internal_V5::GetLicenseEditon);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalGetPropsSecSpaceSEL, (void*)CFR_Internal_V5::GetPropsSecSpace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalIsUndoRedoingSEL, (void*)CFR_Internal_V5::IsUndoRedoing);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalBeginGroupSEL, (void*)CFR_Internal_V5::BeginGroup);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEndGroupSEL, (void*)CFR_Internal_V5::EndGroup);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalGetUndoDescriptionSEL, (void*)CFR_Internal_V5::GetUndoDescription);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalGetRedoDescriptionSEL, (void*)CFR_Internal_V5::GetRedoDescription);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalLoadPopupMenuStringSEL, (void*)CFR_Internal_V5::LoadPopupMenuString);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalReleaseBulletNotifySEL, (void*)CFR_Internal_V5::ReleaseBulletNotify);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEndBulletEditingSEL, (void*)CFR_Internal_V5::EndBulletEditing);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalIsSupportSymbolSEL, (void*)CFR_Internal_V5::IsSupportSymbol);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalRunOCRSEL, (void*)CFR_Internal_V5::RunOCR);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalGetLocalAbyLanSEL, (void*)CFR_Internal_V5::GetLocalAbyLan);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalbExistFX_Abbyy_Ocr_dllSEL, (void*)CFR_Internal_V5::bExistFX_Abbyy_Ocr_dll);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalGetOCREngineSupportLanSEL, (void*)CFR_Internal_V5::GetOCREngineSupportLan);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalLoadAnnotIconSEL, (void*)CFR_Internal_V5::LoadAnnotIcon);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalSubscribeIsEducationSEL, (void*)CFR_Internal_V5::SubscribeIsEducation);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalAddFloatyBarBtnSEL, (void*)CFR_Internal_V5::AddFloatyBarBtn);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalAddRibbonBtnsToFloatySEL, (void*)CFR_Internal_V5::AddRibbonBtnsToFloaty);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalCreateRibbonFloatySEL, (void*)CFR_Internal_V5::CreateRibbonFloaty);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalUndoSEL, (void*)CFR_Internal_V5::Undo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalRedoSEL, (void*)CFR_Internal_V5::Redo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalPWLWndCreationParamSetSystemHandlerSEL, (void*)CFR_Internal_V5::PWLWndCreationParamSetSystemHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalPWLWndCreationParamSetProviderSEL, (void*)CFR_Internal_V5::PWLWndCreationParamSetProvider);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalPWLWndCreationParamSetFocusHandlerSEL, (void*)CFR_Internal_V5::PWLWndCreationParamSetFocusHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalPWLWndCreationParamSetBackgroundColorSEL, (void*)CFR_Internal_V5::PWLWndCreationParamSetBackgroundColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalPWLWndCreationParamSetAttachedWndSEL, (void*)CFR_Internal_V5::PWLWndCreationParamSetAttachedWnd);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalPWLWndCreationParamSetSpellCheckSEL, (void*)CFR_Internal_V5::PWLWndCreationParamSetSpellCheck);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalPWLWndCreationParamSetBorderStyleSEL, (void*)CFR_Internal_V5::PWLWndCreationParamSetBorderStyle);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalPWLWndCreationParamSetBorderWidthSEL, (void*)CFR_Internal_V5::PWLWndCreationParamSetBorderWidth);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalPWLWndCreationParamSetBorderColorSEL, (void*)CFR_Internal_V5::PWLWndCreationParamSetBorderColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalPWLWndCreationParamSetTextStrokeColorSEL, (void*)CFR_Internal_V5::PWLWndCreationParamSetTextStrokeColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalPWLWndCreationParamSetTransparencySEL, (void*)CFR_Internal_V5::PWLWndCreationParamSetTransparency);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalPWLWndCreationParamSetUseFXFontDeAscentSEL, (void*)CFR_Internal_V5::PWLWndCreationParamSetUseFXFontDeAscent);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalPWLWndCreationParamSetDashSEL, (void*)CFR_Internal_V5::PWLWndCreationParamSetDash);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalPWLWndCreationParamSetAttachedDataSEL, (void*)CFR_Internal_V5::PWLWndCreationParamSetAttachedData);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalPWLWndCreationParamSetParentWndSEL, (void*)CFR_Internal_V5::PWLWndCreationParamSetParentWnd);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalPWLWndCreationParamSetCursorTypeSEL, (void*)CFR_Internal_V5::PWLWndCreationParamSetCursorType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalPWLWndCreationParamSetMtChildSEL, (void*)CFR_Internal_V5::PWLWndCreationParamSetMtChild);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalPWLWndCreationParamSetShowFontSizeDPISEL, (void*)CFR_Internal_V5::PWLWndCreationParamSetShowFontSizeDPI);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalPWLWndCreationParamSetNeedEmbedSEL, (void*)CFR_Internal_V5::PWLWndCreationParamSetNeedEmbed);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalOpenCertifiedPDF2SEL, (void*)CFR_Internal_V5::OpenCertifiedPDF2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalFieldsMutiCopySEL, (void*)CFR_Internal_V5::FieldsMutiCopy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalCreateDigitalIDSEL, (void*)CFR_Internal_V5::CreateDigitalID);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalOpenDigitalIDsManagerSEL, (void*)CFR_Internal_V5::OpenDigitalIDsManager);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalSetIsCheckPrivateKeyCertSEL, (void*)CFR_Internal_V5::SetIsCheckPrivateKeyCert);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalPWLWndCreationParamNew2SEL, (void*)CFR_Internal_V5::PWLWndCreationParamNew2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalArabicResetWordSEL, (void*)CFR_Internal_V5::ArabicResetWord);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalOnDestroyDocViewSEL, (void*)CFR_Internal_V5::OnDestroyDocView);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEditSetText2SEL, (void*)CFR_Internal_V5::EditSetText2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalWipPluginEncryptFileSEL, (void*)CFR_Internal_V5::WipPluginEncryptFile);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalCreatePrintMgrSEL, (void*)CFR_Internal_V5::CreatePrintMgr);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalSetPrintRangeSEL, (void*)CFR_Internal_V5::SetPrintRange);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalSetPrintRotateSEL, (void*)CFR_Internal_V5::SetPrintRotate);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalSetPrintScaleSEL, (void*)CFR_Internal_V5::SetPrintScale);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalSetPrintAutoCenterSEL, (void*)CFR_Internal_V5::SetPrintAutoCenter);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalSetPrintAutoRotateSEL, (void*)CFR_Internal_V5::SetPrintAutoRotate);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalSetPrintGraySEL, (void*)CFR_Internal_V5::SetPrintGray);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalSetPrintCollateSEL, (void*)CFR_Internal_V5::SetPrintCollate);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalSetPrintPageOrderSEL, (void*)CFR_Internal_V5::SetPrintPageOrder);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalSetPrintPrintWhatSEL, (void*)CFR_Internal_V5::SetPrintPrintWhat);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalSetPrintOrientationSEL, (void*)CFR_Internal_V5::SetPrintOrientation);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalSetPrintPagesPerSheetSEL, (void*)CFR_Internal_V5::SetPrintPagesPerSheet);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalSetPrintPaperSizeByPageSEL, (void*)CFR_Internal_V5::SetPrintPaperSizeByPage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalSetPrintReverseSEL, (void*)CFR_Internal_V5::SetPrintReverse);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalSetPrintMarginsSEL, (void*)CFR_Internal_V5::SetPrintMargins);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalSetPrintAsImageSEL, (void*)CFR_Internal_V5::SetPrintAsImage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalSetSimulateOverprintingSEL, (void*)CFR_Internal_V5::SetSimulateOverprinting);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalSetPrintIgnoreAdvancedSettingSEL, (void*)CFR_Internal_V5::SetPrintIgnoreAdvancedSetting);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalSetProgressDisplaySEL, (void*)CFR_Internal_V5::SetProgressDisplay);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalSetPaperSizeSEL, (void*)CFR_Internal_V5::SetPaperSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalSetPrintPageArraySEL, (void*)CFR_Internal_V5::SetPrintPageArray);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalGetDefaultPrintSEL, (void*)CFR_Internal_V5::GetDefaultPrint);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalSetDefaultPrintSEL, (void*)CFR_Internal_V5::SetDefaultPrint);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalSetPrintOutputFileNameSEL, (void*)CFR_Internal_V5::SetPrintOutputFileName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalDoModalSEL, (void*)CFR_Internal_V5::DoModal);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalDeletePrintMgSEL, (void*)CFR_Internal_V5::DeletePrintMg);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalIsSearchingTextSEL, (void*)CFR_Internal_V5::IsSearchingText);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalWaitingFileClosedSEL, (void*)CFR_Internal_V5::WaitingFileClosed);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalConvertPdfFromWebSEL, (void*)CFR_Internal_V5::ConvertPdfFromWeb);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalGetFromClipboardSEL, (void*)CFR_Internal_V5::GetFromClipboard);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalCreateTwainDriverSEL, (void*)CFR_Internal_V5::CreateTwainDriver);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalDeleteTwainDriverSEL, (void*)CFR_Internal_V5::DeleteTwainDriver);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalGetMenuItemSEL, (void*)CFR_Internal_V5::GetMenuItem);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalEnableInsertPositionSEL, (void*)CFR_Internal_V5::EnableInsertPosition);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalSetCurTypeSEL, (void*)CFR_Internal_V5::SetCurType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalShowDialogSEL, (void*)CFR_Internal_V5::ShowDialog);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalSetInsertPositionSEL, (void*)CFR_Internal_V5::SetInsertPosition);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalSetAppendFileInsertPosSEL, (void*)CFR_Internal_V5::SetAppendFileInsertPos);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalGetRecordOperSEL, (void*)CFR_Internal_V5::GetRecordOper);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalGetDataCountSEL, (void*)CFR_Internal_V5::GetDataCount);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalGetPresetNameAtSEL, (void*)CFR_Internal_V5::GetPresetNameAt);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalStartScanSEL, (void*)CFR_Internal_V5::StartScan);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalSameNameFieldExistSEL, (void*)CFR_Internal_V5::SameNameFieldExist);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalShowRenameMsgSEL, (void*)CFR_Internal_V5::ShowRenameMsg);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalConvertPdfFromWeb2SEL, (void*)CFR_Internal_V5::ConvertPdfFromWeb2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalCopyFieldsSEL, (void*)CFR_Internal_V5::CopyFields);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalAddCRSAUndoItemSEL, (void*)CFR_Internal_V5::AddCRSAUndoItem);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalAddStampAPSEL, (void*)CFR_Internal_V5::AddStampAP);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalGetDestinationSEL, (void*)CFR_Internal_V5::GetDestination);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalDoAction_URISEL, (void*)CFR_Internal_V5::DoAction_URI);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalDoAction_LaunchSEL, (void*)CFR_Internal_V5::DoAction_Launch);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalDoAction_GoToRSEL, (void*)CFR_Internal_V5::DoAction_GoToR);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalDoAction_GoToESEL, (void*)CFR_Internal_V5::DoAction_GoToE);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalIsAttachDeniedSEL, (void*)CFR_Internal_V5::IsAttachDenied);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalIsAttachDenied2SEL, (void*)CFR_Internal_V5::IsAttachDenied2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalShowAttachFailedDlgSEL, (void*)CFR_Internal_V5::ShowAttachFailedDlg);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalConvertMediaToPDFSEL, (void*)CFR_Internal_V5::ConvertMediaToPDF);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalRunProcJavaScriptSEL, (void*)CFR_Internal_V5::RunProcJavaScript);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalCheckDocTrustOneTimeSEL, (void*)CFR_Internal_V5::CheckDocTrustOneTime);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalAddDocTrustOneTimeSEL, (void*)CFR_Internal_V5::AddDocTrustOneTime);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalReBuildTreeViewSEL, (void*)CFR_Internal_V5::ReBuildTreeView);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalAddAccessibilitySEL, (void*)CFR_Internal_V5::AddAccessibility);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalCanDoAddAccessibilitySEL, (void*)CFR_Internal_V5::CanDoAddAccessibility);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalCheckIsDownloadStatusSEL, (void*)CFR_Internal_V5::CheckIsDownloadStatus);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalSetFormRecognitionProcSEL, (void*)CFR_Internal_V5::SetFormRecognitionProc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalGetContainedCountInPagesSEL, (void*)CFR_Internal_V5::GetContainedCountInPages);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalGetPrompPagesSEL, (void*)CFR_Internal_V5::GetPrompPages);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalReduceFileSizeSEL, (void*)CFR_Internal_V5::ReduceFileSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalShowReduceSizeDlgSEL, (void*)CFR_Internal_V5::ShowReduceSizeDlg);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalLoadAuiModuleStringSEL, (void*)CFR_Internal_V5::LoadAuiModuleString);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalIsNameExistSEL, (void*)CFR_Internal_V5::IsNameExist);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalAddFileAttachmentSEL, (void*)CFR_Internal_V5::AddFileAttachment);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalRedactTextSEL, (void*)CFR_Internal_V5::RedactText);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalExecScanDocTofileSEL, (void*)CFR_Internal_V5::ExecScanDocTofile);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalIsFileAttachSubDocSEL, (void*)CFR_Internal_V5::IsFileAttachSubDoc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalIsParentDocAllowModifySEL, (void*)CFR_Internal_V5::IsParentDocAllowModify);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalSetActiveToolSEL, (void*)CFR_Internal_V5::SetActiveTool);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalDoAction_DocOpenSEL, (void*)CFR_Internal_V5::DoAction_DocOpen);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalActionWizardHandlerNeedSaveDocSEL, (void*)CFR_Internal_V5::ActionWizardHandlerNeedSaveDoc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalGetPackageLanguageSEL, (void*)CFR_Internal_V5::GetPackageLanguage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalShowSafeModeDialogSEL, (void*)CFR_Internal_V5::ShowSafeModeDialog);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalReShowSafeModeDialogSEL, (void*)CFR_Internal_V5::ReShowSafeModeDialog);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalSetDocRenderFinishOneTimeSEL, (void*)CFR_Internal_V5::SetDocRenderFinishOneTime);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalSetPageVisibleEventFinishSEL, (void*)CFR_Internal_V5::SetPageVisibleEventFinish);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalExecuteOnPortfolioFinishRenderSEL, (void*)CFR_Internal_V5::ExecuteOnPortfolioFinishRender);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalSetRecipientSeedSEL, (void*)CFR_Internal_V5::SetRecipientSeed);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalConstructorInterformSEL, (void*)CFR_Internal_V5::ConstructorInterform);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalParserOpenPasswordSEL, (void*)CFR_Internal_V5::ParserOpenPassword);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalCheckOwerPasswordSEL, (void*)CFR_Internal_V5::CheckOwerPassword);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalSetTrialDaySEL, (void*)CFR_Internal_V5::SetTrialDay);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalSetTotalTrialDaySEL, (void*)CFR_Internal_V5::SetTotalTrialDay);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalSetAgainCheckLisenseSEL, (void*)CFR_Internal_V5::SetAgainCheckLisense);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalFindAllBMNodeSEL, (void*)CFR_Internal_V5::FindAllBMNode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalFixRulesSEL, (void*)CFR_Internal_V5::FixRules);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalSetCallBackProcessSEL, (void*)CFR_Internal_V5::SetCallBackProcess);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalCreateAccessbilityFixSEL, (void*)CFR_Internal_V5::CreateAccessbilityFix);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalReleaseAccessbilityFixSEL, (void*)CFR_Internal_V5::ReleaseAccessbilityFix);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalSetActionGotoSEL, (void*)CFR_Internal_V5::SetActionGoto);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalSetActionURLSEL, (void*)CFR_Internal_V5::SetActionURL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalSetActionLaunchSEL, (void*)CFR_Internal_V5::SetActionLaunch);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalSetActionNamedSEL, (void*)CFR_Internal_V5::SetActionNamed);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalSetActionImportDataSEL, (void*)CFR_Internal_V5::SetActionImportData);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalSetActionJavaScriptSEL, (void*)CFR_Internal_V5::SetActionJavaScript);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalCanUndoSEL, (void*)CFR_Internal_V5::CanUndo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalCanRedoSEL, (void*)CFR_Internal_V5::CanRedo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalGridWindow2DocSEL, (void*)CFR_Internal_V5::GridWindow2Doc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalGridWindow2Doc2SEL, (void*)CFR_Internal_V5::GridWindow2Doc2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalSetSearchingTextFlagSEL, (void*)CFR_Internal_V5::SetSearchingTextFlag);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalGetTrialDaysSEL, (void*)CFR_Internal_V5::GetTrialDays);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalIsBlankPageSEL, (void*)CFR_Internal_V5::IsBlankPage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalAddAttachFileSEL, (void*)CFR_Internal_V5::AddAttachFile);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalGetAttachFileSEL, (void*)CFR_Internal_V5::GetAttachFile);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalCheckIsFpeKeySEL, (void*)CFR_Internal_V5::CheckIsFpeKey);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalSetAgainCheckTrialSEL, (void*)CFR_Internal_V5::SetAgainCheckTrial);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalGetSEL, (void*)CFR_Internal_V5::Get);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalTextMarkupCreateAnnotSEL, (void*)CFR_Internal_V5::TextMarkupCreateAnnot);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalTextMarkupResetAnnotSEL, (void*)CFR_Internal_V5::TextMarkupResetAnnot);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalTextMarkupDeleteAnnotSEL, (void*)CFR_Internal_V5::TextMarkupDeleteAnnot);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalTextMarkupCloneAnnotSEL, (void*)CFR_Internal_V5::TextMarkupCloneAnnot);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalTextMarkupBeginModifySEL, (void*)CFR_Internal_V5::TextMarkupBeginModify);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalTextMarkupEndModifySEL, (void*)CFR_Internal_V5::TextMarkupEndModify);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalFAAItemObjectGetDicSEL, (void*)CFR_Internal_V5::FAAItemObjectGetDic);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalFAAItemObjectSetDicSEL, (void*)CFR_Internal_V5::FAAItemObjectSetDic);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalFAAItemObjectGetPageIndexSEL, (void*)CFR_Internal_V5::FAAItemObjectGetPageIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalFAAItemObjectSetPageIndexSEL, (void*)CFR_Internal_V5::FAAItemObjectSetPageIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalFAAItemObjectSetbAnnotSEL, (void*)CFR_Internal_V5::FAAItemObjectSetbAnnot);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalFAAItemObjectGetbAnnotSEL, (void*)CFR_Internal_V5::FAAItemObjectGetbAnnot);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalFAAItemObjectSetUFileNameSEL, (void*)CFR_Internal_V5::FAAItemObjectSetUFileName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalFAAItemObjectGetUFileNameSEL, (void*)CFR_Internal_V5::FAAItemObjectGetUFileName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalFAAItemObjectSetFileNameSEL, (void*)CFR_Internal_V5::FAAItemObjectSetFileName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalFAAItemObjectGetFileNameSEL, (void*)CFR_Internal_V5::FAAItemObjectGetFileName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalGetFileAttachmentObjectsSEL, (void*)CFR_Internal_V5::GetFileAttachmentObjects);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalReleaseFileAttachmentObjectsSEL, (void*)CFR_Internal_V5::ReleaseFileAttachmentObjects);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalOpenFileAttachmentSEL, (void*)CFR_Internal_V5::OpenFileAttachment);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalOpenFileAttachment2SEL, (void*)CFR_Internal_V5::OpenFileAttachment2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalIsTextMarkSEL, (void*)CFR_Internal_V5::IsTextMark);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalDoSearchAndRedactSEL, (void*)CFR_Internal_V5::DoSearchAndRedact);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalApplyRedactSEL, (void*)CFR_Internal_V5::ApplyRedact);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalIsDisableAdvertiseSEL, (void*)CFR_Internal_V5::IsDisableAdvertise);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalGetSelectLoginMethodsSEL, (void*)CFR_Internal_V5::GetSelectLoginMethods);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalGetPackageLanguageNameSEL, (void*)CFR_Internal_V5::GetPackageLanguageName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalGetPackageAgentNameSEL, (void*)CFR_Internal_V5::GetPackageAgentName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalGetServiceDomainSEL, (void*)CFR_Internal_V5::GetServiceDomain);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalAddToLogSEL, (void*)CFR_Internal_V5::AddToLog);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalIsAttachCanOpenSEL, (void*)CFR_Internal_V5::IsAttachCanOpen);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalCheckSecuritySEL, (void*)CFR_Internal_V5::CheckSecurity);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalShowAndCheckAttachFaileDlgSEL, (void*)CFR_Internal_V5::ShowAndCheckAttachFaileDlg);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalIsDisableDefaultLaunchAttachmentPermsSEL, (void*)CFR_Internal_V5::IsDisableDefaultLaunchAttachmentPerms);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalGetSubExpierDateSEL, (void*)CFR_Internal_V5::GetSubExpierDate);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalShowRibbonFilePageSEL, (void*)CFR_Internal_V5::ShowRibbonFilePage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalRemoveFileAttachmentObjectSEL, (void*)CFR_Internal_V5::RemoveFileAttachmentObject);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalSetReplaceColorsSEL, (void*)CFR_Internal_V5::SetReplaceColors);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalBFExportFormSEL, (void*)CFR_Internal_V5::BFExportForm);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalFrameRemoveAllGroupSEL, (void*)CFR_Internal_V5::FrameRemoveAllGroup);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalFrameNewVertGroupSEL, (void*)CFR_Internal_V5::FrameNewVertGroup);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalGetLoginDomainSEL, (void*)CFR_Internal_V5::GetLoginDomain);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalSEL, FRInternalExportCommentsSEL, (void*)CFR_Internal_V5::ExportComments);
	}
};

class CFR_SpellCheck_V5_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRSpellCheckSEL, FRSpellCheckNewSEL, (void*)CFR_SpellCheck_V5::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRSpellCheckSEL, FRSpellCheckIgnoreSEL, (void*)CFR_SpellCheck_V5::Ignore);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRSpellCheckSEL, FRSpellCheckCheckStringSEL, (void*)CFR_SpellCheck_V5::CheckString);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRSpellCheckSEL, FRSpellCheckAddDicSEL, (void*)CFR_SpellCheck_V5::AddDic);
	}
};

// fr_appImpl.h end

// In file fr_barImpl.h
class CFR_RibbonBar_V5_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonBarSEL, FRRibbonBarAddCategorySEL, (void*)CFR_RibbonBar_V5::AddCategory);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonBarSEL, FRRibbonBarAddRibbonContextCategorySEL, (void*)CFR_RibbonBar_V5::AddRibbonContextCategory);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonBarSEL, FRRibbonBarActivateContextCategorySEL, (void*)CFR_RibbonBar_V5::ActivateContextCategory);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonBarSEL, FRRibbonBarShowContextCategoriesSEL, (void*)CFR_RibbonBar_V5::ShowContextCategories);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonBarSEL, FRRibbonBarGetCategoryCountSEL, (void*)CFR_RibbonBar_V5::GetCategoryCount);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonBarSEL, FRRibbonBarGetCategoryByIndexSEL, (void*)CFR_RibbonBar_V5::GetCategoryByIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonBarSEL, FRRibbonBarGetCategoryByNameSEL, (void*)CFR_RibbonBar_V5::GetCategoryByName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonBarSEL, FRRibbonBarAddAsQATSEL, (void*)CFR_RibbonBar_V5::AddAsQAT);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonBarSEL, FRRibbonBarAddToTabsSEL, (void*)CFR_RibbonBar_V5::AddToTabs);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonBarSEL, FRRibbonBarAddHiddenSEL, (void*)CFR_RibbonBar_V5::AddHidden);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonBarSEL, FRRibbonBarAddBackStageViewItemSEL, (void*)CFR_RibbonBar_V5::AddBackStageViewItem);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonBarSEL, FRRibbonBarGetBackStageViewItemSEL, (void*)CFR_RibbonBar_V5::GetBackStageViewItem);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonBarSEL, FRRibbonBarSelectBackStageViewItemSEL, (void*)CFR_RibbonBar_V5::SelectBackStageViewItem);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonBarSEL, FRRibbonBarAddButtonToAddPlaceSEL, (void*)CFR_RibbonBar_V5::AddButtonToAddPlace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonBarSEL, FRRibbonBarCloseFilePageSEL, (void*)CFR_RibbonBar_V5::CloseFilePage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonBarSEL, FRRibbonBarFindElementByNameSEL, (void*)CFR_RibbonBar_V5::FindElementByName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonBarSEL, FRRibbonBarIsBackStageViewActiveSEL, (void*)CFR_RibbonBar_V5::IsBackStageViewActive);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonBarSEL, FRRibbonBarRecalcLayoutSEL, (void*)CFR_RibbonBar_V5::RecalcLayout);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonBarSEL, FRRibbonBarGetActiveCategorySEL, (void*)CFR_RibbonBar_V5::GetActiveCategory);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonBarSEL, FRRibbonBarSetActiveCategorySEL, (void*)CFR_RibbonBar_V5::SetActiveCategory);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonBarSEL, FRRibbonBarSetActiveCategory2SEL, (void*)CFR_RibbonBar_V5::SetActiveCategory2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonBarSEL, FRRibbonBarIsMinimizeSEL, (void*)CFR_RibbonBar_V5::IsMinimize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonBarSEL, FRRibbonBarAddCaptionButtonSEL, (void*)CFR_RibbonBar_V5::AddCaptionButton);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonBarSEL, FRRibbonBarRegisterFilePageEventHandlerSEL, (void*)CFR_RibbonBar_V5::RegisterFilePageEventHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonBarSEL, FRRibbonBarDestroyFilePageEventHandlerSEL, (void*)CFR_RibbonBar_V5::DestroyFilePageEventHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonBarSEL, FRRibbonBarAddCategory2SEL, (void*)CFR_RibbonBar_V5::AddCategory2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonBarSEL, FRRibbonBarShowButtonInAddPlaceSEL, (void*)CFR_RibbonBar_V5::ShowButtonInAddPlace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonBarSEL, FRRibbonBarUpdateCmdUISEL, (void*)CFR_RibbonBar_V5::UpdateCmdUI);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonBarSEL, FRRibbonBarAddButtonToAddPlace2SEL, (void*)CFR_RibbonBar_V5::AddButtonToAddPlace2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonBarSEL, FRRibbonBarAddToTabs2SEL, (void*)CFR_RibbonBar_V5::AddToTabs2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonBarSEL, FRRibbonBarFindHiddenFloatySEL, (void*)CFR_RibbonBar_V5::FindHiddenFloaty);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonBarSEL, FRRibbonBarAddOnlyForAccelButtonSEL, (void*)CFR_RibbonBar_V5::AddOnlyForAccelButton);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonBarSEL, FRRibbonBarAddHidden2SEL, (void*)CFR_RibbonBar_V5::AddHidden2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonBarSEL, FRRibbonBarAddToTabRightSEL, (void*)CFR_RibbonBar_V5::AddToTabRight);
	}
};

class CFR_RibbonCategory_V5_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonCategorySEL, FRRibbonCategorySetTitleSEL, (void*)CFR_RibbonCategory_V5::SetTitle);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonCategorySEL, FRRibbonCategoryGetTitleSEL, (void*)CFR_RibbonCategory_V5::GetTitle);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonCategorySEL, FRRibbonCategorySetContextTitleSEL, (void*)CFR_RibbonCategory_V5::SetContextTitle);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonCategorySEL, FRRibbonCategoryGetContextTitleSEL, (void*)CFR_RibbonCategory_V5::GetContextTitle);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonCategorySEL, FRRibbonCategorySetKeySEL, (void*)CFR_RibbonCategory_V5::SetKey);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonCategorySEL, FRRibbonCategoryGetKeySEL, (void*)CFR_RibbonCategory_V5::GetKey);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonCategorySEL, FRRibbonCategorySetVisibleSEL, (void*)CFR_RibbonCategory_V5::SetVisible);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonCategorySEL, FRRibbonCategoryGetVisibleSEL, (void*)CFR_RibbonCategory_V5::GetVisible);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonCategorySEL, FRRibbonCategoryAddPanelSEL, (void*)CFR_RibbonCategory_V5::AddPanel);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonCategorySEL, FRRibbonCategoryGetPanelCountSEL, (void*)CFR_RibbonCategory_V5::GetPanelCount);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonCategorySEL, FRRibbonCategoryGetPanelByIndexSEL, (void*)CFR_RibbonCategory_V5::GetPanelByIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonCategorySEL, FRRibbonCategoryGetPanelByNameSEL, (void*)CFR_RibbonCategory_V5::GetPanelByName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonCategorySEL, FRRibbonCategoryGetNameSEL, (void*)CFR_RibbonCategory_V5::GetName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonCategorySEL, FRRibbonCategoryShowInQATCustomizeToolsDlgSEL, (void*)CFR_RibbonCategory_V5::ShowInQATCustomizeToolsDlg);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonCategorySEL, FRRibbonCategoryCopyPanelSEL, (void*)CFR_RibbonCategory_V5::CopyPanel);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonCategorySEL, FRRibbonCategoryRecalcLayoutSEL, (void*)CFR_RibbonCategory_V5::RecalcLayout);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonCategorySEL, FRRibbonCategoryAddPanel2SEL, (void*)CFR_RibbonCategory_V5::AddPanel2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonCategorySEL, FRRibbonCategoryAddDialogSEL, (void*)CFR_RibbonCategory_V5::AddDialog);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonCategorySEL, FRRibbonCategoryPreTranslateMessageSEL, (void*)CFR_RibbonCategory_V5::PreTranslateMessage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonCategorySEL, FRRibbonCategoryAddDialogToRightSEL, (void*)CFR_RibbonCategory_V5::AddDialogToRight);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonCategorySEL, FRRibbonCategoryGetPosSEL, (void*)CFR_RibbonCategory_V5::GetPos);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonCategorySEL, FRRibbonCategorySetPosSEL, (void*)CFR_RibbonCategory_V5::SetPos);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonCategorySEL, FRRibbonCategorySetHighlightSEL, (void*)CFR_RibbonCategory_V5::SetHighlight);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonCategorySEL, FRRibbonCategoryGetHighlightColorSEL, (void*)CFR_RibbonCategory_V5::GetHighlightColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonCategorySEL, FRRibbonCategoryGetTabRectSEL, (void*)CFR_RibbonCategory_V5::GetTabRect);
	}
};

class CFR_RibbonPanel_V5_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonPanelSEL, FRRibbonPanelAddElementSEL, (void*)CFR_RibbonPanel_V5::AddElement);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonPanelSEL, FRRibbonPanelChangeElementTypeSEL, (void*)CFR_RibbonPanel_V5::ChangeElementType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonPanelSEL, FRRibbonPanelAddElementToGroupSEL, (void*)CFR_RibbonPanel_V5::AddElementToGroup);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonPanelSEL, FRRibbonPanelSetLaunchButtonSEL, (void*)CFR_RibbonPanel_V5::SetLaunchButton);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonPanelSEL, FRRibbonPanelCopyElementToPanelSEL, (void*)CFR_RibbonPanel_V5::CopyElementToPanel);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonPanelSEL, FRRibbonPanelSetTitleSEL, (void*)CFR_RibbonPanel_V5::SetTitle);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonPanelSEL, FRRibbonPanelGetTitleSEL, (void*)CFR_RibbonPanel_V5::GetTitle);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonPanelSEL, FRRibbonPanelSetVisibleSEL, (void*)CFR_RibbonPanel_V5::SetVisible);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonPanelSEL, FRRibbonPanelGetVisibleSEL, (void*)CFR_RibbonPanel_V5::GetVisible);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonPanelSEL, FRRibbonPanelGetElementByNameSEL, (void*)CFR_RibbonPanel_V5::GetElementByName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonPanelSEL, FRRibbonPanelGetElementCountSEL, (void*)CFR_RibbonPanel_V5::GetElementCount);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonPanelSEL, FRRibbonPanelGetElementByIndexSEL, (void*)CFR_RibbonPanel_V5::GetElementByIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonPanelSEL, FRRibbonPanelSetPanelImageSEL, (void*)CFR_RibbonPanel_V5::SetPanelImage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonPanelSEL, FRRibbonPanelGetNameSEL, (void*)CFR_RibbonPanel_V5::GetName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonPanelSEL, FRRibbonPanelShowInQATCustomizeToolsDlgSEL, (void*)CFR_RibbonPanel_V5::ShowInQATCustomizeToolsDlg);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonPanelSEL, FRRibbonPanelSetImageInitProcSEL, (void*)CFR_RibbonPanel_V5::SetImageInitProc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonPanelSEL, FRRibbonPanelSetKeySEL, (void*)CFR_RibbonPanel_V5::SetKey);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonPanelSEL, FRRibbonPanelAddDialogSEL, (void*)CFR_RibbonPanel_V5::AddDialog);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonPanelSEL, FRRibbonPanelPreTranslateMessageSEL, (void*)CFR_RibbonPanel_V5::PreTranslateMessage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonPanelSEL, FRRibbonPanelEnableAddToCustomizeDlgSEL, (void*)CFR_RibbonPanel_V5::EnableAddToCustomizeDlg);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonPanelSEL, FRRibbonPanelSetShowDefaultButtonAtLastSEL, (void*)CFR_RibbonPanel_V5::SetShowDefaultButtonAtLast);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonPanelSEL, FRRibbonPanelCopyElementToPanel2SEL, (void*)CFR_RibbonPanel_V5::CopyElementToPanel2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonPanelSEL, FRRibbonPanelAddControlSEL, (void*)CFR_RibbonPanel_V5::AddControl);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonPanelSEL, FRRibbonPanelGetControlByNameSEL, (void*)CFR_RibbonPanel_V5::GetControlByName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonPanelSEL, FRRibbonPanelGetControlByIndexSEL, (void*)CFR_RibbonPanel_V5::GetControlByIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonPanelSEL, FRRibbonPanelAddElement2SEL, (void*)CFR_RibbonPanel_V5::AddElement2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonPanelSEL, FRRibbonPanelAddElementToGroup2SEL, (void*)CFR_RibbonPanel_V5::AddElementToGroup2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonPanelSEL, FRRibbonPanelSetPDFImageParentNameSEL, (void*)CFR_RibbonPanel_V5::SetPDFImageParentName);
	}
};

class CFR_RibbonElement_V5_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonElementSEL, FRRibbonElementAddSubItemSEL, (void*)CFR_RibbonElement_V5::AddSubItem);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonElementSEL, FRRibbonElementSetExecuteProcSEL, (void*)CFR_RibbonElement_V5::SetExecuteProc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonElementSEL, FRRibbonElementSetComputeEnabledProcSEL, (void*)CFR_RibbonElement_V5::SetComputeEnabledProc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonElementSEL, FRRibbonElementSetComputeMarkedProcSEL, (void*)CFR_RibbonElement_V5::SetComputeMarkedProc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonElementSEL, FRRibbonElementDoExecuteProcSEL, (void*)CFR_RibbonElement_V5::DoExecuteProc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonElementSEL, FRRibbonElementIsEnabledSEL, (void*)CFR_RibbonElement_V5::IsEnabled);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonElementSEL, FRRibbonElementIsMarkedSEL, (void*)CFR_RibbonElement_V5::IsMarked);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonElementSEL, FRRibbonElementSetClientDataSEL, (void*)CFR_RibbonElement_V5::SetClientData);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonElementSEL, FRRibbonElementGetClientDataSEL, (void*)CFR_RibbonElement_V5::GetClientData);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonElementSEL, FRRibbonElementSetAccelSEL, (void*)CFR_RibbonElement_V5::SetAccel);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonElementSEL, FRRibbonElementGetAccelSEL, (void*)CFR_RibbonElement_V5::GetAccel);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonElementSEL, FRRibbonElementSetKeySEL, (void*)CFR_RibbonElement_V5::SetKey);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonElementSEL, FRRibbonElementGetKeySEL, (void*)CFR_RibbonElement_V5::GetKey);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonElementSEL, FRRibbonElementSetTooltipSEL, (void*)CFR_RibbonElement_V5::SetTooltip);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonElementSEL, FRRibbonElementGetTooltipSEL, (void*)CFR_RibbonElement_V5::GetTooltip);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonElementSEL, FRRibbonElementSetDescriptionSEL, (void*)CFR_RibbonElement_V5::SetDescription);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonElementSEL, FRRibbonElementGetDescriptionSEL, (void*)CFR_RibbonElement_V5::GetDescription);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonElementSEL, FRRibbonElementSetTitleSEL, (void*)CFR_RibbonElement_V5::SetTitle);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonElementSEL, FRRibbonElementGetTitleSEL, (void*)CFR_RibbonElement_V5::GetTitle);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonElementSEL, FRRibbonElementSetImageSEL, (void*)CFR_RibbonElement_V5::SetImage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonElementSEL, FRRibbonElementAddChangeImageSEL, (void*)CFR_RibbonElement_V5::AddChangeImage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonElementSEL, FRRibbonElementChangeImageSEL, (void*)CFR_RibbonElement_V5::ChangeImage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonElementSEL, FRRibbonElementSetTooltipImageSEL, (void*)CFR_RibbonElement_V5::SetTooltipImage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonElementSEL, FRRibbonElementSetTooltipImageIISEL, (void*)CFR_RibbonElement_V5::SetTooltipImageII);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonElementSEL, FRRibbonElementSetVisibleSEL, (void*)CFR_RibbonElement_V5::SetVisible);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonElementSEL, FRRibbonElementGetVisibleSEL, (void*)CFR_RibbonElement_V5::GetVisible);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonElementSEL, FRRibbonElementRemoveSEL, (void*)CFR_RibbonElement_V5::Remove);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonElementSEL, FRRibbonElementGetTypeSEL, (void*)CFR_RibbonElement_V5::GetType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonElementSEL, FRRibbonElementGetOriginalIDSEL, (void*)CFR_RibbonElement_V5::GetOriginalID);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonElementSEL, FRRibbonElementGetNameSEL, (void*)CFR_RibbonElement_V5::GetName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonElementSEL, FRRibbonElementGetSubItemCountSEL, (void*)CFR_RibbonElement_V5::GetSubItemCount);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonElementSEL, FRRibbonElementFindSubElementByIndexSEL, (void*)CFR_RibbonElement_V5::FindSubElementByIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonElementSEL, FRRibbonElementGetSubElementByNameSEL, (void*)CFR_RibbonElement_V5::GetSubElementByName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonElementSEL, FRRibbonElementCopyElementAsSubItemSEL, (void*)CFR_RibbonElement_V5::CopyElementAsSubItem);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonElementSEL, FRRibbonElementGetCorrespondingButtonSEL, (void*)CFR_RibbonElement_V5::GetCorrespondingButton);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonElementSEL, FRRibbonElementSetAsSubElementSEL, (void*)CFR_RibbonElement_V5::SetAsSubElement);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonElementSEL, FRRibbonElementSetImplicitLargeBitmapSEL, (void*)CFR_RibbonElement_V5::SetImplicitLargeBitmap);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonElementSEL, FRRibbonElementSetShowModeSEL, (void*)CFR_RibbonElement_V5::SetShowMode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonElementSEL, FRRibbonElementSetDropdownProcSEL, (void*)CFR_RibbonElement_V5::SetDropdownProc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonElementSEL, FRRibbonElementGetClientRectSEL, (void*)CFR_RibbonElement_V5::GetClientRect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonElementSEL, FRRibbonElementGetWindowRectSEL, (void*)CFR_RibbonElement_V5::GetWindowRect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonElementSEL, FRRibbonElementShowInQATCustomizeToolsDlgSEL, (void*)CFR_RibbonElement_V5::ShowInQATCustomizeToolsDlg);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonElementSEL, FRRibbonElementSetImageInitProcSEL, (void*)CFR_RibbonElement_V5::SetImageInitProc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonElementSEL, FRRibbonElementGetButtonMapIdSEL, (void*)CFR_RibbonElement_V5::GetButtonMapId);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonElementSEL, FRRibbonElementSetBackstageViewTabElementKeepStateSEL, (void*)CFR_RibbonElement_V5::SetBackstageViewTabElementKeepState);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonElementSEL, FRRibbonElementIsBackstageViewTabElementKeepStateSEL, (void*)CFR_RibbonElement_V5::IsBackstageViewTabElementKeepState);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonElementSEL, FRRibbonElementSetSelectOnlySEL, (void*)CFR_RibbonElement_V5::SetSelectOnly);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonElementSEL, FRRibbonElementGetCategoryNameSEL, (void*)CFR_RibbonElement_V5::GetCategoryName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonElementSEL, FRRibbonElementGetPanelNameSEL, (void*)CFR_RibbonElement_V5::GetPanelName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonElementSEL, FRRibbonElementSetHighlightSEL, (void*)CFR_RibbonElement_V5::SetHighlight);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonElementSEL, FRRibbonElementSetPDFImageSEL, (void*)CFR_RibbonElement_V5::SetPDFImage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonElementSEL, FRRibbonElementAddChangePDFImageSEL, (void*)CFR_RibbonElement_V5::AddChangePDFImage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonElementSEL, FRRibbonElementChangePDFImageSEL, (void*)CFR_RibbonElement_V5::ChangePDFImage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonElementSEL, FRRibbonElementSetDropDownAddElementProcSEL, (void*)CFR_RibbonElement_V5::SetDropDownAddElementProc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonElementSEL, FRRibbonElementAddSubItem2SEL, (void*)CFR_RibbonElement_V5::AddSubItem2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonElementSEL, FRRibbonElementGetFullTitleSEL, (void*)CFR_RibbonElement_V5::GetFullTitle);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonElementSEL, FRRibbonElementSetTooltipHasHelpSEL, (void*)CFR_RibbonElement_V5::SetTooltipHasHelp);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonElementSEL, FRRibbonElementSetEditChangeProcSEL, (void*)CFR_RibbonElement_V5::SetEditChangeProc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonElementSEL, FRRibbonElementAddHighlightImageSEL, (void*)CFR_RibbonElement_V5::AddHighlightImage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonElementSEL, FRRibbonElementSetImageReplaceColorSEL, (void*)CFR_RibbonElement_V5::SetImageReplaceColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonElementSEL, FRRibbonElementSetPDFImageParentNameSEL, (void*)CFR_RibbonElement_V5::SetPDFImageParentName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonElementSEL, FRRibbonElementFindElementByNameFloatySEL, (void*)CFR_RibbonElement_V5::FindElementByNameFloaty);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonElementSEL, FRRibbonElementSetClosePopupMenuProcSEL, (void*)CFR_RibbonElement_V5::SetClosePopupMenuProc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonElementSEL, FRRibbonElementAddButtonToRightSEL, (void*)CFR_RibbonElement_V5::AddButtonToRight);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonElementSEL, FRRibbonElementSetRightButtonPDFBitmapSEL, (void*)CFR_RibbonElement_V5::SetRightButtonPDFBitmap);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonElementSEL, FRRibbonElementSetRighButtonAutoHideSEL, (void*)CFR_RibbonElement_V5::SetRighButtonAutoHide);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonElementSEL, FRRibbonElementDisableHighContrastThemeImageSEL, (void*)CFR_RibbonElement_V5::DisableHighContrastThemeImage);
	}
};

class CFR_RibbonButton_V5_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonButtonSEL, FRRibbonButtonGetElementSEL, (void*)CFR_RibbonButton_V5::GetElement);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonButtonSEL, FRRibbonButtonSetDefaultCommandSEL, (void*)CFR_RibbonButton_V5::SetDefaultCommand);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonButtonSEL, FRRibbonButtonSetAlwaysShowDescriptionSEL, (void*)CFR_RibbonButton_V5::SetAlwaysShowDescription);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonButtonSEL, FRRibbonButtonSetButtonPopupWndSEL, (void*)CFR_RibbonButton_V5::SetButtonPopupWnd);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonButtonSEL, FRRibbonButtonCloseButtonPopupWndSEL, (void*)CFR_RibbonButton_V5::CloseButtonPopupWnd);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonButtonSEL, FRRibbonButtonSetMenuSEL, (void*)CFR_RibbonButton_V5::SetMenu);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonButtonSEL, FRRibbonButtonSetButtonArrowSEL, (void*)CFR_RibbonButton_V5::SetButtonArrow);
	}
};

class CFR_RibbonEdit_V5_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonEditSEL, FRRibbonEditGetElementSEL, (void*)CFR_RibbonEdit_V5::GetElement);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonEditSEL, FRRibbonEditGetTextSEL, (void*)CFR_RibbonEdit_V5::GetText);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonEditSEL, FRRibbonEditSetTextSEL, (void*)CFR_RibbonEdit_V5::SetText);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonEditSEL, FRRibbonEditEnableSpinButtonsSEL, (void*)CFR_RibbonEdit_V5::EnableSpinButtons);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonEditSEL, FRRibbonEditSetSearchModeSEL, (void*)CFR_RibbonEdit_V5::SetSearchMode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonEditSEL, FRRibbonEditSetWidthSEL, (void*)CFR_RibbonEdit_V5::SetWidth);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonEditSEL, FRRibbonEditGetHWndSEL, (void*)CFR_RibbonEdit_V5::GetHWnd);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonEditSEL, FRRibbonEditSetTextFlagSEL, (void*)CFR_RibbonEdit_V5::SetTextFlag);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonEditSEL, FRRibbonEditSetFocusSEL, (void*)CFR_RibbonEdit_V5::SetFocus);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonEditSEL, FRRibbonEditAddButtonToRightSEL, (void*)CFR_RibbonEdit_V5::AddButtonToRight);
	}
};

class CFR_RibbonLabel_V5_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonLabelSEL, FRRibbonLabelGetElementSEL, (void*)CFR_RibbonLabel_V5::GetElement);
	}
};

class CFR_RibbonCheckBox_V5_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonCheckBoxSEL, FRRibbonCheckBoxGetElementSEL, (void*)CFR_RibbonCheckBox_V5::GetElement);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonCheckBoxSEL, FRRibbonCheckBoxIsCheckedSEL, (void*)CFR_RibbonCheckBox_V5::IsChecked);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonCheckBoxSEL, FRRibbonCheckBoxSetCheckSEL, (void*)CFR_RibbonCheckBox_V5::SetCheck);
	}
};

class CFR_RibbonRadioButton_V5_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonRadioButtonSEL, FRRibbonRadioButtonGetElementSEL, (void*)CFR_RibbonRadioButton_V5::GetElement);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonRadioButtonSEL, FRRibbonRadioButtonIsCheckedSEL, (void*)CFR_RibbonRadioButton_V5::IsChecked);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonRadioButtonSEL, FRRibbonRadioButtonSetCheckSEL, (void*)CFR_RibbonRadioButton_V5::SetCheck);
	}
};

class CFR_RibbonComboBox_V5_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonComboBoxSEL, FRRibbonComboBoxGetElementSEL, (void*)CFR_RibbonComboBox_V5::GetElement);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonComboBoxSEL, FRRibbonComboBoxAddItemSEL, (void*)CFR_RibbonComboBox_V5::AddItem);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonComboBoxSEL, FRRibbonComboBoxInsertItemSEL, (void*)CFR_RibbonComboBox_V5::InsertItem);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonComboBoxSEL, FRRibbonComboBoxGetItemCountSEL, (void*)CFR_RibbonComboBox_V5::GetItemCount);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonComboBoxSEL, FRRibbonComboBoxGetItemSEL, (void*)CFR_RibbonComboBox_V5::GetItem);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonComboBoxSEL, FRRibbonComboBoxGetCurSelSEL, (void*)CFR_RibbonComboBox_V5::GetCurSel);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonComboBoxSEL, FRRibbonComboBoxRemoveAllItemsSEL, (void*)CFR_RibbonComboBox_V5::RemoveAllItems);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonComboBoxSEL, FRRibbonComboBoxSelectItemSEL, (void*)CFR_RibbonComboBox_V5::SelectItem);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonComboBoxSEL, FRRibbonComboBoxDeleteItemSEL, (void*)CFR_RibbonComboBox_V5::DeleteItem);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonComboBoxSEL, FRRibbonComboBoxFindItemSEL, (void*)CFR_RibbonComboBox_V5::FindItem);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonComboBoxSEL, FRRibbonComboBoxSetWidthSEL, (void*)CFR_RibbonComboBox_V5::SetWidth);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonComboBoxSEL, FRRibbonComboBoxSetEditBoxSEL, (void*)CFR_RibbonComboBox_V5::SetEditBox);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonComboBoxSEL, FRRibbonComboBoxGetEditTextSEL, (void*)CFR_RibbonComboBox_V5::GetEditText);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonComboBoxSEL, FRRibbonComboBoxSetEditTextSEL, (void*)CFR_RibbonComboBox_V5::SetEditText);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonComboBoxSEL, FRRibbonComboBoxEnableDropDownListResizeSEL, (void*)CFR_RibbonComboBox_V5::EnableDropDownListResize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonComboBoxSEL, FRRibbonComboBoxGetHWndSEL, (void*)CFR_RibbonComboBox_V5::GetHWnd);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonComboBoxSEL, FRRibbonComboBoxSetTextFlagSEL, (void*)CFR_RibbonComboBox_V5::SetTextFlag);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonComboBoxSEL, FRRibbonComboBoxSetFocusSEL, (void*)CFR_RibbonComboBox_V5::SetFocus);
	}
};

class CFR_RibbonFontComboBox_V5_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonFontComboBoxSEL, FRRibbonFontComboBoxGetElementSEL, (void*)CFR_RibbonFontComboBox_V5::GetElement);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonFontComboBoxSEL, FRRibbonFontComboBoxGetItemSEL, (void*)CFR_RibbonFontComboBox_V5::GetItem);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonFontComboBoxSEL, FRRibbonFontComboBoxGetCurSelSEL, (void*)CFR_RibbonFontComboBox_V5::GetCurSel);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonFontComboBoxSEL, FRRibbonFontComboBoxSelectItemSEL, (void*)CFR_RibbonFontComboBox_V5::SelectItem);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonFontComboBoxSEL, FRRibbonFontComboBoxSetWidthSEL, (void*)CFR_RibbonFontComboBox_V5::SetWidth);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonFontComboBoxSEL, FRRibbonFontComboBoxSetEditBoxSEL, (void*)CFR_RibbonFontComboBox_V5::SetEditBox);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonFontComboBoxSEL, FRRibbonFontComboBoxGetEditTextSEL, (void*)CFR_RibbonFontComboBox_V5::GetEditText);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonFontComboBoxSEL, FRRibbonFontComboBoxSetEditTextSEL, (void*)CFR_RibbonFontComboBox_V5::SetEditText);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonFontComboBoxSEL, FRRibbonFontComboBoxEnableDropDownListResizeSEL, (void*)CFR_RibbonFontComboBox_V5::EnableDropDownListResize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonFontComboBoxSEL, FRRibbonFontComboBoxGetHWndSEL, (void*)CFR_RibbonFontComboBox_V5::GetHWnd);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonFontComboBoxSEL, FRRibbonFontComboBoxAddFontSEL, (void*)CFR_RibbonFontComboBox_V5::AddFont);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonFontComboBoxSEL, FRRibbonFontComboBoxInsertFontSEL, (void*)CFR_RibbonFontComboBox_V5::InsertFont);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonFontComboBoxSEL, FRRibbonFontComboBoxGetFontIndexSEL, (void*)CFR_RibbonFontComboBox_V5::GetFontIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonFontComboBoxSEL, FRRibbonFontComboBoxGetFontNameSEL, (void*)CFR_RibbonFontComboBox_V5::GetFontName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonFontComboBoxSEL, FRRibbonFontComboBoxGetScriptNameSEL, (void*)CFR_RibbonFontComboBox_V5::GetScriptName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonFontComboBoxSEL, FRRibbonFontComboBoxSelectItem2SEL, (void*)CFR_RibbonFontComboBox_V5::SelectItem2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonFontComboBoxSEL, FRRibbonFontComboBoxRemoveFontSEL, (void*)CFR_RibbonFontComboBox_V5::RemoveFont);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonFontComboBoxSEL, FRRibbonFontComboBoxRemoveFont2SEL, (void*)CFR_RibbonFontComboBox_V5::RemoveFont2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonFontComboBoxSEL, FRRibbonFontComboBoxGetFontCountSEL, (void*)CFR_RibbonFontComboBox_V5::GetFontCount);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonFontComboBoxSEL, FRRibbonFontComboBoxSetFocusSEL, (void*)CFR_RibbonFontComboBox_V5::SetFocus);
	}
};

class CFR_RibbonPaletteButton_V5_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonPaletteButtonSEL, FRRibbonPaletteButtonGetElementSEL, (void*)CFR_RibbonPaletteButton_V5::GetElement);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonPaletteButtonSEL, FRRibbonPaletteButtonAddGroupSEL, (void*)CFR_RibbonPaletteButton_V5::AddGroup);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonPaletteButtonSEL, FRRibbonPaletteButtonSetGroupTitleSEL, (void*)CFR_RibbonPaletteButton_V5::SetGroupTitle);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonPaletteButtonSEL, FRRibbonPaletteButtonSetItemToolTipSEL, (void*)CFR_RibbonPaletteButton_V5::SetItemToolTip);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonPaletteButtonSEL, FRRibbonPaletteButtonSetScrollButtonTooltipSEL, (void*)CFR_RibbonPaletteButton_V5::SetScrollButtonTooltip);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonPaletteButtonSEL, FRRibbonPaletteButtonSetMenuButtonTooltipSEL, (void*)CFR_RibbonPaletteButton_V5::SetMenuButtonTooltip);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonPaletteButtonSEL, FRRibbonPaletteButtonGetGroupTitleSEL, (void*)CFR_RibbonPaletteButton_V5::GetGroupTitle);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonPaletteButtonSEL, FRRibbonPaletteButtonGetItemToolTipSEL, (void*)CFR_RibbonPaletteButton_V5::GetItemToolTip);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonPaletteButtonSEL, FRRibbonPaletteButtonGetScrollButtonTooltipSEL, (void*)CFR_RibbonPaletteButton_V5::GetScrollButtonTooltip);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonPaletteButtonSEL, FRRibbonPaletteButtonGetMenuButtonTooltipSEL, (void*)CFR_RibbonPaletteButton_V5::GetMenuButtonTooltip);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonPaletteButtonSEL, FRRibbonPaletteButtonGetGroupItemCountSEL, (void*)CFR_RibbonPaletteButton_V5::GetGroupItemCount);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonPaletteButtonSEL, FRRibbonPaletteButtonGetGroupCountSEL, (void*)CFR_RibbonPaletteButton_V5::GetGroupCount);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonPaletteButtonSEL, FRRibbonPaletteButtonIsGroupNameExistSEL, (void*)CFR_RibbonPaletteButton_V5::IsGroupNameExist);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonPaletteButtonSEL, FRRibbonPaletteButtonSetButtonModeSEL, (void*)CFR_RibbonPaletteButton_V5::SetButtonMode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonPaletteButtonSEL, FRRibbonPaletteButtonSetIconsInRowSEL, (void*)CFR_RibbonPaletteButton_V5::SetIconsInRow);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonPaletteButtonSEL, FRRibbonPaletteButtonEnableResizeSEL, (void*)CFR_RibbonPaletteButton_V5::EnableResize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonPaletteButtonSEL, FRRibbonPaletteButtonGetSelectedItemSEL, (void*)CFR_RibbonPaletteButton_V5::GetSelectedItem);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonPaletteButtonSEL, FRRibbonPaletteButtonInsertItemToGroupLastSEL, (void*)CFR_RibbonPaletteButton_V5::InsertItemToGroupLast);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonPaletteButtonSEL, FRRibbonPaletteButtonSetDefaultGroupSEL, (void*)CFR_RibbonPaletteButton_V5::SetDefaultGroup);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonPaletteButtonSEL, FRRibbonPaletteButtonRemoveGroupSEL, (void*)CFR_RibbonPaletteButton_V5::RemoveGroup);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonPaletteButtonSEL, FRRibbonPaletteButtonRemoveItemFromGroupSEL, (void*)CFR_RibbonPaletteButton_V5::RemoveItemFromGroup);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonPaletteButtonSEL, FRRibbonPaletteButtonSetItemDataSEL, (void*)CFR_RibbonPaletteButton_V5::SetItemData);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonPaletteButtonSEL, FRRibbonPaletteButtonGetItemDataSEL, (void*)CFR_RibbonPaletteButton_V5::GetItemData);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonPaletteButtonSEL, FRRibbonPaletteButtonSetGroupItemEnableSEL, (void*)CFR_RibbonPaletteButton_V5::SetGroupItemEnable);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonPaletteButtonSEL, FRRibbonPaletteButtonSetSelectedItemSEL, (void*)CFR_RibbonPaletteButton_V5::SetSelectedItem);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonPaletteButtonSEL, FRRibbonPaletteButtonSetRowsSEL, (void*)CFR_RibbonPaletteButton_V5::SetRows);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonPaletteButtonSEL, FRRibbonPaletteButtonRemoveAllGroupSEL, (void*)CFR_RibbonPaletteButton_V5::RemoveAllGroup);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonPaletteButtonSEL, FRRibbonPaletteButtonSetInitSizeSEL, (void*)CFR_RibbonPaletteButton_V5::SetInitSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonPaletteButtonSEL, FRRibbonPaletteButtonGetItemInfoSEL, (void*)CFR_RibbonPaletteButton_V5::GetItemInfo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonPaletteButtonSEL, FRRibbonPaletteButtonSetHighlightItemProcSEL, (void*)CFR_RibbonPaletteButton_V5::SetHighlightItemProc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonPaletteButtonSEL, FRRibbonPaletteButtonSetItemAccNameTitleSEL, (void*)CFR_RibbonPaletteButton_V5::SetItemAccNameTitle);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonPaletteButtonSEL, FRRibbonPaletteButtonAddGroupPtrSEL, (void*)CFR_RibbonPaletteButton_V5::AddGroupPtr);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonPaletteButtonSEL, FRRibbonPaletteButtonAddPDFBitmapToGroupSEL, (void*)CFR_RibbonPaletteButton_V5::AddPDFBitmapToGroup);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonPaletteButtonSEL, FRRibbonPaletteButtonSetMarginSEL, (void*)CFR_RibbonPaletteButton_V5::SetMargin);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonPaletteButtonSEL, FRRibbonPaletteButtonSetDrawItemBorderSEL, (void*)CFR_RibbonPaletteButton_V5::SetDrawItemBorder);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonPaletteButtonSEL, FRRibbonPaletteButtonSetItemTitleSEL, (void*)CFR_RibbonPaletteButton_V5::SetItemTitle);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonPaletteButtonSEL, FRRibbonPaletteButtonEnableShowTitleSEL, (void*)CFR_RibbonPaletteButton_V5::EnableShowTitle);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonPaletteButtonSEL, FRRibbonPaletteButtonGetLineSEL, (void*)CFR_RibbonPaletteButton_V5::GetLine);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonPaletteButtonSEL, FRRibbonPaletteButtonSetLineSEL, (void*)CFR_RibbonPaletteButton_V5::SetLine);
	}
};

class CFR_RibbonColorButton_V5_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonColorButtonSEL, FRRibbonColorButtonGetElementSEL, (void*)CFR_RibbonColorButton_V5::GetElement);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonColorButtonSEL, FRRibbonColorButtonEnableAutomaticButtonSEL, (void*)CFR_RibbonColorButton_V5::EnableAutomaticButton);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonColorButtonSEL, FRRibbonColorButtonSetAutomaticButtonLabelSEL, (void*)CFR_RibbonColorButton_V5::SetAutomaticButtonLabel);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonColorButtonSEL, FRRibbonColorButtonSetAutomaticButtonToolTipSEL, (void*)CFR_RibbonColorButton_V5::SetAutomaticButtonToolTip);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonColorButtonSEL, FRRibbonColorButtonEnableOtherButtonSEL, (void*)CFR_RibbonColorButton_V5::EnableOtherButton);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonColorButtonSEL, FRRibbonColorButtonSetOtherButtonLabelSEL, (void*)CFR_RibbonColorButton_V5::SetOtherButtonLabel);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonColorButtonSEL, FRRibbonColorButtonSetOtherButtonToolTipSEL, (void*)CFR_RibbonColorButton_V5::SetOtherButtonToolTip);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonColorButtonSEL, FRRibbonColorButtonGetAutomaticButtonLabelSEL, (void*)CFR_RibbonColorButton_V5::GetAutomaticButtonLabel);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonColorButtonSEL, FRRibbonColorButtonGetAutomaticButtonToolTipSEL, (void*)CFR_RibbonColorButton_V5::GetAutomaticButtonToolTip);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonColorButtonSEL, FRRibbonColorButtonGetOtherButtonLabelSEL, (void*)CFR_RibbonColorButton_V5::GetOtherButtonLabel);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonColorButtonSEL, FRRibbonColorButtonGetOtherButtonToolTipSEL, (void*)CFR_RibbonColorButton_V5::GetOtherButtonToolTip);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonColorButtonSEL, FRRibbonColorButtonAddColorsGroupSEL, (void*)CFR_RibbonColorButton_V5::AddColorsGroup);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonColorButtonSEL, FRRibbonColorButtonAddStandardColorSEL, (void*)CFR_RibbonColorButton_V5::AddStandardColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonColorButtonSEL, FRRibbonColorButtonAddAdditionalColorSEL, (void*)CFR_RibbonColorButton_V5::AddAdditionalColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonColorButtonSEL, FRRibbonColorButtonAddMainColorSEL, (void*)CFR_RibbonColorButton_V5::AddMainColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonColorButtonSEL, FRRibbonColorButtonSetGroupLabelSEL, (void*)CFR_RibbonColorButton_V5::SetGroupLabel);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonColorButtonSEL, FRRibbonColorButtonGetGroupLabelSEL, (void*)CFR_RibbonColorButton_V5::GetGroupLabel);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonColorButtonSEL, FRRibbonColorButtonSetColorSEL, (void*)CFR_RibbonColorButton_V5::SetColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonColorButtonSEL, FRRibbonColorButtonGetColorSEL, (void*)CFR_RibbonColorButton_V5::GetColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonColorButtonSEL, FRRibbonColorButtonSetColumnsSEL, (void*)CFR_RibbonColorButton_V5::SetColumns);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonColorButtonSEL, FRRibbonColorButtonSetColorBoxSizeSEL, (void*)CFR_RibbonColorButton_V5::SetColorBoxSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonColorButtonSEL, FRRibbonColorButtonSetDefaultCommandSEL, (void*)CFR_RibbonColorButton_V5::SetDefaultCommand);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonColorButtonSEL, FRRibbonColorButtonIsAutomaticButtonClickSEL, (void*)CFR_RibbonColorButton_V5::IsAutomaticButtonClick);
	}
};

class CFR_RibbonSlider_V5_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonSliderSEL, FRRibbonSliderGetElementSEL, (void*)CFR_RibbonSlider_V5::GetElement);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonSliderSEL, FRRibbonSliderSetZoomButtonsSEL, (void*)CFR_RibbonSlider_V5::SetZoomButtons);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonSliderSEL, FRRibbonSliderSetRangeSEL, (void*)CFR_RibbonSlider_V5::SetRange);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonSliderSEL, FRRibbonSliderGetRangeMinSEL, (void*)CFR_RibbonSlider_V5::GetRangeMin);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonSliderSEL, FRRibbonSliderGetRangeMaxSEL, (void*)CFR_RibbonSlider_V5::GetRangeMax);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonSliderSEL, FRRibbonSliderSetPosSEL, (void*)CFR_RibbonSlider_V5::SetPos);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonSliderSEL, FRRibbonSliderGetPosSEL, (void*)CFR_RibbonSlider_V5::GetPos);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonSliderSEL, FRRibbonSliderSetWidthSEL, (void*)CFR_RibbonSlider_V5::SetWidth);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonSliderSEL, FRRibbonSliderSetStyleSEL, (void*)CFR_RibbonSlider_V5::SetStyle);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonSliderSEL, FRRibbonSliderGetMouseStatusSEL, (void*)CFR_RibbonSlider_V5::GetMouseStatus);
	}
};

class CFR_RibbonListButton_V5_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonListButtonSEL, FRRibbonListButtonGetElementSEL, (void*)CFR_RibbonListButton_V5::GetElement);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonListButtonSEL, FRRibbonListButtonAddGroupSEL, (void*)CFR_RibbonListButton_V5::AddGroup);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonListButtonSEL, FRRibbonListButtonGetGroupCountSEL, (void*)CFR_RibbonListButton_V5::GetGroupCount);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonListButtonSEL, FRRibbonListButtonIsGroupNameExistSEL, (void*)CFR_RibbonListButton_V5::IsGroupNameExist);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonListButtonSEL, FRRibbonListButtonEnableResizeSEL, (void*)CFR_RibbonListButton_V5::EnableResize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonListButtonSEL, FRRibbonListButtonSetGroupTitleSEL, (void*)CFR_RibbonListButton_V5::SetGroupTitle);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonListButtonSEL, FRRibbonListButtonSetItemToolTipSEL, (void*)CFR_RibbonListButton_V5::SetItemToolTip);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonListButtonSEL, FRRibbonListButtonSetItemTitleSEL, (void*)CFR_RibbonListButton_V5::SetItemTitle);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonListButtonSEL, FRRibbonListButtonGetGroupTitleSEL, (void*)CFR_RibbonListButton_V5::GetGroupTitle);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonListButtonSEL, FRRibbonListButtonGetItemToolTipSEL, (void*)CFR_RibbonListButton_V5::GetItemToolTip);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonListButtonSEL, FRRibbonListButtonGetItemTitleSEL, (void*)CFR_RibbonListButton_V5::GetItemTitle);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonListButtonSEL, FRRibbonListButtonGetItemCountSEL, (void*)CFR_RibbonListButton_V5::GetItemCount);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonListButtonSEL, FRRibbonListButtonGetSelectedItemSEL, (void*)CFR_RibbonListButton_V5::GetSelectedItem);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonListButtonSEL, FRRibbonListButtonSetAlignedSideSEL, (void*)CFR_RibbonListButton_V5::SetAlignedSide);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonListButtonSEL, FRRibbonListButtonSetIconsInRowSEL, (void*)CFR_RibbonListButton_V5::SetIconsInRow);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonListButtonSEL, FRRibbonListButtonSetSelectedItemSEL, (void*)CFR_RibbonListButton_V5::SetSelectedItem);
	}
};

class CFR_RibbonBackStageViewItem_V5_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonBackStageViewItemSEL, FRRibbonBackStageViewItemSetTitleSEL, (void*)CFR_RibbonBackStageViewItem_V5::SetTitle);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonBackStageViewItemSEL, FRRibbonBackStageViewItemAddDialogSEL, (void*)CFR_RibbonBackStageViewItem_V5::AddDialog);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonBackStageViewItemSEL, FRRibbonBackStageViewItemAddPropertySheetPageSEL, (void*)CFR_RibbonBackStageViewItem_V5::AddPropertySheetPage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonBackStageViewItemSEL, FRRibbonBackStageViewItemRemovePropertySheetPageSEL, (void*)CFR_RibbonBackStageViewItem_V5::RemovePropertySheetPage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonBackStageViewItemSEL, FRRibbonBackStageViewItemAddPropertySheetGroupSEL, (void*)CFR_RibbonBackStageViewItem_V5::AddPropertySheetGroup);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonBackStageViewItemSEL, FRRibbonBackStageViewItemSetGroupTitleSEL, (void*)CFR_RibbonBackStageViewItem_V5::SetGroupTitle);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonBackStageViewItemSEL, FRRibbonBackStageViewItemSetVisibleSEL, (void*)CFR_RibbonBackStageViewItem_V5::SetVisible);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonBackStageViewItemSEL, FRRibbonBackStageViewItemSetDisableSEL, (void*)CFR_RibbonBackStageViewItem_V5::SetDisable);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonBackStageViewItemSEL, FRRibbonBackStageViewItemAddAnchorSEL, (void*)CFR_RibbonBackStageViewItem_V5::AddAnchor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonBackStageViewItemSEL, FRRibbonBackStageViewItemModifiedToRibbonStyleButtonSEL, (void*)CFR_RibbonBackStageViewItem_V5::ModifiedToRibbonStyleButton);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonBackStageViewItemSEL, FRRibbonBackStageViewItemSetPropertyActivePageSEL, (void*)CFR_RibbonBackStageViewItem_V5::SetPropertyActivePage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonBackStageViewItemSEL, FRRibbonBackStageViewItemSetPageTitleSEL, (void*)CFR_RibbonBackStageViewItem_V5::SetPageTitle);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonBackStageViewItemSEL, FRRibbonBackStageViewItemIsPropertySheetPageExistSEL, (void*)CFR_RibbonBackStageViewItem_V5::IsPropertySheetPageExist);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonBackStageViewItemSEL, FRRibbonBackStageViewItemIsDialogExistSEL, (void*)CFR_RibbonBackStageViewItem_V5::IsDialogExist);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonBackStageViewItemSEL, FRRibbonBackStageViewItemGetElementSEL, (void*)CFR_RibbonBackStageViewItem_V5::GetElement);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonBackStageViewItemSEL, FRRibbonBackStageViewItemEnablePropertyPageRemoveSEL, (void*)CFR_RibbonBackStageViewItem_V5::EnablePropertyPageRemove);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonBackStageViewItemSEL, FRRibbonBackStageViewItemRedrawPropertySheetSEL, (void*)CFR_RibbonBackStageViewItem_V5::RedrawPropertySheet);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonBackStageViewItemSEL, FRRibbonBackStageViewItemSetDlgItemMaxSizeSEL, (void*)CFR_RibbonBackStageViewItem_V5::SetDlgItemMaxSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonBackStageViewItemSEL, FRRibbonBackStageViewItemSetPageSelectProcSEL, (void*)CFR_RibbonBackStageViewItem_V5::SetPageSelectProc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonBackStageViewItemSEL, FRRibbonBackStageViewItemBCGPreTranslateMessageSEL, (void*)CFR_RibbonBackStageViewItem_V5::BCGPreTranslateMessage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonBackStageViewItemSEL, FRRibbonBackStageViewItemAddPropertySheetPage2SEL, (void*)CFR_RibbonBackStageViewItem_V5::AddPropertySheetPage2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonBackStageViewItemSEL, FRRibbonBackStageViewItemEnableChangeHighLightImageColorSEL, (void*)CFR_RibbonBackStageViewItem_V5::EnableChangeHighLightImageColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonBackStageViewItemSEL, FRRibbonBackStageViewItemAddPropertySheetPage3SEL, (void*)CFR_RibbonBackStageViewItem_V5::AddPropertySheetPage3);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonBackStageViewItemSEL, FRRibbonBackStageViewItemAddPropertySheetPage4SEL, (void*)CFR_RibbonBackStageViewItem_V5::AddPropertySheetPage4);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonBackStageViewItemSEL, FRRibbonBackStageViewItemAddDialog2SEL, (void*)CFR_RibbonBackStageViewItem_V5::AddDialog2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonBackStageViewItemSEL, FRRibbonBackStageViewItemSetPropertyPageShowSEL, (void*)CFR_RibbonBackStageViewItem_V5::SetPropertyPageShow);
	}
};

class CFR_RibbonStyleButton_V5_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleButtonSEL, FRRibbonStyleButtonSetImageSEL, (void*)CFR_RibbonStyleButton_V5::SetImage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleButtonSEL, FRRibbonStyleButtonSetAlignStyleSEL, (void*)CFR_RibbonStyleButton_V5::SetAlignStyle);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleButtonSEL, FRRibbonStyleButtonSetImageSideSEL, (void*)CFR_RibbonStyleButton_V5::SetImageSide);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleButtonSEL, FRRibbonStyleButtonSetFlatStyleSEL, (void*)CFR_RibbonStyleButton_V5::SetFlatStyle);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleButtonSEL, FRRibbonStyleButtonSetVertMarginSEL, (void*)CFR_RibbonStyleButton_V5::SetVertMargin);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleButtonSEL, FRRibbonStyleButtonGetMFCButtonSEL, (void*)CFR_RibbonStyleButton_V5::GetMFCButton);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleButtonSEL, FRRibbonStyleButtonReleaseSEL, (void*)CFR_RibbonStyleButton_V5::Release);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleButtonSEL, FRRibbonStyleButtonSetImage2SEL, (void*)CFR_RibbonStyleButton_V5::SetImage2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleButtonSEL, FRRibbonStyleButtonSetImage3SEL, (void*)CFR_RibbonStyleButton_V5::SetImage3);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleButtonSEL, FRRibbonStyleButtonSetTooltipSEL, (void*)CFR_RibbonStyleButton_V5::SetTooltip);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleButtonSEL, FRRibbonStyleButtonSetMarkStatusSEL, (void*)CFR_RibbonStyleButton_V5::SetMarkStatus);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleButtonSEL, FRRibbonStyleButtonSetDescriptionSEL, (void*)CFR_RibbonStyleButton_V5::SetDescription);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleButtonSEL, FRRibbonStyleButtonEnableHelpLinkSEL, (void*)CFR_RibbonStyleButton_V5::EnableHelpLink);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleButtonSEL, FRRibbonStyleButtonSetFontStyleSEL, (void*)CFR_RibbonStyleButton_V5::SetFontStyle);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleButtonSEL, FRRibbonStyleButtonSetBorderColorSEL, (void*)CFR_RibbonStyleButton_V5::SetBorderColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleButtonSEL, FRRibbonStyleButtonSetBackgroundColorSEL, (void*)CFR_RibbonStyleButton_V5::SetBackgroundColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleButtonSEL, FRRibbonStyleButtonSetTextColorSEL, (void*)CFR_RibbonStyleButton_V5::SetTextColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleButtonSEL, FRRibbonStyleButtonSetRoundRadiusSEL, (void*)CFR_RibbonStyleButton_V5::SetRoundRadius);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleButtonSEL, FRRibbonStyleButtonSetTransparentSEL, (void*)CFR_RibbonStyleButton_V5::SetTransparent);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleButtonSEL, FRRibbonStyleButtonSetFocusColorSEL, (void*)CFR_RibbonStyleButton_V5::SetFocusColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleButtonSEL, FRRibbonStyleButtonSetImageReplaceColorSEL, (void*)CFR_RibbonStyleButton_V5::SetImageReplaceColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleButtonSEL, FRRibbonStyleButtonSetDefaultStyleSEL, (void*)CFR_RibbonStyleButton_V5::SetDefaultStyle);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleButtonSEL, FRRibbonStyleButtonDisableHighContrastThemeImageSEL, (void*)CFR_RibbonStyleButton_V5::DisableHighContrastThemeImage);
	}
};

class CFR_RibbonStyleListBox_V5_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleListBoxSEL, FRRibbonStyleListBoxAddImageSEL, (void*)CFR_RibbonStyleListBox_V5::AddImage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleListBoxSEL, FRRibbonStyleListBoxAddStringSEL, (void*)CFR_RibbonStyleListBox_V5::AddString);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleListBoxSEL, FRRibbonStyleListBoxAddCaptionSEL, (void*)CFR_RibbonStyleListBox_V5::AddCaption);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleListBoxSEL, FRRibbonStyleListBoxDeleteStringSEL, (void*)CFR_RibbonStyleListBox_V5::DeleteString);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleListBoxSEL, FRRibbonStyleListBoxInsertStringSEL, (void*)CFR_RibbonStyleListBox_V5::InsertString);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleListBoxSEL, FRRibbonStyleListBoxGetItemDataSEL, (void*)CFR_RibbonStyleListBox_V5::GetItemData);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleListBoxSEL, FRRibbonStyleListBoxSetItemDataSEL, (void*)CFR_RibbonStyleListBox_V5::SetItemData);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleListBoxSEL, FRRibbonStyleListBoxGetMFCListBoxSEL, (void*)CFR_RibbonStyleListBox_V5::GetMFCListBox);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleListBoxSEL, FRRibbonStyleListBoxReleaseSEL, (void*)CFR_RibbonStyleListBox_V5::Release);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleListBoxSEL, FRRibbonStyleListBoxAddImage2SEL, (void*)CFR_RibbonStyleListBox_V5::AddImage2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleListBoxSEL, FRRibbonStyleListBoxEnablePinsSEL, (void*)CFR_RibbonStyleListBox_V5::EnablePins);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleListBoxSEL, FRRibbonStyleListBoxHasPinsSEL, (void*)CFR_RibbonStyleListBox_V5::HasPins);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleListBoxSEL, FRRibbonStyleListBoxSetItemPinnedSEL, (void*)CFR_RibbonStyleListBox_V5::SetItemPinned);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleListBoxSEL, FRRibbonStyleListBoxGetItemPinnedStateSEL, (void*)CFR_RibbonStyleListBox_V5::GetItemPinnedState);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleListBoxSEL, FRRibbonStyleListBoxIsSeparatorItemSEL, (void*)CFR_RibbonStyleListBox_V5::IsSeparatorItem);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleListBoxSEL, FRRibbonStyleListBoxRedrawListSEL, (void*)CFR_RibbonStyleListBox_V5::RedrawList);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleListBoxSEL, FRRibbonStyleListBoxSetClickItemProcSEL, (void*)CFR_RibbonStyleListBox_V5::SetClickItemProc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleListBoxSEL, FRRibbonStyleListBoxSetClickPinProcSEL, (void*)CFR_RibbonStyleListBox_V5::SetClickPinProc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleListBoxSEL, FRRibbonStyleListBoxSetClientDataSEL, (void*)CFR_RibbonStyleListBox_V5::SetClientData);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleListBoxSEL, FRRibbonStyleListBoxClearSEL, (void*)CFR_RibbonStyleListBox_V5::Clear);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleListBoxSEL, FRRibbonStyleListBoxAddImage3SEL, (void*)CFR_RibbonStyleListBox_V5::AddImage3);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleListBoxSEL, FRRibbonStyleListBoxEnableSEL, (void*)CFR_RibbonStyleListBox_V5::Enable);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleListBoxSEL, FRRibbonStyleListBoxDisableHighContrastThemeImageSEL, (void*)CFR_RibbonStyleListBox_V5::DisableHighContrastThemeImage);
	}
};

class CFR_RibbonStyleStatic_V5_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleStaticSEL, FRRibbonStyleStaticSetImageSEL, (void*)CFR_RibbonStyleStatic_V5::SetImage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleStaticSEL, FRRibbonStyleStaticGetMFCStaticSEL, (void*)CFR_RibbonStyleStatic_V5::GetMFCStatic);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleStaticSEL, FRRibbonStyleStaticSetFontStyleSEL, (void*)CFR_RibbonStyleStatic_V5::SetFontStyle);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleStaticSEL, FRRibbonStyleStaticSetTextColorSEL, (void*)CFR_RibbonStyleStatic_V5::SetTextColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleStaticSEL, FRRibbonStyleStaticSetBackgroundColorSEL, (void*)CFR_RibbonStyleStatic_V5::SetBackgroundColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleStaticSEL, FRRibbonStyleStaticSetTextDrawFormatSEL, (void*)CFR_RibbonStyleStatic_V5::SetTextDrawFormat);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleStaticSEL, FRRibbonStyleStaticReleaseSEL, (void*)CFR_RibbonStyleStatic_V5::Release);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleStaticSEL, FRRibbonStyleStaticSetImage2SEL, (void*)CFR_RibbonStyleStatic_V5::SetImage2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleStaticSEL, FRRibbonStyleStaticSetImage3SEL, (void*)CFR_RibbonStyleStatic_V5::SetImage3);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleStaticSEL, FRRibbonStyleStaticSetDescriptionSEL, (void*)CFR_RibbonStyleStatic_V5::SetDescription);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleStaticSEL, FRRibbonStyleStaticEnableHelpLinkSEL, (void*)CFR_RibbonStyleStatic_V5::EnableHelpLink);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleStaticSEL, FRRibbonStyleStaticSetTooltipSEL, (void*)CFR_RibbonStyleStatic_V5::SetTooltip);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleStaticSEL, FRRibbonStyleStaticSetTextColorNameSEL, (void*)CFR_RibbonStyleStatic_V5::SetTextColorName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleStaticSEL, FRRibbonStyleStaticDisableHighContrastThemeImageSEL, (void*)CFR_RibbonStyleStatic_V5::DisableHighContrastThemeImage);
	}
};

class CFR_FormatTools_V5_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRFormatToolsSEL, FRFormatToolsGetSEL, (void*)CFR_FormatTools_V5::Get);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRFormatToolsSEL, FRFormatToolsSetEventSEL, (void*)CFR_FormatTools_V5::SetEvent);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRFormatToolsSEL, FRFormatToolsSetFontNameSEL, (void*)CFR_FormatTools_V5::SetFontName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRFormatToolsSEL, FRFormatToolsSetFontNameFirstSEL, (void*)CFR_FormatTools_V5::SetFontNameFirst);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRFormatToolsSEL, FRFormatToolsSetFontSizeSEL, (void*)CFR_FormatTools_V5::SetFontSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRFormatToolsSEL, FRFormatToolsSetFontSizeFirstSEL, (void*)CFR_FormatTools_V5::SetFontSizeFirst);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRFormatToolsSEL, FRFormatToolsSetTextColorSEL, (void*)CFR_FormatTools_V5::SetTextColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRFormatToolsSEL, FRFormatToolsSetLineColorSEL, (void*)CFR_FormatTools_V5::SetLineColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRFormatToolsSEL, FRFormatToolsSetFillColorSEL, (void*)CFR_FormatTools_V5::SetFillColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRFormatToolsSEL, FRFormatToolsSetBoldSEL, (void*)CFR_FormatTools_V5::SetBold);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRFormatToolsSEL, FRFormatToolsSetItalicSEL, (void*)CFR_FormatTools_V5::SetItalic);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRFormatToolsSEL, FRFormatToolsSetAlignSEL, (void*)CFR_FormatTools_V5::SetAlign);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRFormatToolsSEL, FRFormatToolsSetCharSpaceSEL, (void*)CFR_FormatTools_V5::SetCharSpace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRFormatToolsSEL, FRFormatToolsSetCharHorzScaleSEL, (void*)CFR_FormatTools_V5::SetCharHorzScale);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRFormatToolsSEL, FRFormatToolsSetLineLeadingSEL, (void*)CFR_FormatTools_V5::SetLineLeading);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRFormatToolsSEL, FRFormatToolsSetSuperScriptSEL, (void*)CFR_FormatTools_V5::SetSuperScript);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRFormatToolsSEL, FRFormatToolsSetSubScriptSEL, (void*)CFR_FormatTools_V5::SetSubScript);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRFormatToolsSEL, FRFormatToolsSetUnderlineSEL, (void*)CFR_FormatTools_V5::SetUnderline);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRFormatToolsSEL, FRFormatToolsSetCrossSEL, (void*)CFR_FormatTools_V5::SetCross);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRFormatToolsSEL, FRFormatToolsSetWordSpaceSEL, (void*)CFR_FormatTools_V5::SetWordSpace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRFormatToolsSEL, FRFormatToolsGetFontNameSEL, (void*)CFR_FormatTools_V5::GetFontName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRFormatToolsSEL, FRFormatToolsGetFontSizeSEL, (void*)CFR_FormatTools_V5::GetFontSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRFormatToolsSEL, FRFormatToolsGetTextColorSEL, (void*)CFR_FormatTools_V5::GetTextColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRFormatToolsSEL, FRFormatToolsGetLineColorSEL, (void*)CFR_FormatTools_V5::GetLineColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRFormatToolsSEL, FRFormatToolsGetFillColorSEL, (void*)CFR_FormatTools_V5::GetFillColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRFormatToolsSEL, FRFormatToolsGetAlignSEL, (void*)CFR_FormatTools_V5::GetAlign);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRFormatToolsSEL, FRFormatToolsGetCharSpaceSEL, (void*)CFR_FormatTools_V5::GetCharSpace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRFormatToolsSEL, FRFormatToolsGetCharHorzScaleSEL, (void*)CFR_FormatTools_V5::GetCharHorzScale);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRFormatToolsSEL, FRFormatToolsGetLineLeadingSEL, (void*)CFR_FormatTools_V5::GetLineLeading);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRFormatToolsSEL, FRFormatToolsGetUnderlineSEL, (void*)CFR_FormatTools_V5::GetUnderline);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRFormatToolsSEL, FRFormatToolsGetCrossSEL, (void*)CFR_FormatTools_V5::GetCross);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRFormatToolsSEL, FRFormatToolsGetSuperScriptSEL, (void*)CFR_FormatTools_V5::GetSuperScript);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRFormatToolsSEL, FRFormatToolsGetSubScriptSEL, (void*)CFR_FormatTools_V5::GetSubScript);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRFormatToolsSEL, FRFormatToolsIsBoldSEL, (void*)CFR_FormatTools_V5::IsBold);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRFormatToolsSEL, FRFormatToolsIsItalicSEL, (void*)CFR_FormatTools_V5::IsItalic);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRFormatToolsSEL, FRFormatToolsGetWordSpaceSEL, (void*)CFR_FormatTools_V5::GetWordSpace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRFormatToolsSEL, FRFormatToolsIsVisibledSEL, (void*)CFR_FormatTools_V5::IsVisibled);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRFormatToolsSEL, FRFormatToolsShowSEL, (void*)CFR_FormatTools_V5::Show);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRFormatToolsSEL, FRFormatToolsIsEnabledSEL, (void*)CFR_FormatTools_V5::IsEnabled);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRFormatToolsSEL, FRFormatToolsEnableSEL, (void*)CFR_FormatTools_V5::Enable);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRFormatToolsSEL, FRFormatToolsIsButtonVisibledSEL, (void*)CFR_FormatTools_V5::IsButtonVisibled);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRFormatToolsSEL, FRFormatToolsHideButtonSEL, (void*)CFR_FormatTools_V5::HideButton);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRFormatToolsSEL, FRFormatToolsIsButtonEnabledSEL, (void*)CFR_FormatTools_V5::IsButtonEnabled);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRFormatToolsSEL, FRFormatToolsEnableButtonSEL, (void*)CFR_FormatTools_V5::EnableButton);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRFormatToolsSEL, FRFormatToolsSetOwnerFontNameArrSEL, (void*)CFR_FormatTools_V5::SetOwnerFontNameArr);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRFormatToolsSEL, FRFormatToolsCleanOwnerFontNameArrSEL, (void*)CFR_FormatTools_V5::CleanOwnerFontNameArr);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRFormatToolsSEL, FRFormatToolsFindFontNameSEL, (void*)CFR_FormatTools_V5::FindFontName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRFormatToolsSEL, FRFormatToolsCountFontListSEL, (void*)CFR_FormatTools_V5::CountFontList);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRFormatToolsSEL, FRFormatToolsGetFontListItemSEL, (void*)CFR_FormatTools_V5::GetFontListItem);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRFormatToolsSEL, FRFormatToolsSetFormatContextTitleSEL, (void*)CFR_FormatTools_V5::SetFormatContextTitle);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRFormatToolsSEL, FRFormatToolsActivateFormatCategorySEL, (void*)CFR_FormatTools_V5::ActivateFormatCategory);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRFormatToolsSEL, FRFormatToolsSetWritingDirectionSEL, (void*)CFR_FormatTools_V5::SetWritingDirection);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRFormatToolsSEL, FRFormatToolsGetWritingDirectionSEL, (void*)CFR_FormatTools_V5::GetWritingDirection);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRFormatToolsSEL, FRFormatToolsGetFontFaceNameSEL, (void*)CFR_FormatTools_V5::GetFontFaceName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRFormatToolsSEL, FRFormatToolsReleaseEventSEL, (void*)CFR_FormatTools_V5::ReleaseEvent);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRFormatToolsSEL, FRFormatToolsSetParagraphSpacingSEL, (void*)CFR_FormatTools_V5::SetParagraphSpacing);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRFormatToolsSEL, FRFormatToolsSetNumberedListStyleSEL, (void*)CFR_FormatTools_V5::SetNumberedListStyle);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRFormatToolsSEL, FRFormatToolsSetBulletedListStyleSEL, (void*)CFR_FormatTools_V5::SetBulletedListStyle);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRFormatToolsSEL, FRFormatToolsSetFormatCaptureSEL, (void*)CFR_FormatTools_V5::SetFormatCapture);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRFormatToolsSEL, FRFormatToolsReleaseFormatCaptureSEL, (void*)CFR_FormatTools_V5::ReleaseFormatCapture);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRFormatToolsSEL, FRFormatToolsEnableButton2SEL, (void*)CFR_FormatTools_V5::EnableButton2);
	}
};

class CFR_PropertyTools_V5_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPropertyToolsSEL, FRPropertyToolsGetSEL, (void*)CFR_PropertyTools_V5::Get);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPropertyToolsSEL, FRPropertyToolsSetEventSEL, (void*)CFR_PropertyTools_V5::SetEvent);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPropertyToolsSEL, FRPropertyToolsSetColorSEL, (void*)CFR_PropertyTools_V5::SetColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPropertyToolsSEL, FRPropertyToolsSetOpacitySEL, (void*)CFR_PropertyTools_V5::SetOpacity);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPropertyToolsSEL, FRPropertyToolsIsVisibledSEL, (void*)CFR_PropertyTools_V5::IsVisibled);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPropertyToolsSEL, FRPropertyToolsShowSEL, (void*)CFR_PropertyTools_V5::Show);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPropertyToolsSEL, FRPropertyToolsIsEnabledSEL, (void*)CFR_PropertyTools_V5::IsEnabled);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPropertyToolsSEL, FRPropertyToolsEnableSEL, (void*)CFR_PropertyTools_V5::Enable);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPropertyToolsSEL, FRPropertyToolsReleaseEventSEL, (void*)CFR_PropertyTools_V5::ReleaseEvent);
	}
};

// fr_barImpl.h end

// In file fr_docImpl.h
// fr_docImpl.h end

// In file fr_fxnetappImpl.h
// fr_fxnetappImpl.h end

// In file fr_menuImpl.h
// fr_menuImpl.h end

// In file fr_sysImpl.h
class CFR_WindowsDIB_V5_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRWindowsDIBSEL, FRWindowsDIBNewSEL, (void*)CFR_WindowsDIB_V5::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRWindowsDIBSEL, FRWindowsDIBDestroySEL, (void*)CFR_WindowsDIB_V5::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRWindowsDIBSEL, FRWindowsDIBGetBitmapInfoSEL, (void*)CFR_WindowsDIB_V5::GetBitmapInfo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRWindowsDIBSEL, FRWindowsDIBLoadFromBufSEL, (void*)CFR_WindowsDIB_V5::LoadFromBuf);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRWindowsDIBSEL, FRWindowsDIBGetDDBitmapSEL, (void*)CFR_WindowsDIB_V5::GetDDBitmap);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRWindowsDIBSEL, FRWindowsDIBLoadFromDDBSEL, (void*)CFR_WindowsDIB_V5::LoadFromDDB);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRWindowsDIBSEL, FRWindowsDIBLoadFromFileSEL, (void*)CFR_WindowsDIB_V5::LoadFromFile);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRWindowsDIBSEL, FRWindowsDIBLoadFromFileIISEL, (void*)CFR_WindowsDIB_V5::LoadFromFileII);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRWindowsDIBSEL, FRWindowsDIBLoadDIBitmapSEL, (void*)CFR_WindowsDIB_V5::LoadDIBitmap);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRWindowsDIBSEL, FRWindowsDIBGetDCSEL, (void*)CFR_WindowsDIB_V5::GetDC);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRWindowsDIBSEL, FRWindowsDIBGetWindowsBitmapSEL, (void*)CFR_WindowsDIB_V5::GetWindowsBitmap);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRWindowsDIBSEL, FRWindowsDIBLoadFromDeviceSEL, (void*)CFR_WindowsDIB_V5::LoadFromDevice);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRWindowsDIBSEL, FRWindowsDIBSetToDeviceSEL, (void*)CFR_WindowsDIB_V5::SetToDevice);
	}
};

// fr_sysImpl.h end

// In file fr_viewImpl.h
class CFR_Annot_V5_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAnnotSEL, FRAnnotGetPDFAnnotSEL, (void*)CFR_Annot_V5::GetPDFAnnot);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAnnotSEL, FRAnnotGetTypeSEL, (void*)CFR_Annot_V5::GetType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAnnotSEL, FRAnnotGetSubTypeSEL, (void*)CFR_Annot_V5::GetSubType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAnnotSEL, FRAnnotSetVisibleSEL, (void*)CFR_Annot_V5::SetVisible);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAnnotSEL, FRAnnotGetPageVewSEL, (void*)CFR_Annot_V5::GetPageVew);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAnnotSEL, FRAnnotGetTabOrderSEL, (void*)CFR_Annot_V5::GetTabOrder);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAnnotSEL, FRAnnotSetFlagsSEL, (void*)CFR_Annot_V5::SetFlags);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAnnotSEL, FRAnnotDrawAppearanceSEL, (void*)CFR_Annot_V5::DrawAppearance);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAnnotSEL, FRAnnotIsSelectedSEL, (void*)CFR_Annot_V5::IsSelected);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAnnotSEL, FRAnnotSetAuthorSEL, (void*)CFR_Annot_V5::SetAuthor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAnnotSEL, FRAnnotGetFRDocByAnnotSEL, (void*)CFR_Annot_V5::GetFRDocByAnnot);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAnnotSEL, FRAnnotGetPageSEL, (void*)CFR_Annot_V5::GetPage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAnnotSEL, FRAnnotGetXFAWidgetSEL, (void*)CFR_Annot_V5::GetXFAWidget);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAnnotSEL, FRAnnotGetCBFWidgetSEL, (void*)CFR_Annot_V5::GetCBFWidget);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAnnotSEL, FRAnnotGetBorderWidthSEL, (void*)CFR_Annot_V5::GetBorderWidth);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAnnotSEL, FRAnnotGetBorderStyleSEL, (void*)CFR_Annot_V5::GetBorderStyle);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAnnotSEL, FRAnnotSetBorderWidthSEL, (void*)CFR_Annot_V5::SetBorderWidth);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAnnotSEL, FRAnnotSetBorderStyleSEL, (void*)CFR_Annot_V5::SetBorderStyle);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAnnotSEL, FRAnnotGetLayoutOrderSEL, (void*)CFR_Annot_V5::GetLayoutOrder);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAnnotSEL, FRAnnotIsSameTabOrderSEL, (void*)CFR_Annot_V5::IsSameTabOrder);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAnnotSEL, FRAnnotNewSEL, (void*)CFR_Annot_V5::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAnnotSEL, FRAnnotDeleteSEL, (void*)CFR_Annot_V5::Delete);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAnnotSEL, FRAnnotIsEnabledSEL, (void*)CFR_Annot_V5::IsEnabled);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAnnotSEL, FRAnnotSetEnabledSEL, (void*)CFR_Annot_V5::SetEnabled);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAnnotSEL, FRAnnotSelectAnnotSEL, (void*)CFR_Annot_V5::SelectAnnot);
	}
};

class CFR_ResourcePropertyBox_V5_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRResourcePropertyBoxSEL, FRResourcePropertyBoxGetSEL, (void*)CFR_ResourcePropertyBox_V5::Get);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRResourcePropertyBoxSEL, FRResourcePropertyBoxRegisterPropertyPageSEL, (void*)CFR_ResourcePropertyBox_V5::RegisterPropertyPage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRResourcePropertyBoxSEL, FRResourcePropertyBoxRegisterSourceTypeSEL, (void*)CFR_ResourcePropertyBox_V5::RegisterSourceType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRResourcePropertyBoxSEL, FRResourcePropertyBoxGetSourceTypeSEL, (void*)CFR_ResourcePropertyBox_V5::GetSourceType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRResourcePropertyBoxSEL, FRResourcePropertyBoxGetSourceFuncSEL, (void*)CFR_ResourcePropertyBox_V5::GetSourceFunc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRResourcePropertyBoxSEL, FRResourcePropertyBoxUpdatePropertyBoxSEL, (void*)CFR_ResourcePropertyBox_V5::UpdatePropertyBox);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRResourcePropertyBoxSEL, FRResourcePropertyBoxOpenPropertyBoxSEL, (void*)CFR_ResourcePropertyBox_V5::OpenPropertyBox);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRResourcePropertyBoxSEL, FRResourcePropertyBoxClosePropertyBoxSEL, (void*)CFR_ResourcePropertyBox_V5::ClosePropertyBox);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRResourcePropertyBoxSEL, FRResourcePropertyBoxIsPropertyBoxVisibleSEL, (void*)CFR_ResourcePropertyBox_V5::IsPropertyBoxVisible);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRResourcePropertyBoxSEL, FRResourcePropertyBoxGetWndSEL, (void*)CFR_ResourcePropertyBox_V5::GetWnd);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRResourcePropertyBoxSEL, FRResourcePropertyBoxGetPropertyPageSEL, (void*)CFR_ResourcePropertyBox_V5::GetPropertyPage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRResourcePropertyBoxSEL, FRResourcePropertyBoxSetCurrentPropertyPageSEL, (void*)CFR_ResourcePropertyBox_V5::SetCurrentPropertyPage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRResourcePropertyBoxSEL, FRResourcePropertyBoxRegisterPropertyPage2SEL, (void*)CFR_ResourcePropertyBox_V5::RegisterPropertyPage2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRResourcePropertyBoxSEL, FRResourcePropertyBoxDestroyPageSEL, (void*)CFR_ResourcePropertyBox_V5::DestroyPage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRResourcePropertyBoxSEL, FRResourcePropertyBoxRegisterSourceType2SEL, (void*)CFR_ResourcePropertyBox_V5::RegisterSourceType2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRResourcePropertyBoxSEL, FRResourcePropertyBoxDestroySourceSEL, (void*)CFR_ResourcePropertyBox_V5::DestroySource);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRResourcePropertyBoxSEL, FRResourcePropertyBoxAddPropertyNotifySEL, (void*)CFR_ResourcePropertyBox_V5::AddPropertyNotify);
	}
};

// fr_viewImpl.h end

// In file middle_imagecompressImpl.h
// middle_imagecompressImpl.h end

// In file middle_optimizeImpl.h
// middle_optimizeImpl.h end

// In file middle_pdfImpl.h
// middle_pdfImpl.h end

// In file middle_portfolioImpl.h
// middle_portfolioImpl.h end

// In file middle_preflightImpl.h
// middle_preflightImpl.h end

// In file fofd_basicImpl.h
// fofd_basicImpl.h end

// In file fofd_docImpl.h
// fofd_docImpl.h end

// In file fofd_pageImpl.h
// fofd_pageImpl.h end

// In file fofd_renderImpl.h
// fofd_renderImpl.h end

// In file fofd_sigImpl.h
// fofd_sigImpl.h end

// In file fpd_3DImpl.h
// fpd_3DImpl.h end

// In file fpd_barcodeImpl.h
// fpd_barcodeImpl.h end

// In file fpd_convertImpl.h
// fpd_convertImpl.h end

// In file fpd_docImpl.h
// fpd_docImpl.h end

// In file fpd_editImpl.h
// fpd_editImpl.h end

// In file fpd_epubImpl.h
// fpd_epubImpl.h end

// In file fpd_fontmgrImpl.h
// fpd_fontmgrImpl.h end

// In file fpd_fxxfaImpl.h
// fpd_fxxfaImpl.h end

// In file fpd_jsImpl.h
// fpd_jsImpl.h end

// In file fpd_lrImpl.h
// fpd_lrImpl.h end

// In file fpd_mathImpl.h
// fpd_mathImpl.h end

// In file fpd_objsImpl.h
// fpd_objsImpl.h end

// In file fpd_pageImpl.h
// fpd_pageImpl.h end

// In file fpd_pageobjImpl.h
// fpd_pageobjImpl.h end

// In file fpd_parserImpl.h
// fpd_parserImpl.h end

// In file fpd_psiImpl.h
// fpd_psiImpl.h end

// In file fpd_pwlImpl.h
// fpd_pwlImpl.h end

// In file fpd_renderImpl.h
// fpd_renderImpl.h end

// In file fpd_resourceImpl.h
class CFPD_FXFontEncoding_V5_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFXFontEncodingSEL, FPDFXFontEncodingNewSEL, (void*)CFPD_FXFontEncoding_V5::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFXFontEncodingSEL, FPDFXFontEncodingDestroySEL, (void*)CFPD_FXFontEncoding_V5::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFXFontEncodingSEL, FPDFXFontEncodingGlyphFromCharCodeSEL, (void*)CFPD_FXFontEncoding_V5::GlyphFromCharCode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFXFontEncodingSEL, FPDFXFontEncodingUnicodeFromCharCodeSEL, (void*)CFPD_FXFontEncoding_V5::UnicodeFromCharCode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFXFontEncodingSEL, FPDFXFontEncodingCharCodeFromUnicodeSEL, (void*)CFPD_FXFontEncoding_V5::CharCodeFromUnicode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFXFontEncodingSEL, FPDFXFontEncodingIsUnicodeCompatibleSEL, (void*)CFPD_FXFontEncoding_V5::IsUnicodeCompatible);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFXFontEncodingSEL, FPDFXFontEncodingGlyphFromCharCodeExSEL, (void*)CFPD_FXFontEncoding_V5::GlyphFromCharCodeEx);
	}
};

// fpd_resourceImpl.h end

// In file fpd_serialImpl.h
// fpd_serialImpl.h end

// In file fpd_textImpl.h
// fpd_textImpl.h end

// In file fpd_validateImpl.h
// fpd_validateImpl.h end

//----------_V6----------
// In file fs_basicImpl.h
class CFS_FileStream_V6_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSFileStreamSEL, FSFileStreamNewSEL, (void*)CFS_FileStream_V6::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSFileStreamSEL, FSFileStreamNew2SEL, (void*)CFS_FileStream_V6::New2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSFileStreamSEL, FSFileStreamDestroySEL, (void*)CFS_FileStream_V6::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSFileStreamSEL, FSFileStreamGetFileReadSEL, (void*)CFS_FileStream_V6::GetFileRead);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSFileStreamSEL, FSFileStreamGetFileWriteSEL, (void*)CFS_FileStream_V6::GetFileWrite);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSFileStreamSEL, FSFileStreamCreateMemoryStreamSEL, (void*)CFS_FileStream_V6::CreateMemoryStream);
	}
};

// fs_basicImpl.h end

// In file fs_stringImpl.h
// fs_stringImpl.h end

// In file fdrm_descImpl.h
// fdrm_descImpl.h end

// In file fdrm_managerImpl.h
// fdrm_managerImpl.h end

// In file fdrm_pdfImpl.h
// fdrm_pdfImpl.h end

// In file fdrm_pkiImpl.h
// fdrm_pkiImpl.h end

// In file fhtml_impl.h
// fhtml_impl.h end

// In file fr_appImpl.h
// fr_appImpl.h end

// In file fr_barImpl.h
// fr_barImpl.h end

// In file fr_docImpl.h
// fr_docImpl.h end

// In file fr_fxnetappImpl.h
// fr_fxnetappImpl.h end

// In file fr_menuImpl.h
// fr_menuImpl.h end

// In file fr_sysImpl.h
// fr_sysImpl.h end

// In file fr_viewImpl.h
class CFR_ScrollBarThumbnailView_V6_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRScrollBarThumbnailViewSEL, FRScrollBarThumbnailViewGetCurPageIndexSEL, (void*)CFR_ScrollBarThumbnailView_V6::GetCurPageIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRScrollBarThumbnailViewSEL, FRScrollBarThumbnailViewGetPageRectSEL, (void*)CFR_ScrollBarThumbnailView_V6::GetPageRect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRScrollBarThumbnailViewSEL, FRScrollBarThumbnailViewGetPDPageSEL, (void*)CFR_ScrollBarThumbnailView_V6::GetPDPage);
	}
};

// fr_viewImpl.h end

// In file middle_imagecompressImpl.h
// middle_imagecompressImpl.h end

// In file middle_optimizeImpl.h
// middle_optimizeImpl.h end

// In file middle_pdfImpl.h
// middle_pdfImpl.h end

// In file middle_portfolioImpl.h
// middle_portfolioImpl.h end

// In file middle_preflightImpl.h
// middle_preflightImpl.h end

// In file fofd_basicImpl.h
// fofd_basicImpl.h end

// In file fofd_docImpl.h
// fofd_docImpl.h end

// In file fofd_pageImpl.h
// fofd_pageImpl.h end

// In file fofd_renderImpl.h
// fofd_renderImpl.h end

// In file fofd_sigImpl.h
// fofd_sigImpl.h end

// In file fpd_3DImpl.h
// fpd_3DImpl.h end

// In file fpd_barcodeImpl.h
// fpd_barcodeImpl.h end

// In file fpd_convertImpl.h
// fpd_convertImpl.h end

// In file fpd_docImpl.h
// fpd_docImpl.h end

// In file fpd_editImpl.h
// fpd_editImpl.h end

// In file fpd_epubImpl.h
// fpd_epubImpl.h end

// In file fpd_fontmgrImpl.h
// fpd_fontmgrImpl.h end

// In file fpd_fxxfaImpl.h
// fpd_fxxfaImpl.h end

// In file fpd_jsImpl.h
// fpd_jsImpl.h end

// In file fpd_lrImpl.h
// fpd_lrImpl.h end

// In file fpd_mathImpl.h
// fpd_mathImpl.h end

// In file fpd_objsImpl.h
// fpd_objsImpl.h end

// In file fpd_pageImpl.h
// fpd_pageImpl.h end

// In file fpd_pageobjImpl.h
// fpd_pageobjImpl.h end

// In file fpd_parserImpl.h
// fpd_parserImpl.h end

// In file fpd_psiImpl.h
// fpd_psiImpl.h end

// In file fpd_pwlImpl.h
// fpd_pwlImpl.h end

// In file fpd_renderImpl.h
// fpd_renderImpl.h end

// In file fpd_resourceImpl.h
// fpd_resourceImpl.h end

// In file fpd_serialImpl.h
// fpd_serialImpl.h end

// In file fpd_textImpl.h
// fpd_textImpl.h end

// In file fpd_validateImpl.h
// fpd_validateImpl.h end

//----------_V7----------
// In file fs_basicImpl.h
class CFS_GUID_V7_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSGUIDSEL, FSGUIDCreateSEL, (void*)CFS_GUID_V7::Create);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSGUIDSEL, FSGUIDToStringSEL, (void*)CFS_GUID_V7::ToString);
	}
};

// fs_basicImpl.h end

// In file fs_stringImpl.h
// fs_stringImpl.h end

// In file fdrm_descImpl.h
// fdrm_descImpl.h end

// In file fdrm_managerImpl.h
// fdrm_managerImpl.h end

// In file fdrm_pdfImpl.h
// fdrm_pdfImpl.h end

// In file fdrm_pkiImpl.h
// fdrm_pkiImpl.h end

// In file fhtml_impl.h
// fhtml_impl.h end

// In file fr_appImpl.h
class CFR_HTMLMgr_V7_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRHTMLMgrSEL, FRHTMLMgrGetSEL, (void*)CFR_HTMLMgr_V7::Get);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRHTMLMgrSEL, FRHTMLMgrRegisterHTMLEventHandlerSEL, (void*)CFR_HTMLMgr_V7::RegisterHTMLEventHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRHTMLMgrSEL, FRHTMLMgrOpenHTMLFromNewTabSEL, (void*)CFR_HTMLMgr_V7::OpenHTMLFromNewTab);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRHTMLMgrSEL, FRHTMLMgrOpenHTMLDocumentSEL, (void*)CFR_HTMLMgr_V7::OpenHTMLDocument);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRHTMLMgrSEL, FRHTMLMgrGetActiveHtmlViewSEL, (void*)CFR_HTMLMgr_V7::GetActiveHtmlView);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRHTMLMgrSEL, FRHTMLMgrRegisterFoxitBrowserEventHandlerSEL, (void*)CFR_HTMLMgr_V7::RegisterFoxitBrowserEventHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRHTMLMgrSEL, FRHTMLMgrSetFoxitBrowserHomeSEL, (void*)CFR_HTMLMgr_V7::SetFoxitBrowserHome);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRHTMLMgrSEL, FRHTMLMgrSetFavoritesLinkSEL, (void*)CFR_HTMLMgr_V7::SetFavoritesLink);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRHTMLMgrSEL, FRHTMLMgrGetHtmlViewFromHandleSEL, (void*)CFR_HTMLMgr_V7::GetHtmlViewFromHandle);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRHTMLMgrSEL, FRHTMLMgrOpenHTMLFromNewTab2SEL, (void*)CFR_HTMLMgr_V7::OpenHTMLFromNewTab2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRHTMLMgrSEL, FRHTMLMgrOpenHTMLDocument2SEL, (void*)CFR_HTMLMgr_V7::OpenHTMLDocument2);
	}
};

class CFR_PanelMgr_V7_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPanelMgrSEL, FRPanelMgrGetPanelMgrFromChildFrmSEL, (void*)CFR_PanelMgr_V7::GetPanelMgrFromChildFrm);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPanelMgrSEL, FRPanelMgrNewPanelMgrSEL, (void*)CFR_PanelMgr_V7::NewPanelMgr);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPanelMgrSEL, FRPanelMgrDeletePanelMgrSEL, (void*)CFR_PanelMgr_V7::DeletePanelMgr);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPanelMgrSEL, FRPanelMgrCreatePanelEventHandlerSEL, (void*)CFR_PanelMgr_V7::CreatePanelEventHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPanelMgrSEL, FRPanelMgrDestroyPanelEventHandlerSEL, (void*)CFR_PanelMgr_V7::DestroyPanelEventHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPanelMgrSEL, FRPanelMgrCreateSEL, (void*)CFR_PanelMgr_V7::Create);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPanelMgrSEL, FRPanelMgrDockToFrameWindowSEL, (void*)CFR_PanelMgr_V7::DockToFrameWindow);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPanelMgrSEL, FRPanelMgrAddPanelSEL, (void*)CFR_PanelMgr_V7::AddPanel);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPanelMgrSEL, FRPanelMgrShowAllPanelSEL, (void*)CFR_PanelMgr_V7::ShowAllPanel);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPanelMgrSEL, FRPanelMgrShowPanelByNameSEL, (void*)CFR_PanelMgr_V7::ShowPanelByName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPanelMgrSEL, FRPanelMgrResetAllPanelsSEL, (void*)CFR_PanelMgr_V7::ResetAllPanels);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPanelMgrSEL, FRPanelMgrGetPanelHwndByNameSEL, (void*)CFR_PanelMgr_V7::GetPanelHwndByName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPanelMgrSEL, FRPanelMgrIsAllPanelHideSEL, (void*)CFR_PanelMgr_V7::IsAllPanelHide);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPanelMgrSEL, FRPanelMgrHasPanelFloatingSEL, (void*)CFR_PanelMgr_V7::HasPanelFloating);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPanelMgrSEL, FRPanelMgrIsPanelHideSEL, (void*)CFR_PanelMgr_V7::IsPanelHide);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPanelMgrSEL, FRPanelMgrGetParentFrameSEL, (void*)CFR_PanelMgr_V7::GetParentFrame);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPanelMgrSEL, FRPanelMgrGetEnabledAlignmentSEL, (void*)CFR_PanelMgr_V7::GetEnabledAlignment);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPanelMgrSEL, FRPanelMgrGetPanelViewByNameSEL, (void*)CFR_PanelMgr_V7::GetPanelViewByName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPanelMgrSEL, FRPanelMgrGetPanelNameByIndexSEL, (void*)CFR_PanelMgr_V7::GetPanelNameByIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPanelMgrSEL, FRPanelMgrGetPanelCountSEL, (void*)CFR_PanelMgr_V7::GetPanelCount);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPanelMgrSEL, FRPanelMgrGetPanelTabRectByPtSEL, (void*)CFR_PanelMgr_V7::GetPanelTabRectByPt);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPanelMgrSEL, FRPanelMgrGetPanelTabNameByPtSEL, (void*)CFR_PanelMgr_V7::GetPanelTabNameByPt);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPanelMgrSEL, FRPanelMgrGetPanelTabRectByNameSEL, (void*)CFR_PanelMgr_V7::GetPanelTabRectByName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPanelMgrSEL, FRPanelMgrHidePanelTabByNameSEL, (void*)CFR_PanelMgr_V7::HidePanelTabByName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPanelMgrSEL, FRPanelMgrHasHistorySEL, (void*)CFR_PanelMgr_V7::HasHistory);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPanelMgrSEL, FRPanelMgrLockAllPanelSEL, (void*)CFR_PanelMgr_V7::LockAllPanel);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPanelMgrSEL, FRPanelMgrShowPanelByName2SEL, (void*)CFR_PanelMgr_V7::ShowPanelByName2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPanelMgrSEL, FRPanelMgrIsPanelSpreadOutSEL, (void*)CFR_PanelMgr_V7::IsPanelSpreadOut);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPanelMgrSEL, FRPanelMgrAddPanel2SEL, (void*)CFR_PanelMgr_V7::AddPanel2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPanelMgrSEL, FRPanelMgrRedockAllFloatToInitialSEL, (void*)CFR_PanelMgr_V7::RedockAllFloatToInitial);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPanelMgrSEL, FRPanelMgrIsPanelFloatingSEL, (void*)CFR_PanelMgr_V7::IsPanelFloating);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPanelMgrSEL, FRPanelMgrShrinkPanelByNameSEL, (void*)CFR_PanelMgr_V7::ShrinkPanelByName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPanelMgrSEL, FRPanelMgrShowOnlyTabBarSEL, (void*)CFR_PanelMgr_V7::ShowOnlyTabBar);
	}
};

// fr_appImpl.h end

// In file fr_barImpl.h
class CFR_FuncBtn_V7_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRFuncBtnSEL, FRFuncBtnCreateSEL, (void*)CFR_FuncBtn_V7::Create);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRFuncBtnSEL, FRFuncBtnAddToPanelSEL, (void*)CFR_FuncBtn_V7::AddToPanel);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRFuncBtnSEL, FRFuncBtnGetClientDataSEL, (void*)CFR_FuncBtn_V7::GetClientData);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRFuncBtnSEL, FRFuncBtnSetClientDataSEL, (void*)CFR_FuncBtn_V7::SetClientData);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRFuncBtnSEL, FRFuncBtnGetToolTipSEL, (void*)CFR_FuncBtn_V7::GetToolTip);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRFuncBtnSEL, FRFuncBtnSetToolTipSEL, (void*)CFR_FuncBtn_V7::SetToolTip);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRFuncBtnSEL, FRFuncBtnSetNameSEL, (void*)CFR_FuncBtn_V7::SetName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRFuncBtnSEL, FRFuncBtnGetNameSEL, (void*)CFR_FuncBtn_V7::GetName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRFuncBtnSEL, FRFuncBtnSetExecuteProcSEL, (void*)CFR_FuncBtn_V7::SetExecuteProc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRFuncBtnSEL, FRFuncBtnSetComputeEnabledProcSEL, (void*)CFR_FuncBtn_V7::SetComputeEnabledProc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRFuncBtnSEL, FRFuncBtnSetComputeMarkedProcSEL, (void*)CFR_FuncBtn_V7::SetComputeMarkedProc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRFuncBtnSEL, FRFuncBtnUpdateImageSEL, (void*)CFR_FuncBtn_V7::UpdateImage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRFuncBtnSEL, FRFuncBtnGetRectSEL, (void*)CFR_FuncBtn_V7::GetRect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRFuncBtnSEL, FRFuncBtnAddToTabBandSEL, (void*)CFR_FuncBtn_V7::AddToTabBand);
	}
};

class CFR_StatusBar_V7_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRStatusBarSEL, FRStatusBarAddWndExSEL, (void*)CFR_StatusBar_V7::AddWndEx);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRStatusBarSEL, FRStatusBarResetSEL, (void*)CFR_StatusBar_V7::Reset);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRStatusBarSEL, FRStatusBarSetZoomSliderRangeSEL, (void*)CFR_StatusBar_V7::SetZoomSliderRange);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRStatusBarSEL, FRStatusBarSetZoomSliderPosSEL, (void*)CFR_StatusBar_V7::SetZoomSliderPos);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRStatusBarSEL, FRStatusBarGetZoomSliderPosSEL, (void*)CFR_StatusBar_V7::GetZoomSliderPos);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRStatusBarSEL, FRStatusBarSetZoomPaneTextSEL, (void*)CFR_StatusBar_V7::SetZoomPaneText);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRStatusBarSEL, FRStatusBarSetComboBoxPageCountSEL, (void*)CFR_StatusBar_V7::SetComboBoxPageCount);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRStatusBarSEL, FRStatusBarSelectComboBoxItemSEL, (void*)CFR_StatusBar_V7::SelectComboBoxItem);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRStatusBarSEL, FRStatusBarGetComboBoxPageIndexSEL, (void*)CFR_StatusBar_V7::GetComboBoxPageIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRStatusBarSEL, FRStatusBarGetComboBoxPageTextSEL, (void*)CFR_StatusBar_V7::GetComboBoxPageText);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRStatusBarSEL, FRStatusBarGetBkGroundColorSEL, (void*)CFR_StatusBar_V7::GetBkGroundColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRStatusBarSEL, FRStatusBarGetBkGroundPathSEL, (void*)CFR_StatusBar_V7::GetBkGroundPath);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRStatusBarSEL, FRStatusBarRecalcLayoutSEL, (void*)CFR_StatusBar_V7::RecalcLayout);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRStatusBarSEL, FRStatusBarSetComboBoxPageCount2SEL, (void*)CFR_StatusBar_V7::SetComboBoxPageCount2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRStatusBarSEL, FRStatusBarSelectComboBoxItem2SEL, (void*)CFR_StatusBar_V7::SelectComboBoxItem2);
	}
};

// fr_barImpl.h end

// In file fr_docImpl.h
// fr_docImpl.h end

// In file fr_fxnetappImpl.h
// fr_fxnetappImpl.h end

// In file fr_menuImpl.h
// fr_menuImpl.h end

// In file fr_sysImpl.h
// fr_sysImpl.h end

// In file fr_viewImpl.h
// fr_viewImpl.h end

// In file middle_imagecompressImpl.h
// middle_imagecompressImpl.h end

// In file middle_optimizeImpl.h
// middle_optimizeImpl.h end

// In file middle_pdfImpl.h
// middle_pdfImpl.h end

// In file middle_portfolioImpl.h
// middle_portfolioImpl.h end

// In file middle_preflightImpl.h
// middle_preflightImpl.h end

// In file fofd_basicImpl.h
// fofd_basicImpl.h end

// In file fofd_docImpl.h
// fofd_docImpl.h end

// In file fofd_pageImpl.h
// fofd_pageImpl.h end

// In file fofd_renderImpl.h
// fofd_renderImpl.h end

// In file fofd_sigImpl.h
// fofd_sigImpl.h end

// In file fpd_3DImpl.h
// fpd_3DImpl.h end

// In file fpd_barcodeImpl.h
// fpd_barcodeImpl.h end

// In file fpd_convertImpl.h
// fpd_convertImpl.h end

// In file fpd_docImpl.h
class CFPD_ConnectedInfo_V7_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDConnectedInfoSEL, FPDConnectedInfoNewSEL, (void*)CFPD_ConnectedInfo_V7::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDConnectedInfoSEL, FPDConnectedInfoDestroySEL, (void*)CFPD_ConnectedInfo_V7::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDConnectedInfoSEL, FPDConnectedInfoSetIdSEL, (void*)CFPD_ConnectedInfo_V7::SetId);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDConnectedInfoSEL, FPDConnectedInfoGetIdSEL, (void*)CFPD_ConnectedInfo_V7::GetId);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDConnectedInfoSEL, FPDConnectedInfoIsConnectedPDFSEL, (void*)CFPD_ConnectedInfo_V7::IsConnectedPDF);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDConnectedInfoSEL, FPDConnectedInfoIsConnectedPDF2SEL, (void*)CFPD_ConnectedInfo_V7::IsConnectedPDF2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDConnectedInfoSEL, FPDConnectedInfoSetTrackingSEL, (void*)CFPD_ConnectedInfo_V7::SetTracking);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDConnectedInfoSEL, FPDConnectedInfoGetTrackingSEL, (void*)CFPD_ConnectedInfo_V7::GetTracking);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDConnectedInfoSEL, FPDConnectedInfoUpdateSEL, (void*)CFPD_ConnectedInfo_V7::Update);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDConnectedInfoSEL, FPDConnectedInfoSetEncryptOfflineSEL, (void*)CFPD_ConnectedInfo_V7::SetEncryptOffline);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDConnectedInfoSEL, FPDConnectedInfoSetEncryptEnvelopeSEL, (void*)CFPD_ConnectedInfo_V7::SetEncryptEnvelope);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDConnectedInfoSEL, FPDConnectedInfoGetEncryptOfflineSEL, (void*)CFPD_ConnectedInfo_V7::GetEncryptOffline);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDConnectedInfoSEL, FPDConnectedInfoGetEncryptEnvelopeSEL, (void*)CFPD_ConnectedInfo_V7::GetEncryptEnvelope);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDConnectedInfoSEL, FPDConnectedInfoSetOpenActionURLSEL, (void*)CFPD_ConnectedInfo_V7::SetOpenActionURL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDConnectedInfoSEL, FPDConnectedInfoSetOpenActionURL2SEL, (void*)CFPD_ConnectedInfo_V7::SetOpenActionURL2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDConnectedInfoSEL, FPDConnectedInfoCheckSettingOpenActionSEL, (void*)CFPD_ConnectedInfo_V7::CheckSettingOpenAction);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDConnectedInfoSEL, FPDConnectedInfoDeleteOpenActionSEL, (void*)CFPD_ConnectedInfo_V7::DeleteOpenAction);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDConnectedInfoSEL, FPDConnectedInfoSetEndpointSEL, (void*)CFPD_ConnectedInfo_V7::SetEndpoint);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDConnectedInfoSEL, FPDConnectedInfoGetEndpointSEL, (void*)CFPD_ConnectedInfo_V7::GetEndpoint);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDConnectedInfoSEL, FPDConnectedInfoRemoveConnectPDFSEL, (void*)CFPD_ConnectedInfo_V7::RemoveConnectPDF);
	}
};

// fpd_docImpl.h end

// In file fpd_editImpl.h
// fpd_editImpl.h end

// In file fpd_epubImpl.h
// fpd_epubImpl.h end

// In file fpd_fontmgrImpl.h
// fpd_fontmgrImpl.h end

// In file fpd_fxxfaImpl.h
// fpd_fxxfaImpl.h end

// In file fpd_jsImpl.h
// fpd_jsImpl.h end

// In file fpd_lrImpl.h
// fpd_lrImpl.h end

// In file fpd_mathImpl.h
// fpd_mathImpl.h end

// In file fpd_objsImpl.h
// fpd_objsImpl.h end

// In file fpd_pageImpl.h
// fpd_pageImpl.h end

// In file fpd_pageobjImpl.h
// fpd_pageobjImpl.h end

// In file fpd_parserImpl.h
// fpd_parserImpl.h end

// In file fpd_psiImpl.h
// fpd_psiImpl.h end

// In file fpd_pwlImpl.h
// fpd_pwlImpl.h end

// In file fpd_renderImpl.h
// fpd_renderImpl.h end

// In file fpd_resourceImpl.h
// fpd_resourceImpl.h end

// In file fpd_serialImpl.h
// fpd_serialImpl.h end

// In file fpd_textImpl.h
// fpd_textImpl.h end

// In file fpd_validateImpl.h
// fpd_validateImpl.h end

//----------_V8----------
// In file fs_basicImpl.h
// fs_basicImpl.h end

// In file fs_stringImpl.h
// fs_stringImpl.h end

// In file fdrm_descImpl.h
// fdrm_descImpl.h end

// In file fdrm_managerImpl.h
// fdrm_managerImpl.h end

// In file fdrm_pdfImpl.h
// fdrm_pdfImpl.h end

// In file fdrm_pkiImpl.h
// fdrm_pkiImpl.h end

// In file fhtml_impl.h
// fhtml_impl.h end

// In file fr_appImpl.h
// fr_appImpl.h end

// In file fr_barImpl.h
// fr_barImpl.h end

// In file fr_docImpl.h
class CFR_CustomSignature_V8_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCustomSignatureSEL, FRCustomSignatureGenerateSignInfoSEL, (void*)CFR_CustomSignature_V8::GenerateSignInfo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCustomSignatureSEL, FRCustomSignatureGetDefaultServerSEL, (void*)CFR_CustomSignature_V8::GetDefaultServer);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCustomSignatureSEL, FRCustomSignatureCreateSignatureHandlerSEL, (void*)CFR_CustomSignature_V8::CreateSignatureHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCustomSignatureSEL, FRCustomSignatureRegisterSignatureHandlerSEL, (void*)CFR_CustomSignature_V8::RegisterSignatureHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCustomSignatureSEL, FRCustomSignatureDestroySignatureHandlerSEL, (void*)CFR_CustomSignature_V8::DestroySignatureHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCustomSignatureSEL, FRCustomSignatureSetSignatureVerifySEL, (void*)CFR_CustomSignature_V8::SetSignatureVerify);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCustomSignatureSEL, FRCustomSignatureGetDocSigatureCountSEL, (void*)CFR_CustomSignature_V8::GetDocSigatureCount);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCustomSignatureSEL, FRCustomSignatureGetSignatureBaseInfoSEL, (void*)CFR_CustomSignature_V8::GetSignatureBaseInfo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCustomSignatureSEL, FRCustomSignatureClearSignatureSEL, (void*)CFR_CustomSignature_V8::ClearSignature);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCustomSignatureSEL, FRCustomSignatureFoxitSignInScopeSEL, (void*)CFR_CustomSignature_V8::FoxitSignInScope);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCustomSignatureSEL, FRCustomSignatureFoixtCreateSignatureFSEL, (void*)CFR_CustomSignature_V8::FoixtCreateSignatureF);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCustomSignatureSEL, FRCustomSignatureSetPositionSEL, (void*)CFR_CustomSignature_V8::SetPosition);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCustomSignatureSEL, FRCustomSignatureGenerateSignInfo2SEL, (void*)CFR_CustomSignature_V8::GenerateSignInfo2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCustomSignatureSEL, FRCustomSignaturePrepareSignSEL, (void*)CFR_CustomSignature_V8::PrepareSign);
	}
};

// fr_docImpl.h end

// In file fr_fxnetappImpl.h
// fr_fxnetappImpl.h end

// In file fr_menuImpl.h
// fr_menuImpl.h end

// In file fr_sysImpl.h
// fr_sysImpl.h end

// In file fr_viewImpl.h
// fr_viewImpl.h end

// In file middle_imagecompressImpl.h
// middle_imagecompressImpl.h end

// In file middle_optimizeImpl.h
// middle_optimizeImpl.h end

// In file middle_pdfImpl.h
// middle_pdfImpl.h end

// In file middle_portfolioImpl.h
// middle_portfolioImpl.h end

// In file middle_preflightImpl.h
// middle_preflightImpl.h end

// In file fofd_basicImpl.h
// fofd_basicImpl.h end

// In file fofd_docImpl.h
// fofd_docImpl.h end

// In file fofd_pageImpl.h
// fofd_pageImpl.h end

// In file fofd_renderImpl.h
// fofd_renderImpl.h end

// In file fofd_sigImpl.h
// fofd_sigImpl.h end

// In file fpd_3DImpl.h
// fpd_3DImpl.h end

// In file fpd_barcodeImpl.h
// fpd_barcodeImpl.h end

// In file fpd_convertImpl.h
// fpd_convertImpl.h end

// In file fpd_docImpl.h
// fpd_docImpl.h end

// In file fpd_editImpl.h
// fpd_editImpl.h end

// In file fpd_epubImpl.h
// fpd_epubImpl.h end

// In file fpd_fontmgrImpl.h
// fpd_fontmgrImpl.h end

// In file fpd_fxxfaImpl.h
// fpd_fxxfaImpl.h end

// In file fpd_jsImpl.h
// fpd_jsImpl.h end

// In file fpd_lrImpl.h
// fpd_lrImpl.h end

// In file fpd_mathImpl.h
// fpd_mathImpl.h end

// In file fpd_objsImpl.h
// fpd_objsImpl.h end

// In file fpd_pageImpl.h
// fpd_pageImpl.h end

// In file fpd_pageobjImpl.h
// fpd_pageobjImpl.h end

// In file fpd_parserImpl.h
// fpd_parserImpl.h end

// In file fpd_psiImpl.h
// fpd_psiImpl.h end

// In file fpd_pwlImpl.h
// fpd_pwlImpl.h end

// In file fpd_renderImpl.h
// fpd_renderImpl.h end

// In file fpd_resourceImpl.h
// fpd_resourceImpl.h end

// In file fpd_serialImpl.h
// fpd_serialImpl.h end

// In file fpd_textImpl.h
// fpd_textImpl.h end

// In file fpd_validateImpl.h
// fpd_validateImpl.h end

//----------_V9----------
// In file fs_basicImpl.h
class CFS_UUID_V9_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSUUIDSEL, FSUUIDGenerateSEL, (void*)CFS_UUID_V9::Generate);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSUUIDSEL, FSUUIDGenerateTimeSEL, (void*)CFS_UUID_V9::GenerateTime);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSUUIDSEL, FSUUIDGenerateRandomSEL, (void*)CFS_UUID_V9::GenerateRandom);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSUUIDSEL, FSUUIDSetTsPathSEL, (void*)CFS_UUID_V9::SetTsPath);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSUUIDSEL, FSUUIDSetStateSEL, (void*)CFS_UUID_V9::SetState);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSUUIDSEL, FSUUIDSetUserDataSEL, (void*)CFS_UUID_V9::SetUserData);
	}
};

class CFS_MapByteStringToPtr_V9_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSMapByteStringToPtrSEL, FSMapByteStringToPtrNewSEL, (void*)CFS_MapByteStringToPtr_V9::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSMapByteStringToPtrSEL, FSMapByteStringToPtrDestroySEL, (void*)CFS_MapByteStringToPtr_V9::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSMapByteStringToPtrSEL, FSMapByteStringToPtrGetCountSEL, (void*)CFS_MapByteStringToPtr_V9::GetCount);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSMapByteStringToPtrSEL, FSMapByteStringToPtrIsEmptySEL, (void*)CFS_MapByteStringToPtr_V9::IsEmpty);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSMapByteStringToPtrSEL, FSMapByteStringToPtrLookupSEL, (void*)CFS_MapByteStringToPtr_V9::Lookup);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSMapByteStringToPtrSEL, FSMapByteStringToPtrSetAtSEL, (void*)CFS_MapByteStringToPtr_V9::SetAt);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSMapByteStringToPtrSEL, FSMapByteStringToPtrRemoveKeySEL, (void*)CFS_MapByteStringToPtr_V9::RemoveKey);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSMapByteStringToPtrSEL, FSMapByteStringToPtrRemoveAllSEL, (void*)CFS_MapByteStringToPtr_V9::RemoveAll);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSMapByteStringToPtrSEL, FSMapByteStringToPtrGetStartPositionSEL, (void*)CFS_MapByteStringToPtr_V9::GetStartPosition);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSMapByteStringToPtrSEL, FSMapByteStringToPtrGetNextAssocSEL, (void*)CFS_MapByteStringToPtr_V9::GetNextAssoc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSMapByteStringToPtrSEL, FSMapByteStringToPtrGetNextValueSEL, (void*)CFS_MapByteStringToPtr_V9::GetNextValue);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSMapByteStringToPtrSEL, FSMapByteStringToPtrGetHashTableSizeSEL, (void*)CFS_MapByteStringToPtr_V9::GetHashTableSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSMapByteStringToPtrSEL, FSMapByteStringToPtrInitHashTableSEL, (void*)CFS_MapByteStringToPtr_V9::InitHashTable);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSMapByteStringToPtrSEL, FSMapByteStringToPtrHashKeySEL, (void*)CFS_MapByteStringToPtr_V9::HashKey);
	}
};

// fs_basicImpl.h end

// In file fs_stringImpl.h
// fs_stringImpl.h end

// In file fdrm_descImpl.h
// fdrm_descImpl.h end

// In file fdrm_managerImpl.h
// fdrm_managerImpl.h end

// In file fdrm_pdfImpl.h
// fdrm_pdfImpl.h end

// In file fdrm_pkiImpl.h
// fdrm_pkiImpl.h end

// In file fhtml_impl.h
// fhtml_impl.h end

// In file fr_appImpl.h
class CFR_CloudLoginProvider_V9_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCloudLoginProviderSEL, FRCloudLoginProviderSetSEL, (void*)CFR_CloudLoginProvider_V9::Set);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCloudLoginProviderSEL, FRCloudLoginProviderDestroySEL, (void*)CFR_CloudLoginProvider_V9::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCloudLoginProviderSEL, FRCloudLoginProviderGetSEL, (void*)CFR_CloudLoginProvider_V9::Get);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCloudLoginProviderSEL, FRCloudLoginProviderIsLogInSEL, (void*)CFR_CloudLoginProvider_V9::IsLogIn);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCloudLoginProviderSEL, FRCloudLoginProviderSignInSEL, (void*)CFR_CloudLoginProvider_V9::SignIn);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCloudLoginProviderSEL, FRCloudLoginProviderSignOutSEL, (void*)CFR_CloudLoginProvider_V9::SignOut);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCloudLoginProviderSEL, FRCloudLoginProviderGetUserInfoSEL, (void*)CFR_CloudLoginProvider_V9::GetUserInfo);
	}
};

// fr_appImpl.h end

// In file fr_barImpl.h
class CFR_BulbMsgCenter_V9_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRBulbMsgCenterSEL, FRBulbMsgCenterAddMessageSEL, (void*)CFR_BulbMsgCenter_V9::AddMessage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRBulbMsgCenterSEL, FRBulbMsgCenterShowMessageSEL, (void*)CFR_BulbMsgCenter_V9::ShowMessage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRBulbMsgCenterSEL, FRBulbMsgCenterSetCheckSEL, (void*)CFR_BulbMsgCenter_V9::SetCheck);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRBulbMsgCenterSEL, FRBulbMsgCenterSetOpBtnEnableSEL, (void*)CFR_BulbMsgCenter_V9::SetOpBtnEnable);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRBulbMsgCenterSEL, FRBulbMsgCenterIsMessageExistSEL, (void*)CFR_BulbMsgCenter_V9::IsMessageExist);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRBulbMsgCenterSEL, FRBulbMsgCenterIsOpBtnEnableSEL, (void*)CFR_BulbMsgCenter_V9::IsOpBtnEnable);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRBulbMsgCenterSEL, FRBulbMsgCenterSetOpBtnTitleSEL, (void*)CFR_BulbMsgCenter_V9::SetOpBtnTitle);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRBulbMsgCenterSEL, FRBulbMsgCenterSetMessageContentSEL, (void*)CFR_BulbMsgCenter_V9::SetMessageContent);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRBulbMsgCenterSEL, FRBulbMsgCenterGetButtonRectSEL, (void*)CFR_BulbMsgCenter_V9::GetButtonRect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRBulbMsgCenterSEL, FRBulbMsgCenterAddMessage2SEL, (void*)CFR_BulbMsgCenter_V9::AddMessage2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRBulbMsgCenterSEL, FRBulbMsgCenterShowMessage2SEL, (void*)CFR_BulbMsgCenter_V9::ShowMessage2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRBulbMsgCenterSEL, FRBulbMsgCenterAddMessage3SEL, (void*)CFR_BulbMsgCenter_V9::AddMessage3);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRBulbMsgCenterSEL, FRBulbMsgCenterAddMessage4SEL, (void*)CFR_BulbMsgCenter_V9::AddMessage4);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRBulbMsgCenterSEL, FRBulbMsgCenterAddMessage5SEL, (void*)CFR_BulbMsgCenter_V9::AddMessage5);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRBulbMsgCenterSEL, FRBulbMsgCenterIsMessageVisibleSEL, (void*)CFR_BulbMsgCenter_V9::IsMessageVisible);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRBulbMsgCenterSEL, FRBulbMsgCenterAddAndShowMessageSEL, (void*)CFR_BulbMsgCenter_V9::AddAndShowMessage);
	}
};

// fr_barImpl.h end

// In file fr_docImpl.h
// fr_docImpl.h end

// In file fr_fxnetappImpl.h
// fr_fxnetappImpl.h end

// In file fr_menuImpl.h
// fr_menuImpl.h end

// In file fr_sysImpl.h
// fr_sysImpl.h end

// In file fr_viewImpl.h
// fr_viewImpl.h end

// In file middle_imagecompressImpl.h
// middle_imagecompressImpl.h end

// In file middle_optimizeImpl.h
// middle_optimizeImpl.h end

// In file middle_pdfImpl.h
// middle_pdfImpl.h end

// In file middle_portfolioImpl.h
// middle_portfolioImpl.h end

// In file middle_preflightImpl.h
// middle_preflightImpl.h end

// In file fofd_basicImpl.h
// fofd_basicImpl.h end

// In file fofd_docImpl.h
// fofd_docImpl.h end

// In file fofd_pageImpl.h
// fofd_pageImpl.h end

// In file fofd_renderImpl.h
// fofd_renderImpl.h end

// In file fofd_sigImpl.h
// fofd_sigImpl.h end

// In file fpd_3DImpl.h
// fpd_3DImpl.h end

// In file fpd_barcodeImpl.h
// fpd_barcodeImpl.h end

// In file fpd_convertImpl.h
// fpd_convertImpl.h end

// In file fpd_docImpl.h
// fpd_docImpl.h end

// In file fpd_editImpl.h
// fpd_editImpl.h end

// In file fpd_epubImpl.h
class CFPD_EPUB_V9_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEPUBSEL, FPDEPUBOpenSEL, (void*)CFPD_EPUB_V9::Open);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEPUBSEL, FPDEPUBReleaseDocumentSEL, (void*)CFPD_EPUB_V9::ReleaseDocument);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEPUBSEL, FPDEPUBCloseSEL, (void*)CFPD_EPUB_V9::Close);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEPUBSEL, FPDEPUBUnLoadDocPageSEL, (void*)CFPD_EPUB_V9::UnLoadDocPage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEPUBSEL, FPDEPUBLoadPageSEL, (void*)CFPD_EPUB_V9::LoadPage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEPUBSEL, FPDEPUBUnloadPageSEL, (void*)CFPD_EPUB_V9::UnloadPage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEPUBSEL, FPDEPUBLoadSectionSEL, (void*)CFPD_EPUB_V9::LoadSection);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEPUBSEL, FPDEPUBUnloadSectionSEL, (void*)CFPD_EPUB_V9::UnloadSection);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEPUBSEL, FPDEPUBGetParserSEL, (void*)CFPD_EPUB_V9::GetParser);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEPUBSEL, FPDEPUBGetPageSEL, (void*)CFPD_EPUB_V9::GetPage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEPUBSEL, FPDEPUBGetDocumentSectionSEL, (void*)CFPD_EPUB_V9::GetDocumentSection);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEPUBSEL, FPDEPUBCountSectionsSEL, (void*)CFPD_EPUB_V9::CountSections);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEPUBSEL, FPDEPUBGetSectionIndexSEL, (void*)CFPD_EPUB_V9::GetSectionIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEPUBSEL, FPDEPUBCountPagesSEL, (void*)CFPD_EPUB_V9::CountPages);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEPUBSEL, FPDEPUBGetBookmarkSEL, (void*)CFPD_EPUB_V9::GetBookmark);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEPUBSEL, FPDEPUBGetNamedDestSEL, (void*)CFPD_EPUB_V9::GetNamedDest);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEPUBSEL, FPDEPUBReParseSEL, (void*)CFPD_EPUB_V9::ReParse);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEPUBSEL, FPDEPUBGetPageSectionSEL, (void*)CFPD_EPUB_V9::GetPageSection);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEPUBSEL, FPDEPUBGetPageRectSEL, (void*)CFPD_EPUB_V9::GetPageRect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEPUBSEL, FPDEPUBGetParentBookmarkSEL, (void*)CFPD_EPUB_V9::GetParentBookmark);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEPUBSEL, FPDEPUBCountSubBookmarksSEL, (void*)CFPD_EPUB_V9::CountSubBookmarks);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEPUBSEL, FPDEPUBGetSubBookmarkSEL, (void*)CFPD_EPUB_V9::GetSubBookmark);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEPUBSEL, FPDEPUBGetBookmarkStylesSEL, (void*)CFPD_EPUB_V9::GetBookmarkStyles);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEPUBSEL, FPDEPUBGetBookmarkTitleSEL, (void*)CFPD_EPUB_V9::GetBookmarkTitle);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEPUBSEL, FPDEPUBGetBookmarkExternalDocNameSEL, (void*)CFPD_EPUB_V9::GetBookmarkExternalDocName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEPUBSEL, FPDEPUBGetBookmarkURISEL, (void*)CFPD_EPUB_V9::GetBookmarkURI);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEPUBSEL, FPDEPUBGetBookmarkNamedStringSEL, (void*)CFPD_EPUB_V9::GetBookmarkNamedString);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEPUBSEL, FPDEPUBIsBookmarkOpenedSEL, (void*)CFPD_EPUB_V9::IsBookmarkOpened);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEPUBSEL, FPDEPUBCreateTextSelectionSEL, (void*)CFPD_EPUB_V9::CreateTextSelection);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEPUBSEL, FPDEPUBReleaseTextSelectionSEL, (void*)CFPD_EPUB_V9::ReleaseTextSelection);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEPUBSEL, FPDEPUBTextSelectionAttachPageSEL, (void*)CFPD_EPUB_V9::TextSelectionAttachPage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEPUBSEL, FPDEPUBTextSelectionResetSEL, (void*)CFPD_EPUB_V9::TextSelectionReset);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEPUBSEL, FPDEPUBSetSelectStartPosSEL, (void*)CFPD_EPUB_V9::SetSelectStartPos);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEPUBSEL, FPDEPUBGetSelectStartPosSEL, (void*)CFPD_EPUB_V9::GetSelectStartPos);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEPUBSEL, FPDEPUBGetSelectCurPosSEL, (void*)CFPD_EPUB_V9::GetSelectCurPos);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEPUBSEL, FPDEPUBSelectWordSEL, (void*)CFPD_EPUB_V9::SelectWord);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEPUBSEL, FPDEPUBSelectRectangleTextSEL, (void*)CFPD_EPUB_V9::SelectRectangleText);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEPUBSEL, FPDEPUBSelectParagraphTextSEL, (void*)CFPD_EPUB_V9::SelectParagraphText);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEPUBSEL, FPDEPUBSelectNextCharSEL, (void*)CFPD_EPUB_V9::SelectNextChar);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEPUBSEL, FPDEPUBSelectPrevCharSEL, (void*)CFPD_EPUB_V9::SelectPrevChar);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEPUBSEL, FPDEPUBSelectNextWordSEL, (void*)CFPD_EPUB_V9::SelectNextWord);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEPUBSEL, FPDEPUBSelectPrevWordSEL, (void*)CFPD_EPUB_V9::SelectPrevWord);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEPUBSEL, FPDEPUBSelectNextLineSEL, (void*)CFPD_EPUB_V9::SelectNextLine);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEPUBSEL, FPDEPUBSelectPrevLineSEL, (void*)CFPD_EPUB_V9::SelectPrevLine);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEPUBSEL, FPDEPUBCountSelectRectsSEL, (void*)CFPD_EPUB_V9::CountSelectRects);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEPUBSEL, FPDEPUBGetSelectRectSEL, (void*)CFPD_EPUB_V9::GetSelectRect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEPUBSEL, FPDEPUBCopySelectTextSEL, (void*)CFPD_EPUB_V9::CopySelectText);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEPUBSEL, FPDEPUBCreateTextSearchSEL, (void*)CFPD_EPUB_V9::CreateTextSearch);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEPUBSEL, FPDEPUBReleaseTextSearchSEL, (void*)CFPD_EPUB_V9::ReleaseTextSearch);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEPUBSEL, FPDEPUBTextSearchAttachPageSEL, (void*)CFPD_EPUB_V9::TextSearchAttachPage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEPUBSEL, FPDEPUBFindFirstSEL, (void*)CFPD_EPUB_V9::FindFirst);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEPUBSEL, FPDEPUBFindNextSEL, (void*)CFPD_EPUB_V9::FindNext);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEPUBSEL, FPDEPUBFindPrevSEL, (void*)CFPD_EPUB_V9::FindPrev);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEPUBSEL, FPDEPUBGetSearchPosSEL, (void*)CFPD_EPUB_V9::GetSearchPos);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEPUBSEL, FPDEPUBCountSearchRectsSEL, (void*)CFPD_EPUB_V9::CountSearchRects);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEPUBSEL, FPDEPUBGetSearchRectSEL, (void*)CFPD_EPUB_V9::GetSearchRect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEPUBSEL, FPDEPUBTransfer2DocPointSEL, (void*)CFPD_EPUB_V9::Transfer2DocPoint);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEPUBSEL, FPDEPUBTransfer2DocPointRectSEL, (void*)CFPD_EPUB_V9::Transfer2DocPointRect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEPUBSEL, FPDEPUBFDEGetPageMatrixSEL, (void*)CFPD_EPUB_V9::FDEGetPageMatrix);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEPUBSEL, FPDEPUBCreateRenderDeviceSEL, (void*)CFPD_EPUB_V9::CreateRenderDevice);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEPUBSEL, FPDEPUBReleaseRenderDeviceSEL, (void*)CFPD_EPUB_V9::ReleaseRenderDevice);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEPUBSEL, FPDEPUBRenderDeviceSetClipRectSEL, (void*)CFPD_EPUB_V9::RenderDeviceSetClipRect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEPUBSEL, FPDEPUBCreateRenderContextSEL, (void*)CFPD_EPUB_V9::CreateRenderContext);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEPUBSEL, FPDEPUBReleaseRenderContextSEL, (void*)CFPD_EPUB_V9::ReleaseRenderContext);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEPUBSEL, FPDEPUBRenderContextRenderingSEL, (void*)CFPD_EPUB_V9::RenderContextRendering);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEPUBSEL, FPDEPUBDoRenderSEL, (void*)CFPD_EPUB_V9::DoRender);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEPUBSEL, FPDEPUBEpubArgbEncodeSEL, (void*)CFPD_EPUB_V9::EpubArgbEncode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEPUBSEL, FPDEPUBInitFDEMgrSEL, (void*)CFPD_EPUB_V9::InitFDEMgr);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEPUBSEL, FPDEPUBReleaseFDEMgrSEL, (void*)CFPD_EPUB_V9::ReleaseFDEMgr);
	}
};

// fpd_epubImpl.h end

// In file fpd_fontmgrImpl.h
// fpd_fontmgrImpl.h end

// In file fpd_fxxfaImpl.h
// fpd_fxxfaImpl.h end

// In file fpd_jsImpl.h
// fpd_jsImpl.h end

// In file fpd_lrImpl.h
// fpd_lrImpl.h end

// In file fpd_mathImpl.h
// fpd_mathImpl.h end

// In file fpd_objsImpl.h
// fpd_objsImpl.h end

// In file fpd_pageImpl.h
// fpd_pageImpl.h end

// In file fpd_pageobjImpl.h
// fpd_pageobjImpl.h end

// In file fpd_parserImpl.h
// fpd_parserImpl.h end

// In file fpd_psiImpl.h
// fpd_psiImpl.h end

// In file fpd_pwlImpl.h
// fpd_pwlImpl.h end

// In file fpd_renderImpl.h
// fpd_renderImpl.h end

// In file fpd_resourceImpl.h
// fpd_resourceImpl.h end

// In file fpd_serialImpl.h
// fpd_serialImpl.h end

// In file fpd_textImpl.h
// fpd_textImpl.h end

// In file fpd_validateImpl.h
// fpd_validateImpl.h end

//----------_V10----------
// In file fs_basicImpl.h
// fs_basicImpl.h end

// In file fs_stringImpl.h
// fs_stringImpl.h end

// In file fdrm_descImpl.h
// fdrm_descImpl.h end

// In file fdrm_managerImpl.h
// fdrm_managerImpl.h end

// In file fdrm_pdfImpl.h
// fdrm_pdfImpl.h end

// In file fdrm_pkiImpl.h
// fdrm_pkiImpl.h end

// In file fhtml_impl.h
// fhtml_impl.h end

// In file fr_appImpl.h
// fr_appImpl.h end

// In file fr_barImpl.h
// fr_barImpl.h end

// In file fr_docImpl.h
// fr_docImpl.h end

// In file fr_fxnetappImpl.h
// fr_fxnetappImpl.h end

// In file fr_menuImpl.h
// fr_menuImpl.h end

// In file fr_sysImpl.h
// fr_sysImpl.h end

// In file fr_viewImpl.h
// fr_viewImpl.h end

// In file middle_imagecompressImpl.h
// middle_imagecompressImpl.h end

// In file middle_optimizeImpl.h
// middle_optimizeImpl.h end

// In file middle_pdfImpl.h
// middle_pdfImpl.h end

// In file middle_portfolioImpl.h
// middle_portfolioImpl.h end

// In file middle_preflightImpl.h
// middle_preflightImpl.h end

// In file fofd_basicImpl.h
class CFOFD_CryptoDict_V10_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
	}
};

class CFOFD_SecurityHandler_V10_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
	}
};

class CFOFD_StdSecurityHandler_V10_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
	}
};

class CFOFD_StdCertSecurityHandler_V10_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
	}
};

class CFOFD_SMSecurityHandler_V10_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
	}
};

class CFOFD_CryptoHandler_V10_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
	}
};

class CFOFD_StdCryptoHandler_V10_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
	}
};

class CFOFD_SM4CryptoHandler_V10_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
	}
};

class CFOFD_FileStream_V10_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
	}
};

class CFOFD_PauseHandler_V10_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FOFDPauseHandlerSEL, FOFDPauseHandlerCreateSEL, (void*)CFOFD_PauseHandler_V10::Create);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FOFDPauseHandlerSEL, FOFDPauseHandlerDestroySEL, (void*)CFOFD_PauseHandler_V10::Destroy);
	}
};

class CFOFD_UIMgr_V10_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FOFDUIMgrSEL, FOFDUIMgrSetPanelIndexSEL, (void*)CFOFD_UIMgr_V10::SetPanelIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FOFDUIMgrSEL, FOFDUIMgrTriggerPanelSEL, (void*)CFOFD_UIMgr_V10::TriggerPanel);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FOFDUIMgrSEL, FOFDUIMgrFormatComboBoxSEL, (void*)CFOFD_UIMgr_V10::FormatComboBox);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FOFDUIMgrSEL, FOFDUIMgrShowAutoHideStatusBarSEL, (void*)CFOFD_UIMgr_V10::ShowAutoHideStatusBar);
	}
};

class CFOFD_DIBAttribute_V10_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FOFDDIBAttributeSEL, FOFDDIBAttributeCreateSEL, (void*)CFOFD_DIBAttribute_V10::Create);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FOFDDIBAttributeSEL, FOFDDIBAttributeGetXDPISEL, (void*)CFOFD_DIBAttribute_V10::GetXDPI);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FOFDDIBAttributeSEL, FOFDDIBAttributeSetXDPISEL, (void*)CFOFD_DIBAttribute_V10::SetXDPI);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FOFDDIBAttributeSEL, FOFDDIBAttributeGetYDPISEL, (void*)CFOFD_DIBAttribute_V10::GetYDPI);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FOFDDIBAttributeSEL, FOFDDIBAttributeSetYDPISEL, (void*)CFOFD_DIBAttribute_V10::SetYDPI);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FOFDDIBAttributeSEL, FOFDDIBAttributeGetAspectRatioSEL, (void*)CFOFD_DIBAttribute_V10::GetAspectRatio);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FOFDDIBAttributeSEL, FOFDDIBAttributeSetAspectRatioSEL, (void*)CFOFD_DIBAttribute_V10::SetAspectRatio);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FOFDDIBAttributeSEL, FOFDDIBAttributeGetDPIUnitSEL, (void*)CFOFD_DIBAttribute_V10::GetDPIUnit);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FOFDDIBAttributeSEL, FOFDDIBAttributeSetDPIUnitSEL, (void*)CFOFD_DIBAttribute_V10::SetDPIUnit);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FOFDDIBAttributeSEL, FOFDDIBAttributeGetAuthorSEL, (void*)CFOFD_DIBAttribute_V10::GetAuthor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FOFDDIBAttributeSEL, FOFDDIBAttributeSetAuthorSEL, (void*)CFOFD_DIBAttribute_V10::SetAuthor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FOFDDIBAttributeSEL, FOFDDIBAttributeGetTimeSEL, (void*)CFOFD_DIBAttribute_V10::GetTime);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FOFDDIBAttributeSEL, FOFDDIBAttributeSetTimeSEL, (void*)CFOFD_DIBAttribute_V10::SetTime);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FOFDDIBAttributeSEL, FOFDDIBAttributeGetGifLeftSEL, (void*)CFOFD_DIBAttribute_V10::GetGifLeft);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FOFDDIBAttributeSEL, FOFDDIBAttributeSetGifLeftSEL, (void*)CFOFD_DIBAttribute_V10::SetGifLeft);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FOFDDIBAttributeSEL, FOFDDIBAttributeGetGifTopSEL, (void*)CFOFD_DIBAttribute_V10::GetGifTop);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FOFDDIBAttributeSEL, FOFDDIBAttributeSetGifTopSEL, (void*)CFOFD_DIBAttribute_V10::SetGifTop);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FOFDDIBAttributeSEL, FOFDDIBAttributeGetGifLocalPaletteSEL, (void*)CFOFD_DIBAttribute_V10::GetGifLocalPalette);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FOFDDIBAttributeSEL, FOFDDIBAttributeSetGifLocalPaletteSEL, (void*)CFOFD_DIBAttribute_V10::SetGifLocalPalette);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FOFDDIBAttributeSEL, FOFDDIBAttributeGetGifLocalPalNumSEL, (void*)CFOFD_DIBAttribute_V10::GetGifLocalPalNum);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FOFDDIBAttributeSEL, FOFDDIBAttributeSetGifLocalPalNumSEL, (void*)CFOFD_DIBAttribute_V10::SetGifLocalPalNum);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FOFDDIBAttributeSEL, FOFDDIBAttributeGetBmpCompressTypeSEL, (void*)CFOFD_DIBAttribute_V10::GetBmpCompressType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FOFDDIBAttributeSEL, FOFDDIBAttributeSetBmpCompressTypeSEL, (void*)CFOFD_DIBAttribute_V10::SetBmpCompressType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FOFDDIBAttributeSEL, FOFDDIBAttributeGetTiffFrameCompressTypeSEL, (void*)CFOFD_DIBAttribute_V10::GetTiffFrameCompressType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FOFDDIBAttributeSEL, FOFDDIBAttributeSetTiffFrameCompressTypeSEL, (void*)CFOFD_DIBAttribute_V10::SetTiffFrameCompressType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FOFDDIBAttributeSEL, FOFDDIBAttributeGetTiffFrameCompressOptionsSEL, (void*)CFOFD_DIBAttribute_V10::GetTiffFrameCompressOptions);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FOFDDIBAttributeSEL, FOFDDIBAttributeSetTiffFrameCompressOptionsSEL, (void*)CFOFD_DIBAttribute_V10::SetTiffFrameCompressOptions);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FOFDDIBAttributeSEL, FOFDDIBAttributeGetTiffFrameFillOrderSEL, (void*)CFOFD_DIBAttribute_V10::GetTiffFrameFillOrder);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FOFDDIBAttributeSEL, FOFDDIBAttributeSetTiffFrameFillOrderSEL, (void*)CFOFD_DIBAttribute_V10::SetTiffFrameFillOrder);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FOFDDIBAttributeSEL, FOFDDIBAttributeGetTiffFrameCompressJpegQualitySEL, (void*)CFOFD_DIBAttribute_V10::GetTiffFrameCompressJpegQuality);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FOFDDIBAttributeSEL, FOFDDIBAttributeSetTiffFrameCompressJpegQualitySEL, (void*)CFOFD_DIBAttribute_V10::SetTiffFrameCompressJpegQuality);
	}
};

class CFOFD_CodeC_V10_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FOFDCodeCSEL, FOFDCodeCPngEncodeSEL, (void*)CFOFD_CodeC_V10::PngEncode);
	}
};

class CFOFD_PrintSetting_V10_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FOFDPrintSettingSEL, FOFDPrintSettingGetGlobalUnitSEL, (void*)CFOFD_PrintSetting_V10::GetGlobalUnit);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FOFDPrintSettingSEL, FOFDPrintSettingGetDefaultPrinterNameSEL, (void*)CFOFD_PrintSetting_V10::GetDefaultPrinterName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FOFDPrintSettingSEL, FOFDPrintSettingGetDefaultPrinterDevModeSEL, (void*)CFOFD_PrintSetting_V10::GetDefaultPrinterDevMode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FOFDPrintSettingSEL, FOFDPrintSettingSetDefaultPrinterDevModeSEL, (void*)CFOFD_PrintSetting_V10::SetDefaultPrinterDevMode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FOFDPrintSettingSEL, FOFDPrintSettingIsPrintUseGraphicsSEL, (void*)CFOFD_PrintSetting_V10::IsPrintUseGraphics);
	}
};

class CFOFD_Sys_V10_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
	}
};

// fofd_basicImpl.h end

// In file fofd_docImpl.h
class CFOFD_Package_V10_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
	}
};

class CFOFD_Parser_V10_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
	}
};

class CFOFD_Doc_V10_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
	}
};

class CFOFD_WriteDoc_V10_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
	}
};

class CFOFD_Creator_V10_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
	}
};

class CFOFD_Perms_V10_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
	}
};

class CFOFD_VPrefers_V10_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
	}
};

class CFOFD_Bookmarks_V10_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
	}
};

class CFOFD_Bookmark_V10_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
	}
};

class CFOFD_Outline_V10_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
	}
};

class CFOFD_Actions_V10_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
	}
};

class CFOFD_Action_V10_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
	}
};

class CFOFD_ActionGoto_V10_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
	}
};

class CFOFD_ActionGotoA_V10_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
	}
};

class CFOFD_ActionRegion_V10_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
	}
};

// fofd_docImpl.h end

// In file fofd_pageImpl.h
class CFOFD_Page_V10_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
	}
};

class CFOFD_Dest_V10_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
	}
};

// fofd_pageImpl.h end

// In file fofd_renderImpl.h
class CFOFD_RenderOptions_V10_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
	}
};

class CFOFD_RenderContext_V10_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
	}
};

class CFOFD_RenderDevice_V10_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FOFDRenderDeviceSEL, FOFDRenderDeviceSaveBitmapSEL, (void*)CFOFD_RenderDevice_V10::SaveBitmap);
	}
};

class CFOFD_ProgressiveRenderer_V10_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
	}
};

// fofd_renderImpl.h end

// In file fofd_sigImpl.h
class CFOFD_Sign_V10_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FOFDSignSEL, FOFDSignCreateSealBitmapSEL, (void*)CFOFD_Sign_V10::CreateSealBitmap);
	}
};

// fofd_sigImpl.h end

// In file fpd_3DImpl.h
// fpd_3DImpl.h end

// In file fpd_barcodeImpl.h
// fpd_barcodeImpl.h end

// In file fpd_convertImpl.h
// fpd_convertImpl.h end

// In file fpd_docImpl.h
class CFPD_WrapperDoc_V10_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDWrapperDocSEL, FPDWrapperDocNewSEL, (void*)CFPD_WrapperDoc_V10::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDWrapperDocSEL, FPDWrapperDocDestroySEL, (void*)CFPD_WrapperDoc_V10::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDWrapperDocSEL, FPDWrapperDocGetWrapperTypeSEL, (void*)CFPD_WrapperDoc_V10::GetWrapperType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDWrapperDocSEL, FPDWrapperDocGetCryptographicFilterSEL, (void*)CFPD_WrapperDoc_V10::GetCryptographicFilter);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDWrapperDocSEL, FPDWrapperDocGetPayLoadSizeSEL, (void*)CFPD_WrapperDoc_V10::GetPayLoadSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDWrapperDocSEL, FPDWrapperDocGetPayloadFileNameSEL, (void*)CFPD_WrapperDoc_V10::GetPayloadFileName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDWrapperDocSEL, FPDWrapperDocStartGetPayloadSEL, (void*)CFPD_WrapperDoc_V10::StartGetPayload);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDWrapperDocSEL, FPDWrapperDocContinueSEL, (void*)CFPD_WrapperDoc_V10::Continue);
	}
};

// fpd_docImpl.h end

// In file fpd_editImpl.h
// fpd_editImpl.h end

// In file fpd_epubImpl.h
// fpd_epubImpl.h end

// In file fpd_fontmgrImpl.h
// fpd_fontmgrImpl.h end

// In file fpd_fxxfaImpl.h
// fpd_fxxfaImpl.h end

// In file fpd_jsImpl.h
// fpd_jsImpl.h end

// In file fpd_lrImpl.h
// fpd_lrImpl.h end

// In file fpd_mathImpl.h
// fpd_mathImpl.h end

// In file fpd_objsImpl.h
// fpd_objsImpl.h end

// In file fpd_pageImpl.h
// fpd_pageImpl.h end

// In file fpd_pageobjImpl.h
// fpd_pageobjImpl.h end

// In file fpd_parserImpl.h
// fpd_parserImpl.h end

// In file fpd_psiImpl.h
// fpd_psiImpl.h end

// In file fpd_pwlImpl.h
// fpd_pwlImpl.h end

// In file fpd_renderImpl.h
// fpd_renderImpl.h end

// In file fpd_resourceImpl.h
// fpd_resourceImpl.h end

// In file fpd_serialImpl.h
class CFPD_UnencryptedWrapperCreator_V10_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDUnencryptedWrapperCreatorSEL, FPDUnencryptedWrapperCreatorNewSEL, (void*)CFPD_UnencryptedWrapperCreator_V10::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDUnencryptedWrapperCreatorSEL, FPDUnencryptedWrapperCreatorDestroySEL, (void*)CFPD_UnencryptedWrapperCreator_V10::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDUnencryptedWrapperCreatorSEL, FPDUnencryptedWrapperCreatorSetPayloadInfoSEL, (void*)CFPD_UnencryptedWrapperCreator_V10::SetPayloadInfo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDUnencryptedWrapperCreatorSEL, FPDUnencryptedWrapperCreatorSetPayLoadSEL, (void*)CFPD_UnencryptedWrapperCreator_V10::SetPayLoad);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDUnencryptedWrapperCreatorSEL, FPDUnencryptedWrapperCreatorCreateSEL, (void*)CFPD_UnencryptedWrapperCreator_V10::Create);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDUnencryptedWrapperCreatorSEL, FPDUnencryptedWrapperCreatorContinueSEL, (void*)CFPD_UnencryptedWrapperCreator_V10::Continue);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDUnencryptedWrapperCreatorSEL, FPDUnencryptedWrapperCreatorSetStandardSecuritySEL, (void*)CFPD_UnencryptedWrapperCreator_V10::SetStandardSecurity);
	}
};

// fpd_serialImpl.h end

// In file fpd_textImpl.h
// fpd_textImpl.h end

// In file fpd_validateImpl.h
// fpd_validateImpl.h end

//----------_V11----------
// In file fs_basicImpl.h
// fs_basicImpl.h end

// In file fs_stringImpl.h
// fs_stringImpl.h end

// In file fdrm_descImpl.h
// fdrm_descImpl.h end

// In file fdrm_managerImpl.h
// fdrm_managerImpl.h end

// In file fdrm_pdfImpl.h
// fdrm_pdfImpl.h end

// In file fdrm_pkiImpl.h
// fdrm_pkiImpl.h end

// In file fhtml_impl.h
// fhtml_impl.h end

// In file fr_appImpl.h
// fr_appImpl.h end

// In file fr_barImpl.h
// fr_barImpl.h end

// In file fr_docImpl.h
// fr_docImpl.h end

// In file fr_fxnetappImpl.h
class CFR_AppFxNet_V11_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppFxNetSEL, FRAppFxNetRegisterAppEventHandlerFxNetSEL, (void*)CFR_AppFxNet_V11::RegisterAppEventHandlerFxNet);
	}
};

class CFR_InternalFxNet_V11_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalFxNetSEL, FRInternalFxNetIsFRDGLoginSEL, (void*)CFR_InternalFxNet_V11::IsFRDGLogin);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalFxNetSEL, FRInternalFxNetShowLoginDlgSEL, (void*)CFR_InternalFxNet_V11::ShowLoginDlg);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalFxNetSEL, FRInternalFxNetDllGetTicketSEL, (void*)CFR_InternalFxNet_V11::DllGetTicket);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalFxNetSEL, FRInternalFxNetCheckActionPermissionSEL, (void*)CFR_InternalFxNet_V11::CheckActionPermission);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalFxNetSEL, FRInternalFxNetCheckPRDTimestampPermissionSEL, (void*)CFR_InternalFxNet_V11::CheckPRDTimestampPermission);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalFxNetSEL, FRInternalFxNetCheckPermissionByFaceNameSEL, (void*)CFR_InternalFxNet_V11::CheckPermissionByFaceName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalFxNetSEL, FRInternalFxNetGetLoginHwndSEL, (void*)CFR_InternalFxNet_V11::GetLoginHwnd);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalFxNetSEL, FRInternalFxNetPreTranMsgToSdkSEL, (void*)CFR_InternalFxNet_V11::PreTranMsgToSdk);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalFxNetSEL, FRInternalFxNetDllShowPaymentDlgSEL, (void*)CFR_InternalFxNet_V11::DllShowPaymentDlg);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalFxNetSEL, FRInternalFxNetGetUserIdSEL, (void*)CFR_InternalFxNet_V11::GetUserId);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalFxNetSEL, FRInternalFxNetGetNickNameSEL, (void*)CFR_InternalFxNet_V11::GetNickName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalFxNetSEL, FRInternalFxNetGetHeadIconSEL, (void*)CFR_InternalFxNet_V11::GetHeadIcon);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalFxNetSEL, FRInternalFxNetGetUserTypeSEL, (void*)CFR_InternalFxNet_V11::GetUserType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalFxNetSEL, FRInternalFxNetAddAnnotToMarkupPanelSEL, (void*)CFR_InternalFxNet_V11::AddAnnotToMarkupPanel);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalFxNetSEL, FRInternalFxNetShowAnnotNoteSEL, (void*)CFR_InternalFxNet_V11::ShowAnnotNote);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalFxNetSEL, FRInternalFxNetGetCurrentImageSelectObjSEL, (void*)CFR_InternalFxNet_V11::GetCurrentImageSelectObj);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalFxNetSEL, FRInternalFxNetOCRExtractTextSEL, (void*)CFR_InternalFxNet_V11::OCRExtractText);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalFxNetSEL, FRInternalFxNetGetOCRLanInfoSEL, (void*)CFR_InternalFxNet_V11::GetOCRLanInfo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInternalFxNetSEL, FRInternalFxNetGetImageBufSEL, (void*)CFR_InternalFxNet_V11::GetImageBuf);
	}
};

// fr_fxnetappImpl.h end

// In file fr_menuImpl.h
// fr_menuImpl.h end

// In file fr_sysImpl.h
// fr_sysImpl.h end

// In file fr_viewImpl.h
// fr_viewImpl.h end

// In file middle_imagecompressImpl.h
// middle_imagecompressImpl.h end

// In file middle_optimizeImpl.h
// middle_optimizeImpl.h end

// In file middle_pdfImpl.h
// middle_pdfImpl.h end

// In file middle_portfolioImpl.h
// middle_portfolioImpl.h end

// In file middle_preflightImpl.h
// middle_preflightImpl.h end

// In file fofd_basicImpl.h
// fofd_basicImpl.h end

// In file fofd_docImpl.h
// fofd_docImpl.h end

// In file fofd_pageImpl.h
// fofd_pageImpl.h end

// In file fofd_renderImpl.h
// fofd_renderImpl.h end

// In file fofd_sigImpl.h
// fofd_sigImpl.h end

// In file fpd_3DImpl.h
// fpd_3DImpl.h end

// In file fpd_barcodeImpl.h
// fpd_barcodeImpl.h end

// In file fpd_convertImpl.h
// fpd_convertImpl.h end

// In file fpd_docImpl.h
// fpd_docImpl.h end

// In file fpd_editImpl.h
// fpd_editImpl.h end

// In file fpd_epubImpl.h
// fpd_epubImpl.h end

// In file fpd_fontmgrImpl.h
// fpd_fontmgrImpl.h end

// In file fpd_fxxfaImpl.h
// fpd_fxxfaImpl.h end

// In file fpd_jsImpl.h
// fpd_jsImpl.h end

// In file fpd_lrImpl.h
// fpd_lrImpl.h end

// In file fpd_mathImpl.h
// fpd_mathImpl.h end

// In file fpd_objsImpl.h
// fpd_objsImpl.h end

// In file fpd_pageImpl.h
class CFPD_ColorSeparator_V11_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDColorSeparatorSEL, FPDColorSeparatorNewSEL, (void*)CFPD_ColorSeparator_V11::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDColorSeparatorSEL, FPDColorSeparatorDestroySEL, (void*)CFPD_ColorSeparator_V11::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDColorSeparatorSEL, FPDColorSeparatorCountColorantsSEL, (void*)CFPD_ColorSeparator_V11::CountColorants);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDColorSeparatorSEL, FPDColorSeparatorGetColorantNameSEL, (void*)CFPD_ColorSeparator_V11::GetColorantName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDColorSeparatorSEL, FPDColorSeparatorSeparateColorantSEL, (void*)CFPD_ColorSeparator_V11::SeparateColorant);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDColorSeparatorSEL, FPDColorSeparatorGetResultDocSEL, (void*)CFPD_ColorSeparator_V11::GetResultDoc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDColorSeparatorSEL, FPDColorSeparatorSetColorConverterSEL, (void*)CFPD_ColorSeparator_V11::SetColorConverter);
	}
};

// fpd_pageImpl.h end

// In file fpd_pageobjImpl.h
// fpd_pageobjImpl.h end

// In file fpd_parserImpl.h
// fpd_parserImpl.h end

// In file fpd_psiImpl.h
// fpd_psiImpl.h end

// In file fpd_pwlImpl.h
// fpd_pwlImpl.h end

// In file fpd_renderImpl.h
// fpd_renderImpl.h end

// In file fpd_resourceImpl.h
class CFPD_ColorConvertor_V11_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDColorConvertorSEL, FPDColorConvertorNewSEL, (void*)CFPD_ColorConvertor_V11::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDColorConvertorSEL, FPDColorConvertorDestroySEL, (void*)CFPD_ColorConvertor_V11::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDColorConvertorSEL, FPDColorConvertorSetICCProfilesPathSEL, (void*)CFPD_ColorConvertor_V11::SetICCProfilesPath);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDColorConvertorSEL, FPDColorConvertorGetObjColorSpaceSEL, (void*)CFPD_ColorConvertor_V11::GetObjColorSpace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDColorConvertorSEL, FPDColorConvertorIsCalibrateColorSpaceSEL, (void*)CFPD_ColorConvertor_V11::IsCalibrateColorSpace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDColorConvertorSEL, FPDColorConvertorDecalibrateColorSEL, (void*)CFPD_ColorConvertor_V11::DecalibrateColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDColorConvertorSEL, FPDColorConvertorConvertColorSEL, (void*)CFPD_ColorConvertor_V11::ConvertColor);
	}
};

// fpd_resourceImpl.h end

// In file fpd_serialImpl.h
// fpd_serialImpl.h end

// In file fpd_textImpl.h
// fpd_textImpl.h end

// In file fpd_validateImpl.h
// fpd_validateImpl.h end

//----------_V12----------
// In file fs_basicImpl.h
class CFS_Image_V12_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSImageSEL, FSImageCreateSEL, (void*)CFS_Image_V12::Create);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSImageSEL, FSImageReleaseSEL, (void*)CFS_Image_V12::Release);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSImageSEL, FSImageLoadSEL, (void*)CFS_Image_V12::Load);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSImageSEL, FSImageGetTypeSEL, (void*)CFS_Image_V12::GetType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSImageSEL, FSImageEnableTransparentSEL, (void*)CFS_Image_V12::EnableTransparent);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSImageSEL, FSImageSetBackgroundColorSEL, (void*)CFS_Image_V12::SetBackgroundColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSImageSEL, FSImageSetOpacitySEL, (void*)CFS_Image_V12::SetOpacity);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSImageSEL, FSImageCountFramesSEL, (void*)CFS_Image_V12::CountFrames);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSImageSEL, FSImageLoadFrameSEL, (void*)CFS_Image_V12::LoadFrame);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSImageSEL, FSImageNeedLoadPrevFrameSEL, (void*)CFS_Image_V12::NeedLoadPrevFrame);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSImageSEL, FSImageGetFrameSizeSEL, (void*)CFS_Image_V12::GetFrameSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSImageSEL, FSImageGetFrameSEL, (void*)CFS_Image_V12::GetFrame);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSImageSEL, FSImageGetFrameColorKeySEL, (void*)CFS_Image_V12::GetFrameColorKey);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSImageSEL, FSImageGetFrameWithTransparencySEL, (void*)CFS_Image_V12::GetFrameWithTransparency);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSImageSEL, FSImageGetFrameRawDataSEL, (void*)CFS_Image_V12::GetFrameRawData);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSImageSEL, FSImageGetFrameCompressSEL, (void*)CFS_Image_V12::GetFrameCompress);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSImageSEL, FSImageGetFramePhotoInterpretSEL, (void*)CFS_Image_V12::GetFramePhotoInterpret);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSImageSEL, FSImageFreeSEL, (void*)CFS_Image_V12::Free);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSImageSEL, FSImageGetAttributeSEL, (void*)CFS_Image_V12::GetAttribute);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSImageSEL, FSImageGetWidthSEL, (void*)CFS_Image_V12::GetWidth);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSImageSEL, FSImageGetHeightSEL, (void*)CFS_Image_V12::GetHeight);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSImageSEL, FSImageCreateObjectSEL, (void*)CFS_Image_V12::CreateObject);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSImageSEL, FSImageInsertToPDFPageSEL, (void*)CFS_Image_V12::InsertToPDFPage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSImageSEL, FSImageInsertToPDFDocumentSEL, (void*)CFS_Image_V12::InsertToPDFDocument);
	}
};

// fs_basicImpl.h end

// In file fs_stringImpl.h
// fs_stringImpl.h end

// In file fdrm_descImpl.h
// fdrm_descImpl.h end

// In file fdrm_managerImpl.h
// fdrm_managerImpl.h end

// In file fdrm_pdfImpl.h
// fdrm_pdfImpl.h end

// In file fdrm_pkiImpl.h
// fdrm_pkiImpl.h end

// In file fhtml_impl.h
// fhtml_impl.h end

// In file fr_appImpl.h
class CFR_AssistantMgr_V12_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAssistantMgrSEL, FRAssistantMgrGetSEL, (void*)CFR_AssistantMgr_V12::Get);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAssistantMgrSEL, FRAssistantMgrSetCurAsstTrackWndSEL, (void*)CFR_AssistantMgr_V12::SetCurAsstTrackWnd);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAssistantMgrSEL, FRAssistantMgrUpdateAssistantHandlerSEL, (void*)CFR_AssistantMgr_V12::UpdateAssistantHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAssistantMgrSEL, FRAssistantMgrNotificationSEL, (void*)CFR_AssistantMgr_V12::Notification);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAssistantMgrSEL, FRAssistantMgrClearNotificationSEL, (void*)CFR_AssistantMgr_V12::ClearNotification);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAssistantMgrSEL, FRAssistantMgrRegisterAsstUIHandlerSEL, (void*)CFR_AssistantMgr_V12::RegisterAsstUIHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAssistantMgrSEL, FRAssistantMgrUnRegisterAsstUIHandlerSEL, (void*)CFR_AssistantMgr_V12::UnRegisterAsstUIHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAssistantMgrSEL, FRAssistantMgrRegisterAssistantHandlerSEL, (void*)CFR_AssistantMgr_V12::RegisterAssistantHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAssistantMgrSEL, FRAssistantMgrUnRegisterAssistantHandlerSEL, (void*)CFR_AssistantMgr_V12::UnRegisterAssistantHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAssistantMgrSEL, FRAssistantMgrResetAssistantDlgSEL, (void*)CFR_AssistantMgr_V12::ResetAssistantDlg);
	}
};

// fr_appImpl.h end

// In file fr_barImpl.h
// fr_barImpl.h end

// In file fr_docImpl.h
// fr_docImpl.h end

// In file fr_fxnetappImpl.h
// fr_fxnetappImpl.h end

// In file fr_menuImpl.h
// fr_menuImpl.h end

// In file fr_sysImpl.h
// fr_sysImpl.h end

// In file fr_viewImpl.h
// fr_viewImpl.h end

// In file middle_imagecompressImpl.h
// middle_imagecompressImpl.h end

// In file middle_optimizeImpl.h
// middle_optimizeImpl.h end

// In file middle_pdfImpl.h
// middle_pdfImpl.h end

// In file middle_portfolioImpl.h
// middle_portfolioImpl.h end

// In file middle_preflightImpl.h
// middle_preflightImpl.h end

// In file fofd_basicImpl.h
// fofd_basicImpl.h end

// In file fofd_docImpl.h
// fofd_docImpl.h end

// In file fofd_pageImpl.h
// fofd_pageImpl.h end

// In file fofd_renderImpl.h
// fofd_renderImpl.h end

// In file fofd_sigImpl.h
// fofd_sigImpl.h end

// In file fpd_3DImpl.h
class CFPD_3dContext_V12_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3dContextSEL, FPD3dContextNewSEL, (void*)CFPD_3dContext_V12::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3dContextSEL, FPD3dContextDestroySEL, (void*)CFPD_3dContext_V12::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3dContextSEL, FPD3dContextInitDefaultEngineSEL, (void*)CFPD_3dContext_V12::InitDefaultEngine);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3dContextSEL, FPD3dContextInitializeWithEngineSEL, (void*)CFPD_3dContext_V12::InitializeWithEngine);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3dContextSEL, FPD3dContextRegisterScriptProviderSEL, (void*)CFPD_3dContext_V12::RegisterScriptProvider);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3dContextSEL, FPD3dContextRegisterFormatLoaderSEL, (void*)CFPD_3dContext_V12::RegisterFormatLoader);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3dContextSEL, FPD3dContextRegisterCompositionProviderSEL, (void*)CFPD_3dContext_V12::RegisterCompositionProvider);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3dContextSEL, FPD3dContextGetDocumentSEL, (void*)CFPD_3dContext_V12::GetDocument);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3dContextSEL, FPD3dContextGetEngineSEL, (void*)CFPD_3dContext_V12::GetEngine);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3dContextSEL, FPD3dContextIsPDF20SEL, (void*)CFPD_3dContext_V12::IsPDF20);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3dContextSEL, FPD3dContextGetFormatLoaderSEL, (void*)CFPD_3dContext_V12::GetFormatLoader);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3dContextSEL, FPD3dContextLoadAnnotDataSEL, (void*)CFPD_3dContext_V12::LoadAnnotData);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3dContextSEL, FPD3dContextRegisterEventHandlerProviderSEL, (void*)CFPD_3dContext_V12::RegisterEventHandlerProvider);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3dContextSEL, FPD3dContextReleaseEventHandlerProviderSEL, (void*)CFPD_3dContext_V12::ReleaseEventHandlerProvider);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3dContextSEL, FPD3dContextEnableIsoTs32007SEL, (void*)CFPD_3dContext_V12::EnableIsoTs32007);
	}
};

class CFPD_3dAnnotData_V12_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3dAnnotDataSEL, FPD3dAnnotDataAs3DArtworkSEL, (void*)CFPD_3dAnnotData_V12::As3DArtwork);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3dAnnotDataSEL, FPD3dAnnotDataAsRichMediaSEL, (void*)CFPD_3dAnnotData_V12::AsRichMedia);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3dAnnotDataSEL, FPD3dAnnotDataReleaseSEL, (void*)CFPD_3dAnnotData_V12::Release);
	}
};

class CFPD_3dAnnotData3dArtwork_V12_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3dAnnotData3dArtworkSEL, FPD3dAnnotData3dArtworkGet3DInstanceSEL, (void*)CFPD_3dAnnotData3dArtwork_V12::Get3DInstance);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3dAnnotData3dArtworkSEL, FPD3dAnnotData3dArtworkGetDefaultPresetViewSEL, (void*)CFPD_3dAnnotData3dArtwork_V12::GetDefaultPresetView);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3dAnnotData3dArtworkSEL, FPD3dAnnotData3dArtworkGetActivationOptionsSEL, (void*)CFPD_3dAnnotData3dArtwork_V12::GetActivationOptions);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3dAnnotData3dArtworkSEL, FPD3dAnnotData3dArtworkSetActivationOptionsSEL, (void*)CFPD_3dAnnotData3dArtwork_V12::SetActivationOptions);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3dAnnotData3dArtworkSEL, FPD3dAnnotData3dArtworkLoadActivationOptionsSEL, (void*)CFPD_3dAnnotData3dArtwork_V12::LoadActivationOptions);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3dAnnotData3dArtworkSEL, FPD3dAnnotData3dArtworkRetrievePresetViewListSEL, (void*)CFPD_3dAnnotData3dArtwork_V12::RetrievePresetViewList);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3dAnnotData3dArtworkSEL, FPD3dAnnotData3dArtworkUpdatePresetViewListSEL, (void*)CFPD_3dAnnotData3dArtwork_V12::UpdatePresetViewList);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3dAnnotData3dArtworkSEL, FPD3dAnnotData3dArtworkCreatePresetViewSEL, (void*)CFPD_3dAnnotData3dArtwork_V12::CreatePresetView);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3dAnnotData3dArtworkSEL, FPD3dAnnotData3dArtworkFindPresetViewSEL, (void*)CFPD_3dAnnotData3dArtwork_V12::FindPresetView);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3dAnnotData3dArtworkSEL, FPD3dAnnotData3dArtworkGetArtworkDefaultPresetViewSEL, (void*)CFPD_3dAnnotData3dArtwork_V12::GetArtworkDefaultPresetView);
	}
};

class CFPD_3dScene_V12_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3dSceneSEL, FPD3dSceneGetContextSEL, (void*)CFPD_3dScene_V12::GetContext);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3dSceneSEL, FPD3dSceneIsSharedSceneSEL, (void*)CFPD_3dScene_V12::IsSharedScene);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3dSceneSEL, FPD3dSceneGetAssetFor3DInstanceSEL, (void*)CFPD_3dScene_V12::GetAssetFor3DInstance);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3dSceneSEL, FPD3dSceneGet3DInstanceByAssetSEL, (void*)CFPD_3dScene_V12::Get3DInstanceByAsset);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3dSceneSEL, FPD3dSceneGetFormatSEL, (void*)CFPD_3dScene_V12::GetFormat);
	}
};

class CFPD_3deAsset_V12_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deAssetSEL, FPD3deAssetGetRootNodeSEL, (void*)CFPD_3deAsset_V12::GetRootNode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deAssetSEL, FPD3deAssetGetParentNodeSEL, (void*)CFPD_3deAsset_V12::GetParentNode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deAssetSEL, FPD3deAssetGetNextSiblingNodeSEL, (void*)CFPD_3deAsset_V12::GetNextSiblingNode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deAssetSEL, FPD3deAssetGetFirstChildNodeSEL, (void*)CFPD_3deAsset_V12::GetFirstChildNode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deAssetSEL, FPD3deAssetGetNodeNameSEL, (void*)CFPD_3deAsset_V12::GetNodeName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deAssetSEL, FPD3deAssetNarrowScopeSEL, (void*)CFPD_3deAsset_V12::NarrowScope);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deAssetSEL, FPD3deAssetGetNodeMetaDataCountSEL, (void*)CFPD_3deAsset_V12::GetNodeMetaDataCount);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deAssetSEL, FPD3deAssetGetNodeMetaDataItemSEL, (void*)CFPD_3deAsset_V12::GetNodeMetaDataItem);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deAssetSEL, FPD3deAssetComputeBoundingBoxSEL, (void*)CFPD_3deAsset_V12::ComputeBoundingBox);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deAssetSEL, FPD3deAssetSetShowOrientationAxesSEL, (void*)CFPD_3deAsset_V12::SetShowOrientationAxes);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deAssetSEL, FPD3deAssetGetNodeUINameSEL, (void*)CFPD_3deAsset_V12::GetNodeUIName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deAssetSEL, FPD3deAssetGetSpriteNodeSpriteDataSEL, (void*)CFPD_3deAsset_V12::GetSpriteNodeSpriteData);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deAssetSEL, FPD3deAssetFindNodeBySpriteDataSEL, (void*)CFPD_3deAsset_V12::FindNodeBySpriteData);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deAssetSEL, FPD3deAssetGetUnitsInMillimetersSEL, (void*)CFPD_3deAsset_V12::GetUnitsInMillimeters);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deAssetSEL, FPD3deAssetGetNodeTypeSEL, (void*)CFPD_3deAsset_V12::GetNodeType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deAssetSEL, FPD3deAssetGetCameraNodeTargetPositionLocalSEL, (void*)CFPD_3deAsset_V12::GetCameraNodeTargetPositionLocal);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deAssetSEL, FPD3deAssetGetCameraNodeTargetSEL, (void*)CFPD_3deAsset_V12::GetCameraNodeTarget);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deAssetSEL, FPD3deAssetGetCameraNodePositionLocalSEL, (void*)CFPD_3deAsset_V12::GetCameraNodePositionLocal);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deAssetSEL, FPD3deAssetGetCameraNodeRollSEL, (void*)CFPD_3deAsset_V12::GetCameraNodeRoll);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deAssetSEL, FPD3deAssetGetCameraNodeProjectionTypeSEL, (void*)CFPD_3deAsset_V12::GetCameraNodeProjectionType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deAssetSEL, FPD3deAssetGetCameraNodeFovSEL, (void*)CFPD_3deAsset_V12::GetCameraNodeFov);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deAssetSEL, FPD3deAssetGetCameraNodeNearSEL, (void*)CFPD_3deAsset_V12::GetCameraNodeNear);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deAssetSEL, FPD3deAssetGetCameraNodeFarSEL, (void*)CFPD_3deAsset_V12::GetCameraNodeFar);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deAssetSEL, FPD3deAssetGetCameraNodeBindingSEL, (void*)CFPD_3deAsset_V12::GetCameraNodeBinding);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deAssetSEL, FPD3deAssetGetCameraNodeViewPlaneSizeSEL, (void*)CFPD_3deAsset_V12::GetCameraNodeViewPlaneSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deAssetSEL, FPD3deAssetGetCameraNodeUpLocalSEL, (void*)CFPD_3deAsset_V12::GetCameraNodeUpLocal);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deAssetSEL, FPD3deAssetGetCameraNodeAbsoluteBindingScaleSEL, (void*)CFPD_3deAsset_V12::GetCameraNodeAbsoluteBindingScale);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deAssetSEL, FPD3deAssetGetCameraNodeUseAbsoluteBindingSEL, (void*)CFPD_3deAsset_V12::GetCameraNodeUseAbsoluteBinding);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deAssetSEL, FPD3deAssetSetCameraNodeNearSEL, (void*)CFPD_3deAsset_V12::SetCameraNodeNear);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deAssetSEL, FPD3deAssetSetCameraNodeFarSEL, (void*)CFPD_3deAsset_V12::SetCameraNodeFar);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deAssetSEL, FPD3deAssetGetCameraNodeDirectionFromScreenSEL, (void*)CFPD_3deAsset_V12::GetCameraNodeDirectionFromScreen);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deAssetSEL, FPD3deAssetGetCameraNodeScreenFromPositionSEL, (void*)CFPD_3deAsset_V12::GetCameraNodeScreenFromPosition);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deAssetSEL, FPD3deAssetGetNodeWorldSpaceTransformSEL, (void*)CFPD_3deAsset_V12::GetNodeWorldSpaceTransform);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deAssetSEL, FPD3deAssetGetNodeLocalSpaceTransformSEL, (void*)CFPD_3deAsset_V12::GetNodeLocalSpaceTransform);
	}
};

class CFPD_3deRuntime_V12_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deRuntimeSEL, FPD3deRuntimeCreateRuntimeSEL, (void*)CFPD_3deRuntime_V12::CreateRuntime);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deRuntimeSEL, FPD3deRuntimeCreateRuntimeWithBackendSEL, (void*)CFPD_3deRuntime_V12::CreateRuntimeWithBackend);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deRuntimeSEL, FPD3deRuntimeLoadAssetSEL, (void*)CFPD_3deRuntime_V12::LoadAsset);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deRuntimeSEL, FPD3deRuntimeTickSEL, (void*)CFPD_3deRuntime_V12::Tick);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deRuntimeSEL, FPD3deRuntimeCountInstantiatedCanvasesSEL, (void*)CFPD_3deRuntime_V12::CountInstantiatedCanvases);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deRuntimeSEL, FPD3deRuntimeQueryAvailableBackendListSEL, (void*)CFPD_3deRuntime_V12::QueryAvailableBackendList);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deRuntimeSEL, FPD3deRuntimeGetBackendFriendlyNameSEL, (void*)CFPD_3deRuntime_V12::GetBackendFriendlyName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deRuntimeSEL, FPD3deRuntimeUpdateTextProviderSEL, (void*)CFPD_3deRuntime_V12::UpdateTextProvider);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deRuntimeSEL, FPD3deRuntimeUpdatePreference_AngleUnitDisplaySEL, (void*)CFPD_3deRuntime_V12::UpdatePreference_AngleUnitDisplay);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deRuntimeSEL, FPD3deRuntimeUpdatePreference_NodeMetadataStoragePathSEL, (void*)CFPD_3deRuntime_V12::UpdatePreference_NodeMetadataStoragePath);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deRuntimeSEL, FPD3deRuntimeUpdateProvider_I18nSEL, (void*)CFPD_3deRuntime_V12::UpdateProvider_I18n);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deRuntimeSEL, FPD3deRuntimeUpdatePreference_AntiAliasingSEL, (void*)CFPD_3deRuntime_V12::UpdatePreference_AntiAliasing);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deRuntimeSEL, FPD3deRuntimeQueryPreference_ForceDoubleSidedRenderingSEL, (void*)CFPD_3deRuntime_V12::QueryPreference_ForceDoubleSidedRendering);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deRuntimeSEL, FPD3deRuntimeUpdatePreference_NodeNameStoragePathSEL, (void*)CFPD_3deRuntime_V12::UpdatePreference_NodeNameStoragePath);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deRuntimeSEL, FPD3deRuntimeCreateAssetSEL, (void*)CFPD_3deRuntime_V12::CreateAsset);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deRuntimeSEL, FPD3deRuntimeUpdatePreference_ExtensionPrefixSEL, (void*)CFPD_3deRuntime_V12::UpdatePreference_ExtensionPrefix);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deRuntimeSEL, FPD3deRuntimeUpdatePreference_DrawBatchLimitSEL, (void*)CFPD_3deRuntime_V12::UpdatePreference_DrawBatchLimit);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deRuntimeSEL, FPD3deRuntimeCreateEnvironmentSEL, (void*)CFPD_3deRuntime_V12::CreateEnvironment);
	}
};

class CFPD_3deCanvas_V12_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deCanvasSEL, FPD3deCanvasGetNativeWindowSEL, (void*)CFPD_3deCanvas_V12::GetNativeWindow);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deCanvasSEL, FPD3deCanvasInstantiateSEL, (void*)CFPD_3deCanvas_V12::Instantiate);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deCanvasSEL, FPD3deCanvasInstantiateAndLiveSEL, (void*)CFPD_3deCanvas_V12::InstantiateAndLive);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deCanvasSEL, FPD3deCanvasUninstantiateSEL, (void*)CFPD_3deCanvas_V12::Uninstantiate);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deCanvasSEL, FPD3deCanvasGetStateSEL, (void*)CFPD_3deCanvas_V12::GetState);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deCanvasSEL, FPD3deCanvasAcquireCurrentViewSEL, (void*)CFPD_3deCanvas_V12::AcquireCurrentView);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deCanvasSEL, FPD3deCanvasReleaseCurrentViewSEL, (void*)CFPD_3deCanvas_V12::ReleaseCurrentView);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deCanvasSEL, FPD3deCanvasGetPrimaryAssetSEL, (void*)CFPD_3deCanvas_V12::GetPrimaryAsset);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deCanvasSEL, FPD3deCanvasSetControllerToolSEL, (void*)CFPD_3deCanvas_V12::SetControllerTool);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deCanvasSEL, FPD3deCanvasRelocateInPlaceSEL, (void*)CFPD_3deCanvas_V12::RelocateInPlace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deCanvasSEL, FPD3deCanvasSetNotificationCallback_ContextMenuSEL, (void*)CFPD_3deCanvas_V12::SetNotificationCallback_ContextMenu);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deCanvasSEL, FPD3deCanvasSetNotificationCallback_PointerFocusSEL, (void*)CFPD_3deCanvas_V12::SetNotificationCallback_PointerFocus);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deCanvasSEL, FPD3deCanvasHaveAnimationSEL, (void*)CFPD_3deCanvas_V12::HaveAnimation);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deCanvasSEL, FPD3deCanvasIsAnimationPlayingSEL, (void*)CFPD_3deCanvas_V12::IsAnimationPlaying);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deCanvasSEL, FPD3deCanvasToggleAnimationSEL, (void*)CFPD_3deCanvas_V12::ToggleAnimation);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deCanvasSEL, FPD3deCanvasSeekAnimationProgressSEL, (void*)CFPD_3deCanvas_V12::SeekAnimationProgress);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deCanvasSEL, FPD3deCanvasGetAnimationProgressSEL, (void*)CFPD_3deCanvas_V12::GetAnimationProgress);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deCanvasSEL, FPD3deCanvasGetChosenNodeSEL, (void*)CFPD_3deCanvas_V12::GetChosenNode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deCanvasSEL, FPD3deCanvasSetChosenNodeSEL, (void*)CFPD_3deCanvas_V12::SetChosenNode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deCanvasSEL, FPD3deCanvasSetNotificationCallback_ClaimMeasureSEL, (void*)CFPD_3deCanvas_V12::SetNotificationCallback_ClaimMeasure);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deCanvasSEL, FPD3deCanvasSnapshotSEL, (void*)CFPD_3deCanvas_V12::Snapshot);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deCanvasSEL, FPD3deCanvasSetNotificationCallback_RequestUpdateBackgroundSEL, (void*)CFPD_3deCanvas_V12::SetNotificationCallback_RequestUpdateBackground);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deCanvasSEL, FPD3deCanvasSetNotificationCallback_RequestUpdateForegroundSEL, (void*)CFPD_3deCanvas_V12::SetNotificationCallback_RequestUpdateForeground);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deCanvasSEL, FPD3deCanvasRequestUpdateBackgroundSEL, (void*)CFPD_3deCanvas_V12::RequestUpdateBackground);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deCanvasSEL, FPD3deCanvasRequestUpdateForegroundSEL, (void*)CFPD_3deCanvas_V12::RequestUpdateForeground);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deCanvasSEL, FPD3deCanvasGetControllerToolSEL, (void*)CFPD_3deCanvas_V12::GetControllerTool);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deCanvasSEL, FPD3deCanvasResetViewRotationSEL, (void*)CFPD_3deCanvas_V12::ResetViewRotation);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deCanvasSEL, FPD3deCanvasGetCameraNodeSEL, (void*)CFPD_3deCanvas_V12::GetCameraNode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deCanvasSEL, FPD3deCanvasSetCameraNodeSEL, (void*)CFPD_3deCanvas_V12::SetCameraNode);
	}
};

class CFPD_3deView_V12_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deViewSEL, FPD3deViewGetAssetSEL, (void*)CFPD_3deView_V12::GetAsset);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deViewSEL, FPD3deViewGetNameSEL, (void*)CFPD_3deView_V12::GetName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deViewSEL, FPD3deViewGetDisplayNameSEL, (void*)CFPD_3deView_V12::GetDisplayName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deViewSEL, FPD3deViewGetCenterOfOrbitSEL, (void*)CFPD_3deView_V12::GetCenterOfOrbit);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deViewSEL, FPD3deViewGetProjectionSEL, (void*)CFPD_3deView_V12::GetProjection);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deViewSEL, FPD3deViewGetBackgroundSEL, (void*)CFPD_3deView_V12::GetBackground);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deViewSEL, FPD3deViewGetRenderModeSEL, (void*)CFPD_3deView_V12::GetRenderMode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deViewSEL, FPD3deViewGetLightingSchemeSEL, (void*)CFPD_3deView_V12::GetLightingScheme);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deViewSEL, FPD3deViewSetCameraToWorldMatrixWithNodeSEL, (void*)CFPD_3deView_V12::SetCameraToWorldMatrixWithNode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deViewSEL, FPD3deViewSetCenterOfOrbitSEL, (void*)CFPD_3deView_V12::SetCenterOfOrbit);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deViewSEL, FPD3deViewSetProjectionSEL, (void*)CFPD_3deView_V12::SetProjection);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deViewSEL, FPD3deViewSetBackgroundSEL, (void*)CFPD_3deView_V12::SetBackground);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deViewSEL, FPD3deViewSetRenderModeSEL, (void*)CFPD_3deView_V12::SetRenderMode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deViewSEL, FPD3deViewSetLightingSchemeSEL, (void*)CFPD_3deView_V12::SetLightingScheme);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deViewSEL, FPD3deViewImportViewConfigSEL, (void*)CFPD_3deView_V12::ImportViewConfig);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deViewSEL, FPD3deViewSetNameAndDisplayNameSEL, (void*)CFPD_3deView_V12::SetNameAndDisplayName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deViewSEL, FPD3deViewSetCrossSectionsSEL, (void*)CFPD_3deView_V12::SetCrossSections);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deViewSEL, FPD3deViewClearViewConfigSEL, (void*)CFPD_3deView_V12::ClearViewConfig);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deViewSEL, FPD3deViewGetCrossSectionsSEL, (void*)CFPD_3deView_V12::GetCrossSections);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deViewSEL, FPD3deViewClearAndImportViewConfigSEL, (void*)CFPD_3deView_V12::ClearAndImportViewConfig);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deViewSEL, FPD3deViewGetMeasurementsSEL, (void*)CFPD_3deView_V12::GetMeasurements);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deViewSEL, FPD3deViewSetMeasurementsSEL, (void*)CFPD_3deView_V12::SetMeasurements);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deViewSEL, FPD3deViewSetTrackingViewSEL, (void*)CFPD_3deView_V12::SetTrackingView);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deViewSEL, FPD3deViewF3DViewGetDictSEL, (void*)CFPD_3deView_V12::F3DViewGetDict);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deViewSEL, FPD3deViewGetCameraParamSEL, (void*)CFPD_3deView_V12::GetCameraParam);
	}
};

class CFPD_3deViewRenderMode_V12_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deViewRenderModeSEL, FPD3deViewRenderModeSwitchKindSEL, (void*)CFPD_3deViewRenderMode_V12::SwitchKind);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deViewRenderModeSEL, FPD3deViewRenderModeCreateSEL, (void*)CFPD_3deViewRenderMode_V12::Create);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deViewRenderModeSEL, FPD3deViewRenderModeReleaseSEL, (void*)CFPD_3deViewRenderMode_V12::Release);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deViewRenderModeSEL, FPD3deViewRenderModeQueryModeTypeSEL, (void*)CFPD_3deViewRenderMode_V12::QueryModeType);
	}
};

class CFPD_3deViewLightingScheme_V12_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deViewLightingSchemeSEL, FPD3deViewLightingSchemeCreateSEL, (void*)CFPD_3deViewLightingScheme_V12::Create);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deViewLightingSchemeSEL, FPD3deViewLightingSchemeDestroySEL, (void*)CFPD_3deViewLightingScheme_V12::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deViewLightingSchemeSEL, FPD3deViewLightingSchemeQuerySchemeTypeSEL, (void*)CFPD_3deViewLightingScheme_V12::QuerySchemeType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deViewLightingSchemeSEL, FPD3deViewLightingSchemeSwitchSchemeTypeSEL, (void*)CFPD_3deViewLightingScheme_V12::SwitchSchemeType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deViewLightingSchemeSEL, FPD3deViewLightingSchemeQueryArtworkSchemeExistSEL, (void*)CFPD_3deViewLightingScheme_V12::QueryArtworkSchemeExist);
	}
};

class CFPD_3deCanvasControllerTool_V12_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deCanvasControllerToolSEL, FPD3deCanvasControllerToolGetRotateToolSEL, (void*)CFPD_3deCanvasControllerTool_V12::GetRotateTool);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deCanvasControllerToolSEL, FPD3deCanvasControllerToolGetSpinToolSEL, (void*)CFPD_3deCanvasControllerTool_V12::GetSpinTool);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deCanvasControllerToolSEL, FPD3deCanvasControllerToolGetPanToolSEL, (void*)CFPD_3deCanvasControllerTool_V12::GetPanTool);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deCanvasControllerToolSEL, FPD3deCanvasControllerToolGetZoomToolSEL, (void*)CFPD_3deCanvasControllerTool_V12::GetZoomTool);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deCanvasControllerToolSEL, FPD3deCanvasControllerToolGetWalkToolSEL, (void*)CFPD_3deCanvasControllerTool_V12::GetWalkTool);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deCanvasControllerToolSEL, FPD3deCanvasControllerToolGetFlyToolSEL, (void*)CFPD_3deCanvasControllerTool_V12::GetFlyTool);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deCanvasControllerToolSEL, FPD3deCanvasControllerToolGetSimpleControllerToolSEL, (void*)CFPD_3deCanvasControllerTool_V12::GetSimpleControllerTool);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deCanvasControllerToolSEL, FPD3deCanvasControllerToolCreateCommentControllerToolSEL, (void*)CFPD_3deCanvasControllerTool_V12::CreateCommentControllerTool);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deCanvasControllerToolSEL, FPD3deCanvasControllerToolReleaseCommentControllerToolSEL, (void*)CFPD_3deCanvasControllerTool_V12::ReleaseCommentControllerTool);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deCanvasControllerToolSEL, FPD3deCanvasControllerToolCreateMeasureControllerToolSEL, (void*)CFPD_3deCanvasControllerTool_V12::CreateMeasureControllerTool);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deCanvasControllerToolSEL, FPD3deCanvasControllerToolReleaseMeasureControllerToolSEL, (void*)CFPD_3deCanvasControllerTool_V12::ReleaseMeasureControllerTool);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deCanvasControllerToolSEL, FPD3deCanvasControllerToolSetMeasureControllerTooMeasureTypeSEL, (void*)CFPD_3deCanvasControllerTool_V12::SetMeasureControllerTooMeasureType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deCanvasControllerToolSEL, FPD3deCanvasControllerToolSetMeasureScaleSEL, (void*)CFPD_3deCanvasControllerTool_V12::SetMeasureScale);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deCanvasControllerToolSEL, FPD3deCanvasControllerToolCreate3deCanvasControllerToolSEL, (void*)CFPD_3deCanvasControllerTool_V12::Create3deCanvasControllerTool);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deCanvasControllerToolSEL, FPD3deCanvasControllerToolDestroySEL, (void*)CFPD_3deCanvasControllerTool_V12::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deCanvasControllerToolSEL, FPD3deCanvasControllerToolSetTagSEL, (void*)CFPD_3deCanvasControllerTool_V12::SetTag);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deCanvasControllerToolSEL, FPD3deCanvasControllerToolGetTagSEL, (void*)CFPD_3deCanvasControllerTool_V12::GetTag);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deCanvasControllerToolSEL, FPD3deCanvasControllerToolSetUserDataSEL, (void*)CFPD_3deCanvasControllerTool_V12::SetUserData);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deCanvasControllerToolSEL, FPD3deCanvasControllerToolGetUserDataSEL, (void*)CFPD_3deCanvasControllerTool_V12::GetUserData);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deCanvasControllerToolSEL, FPD3deCanvasControllerToolSetMeasureSnapTypeSEL, (void*)CFPD_3deCanvasControllerTool_V12::SetMeasureSnapType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deCanvasControllerToolSEL, FPD3deCanvasControllerToolSetCursorChangeHookSEL, (void*)CFPD_3deCanvasControllerTool_V12::SetCursorChangeHook);
	}
};

class CFPD_3dVendor_V12_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3dVendorSEL, FPD3dVendorCreateHandlerSEL, (void*)CFPD_3dVendor_V12::CreateHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3dVendorSEL, FPD3dVendorReleaseHandlerSEL, (void*)CFPD_3dVendor_V12::ReleaseHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3dVendorSEL, FPD3dVendorSetPDFModuleMgrIfNecessarySEL, (void*)CFPD_3dVendor_V12::SetPDFModuleMgrIfNecessary);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3dVendorSEL, FPD3dVendorSetTempFileCallbackSEL, (void*)CFPD_3dVendor_V12::SetTempFileCallback);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3dVendorSEL, FPD3dVendorU3DLoaderSEL, (void*)CFPD_3dVendor_V12::U3DLoader);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3dVendorSEL, FPD3dVendorPRCLoaderSEL, (void*)CFPD_3dVendor_V12::PRCLoader);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3dVendorSEL, FPD3dVendorGetNodeMetadataStorageKeySEL, (void*)CFPD_3dVendor_V12::GetNodeMetadataStorageKey);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3dVendorSEL, FPD3dVendorModelLoaderSEL, (void*)CFPD_3dVendor_V12::ModelLoader);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3dVendorSEL, FPD3dVendorDorPRCLoaderSEL, (void*)CFPD_3dVendor_V12::DorPRCLoader);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3dVendorSEL, FPD3dVendorGetNodeNameStorageKeySEL, (void*)CFPD_3dVendor_V12::GetNodeNameStorageKey);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3dVendorSEL, FPD3dVendorSetTempFileGenerationRuleSEL, (void*)CFPD_3dVendor_V12::SetTempFileGenerationRule);
	}
};

class CFPD_3deViewBackground_V12_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deViewBackgroundSEL, FPD3deViewBackgroundCreateSEL, (void*)CFPD_3deViewBackground_V12::Create);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deViewBackgroundSEL, FPD3deViewBackgroundReleaseSEL, (void*)CFPD_3deViewBackground_V12::Release);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deViewBackgroundSEL, FPD3deViewBackgroundSetBackgroundColorSEL, (void*)CFPD_3deViewBackground_V12::SetBackgroundColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deViewBackgroundSEL, FPD3deViewBackgroundQueryBackgroundColorSEL, (void*)CFPD_3deViewBackground_V12::QueryBackgroundColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deViewBackgroundSEL, FPD3deViewBackgroundDefaultBackgroundColorSEL, (void*)CFPD_3deViewBackground_V12::DefaultBackgroundColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deViewBackgroundSEL, FPD3deViewBackgroundQueryEntireAnnotationSEL, (void*)CFPD_3deViewBackground_V12::QueryEntireAnnotation);
	}
};

class CFPD_3deViewCameraParam_V12_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deViewCameraParamSEL, FPD3deViewCameraParamQueryProjectionModeSEL, (void*)CFPD_3deViewCameraParam_V12::QueryProjectionMode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deViewCameraParamSEL, FPD3deViewCameraParamSwitchProjectionModeSEL, (void*)CFPD_3deViewCameraParam_V12::SwitchProjectionMode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deViewCameraParamSEL, FPD3deViewCameraParamImportCameraConfig1SEL, (void*)CFPD_3deViewCameraParam_V12::ImportCameraConfig1);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deViewCameraParamSEL, FPD3deViewCameraParamImportCameraConfig2SEL, (void*)CFPD_3deViewCameraParam_V12::ImportCameraConfig2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deViewCameraParamSEL, FPD3deViewCameraParamExportCameraConfigSEL, (void*)CFPD_3deViewCameraParam_V12::ExportCameraConfig);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deViewCameraParamSEL, FPD3deViewCameraParamFitToVisibleSEL, (void*)CFPD_3deViewCameraParam_V12::FitToVisible);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deViewCameraParamSEL, FPD3deViewCameraParamZoomToPartSEL, (void*)CFPD_3deViewCameraParam_V12::ZoomToPart);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deViewCameraParamSEL, FPD3deViewCameraParamIsolateNodeSEL, (void*)CFPD_3deViewCameraParam_V12::IsolateNode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deViewCameraParamSEL, FPD3deViewCameraParamIsolateParentNodeSEL, (void*)CFPD_3deViewCameraParam_V12::IsolateParentNode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deViewCameraParamSEL, FPD3deViewCameraParamGet3DMatrixSEL, (void*)CFPD_3deViewCameraParam_V12::Get3DMatrix);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deViewCameraParamSEL, FPD3deViewCameraParamGetbUseU3DPathSEL, (void*)CFPD_3deViewCameraParam_V12::GetbUseU3DPath);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deViewCameraParamSEL, FPD3deViewCameraParamGetU3DPathSEL, (void*)CFPD_3deViewCameraParam_V12::GetU3DPath);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deViewCameraParamSEL, FPD3deViewCameraParamGetCenterOfOrbitSEL, (void*)CFPD_3deViewCameraParam_V12::GetCenterOfOrbit);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deViewCameraParamSEL, FPD3deViewCameraParamGetProjectFOSSEL, (void*)CFPD_3deViewCameraParam_V12::GetProjectFOS);
	}
};

class CFPD_3deViewCrossSection_V12_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deViewCrossSectionSEL, FPD3deViewCrossSectionToggleCrossSectionSEL, (void*)CFPD_3deViewCrossSection_V12::ToggleCrossSection);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deViewCrossSectionSEL, FPD3deViewCrossSectionImportCrossSectionConfig1SEL, (void*)CFPD_3deViewCrossSection_V12::ImportCrossSectionConfig1);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deViewCrossSectionSEL, FPD3deViewCrossSectionExportCrossSectionConfig1SEL, (void*)CFPD_3deViewCrossSection_V12::ExportCrossSectionConfig1);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deViewCrossSectionSEL, FPD3deViewCrossSectionGetCenterPosSEL, (void*)CFPD_3deViewCrossSection_V12::GetCenterPos);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deViewCrossSectionSEL, FPD3deViewCrossSectionSetCenterPosSEL, (void*)CFPD_3deViewCrossSection_V12::SetCenterPos);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deViewCrossSectionSEL, FPD3deViewCrossSectionGetOrientationSEL, (void*)CFPD_3deViewCrossSection_V12::GetOrientation);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deViewCrossSectionSEL, FPD3deViewCrossSectionSetOrientationSEL, (void*)CFPD_3deViewCrossSection_V12::SetOrientation);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deViewCrossSectionSEL, FPD3deViewCrossSectionGetPlaneSEL, (void*)CFPD_3deViewCrossSection_V12::GetPlane);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deViewCrossSectionSEL, FPD3deViewCrossSectionSetPlaneSEL, (void*)CFPD_3deViewCrossSection_V12::SetPlane);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deViewCrossSectionSEL, FPD3deViewCrossSectionGetIntersectionSEL, (void*)CFPD_3deViewCrossSection_V12::GetIntersection);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deViewCrossSectionSEL, FPD3deViewCrossSectionSetIntersectionSEL, (void*)CFPD_3deViewCrossSection_V12::SetIntersection);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deViewCrossSectionSEL, FPD3deViewCrossSectionGetShowTransparentSEL, (void*)CFPD_3deViewCrossSection_V12::GetShowTransparent);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deViewCrossSectionSEL, FPD3deViewCrossSectionSetShowTransparentSEL, (void*)CFPD_3deViewCrossSection_V12::SetShowTransparent);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deViewCrossSectionSEL, FPD3deViewCrossSectionGetSectionCappingSEL, (void*)CFPD_3deViewCrossSection_V12::GetSectionCapping);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deViewCrossSectionSEL, FPD3deViewCrossSectionSetSectionCappingSEL, (void*)CFPD_3deViewCrossSection_V12::SetSectionCapping);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deViewCrossSectionSEL, FPD3deViewCrossSectionGetIgnoreChosenNodeSEL, (void*)CFPD_3deViewCrossSection_V12::GetIgnoreChosenNode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deViewCrossSectionSEL, FPD3deViewCrossSectionSetIgnoreChosenNodeSEL, (void*)CFPD_3deViewCrossSection_V12::SetIgnoreChosenNode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deViewCrossSectionSEL, FPD3deViewCrossSectionImportCrossSectionConfig2SEL, (void*)CFPD_3deViewCrossSection_V12::ImportCrossSectionConfig2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deViewCrossSectionSEL, FPD3deViewCrossSectionExportCrossSectionConfig2SEL, (void*)CFPD_3deViewCrossSection_V12::ExportCrossSectionConfig2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deViewCrossSectionSEL, FPD3deViewCrossSectionQueryCrossSectionExistSEL, (void*)CFPD_3deViewCrossSection_V12::QueryCrossSectionExist);
	}
};

class CFPD_3deViewNode_V12_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deViewNodeSEL, FPD3deViewNodeStartModifyNodeSEL, (void*)CFPD_3deViewNode_V12::StartModifyNode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deViewNodeSEL, FPD3deViewNodeFinishModifyNodeSEL, (void*)CFPD_3deViewNode_V12::FinishModifyNode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deViewNodeSEL, FPD3deViewNodeStartQueryNodeSEL, (void*)CFPD_3deViewNode_V12::StartQueryNode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deViewNodeSEL, FPD3deViewNodeFinishQueryNodeSEL, (void*)CFPD_3deViewNode_V12::FinishQueryNode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deViewNodeSEL, FPD3deViewNodeGetNameSEL, (void*)CFPD_3deViewNode_V12::GetName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deViewNodeSEL, FPD3deViewNodeSetNameSEL, (void*)CFPD_3deViewNode_V12::SetName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deViewNodeSEL, FPD3deViewNodeGetVisibilitySEL, (void*)CFPD_3deViewNode_V12::GetVisibility);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deViewNodeSEL, FPD3deViewNodeSetVisibilitySEL, (void*)CFPD_3deViewNode_V12::SetVisibility);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deViewNodeSEL, FPD3deViewNodeGetOpacitySEL, (void*)CFPD_3deViewNode_V12::GetOpacity);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deViewNodeSEL, FPD3deViewNodeSetOpacitySEL, (void*)CFPD_3deViewNode_V12::SetOpacity);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deViewNodeSEL, FPD3deViewNodeGetMatrixSEL, (void*)CFPD_3deViewNode_V12::GetMatrix);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deViewNodeSEL, FPD3deViewNodeSetMatrixSEL, (void*)CFPD_3deViewNode_V12::SetMatrix);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deViewNodeSEL, FPD3deViewNodeGetRenderModeSEL, (void*)CFPD_3deViewNode_V12::GetRenderMode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deViewNodeSEL, FPD3deViewNodeSetRenderModeSEL, (void*)CFPD_3deViewNode_V12::SetRenderMode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deViewNodeSEL, FPD3deViewNodeQueryNodeVisibilitySEL, (void*)CFPD_3deViewNode_V12::QueryNodeVisibility);
	}
};

class CFPD_3deMeasure_V12_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deMeasureSEL, FPD3deMeasureGetTypeSEL, (void*)CFPD_3deMeasure_V12::GetType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deMeasureSEL, FPD3deMeasureGetViewSEL, (void*)CFPD_3deMeasure_V12::GetView);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deMeasureSEL, FPD3deMeasureGetNameSEL, (void*)CFPD_3deMeasure_V12::GetName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deMeasureSEL, FPD3deMeasureGetPlaneSEL, (void*)CFPD_3deMeasure_V12::GetPlane);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deMeasureSEL, FPD3deMeasureGetAnchorPointsSEL, (void*)CFPD_3deMeasure_V12::GetAnchorPoints);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deMeasureSEL, FPD3deMeasureReleaseFS3DeVectorArraySEL, (void*)CFPD_3deMeasure_V12::ReleaseFS3DeVectorArray);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deMeasureSEL, FPD3deMeasureGetAnchorNamesSEL, (void*)CFPD_3deMeasure_V12::GetAnchorNames);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deMeasureSEL, FPD3deMeasureGetExtraAnchorPointsSEL, (void*)CFPD_3deMeasure_V12::GetExtraAnchorPoints);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deMeasureSEL, FPD3deMeasureGetDirVectorsSEL, (void*)CFPD_3deMeasure_V12::GetDirVectors);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deMeasureSEL, FPD3deMeasureGetTextPosSEL, (void*)CFPD_3deMeasure_V12::GetTextPos);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deMeasureSEL, FPD3deMeasureGetTextXDirSEL, (void*)CFPD_3deMeasure_V12::GetTextXDir);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deMeasureSEL, FPD3deMeasureGetTextYDirSEL, (void*)CFPD_3deMeasure_V12::GetTextYDir);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deMeasureSEL, FPD3deMeasureGetTextBoxSizeSEL, (void*)CFPD_3deMeasure_V12::GetTextBoxSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deMeasureSEL, FPD3deMeasureGetExtensionLineLengthSEL, (void*)CFPD_3deMeasure_V12::GetExtensionLineLength);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deMeasureSEL, FPD3deMeasureGetTextSizeSEL, (void*)CFPD_3deMeasure_V12::GetTextSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deMeasureSEL, FPD3deMeasureGetColorSEL, (void*)CFPD_3deMeasure_V12::GetColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deMeasureSEL, FPD3deMeasureGetValueSEL, (void*)CFPD_3deMeasure_V12::GetValue);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deMeasureSEL, FPD3deMeasureGetUnitsSEL, (void*)CFPD_3deMeasure_V12::GetUnits);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deMeasureSEL, FPD3deMeasureGetPrecisionSEL, (void*)CFPD_3deMeasure_V12::GetPrecision);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deMeasureSEL, FPD3deMeasureGetUserTextSEL, (void*)CFPD_3deMeasure_V12::GetUserText);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deMeasureSEL, FPD3deMeasureGetAngleTypeSEL, (void*)CFPD_3deMeasure_V12::GetAngleType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deMeasureSEL, FPD3deMeasureGetShowCircleSEL, (void*)CFPD_3deMeasure_V12::GetShowCircle);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deMeasureSEL, FPD3deMeasureGetRadialTypeSEL, (void*)CFPD_3deMeasure_V12::GetRadialType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deMeasureSEL, FPD3deMeasureSetNameSEL, (void*)CFPD_3deMeasure_V12::SetName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deMeasureSEL, FPD3deMeasureSetTextPosSEL, (void*)CFPD_3deMeasure_V12::SetTextPos);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deMeasureSEL, FPD3deMeasureSetAnchorPointsAndNamesSEL, (void*)CFPD_3deMeasure_V12::SetAnchorPointsAndNames);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deMeasureSEL, FPD3deMeasureSetPlaneSEL, (void*)CFPD_3deMeasure_V12::SetPlane);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deMeasureSEL, FPD3deMeasureSetTextXDirSEL, (void*)CFPD_3deMeasure_V12::SetTextXDir);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deMeasureSEL, FPD3deMeasureSetTextYDirSEL, (void*)CFPD_3deMeasure_V12::SetTextYDir);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deMeasureSEL, FPD3deMeasureSetValueSEL, (void*)CFPD_3deMeasure_V12::SetValue);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deMeasureSEL, FPD3deMeasureSetColorSEL, (void*)CFPD_3deMeasure_V12::SetColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deMeasureSEL, FPD3deMeasureSetAngularShowArcSEL, (void*)CFPD_3deMeasure_V12::SetAngularShowArc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deMeasureSEL, FPD3deMeasureSetDirVectorsSEL, (void*)CFPD_3deMeasure_V12::SetDirVectors);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deMeasureSEL, FPD3deMeasureSetUserTextSEL, (void*)CFPD_3deMeasure_V12::SetUserText);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deMeasureSEL, FPD3deMeasureSetShowSEL, (void*)CFPD_3deMeasure_V12::SetShow);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deMeasureSEL, FPD3deMeasureSetTextBoxSizeSEL, (void*)CFPD_3deMeasure_V12::SetTextBoxSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deMeasureSEL, FPD3deMeasureSetUnitsSEL, (void*)CFPD_3deMeasure_V12::SetUnits);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deMeasureSEL, FPD3deMeasureControllerGetCurrentMeasureSEL, (void*)CFPD_3deMeasure_V12::ControllerGetCurrentMeasure);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deMeasureSEL, FPD3deMeasureGetCurrentCollectedPointCountSEL, (void*)CFPD_3deMeasure_V12::GetCurrentCollectedPointCount);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deMeasureSEL, FPD3deMeasureSetMeasureValueChangeCallbackSEL, (void*)CFPD_3deMeasure_V12::SetMeasureValueChangeCallback);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deMeasureSEL, FPD3deMeasureMeasure_GetDictSEL, (void*)CFPD_3deMeasure_V12::Measure_GetDict);
	}
};

class CFPD_3deViewMiscOptions_V12_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deViewMiscOptionsSEL, FPD3deViewMiscOptionsSetHighlightColorSEL, (void*)CFPD_3deViewMiscOptions_V12::SetHighlightColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deViewMiscOptionsSEL, FPD3deViewMiscOptionsSetBoundingBoxVisibleSEL, (void*)CFPD_3deViewMiscOptions_V12::SetBoundingBoxVisible);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deViewMiscOptionsSEL, FPD3deViewMiscOptionsSetBoundingBoxColorSEL, (void*)CFPD_3deViewMiscOptions_V12::SetBoundingBoxColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deViewMiscOptionsSEL, FPD3deViewMiscOptionsSetShowGridSEL, (void*)CFPD_3deViewMiscOptions_V12::SetShowGrid);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deViewMiscOptionsSEL, FPD3deViewMiscOptionsGetShowGridSEL, (void*)CFPD_3deViewMiscOptions_V12::GetShowGrid);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deViewMiscOptionsSEL, FPD3deViewMiscOptionsSetGridModeSEL, (void*)CFPD_3deViewMiscOptions_V12::SetGridMode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deViewMiscOptionsSEL, FPD3deViewMiscOptionsGetGridModeSEL, (void*)CFPD_3deViewMiscOptions_V12::GetGridMode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deViewMiscOptionsSEL, FPD3deViewMiscOptionsSetGridSizeSEL, (void*)CFPD_3deViewMiscOptions_V12::SetGridSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deViewMiscOptionsSEL, FPD3deViewMiscOptionsGetGridSizeSEL, (void*)CFPD_3deViewMiscOptions_V12::GetGridSize);
	}
};

class CFPD_3deTextProvider_V12_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deTextProviderSEL, FPD3deTextProviderCreateSEL, (void*)CFPD_3deTextProvider_V12::Create);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deTextProviderSEL, FPD3deTextProviderReleaseSEL, (void*)CFPD_3deTextProvider_V12::Release);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deTextProviderSEL, FPD3deTextProviderSetTextScalingRatioSEL, (void*)CFPD_3deTextProvider_V12::SetTextScalingRatio);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deTextProviderSEL, FPD3deTextProviderSetSystemHandlerSEL, (void*)CFPD_3deTextProvider_V12::SetSystemHandler);
	}
};

class CFPD_ScriptHostHostProvider_V12_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDScriptHostHostProviderSEL, FPDScriptHostHostProviderNewSEL, (void*)CFPD_ScriptHostHostProvider_V12::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDScriptHostHostProviderSEL, FPDScriptHostHostProviderDestroySEL, (void*)CFPD_ScriptHostHostProvider_V12::Destroy);
	}
};

class CFPD_Script3DEngine_V12_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDScript3DEngineSEL, FPDScript3DEngineNewSEL, (void*)CFPD_Script3DEngine_V12::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDScript3DEngineSEL, FPDScript3DEngineDestroySEL, (void*)CFPD_Script3DEngine_V12::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDScript3DEngineSEL, FPDScript3DEngineGet3DScriptContextSEL, (void*)CFPD_Script3DEngine_V12::Get3DScriptContext);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDScript3DEngineSEL, FPDScript3DEngineRegisterHostProviderSEL, (void*)CFPD_Script3DEngine_V12::RegisterHostProvider);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDScript3DEngineSEL, FPDScript3DEngineGet3DScriptProviderSEL, (void*)CFPD_Script3DEngine_V12::Get3DScriptProvider);
	}
};

class CFPD_3DI18NProviderHandler_V12_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3DI18NProviderHandlerSEL, FPD3DI18NProviderHandlerNewSEL, (void*)CFPD_3DI18NProviderHandler_V12::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3DI18NProviderHandlerSEL, FPD3DI18NProviderHandlerDestroySEL, (void*)CFPD_3DI18NProviderHandler_V12::Destroy);
	}
};

// fpd_3DImpl.h end

// In file fpd_barcodeImpl.h
// fpd_barcodeImpl.h end

// In file fpd_convertImpl.h
// fpd_convertImpl.h end

// In file fpd_docImpl.h
// fpd_docImpl.h end

// In file fpd_editImpl.h
// fpd_editImpl.h end

// In file fpd_epubImpl.h
// fpd_epubImpl.h end

// In file fpd_fontmgrImpl.h
// fpd_fontmgrImpl.h end

// In file fpd_fxxfaImpl.h
// fpd_fxxfaImpl.h end

// In file fpd_jsImpl.h
// fpd_jsImpl.h end

// In file fpd_lrImpl.h
// fpd_lrImpl.h end

// In file fpd_mathImpl.h
// fpd_mathImpl.h end

// In file fpd_objsImpl.h
// fpd_objsImpl.h end

// In file fpd_pageImpl.h
// fpd_pageImpl.h end

// In file fpd_pageobjImpl.h
// fpd_pageobjImpl.h end

// In file fpd_parserImpl.h
// fpd_parserImpl.h end

// In file fpd_psiImpl.h
// fpd_psiImpl.h end

// In file fpd_pwlImpl.h
// fpd_pwlImpl.h end

// In file fpd_renderImpl.h
// fpd_renderImpl.h end

// In file fpd_resourceImpl.h
// fpd_resourceImpl.h end

// In file fpd_serialImpl.h
// fpd_serialImpl.h end

// In file fpd_textImpl.h
// fpd_textImpl.h end

// In file fpd_validateImpl.h
// fpd_validateImpl.h end

//----------_V13----------
// In file fs_basicImpl.h
// fs_basicImpl.h end

// In file fs_stringImpl.h
// fs_stringImpl.h end

// In file fdrm_descImpl.h
// fdrm_descImpl.h end

// In file fdrm_managerImpl.h
// fdrm_managerImpl.h end

// In file fdrm_pdfImpl.h
// fdrm_pdfImpl.h end

// In file fdrm_pkiImpl.h
// fdrm_pkiImpl.h end

// In file fhtml_impl.h
// fhtml_impl.h end

// In file fr_appImpl.h
class CFR_IReader_PageView_V13_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRIReaderSEL, FRIReaderGetInputMethodSEL, (void*)CFR_IReader_PageView_V13::GetInputMethod);
	}
};

class CFR_IFX_InputMethod_V13_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRIFXSEL, FRIFXOnWindowProcSEL, (void*)CFR_IFX_InputMethod_V13::OnWindowProc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRIFXSEL, FRIFXRegisterInputHandlerSEL, (void*)CFR_IFX_InputMethod_V13::RegisterInputHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRIFXSEL, FRIFXUnRegisterInputHandlerSEL, (void*)CFR_IFX_InputMethod_V13::UnRegisterInputHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRIFXSEL, FRIFXEnterInputStatusSEL, (void*)CFR_IFX_InputMethod_V13::EnterInputStatus);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRIFXSEL, FRIFXExitInputStatusSEL, (void*)CFR_IFX_InputMethod_V13::ExitInputStatus);
	}
};

class CFR_InputMethodHandler_V13_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInputMethodHandlerSEL, FRInputMethodHandlerNewSEL, (void*)CFR_InputMethodHandler_V13::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInputMethodHandlerSEL, FRInputMethodHandlerDestroySEL, (void*)CFR_InputMethodHandler_V13::Destroy);
	}
};

// fr_appImpl.h end

// In file fr_barImpl.h
// fr_barImpl.h end

// In file fr_docImpl.h
class CFR_ReaderInterform_V13_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRReaderInterformSEL, FRReaderInterformGetInterFormSEL, (void*)CFR_ReaderInterform_V13::GetInterForm);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRReaderInterformSEL, FRReaderInterformLoadImageFromFileSEL, (void*)CFR_ReaderInterform_V13::LoadImageFromFile);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRReaderInterformSEL, FRReaderInterformResetFieldAppearanceSEL, (void*)CFR_ReaderInterform_V13::ResetFieldAppearance);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRReaderInterformSEL, FRReaderInterformOnCalculateSEL, (void*)CFR_ReaderInterform_V13::OnCalculate);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRReaderInterformSEL, FRReaderInterformOnCalculate2SEL, (void*)CFR_ReaderInterform_V13::OnCalculate2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRReaderInterformSEL, FRReaderInterformIsFormFieldInPageSEL, (void*)CFR_ReaderInterform_V13::IsFormFieldInPage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRReaderInterformSEL, FRReaderInterformGetBFinterformSEL, (void*)CFR_ReaderInterform_V13::GetBFinterform);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRReaderInterformSEL, FRReaderInterformIsHighLightSEL, (void*)CFR_ReaderInterform_V13::IsHighLight);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRReaderInterformSEL, FRReaderInterformGetBarCodeRenderBitmapSEL, (void*)CFR_ReaderInterform_V13::GetBarCodeRenderBitmap);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRReaderInterformSEL, FRReaderInterformDeleteInterFormSEL, (void*)CFR_ReaderInterform_V13::DeleteInterForm);
	}
};

// fr_docImpl.h end

// In file fr_fxnetappImpl.h
// fr_fxnetappImpl.h end

// In file fr_menuImpl.h
// fr_menuImpl.h end

// In file fr_sysImpl.h
// fr_sysImpl.h end

// In file fr_viewImpl.h
// fr_viewImpl.h end

// In file middle_imagecompressImpl.h
// middle_imagecompressImpl.h end

// In file middle_optimizeImpl.h
// middle_optimizeImpl.h end

// In file middle_pdfImpl.h
// middle_pdfImpl.h end

// In file middle_portfolioImpl.h
// middle_portfolioImpl.h end

// In file middle_preflightImpl.h
// middle_preflightImpl.h end

// In file fofd_basicImpl.h
// fofd_basicImpl.h end

// In file fofd_docImpl.h
// fofd_docImpl.h end

// In file fofd_pageImpl.h
// fofd_pageImpl.h end

// In file fofd_renderImpl.h
// fofd_renderImpl.h end

// In file fofd_sigImpl.h
// fofd_sigImpl.h end

// In file fpd_3DImpl.h
// fpd_3DImpl.h end

// In file fpd_barcodeImpl.h
// fpd_barcodeImpl.h end

// In file fpd_convertImpl.h
// fpd_convertImpl.h end

// In file fpd_docImpl.h
// fpd_docImpl.h end

// In file fpd_editImpl.h
// fpd_editImpl.h end

// In file fpd_epubImpl.h
// fpd_epubImpl.h end

// In file fpd_fontmgrImpl.h
// fpd_fontmgrImpl.h end

// In file fpd_fxxfaImpl.h
// fpd_fxxfaImpl.h end

// In file fpd_jsImpl.h
// fpd_jsImpl.h end

// In file fpd_lrImpl.h
// fpd_lrImpl.h end

// In file fpd_mathImpl.h
// fpd_mathImpl.h end

// In file fpd_objsImpl.h
// fpd_objsImpl.h end

// In file fpd_pageImpl.h
// fpd_pageImpl.h end

// In file fpd_pageobjImpl.h
// fpd_pageobjImpl.h end

// In file fpd_parserImpl.h
// fpd_parserImpl.h end

// In file fpd_psiImpl.h
// fpd_psiImpl.h end

// In file fpd_pwlImpl.h
// fpd_pwlImpl.h end

// In file fpd_renderImpl.h
// fpd_renderImpl.h end

// In file fpd_resourceImpl.h
// fpd_resourceImpl.h end

// In file fpd_serialImpl.h
// fpd_serialImpl.h end

// In file fpd_textImpl.h
// fpd_textImpl.h end

// In file fpd_validateImpl.h
// fpd_validateImpl.h end

//----------_V14----------
// In file fs_basicImpl.h
class CFS_ReaderDateTime_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSReaderDateTimeSEL, FSReaderDateTimeCreateDateTimeDefaultSEL, (void*)CFS_ReaderDateTime_V14::CreateDateTimeDefault);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSReaderDateTimeSEL, FSReaderDateTimeCreateDateTimeStrSEL, (void*)CFS_ReaderDateTime_V14::CreateDateTimeStr);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSReaderDateTimeSEL, FSReaderDateTimeCreateDateTimeSEL, (void*)CFS_ReaderDateTime_V14::CreateDateTime);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSReaderDateTimeSEL, FSReaderDateTimeCreateDateTimeSysTimeSEL, (void*)CFS_ReaderDateTime_V14::CreateDateTimeSysTime);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSReaderDateTimeSEL, FSReaderDateTimeFromPDFDateTimeStringSEL, (void*)CFS_ReaderDateTime_V14::FromPDFDateTimeString);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSReaderDateTimeSEL, FSReaderDateTimeToCommonDateTimeStringSEL, (void*)CFS_ReaderDateTime_V14::ToCommonDateTimeString);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSReaderDateTimeSEL, FSReaderDateTimeToPDFDateTimeStringSEL, (void*)CFS_ReaderDateTime_V14::ToPDFDateTimeString);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSReaderDateTimeSEL, FSReaderDateTimeToSystemTimeSEL, (void*)CFS_ReaderDateTime_V14::ToSystemTime);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSReaderDateTimeSEL, FSReaderDateTimeToGMTSEL, (void*)CFS_ReaderDateTime_V14::ToGMT);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSReaderDateTimeSEL, FSReaderDateTimeToLocalTimeSEL, (void*)CFS_ReaderDateTime_V14::ToLocalTime);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSReaderDateTimeSEL, FSReaderDateTimeAddDaysSEL, (void*)CFS_ReaderDateTime_V14::AddDays);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSReaderDateTimeSEL, FSReaderDateTimeAddSecondsSEL, (void*)CFS_ReaderDateTime_V14::AddSeconds);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSReaderDateTimeSEL, FSReaderDateTimeIsEmptySEL, (void*)CFS_ReaderDateTime_V14::IsEmpty);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSReaderDateTimeSEL, FSReaderDateTimeResetDateTimeSEL, (void*)CFS_ReaderDateTime_V14::ResetDateTime);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSReaderDateTimeSEL, FSReaderDateTimeIsLeapYearSEL, (void*)CFS_ReaderDateTime_V14::IsLeapYear);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSReaderDateTimeSEL, FSReaderDateTimeIsValidSEL, (void*)CFS_ReaderDateTime_V14::IsValid);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSReaderDateTimeSEL, FSReaderDateTimeFillDateTimeSEL, (void*)CFS_ReaderDateTime_V14::FillDateTime);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSReaderDateTimeSEL, FSReaderDateTimeFillSystemtimeSEL, (void*)CFS_ReaderDateTime_V14::FillSystemtime);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSReaderDateTimeSEL, FSReaderDateTimeIsEqualSEL, (void*)CFS_ReaderDateTime_V14::IsEqual);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSReaderDateTimeSEL, FSReaderDateTimeIsUnEqualSEL, (void*)CFS_ReaderDateTime_V14::IsUnEqual);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSReaderDateTimeSEL, FSReaderDateTimeIsGreaterSEL, (void*)CFS_ReaderDateTime_V14::IsGreater);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSReaderDateTimeSEL, FSReaderDateTimeIsEqualGreaterSEL, (void*)CFS_ReaderDateTime_V14::IsEqualGreater);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSReaderDateTimeSEL, FSReaderDateTimeIsLessSEL, (void*)CFS_ReaderDateTime_V14::IsLess);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSReaderDateTimeSEL, FSReaderDateTimeIsEqualLessSEL, (void*)CFS_ReaderDateTime_V14::IsEqualLess);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSReaderDateTimeSEL, FSReaderDateTimeDestroySEL, (void*)CFS_ReaderDateTime_V14::Destroy);
	}
};

class CFS_Monoscale_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSMonoscaleSEL, FSMonoscaleNewSEL, (void*)CFS_Monoscale_V14::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSMonoscaleSEL, FSMonoscaleDestroySEL, (void*)CFS_Monoscale_V14::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSMonoscaleSEL, FSMonoscaleLoadDIBSourceSEL, (void*)CFS_Monoscale_V14::LoadDIBSource);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSMonoscaleSEL, FSMonoscaleGetMonoscaleBitmapSEL, (void*)CFS_Monoscale_V14::GetMonoscaleBitmap);
	}
};

class CFS_FloatArray_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSFloatArraySEL, FSFloatArrayNewSEL, (void*)CFS_FloatArray_V14::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSFloatArraySEL, FSFloatArrayDestroySEL, (void*)CFS_FloatArray_V14::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSFloatArraySEL, FSFloatArrayGetSizeSEL, (void*)CFS_FloatArray_V14::GetSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSFloatArraySEL, FSFloatArrayGetUpperBoundSEL, (void*)CFS_FloatArray_V14::GetUpperBound);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSFloatArraySEL, FSFloatArraySetSizeSEL, (void*)CFS_FloatArray_V14::SetSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSFloatArraySEL, FSFloatArrayRemoveAllSEL, (void*)CFS_FloatArray_V14::RemoveAll);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSFloatArraySEL, FSFloatArrayGetAtSEL, (void*)CFS_FloatArray_V14::GetAt);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSFloatArraySEL, FSFloatArraySetAtSEL, (void*)CFS_FloatArray_V14::SetAt);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSFloatArraySEL, FSFloatArraySetAtGrowSEL, (void*)CFS_FloatArray_V14::SetAtGrow);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSFloatArraySEL, FSFloatArrayAddSEL, (void*)CFS_FloatArray_V14::Add);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSFloatArraySEL, FSFloatArrayAppendSEL, (void*)CFS_FloatArray_V14::Append);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSFloatArraySEL, FSFloatArrayCopySEL, (void*)CFS_FloatArray_V14::Copy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSFloatArraySEL, FSFloatArrayGetDataPtrSEL, (void*)CFS_FloatArray_V14::GetDataPtr);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSFloatArraySEL, FSFloatArrayInsertAtSEL, (void*)CFS_FloatArray_V14::InsertAt);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSFloatArraySEL, FSFloatArrayRemoveAtSEL, (void*)CFS_FloatArray_V14::RemoveAt);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSFloatArraySEL, FSFloatArrayInsertNewArrayAtSEL, (void*)CFS_FloatArray_V14::InsertNewArrayAt);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSFloatArraySEL, FSFloatArrayFindSEL, (void*)CFS_FloatArray_V14::Find);
	}
};

class CFS_Int32Array_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSInt32ArraySEL, FSInt32ArrayNewSEL, (void*)CFS_Int32Array_V14::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSInt32ArraySEL, FSInt32ArrayDestroySEL, (void*)CFS_Int32Array_V14::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSInt32ArraySEL, FSInt32ArrayGetSizeSEL, (void*)CFS_Int32Array_V14::GetSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSInt32ArraySEL, FSInt32ArrayGetUpperBoundSEL, (void*)CFS_Int32Array_V14::GetUpperBound);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSInt32ArraySEL, FSInt32ArraySetSizeSEL, (void*)CFS_Int32Array_V14::SetSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSInt32ArraySEL, FSInt32ArrayRemoveAllSEL, (void*)CFS_Int32Array_V14::RemoveAll);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSInt32ArraySEL, FSInt32ArrayGetAtSEL, (void*)CFS_Int32Array_V14::GetAt);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSInt32ArraySEL, FSInt32ArraySetAtSEL, (void*)CFS_Int32Array_V14::SetAt);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSInt32ArraySEL, FSInt32ArraySetAtGrowSEL, (void*)CFS_Int32Array_V14::SetAtGrow);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSInt32ArraySEL, FSInt32ArrayAddSEL, (void*)CFS_Int32Array_V14::Add);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSInt32ArraySEL, FSInt32ArrayAppendSEL, (void*)CFS_Int32Array_V14::Append);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSInt32ArraySEL, FSInt32ArrayCopySEL, (void*)CFS_Int32Array_V14::Copy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSInt32ArraySEL, FSInt32ArrayGetDataPtrSEL, (void*)CFS_Int32Array_V14::GetDataPtr);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSInt32ArraySEL, FSInt32ArrayInsertAtSEL, (void*)CFS_Int32Array_V14::InsertAt);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSInt32ArraySEL, FSInt32ArrayRemoveAtSEL, (void*)CFS_Int32Array_V14::RemoveAt);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSInt32ArraySEL, FSInt32ArrayInsertNewArrayAtSEL, (void*)CFS_Int32Array_V14::InsertNewArrayAt);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSInt32ArraySEL, FSInt32ArrayFindSEL, (void*)CFS_Int32Array_V14::Find);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSInt32ArraySEL, FSInt32ArrayGetDataSEL, (void*)CFS_Int32Array_V14::GetData);
	}
};

class CFS_RegistryManager_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSRegistryManagerSEL, FSRegistryManagerRegistryGetProfilePathSEL, (void*)CFS_RegistryManager_V14::RegistryGetProfilePath);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSRegistryManagerSEL, FSRegistryManagerRegistryWriteIntSEL, (void*)CFS_RegistryManager_V14::RegistryWriteInt);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSRegistryManagerSEL, FSRegistryManagerRegistryWriteBinarySEL, (void*)CFS_RegistryManager_V14::RegistryWriteBinary);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSRegistryManagerSEL, FSRegistryManagerRegistryWriteStringSEL, (void*)CFS_RegistryManager_V14::RegistryWriteString);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSRegistryManagerSEL, FSRegistryManagerRegistryGetIntSEL, (void*)CFS_RegistryManager_V14::RegistryGetInt);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSRegistryManagerSEL, FSRegistryManagerRegistryGetBinarySEL, (void*)CFS_RegistryManager_V14::RegistryGetBinary);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSRegistryManagerSEL, FSRegistryManagerRegistryGetStringSEL, (void*)CFS_RegistryManager_V14::RegistryGetString);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSRegistryManagerSEL, FSRegistryManagerRegistryGetEntryCountSEL, (void*)CFS_RegistryManager_V14::RegistryGetEntryCount);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSRegistryManagerSEL, FSRegistryManagerRegistryGetEntryNameSEL, (void*)CFS_RegistryManager_V14::RegistryGetEntryName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSRegistryManagerSEL, FSRegistryManagerRegistryRemoveSectionSEL, (void*)CFS_RegistryManager_V14::RegistryRemoveSection);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSRegistryManagerSEL, FSRegistryManagerRegistryRemoveEntrySEL, (void*)CFS_RegistryManager_V14::RegistryRemoveEntry);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSRegistryManagerSEL, FSRegistryManagerRegistryGetKeyCountsSEL, (void*)CFS_RegistryManager_V14::RegistryGetKeyCounts);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSRegistryManagerSEL, FSRegistryManagerRegistryGetKeyNameSEL, (void*)CFS_RegistryManager_V14::RegistryGetKeyName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSRegistryManagerSEL, FSRegistryManagerRegistryDeleteBinarySEL, (void*)CFS_RegistryManager_V14::RegistryDeleteBinary);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSRegistryManagerSEL, FSRegistryManagerGetEntryCountsByHKeySEL, (void*)CFS_RegistryManager_V14::GetEntryCountsByHKey);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSRegistryManagerSEL, FSRegistryManagerRemoveEntryByHKeySEL, (void*)CFS_RegistryManager_V14::RemoveEntryByHKey);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSRegistryManagerSEL, FSRegistryManagerGetKeyCountsByHKeySEL, (void*)CFS_RegistryManager_V14::GetKeyCountsByHKey);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSRegistryManagerSEL, FSRegistryManagerGetKeyNameByHKeySEL, (void*)CFS_RegistryManager_V14::GetKeyNameByHKey);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSRegistryManagerSEL, FSRegistryManagerGetKeyNameListByHKeySEL, (void*)CFS_RegistryManager_V14::GetKeyNameListByHKey);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSRegistryManagerSEL, FSRegistryManagerGetHKeySEL, (void*)CFS_RegistryManager_V14::GetHKey);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSRegistryManagerSEL, FSRegistryManagerCloseHKeySEL, (void*)CFS_RegistryManager_V14::CloseHKey);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSRegistryManagerSEL, FSRegistryManagerWriteProfileIntByHKeySEL, (void*)CFS_RegistryManager_V14::WriteProfileIntByHKey);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSRegistryManagerSEL, FSRegistryManagerWriteProfileBinaryByHKeySEL, (void*)CFS_RegistryManager_V14::WriteProfileBinaryByHKey);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSRegistryManagerSEL, FSRegistryManagerWriteProfileStringByHKeySEL, (void*)CFS_RegistryManager_V14::WriteProfileStringByHKey);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSRegistryManagerSEL, FSRegistryManagerGetProfileIntByHKeySEL, (void*)CFS_RegistryManager_V14::GetProfileIntByHKey);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSRegistryManagerSEL, FSRegistryManagerGetProfileBinaryByHKeySEL, (void*)CFS_RegistryManager_V14::GetProfileBinaryByHKey);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSRegistryManagerSEL, FSRegistryManagerGetProfileStringByHKeySEL, (void*)CFS_RegistryManager_V14::GetProfileStringByHKey);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSRegistryManagerSEL, FSRegistryManagerGetKeyNameListSEL, (void*)CFS_RegistryManager_V14::GetKeyNameList);
	}
};

class CFS_FloatRect_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSFloatRectSEL, FSFloatRectIsEmptySEL, (void*)CFS_FloatRect_V14::IsEmpty);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSFloatRectSEL, FSFloatRectNormalizeSEL, (void*)CFS_FloatRect_V14::Normalize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSFloatRectSEL, FSFloatRectIsEqualRectSEL, (void*)CFS_FloatRect_V14::IsEqualRect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSFloatRectSEL, FSFloatRectIsNotEqualRectSEL, (void*)CFS_FloatRect_V14::IsNotEqualRect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSFloatRectSEL, FSFloatRectResetSEL, (void*)CFS_FloatRect_V14::Reset);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSFloatRectSEL, FSFloatRectContainsSEL, (void*)CFS_FloatRect_V14::Contains);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSFloatRectSEL, FSFloatRectContains2SEL, (void*)CFS_FloatRect_V14::Contains2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSFloatRectSEL, FSFloatRectTransformSEL, (void*)CFS_FloatRect_V14::Transform);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSFloatRectSEL, FSFloatRectIntersectSEL, (void*)CFS_FloatRect_V14::Intersect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSFloatRectSEL, FSFloatRectUnionSEL, (void*)CFS_FloatRect_V14::Union);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSFloatRectSEL, FSFloatRectGetInnerRectSEL, (void*)CFS_FloatRect_V14::GetInnerRect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSFloatRectSEL, FSFloatRectGetOutterRectSEL, (void*)CFS_FloatRect_V14::GetOutterRect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSFloatRectSEL, FSFloatRectGetClosestRectSEL, (void*)CFS_FloatRect_V14::GetClosestRect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSFloatRectSEL, FSFloatRectSubstract4SEL, (void*)CFS_FloatRect_V14::Substract4);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSFloatRectSEL, FSFloatRectInitRectSEL, (void*)CFS_FloatRect_V14::InitRect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSFloatRectSEL, FSFloatRectUpdateRectSEL, (void*)CFS_FloatRect_V14::UpdateRect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSFloatRectSEL, FSFloatRectWidthSEL, (void*)CFS_FloatRect_V14::Width);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSFloatRectSEL, FSFloatRectHeightSEL, (void*)CFS_FloatRect_V14::Height);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSFloatRectSEL, FSFloatRectInflateSEL, (void*)CFS_FloatRect_V14::Inflate);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSFloatRectSEL, FSFloatRectInflate2SEL, (void*)CFS_FloatRect_V14::Inflate2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSFloatRectSEL, FSFloatRectInflate3SEL, (void*)CFS_FloatRect_V14::Inflate3);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSFloatRectSEL, FSFloatRectDeflateSEL, (void*)CFS_FloatRect_V14::Deflate);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSFloatRectSEL, FSFloatRectDeflate2SEL, (void*)CFS_FloatRect_V14::Deflate2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSFloatRectSEL, FSFloatRectDeflate3SEL, (void*)CFS_FloatRect_V14::Deflate3);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSFloatRectSEL, FSFloatRectTranslateSEL, (void*)CFS_FloatRect_V14::Translate);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSFloatRectSEL, FSFloatRectGetBBoxSEL, (void*)CFS_FloatRect_V14::GetBBox);
	}
};

// fs_basicImpl.h end

// In file fs_stringImpl.h
// fs_stringImpl.h end

// In file fdrm_descImpl.h
// fdrm_descImpl.h end

// In file fdrm_managerImpl.h
// fdrm_managerImpl.h end

// In file fdrm_pdfImpl.h
// fdrm_pdfImpl.h end

// In file fdrm_pkiImpl.h
// fdrm_pkiImpl.h end

// In file fhtml_impl.h
class CFR_BrowserManager_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRBrowserManagerSEL, FRBrowserManagerOpenHtmlOnNewTabSEL, (void*)CFR_BrowserManager_V14::OpenHtmlOnNewTab);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRBrowserManagerSEL, FRBrowserManagerOpenWebPageDocumentSEL, (void*)CFR_BrowserManager_V14::OpenWebPageDocument);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRBrowserManagerSEL, FRBrowserManagerReleaseWebPageDocumentSEL, (void*)CFR_BrowserManager_V14::ReleaseWebPageDocument);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRBrowserManagerSEL, FRBrowserManagerOnPretranslateMessageSEL, (void*)CFR_BrowserManager_V14::OnPretranslateMessage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRBrowserManagerSEL, FRBrowserManagerOnWebPageSizeSEL, (void*)CFR_BrowserManager_V14::OnWebPageSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRBrowserManagerSEL, FRBrowserManagerExecuteJavaScriptSEL, (void*)CFR_BrowserManager_V14::ExecuteJavaScript);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRBrowserManagerSEL, FRBrowserManagerSetCookiesSEL, (void*)CFR_BrowserManager_V14::SetCookies);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRBrowserManagerSEL, FRBrowserManagerGetCookiesSEL, (void*)CFR_BrowserManager_V14::GetCookies);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRBrowserManagerSEL, FRBrowserManagerDeleteCookiesSEL, (void*)CFR_BrowserManager_V14::DeleteCookies);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRBrowserManagerSEL, FRBrowserManagerExecuteJavaScriptOnCreatedSEL, (void*)CFR_BrowserManager_V14::ExecuteJavaScriptOnCreated);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRBrowserManagerSEL, FRBrowserManagerShowWindowSEL, (void*)CFR_BrowserManager_V14::ShowWindow);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRBrowserManagerSEL, FRBrowserManagerSetCookies2SEL, (void*)CFR_BrowserManager_V14::SetCookies2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRBrowserManagerSEL, FRBrowserManagerGetCookies2SEL, (void*)CFR_BrowserManager_V14::GetCookies2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRBrowserManagerSEL, FRBrowserManagerDeleteCookies2SEL, (void*)CFR_BrowserManager_V14::DeleteCookies2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRBrowserManagerSEL, FRBrowserManagerExecuteJavaScript2SEL, (void*)CFR_BrowserManager_V14::ExecuteJavaScript2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRBrowserManagerSEL, FRBrowserManagerSetZoomFactorSEL, (void*)CFR_BrowserManager_V14::SetZoomFactor);
	}
};

// fhtml_impl.h end

// In file fr_appImpl.h
class CFR_MarkAnnotHandler_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMarkAnnotHandlerSEL, FRMarkAnnotHandlerBeginTimerSEL, (void*)CFR_MarkAnnotHandler_V14::BeginTimer);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMarkAnnotHandlerSEL, FRMarkAnnotHandlerEndTimerSEL, (void*)CFR_MarkAnnotHandler_V14::EndTimer);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMarkAnnotHandlerSEL, FRMarkAnnotHandlerOnMoveOutPageSEL, (void*)CFR_MarkAnnotHandler_V14::OnMoveOutPage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMarkAnnotHandlerSEL, FRMarkAnnotHandlerCopyReplySEL, (void*)CFR_MarkAnnotHandler_V14::CopyReply);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMarkAnnotHandlerSEL, FRMarkAnnotHandlerDeleteAnnotSEL, (void*)CFR_MarkAnnotHandler_V14::DeleteAnnot);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMarkAnnotHandlerSEL, FRMarkAnnotHandlerIsDesignerSEL, (void*)CFR_MarkAnnotHandler_V14::IsDesigner);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMarkAnnotHandlerSEL, FRMarkAnnotHandlerCanReSizeSEL, (void*)CFR_MarkAnnotHandler_V14::CanReSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMarkAnnotHandlerSEL, FRMarkAnnotHandlerCanMoveSEL, (void*)CFR_MarkAnnotHandler_V14::CanMove);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMarkAnnotHandlerSEL, FRMarkAnnotHandlerCanAnswerSEL, (void*)CFR_MarkAnnotHandler_V14::CanAnswer);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMarkAnnotHandlerSEL, FRMarkAnnotHandlerOnLoadSEL, (void*)CFR_MarkAnnotHandler_V14::OnLoad);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMarkAnnotHandlerSEL, FRMarkAnnotHandlerGetViewBBoxSEL, (void*)CFR_MarkAnnotHandler_V14::GetViewBBox);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMarkAnnotHandlerSEL, FRMarkAnnotHandlerOnDrawSEL, (void*)CFR_MarkAnnotHandler_V14::OnDraw);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMarkAnnotHandlerSEL, FRMarkAnnotHandlerOnLButtonDownSEL, (void*)CFR_MarkAnnotHandler_V14::OnLButtonDown);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMarkAnnotHandlerSEL, FRMarkAnnotHandlerOnLButtonUpSEL, (void*)CFR_MarkAnnotHandler_V14::OnLButtonUp);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMarkAnnotHandlerSEL, FRMarkAnnotHandlerOnMouseMoveSEL, (void*)CFR_MarkAnnotHandler_V14::OnMouseMove);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMarkAnnotHandlerSEL, FRMarkAnnotHandlerOnLButtonDblClkSEL, (void*)CFR_MarkAnnotHandler_V14::OnLButtonDblClk);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMarkAnnotHandlerSEL, FRMarkAnnotHandlerOnDeSelectedSEL, (void*)CFR_MarkAnnotHandler_V14::OnDeSelected);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMarkAnnotHandlerSEL, FRMarkAnnotHandlerOnSelectedSEL, (void*)CFR_MarkAnnotHandler_V14::OnSelected);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMarkAnnotHandlerSEL, FRMarkAnnotHandlerOnPopupMenuSEL, (void*)CFR_MarkAnnotHandler_V14::OnPopupMenu);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMarkAnnotHandlerSEL, FRMarkAnnotHandlerOnPopupMenuItemSEL, (void*)CFR_MarkAnnotHandler_V14::OnPopupMenuItem);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMarkAnnotHandlerSEL, FRMarkAnnotHandlerIsMenuItemSupportedSEL, (void*)CFR_MarkAnnotHandler_V14::IsMenuItemSupported);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMarkAnnotHandlerSEL, FRMarkAnnotHandlerGetMoveTypeSEL, (void*)CFR_MarkAnnotHandler_V14::GetMoveType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMarkAnnotHandlerSEL, FRMarkAnnotHandlerOnMovingSEL, (void*)CFR_MarkAnnotHandler_V14::OnMoving);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMarkAnnotHandlerSEL, FRMarkAnnotHandlerOnMovedSEL, (void*)CFR_MarkAnnotHandler_V14::OnMoved);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMarkAnnotHandlerSEL, FRMarkAnnotHandlerCancelMovingSEL, (void*)CFR_MarkAnnotHandler_V14::CancelMoving);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMarkAnnotHandlerSEL, FRMarkAnnotHandlerOnMovedOutPageSEL, (void*)CFR_MarkAnnotHandler_V14::OnMovedOutPage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMarkAnnotHandlerSEL, FRMarkAnnotHandlerOnSetPositionSEL, (void*)CFR_MarkAnnotHandler_V14::OnSetPosition);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMarkAnnotHandlerSEL, FRMarkAnnotHandlerOnMoving2SEL, (void*)CFR_MarkAnnotHandler_V14::OnMoving2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMarkAnnotHandlerSEL, FRMarkAnnotHandlerOnMoved2SEL, (void*)CFR_MarkAnnotHandler_V14::OnMoved2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMarkAnnotHandlerSEL, FRMarkAnnotHandlerOnResizingSEL, (void*)CFR_MarkAnnotHandler_V14::OnResizing);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMarkAnnotHandlerSEL, FRMarkAnnotHandlerOnCopySEL, (void*)CFR_MarkAnnotHandler_V14::OnCopy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMarkAnnotHandlerSEL, FRMarkAnnotHandlerOnSetFocusSEL, (void*)CFR_MarkAnnotHandler_V14::OnSetFocus);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMarkAnnotHandlerSEL, FRMarkAnnotHandlerOnKillFocusSEL, (void*)CFR_MarkAnnotHandler_V14::OnKillFocus);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMarkAnnotHandlerSEL, FRMarkAnnotHandlerDeleteMarkupHandlerSEL, (void*)CFR_MarkAnnotHandler_V14::DeleteMarkupHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMarkAnnotHandlerSEL, FRMarkAnnotHandlerCreateMarkupHandlerSEL, (void*)CFR_MarkAnnotHandler_V14::CreateMarkupHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMarkAnnotHandlerSEL, FRMarkAnnotHandlerCastToBAAnnotHandlerSEL, (void*)CFR_MarkAnnotHandler_V14::CastToBAAnnotHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMarkAnnotHandlerSEL, FRMarkAnnotHandlerTimerProcSEL, (void*)CFR_MarkAnnotHandler_V14::TimerProc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMarkAnnotHandlerSEL, FRMarkAnnotHandlerGetSystemHandlerSEL, (void*)CFR_MarkAnnotHandler_V14::GetSystemHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMarkAnnotHandlerSEL, FRMarkAnnotHandlerOnPasteSEL, (void*)CFR_MarkAnnotHandler_V14::OnPaste);
	}
};

class CFR_ReaderUserMessageHandler_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRReaderUserMessageHandlerSEL, FRReaderUserMessageHandlerNewSEL, (void*)CFR_ReaderUserMessageHandler_V14::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRReaderUserMessageHandlerSEL, FRReaderUserMessageHandlerDestroySEL, (void*)CFR_ReaderUserMessageHandler_V14::Destroy);
	}
};

class CFR_IFieldMulCopiesNotify_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRIFieldMulCopiesNotifySEL, FRIFieldMulCopiesNotifyNewSEL, (void*)CFR_IFieldMulCopiesNotify_V14::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRIFieldMulCopiesNotifySEL, FRIFieldMulCopiesNotifyDestroySEL, (void*)CFR_IFieldMulCopiesNotify_V14::Destroy);
	}
};

class CFR_IActionWizardData_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRIActionWizardDataSEL, FRIActionWizardDataCreateIActionWizardDataSEL, (void*)CFR_IActionWizardData_V14::CreateIActionWizardData);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRIActionWizardDataSEL, FRIActionWizardDataSetRootXMLEleSEL, (void*)CFR_IActionWizardData_V14::SetRootXMLEle);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRIActionWizardDataSEL, FRIActionWizardDataSaveItemsDataToXMLSEL, (void*)CFR_IActionWizardData_V14::SaveItemsDataToXML);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRIActionWizardDataSEL, FRIActionWizardDataGetItemsDataFromXMLSEL, (void*)CFR_IActionWizardData_V14::GetItemsDataFromXML);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRIActionWizardDataSEL, FRIActionWizardDataGetItemsSEL, (void*)CFR_IActionWizardData_V14::GetItems);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRIActionWizardDataSEL, FRIActionWizardDataGetItemDataFromXMLINTSEL, (void*)CFR_IActionWizardData_V14::GetItemDataFromXMLINT);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRIActionWizardDataSEL, FRIActionWizardDataGetItemDataFromXMLFLOATSEL, (void*)CFR_IActionWizardData_V14::GetItemDataFromXMLFLOAT);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRIActionWizardDataSEL, FRIActionWizardDataGetItemDataFromXMLBOOLSEL, (void*)CFR_IActionWizardData_V14::GetItemDataFromXMLBOOL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRIActionWizardDataSEL, FRIActionWizardDataGetItemDataFromXMLStringSEL, (void*)CFR_IActionWizardData_V14::GetItemDataFromXMLString);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRIActionWizardDataSEL, FRIActionWizardDataSaveItemDataToXMLBOOLSEL, (void*)CFR_IActionWizardData_V14::SaveItemDataToXMLBOOL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRIActionWizardDataSEL, FRIActionWizardDataSaveItemDataToXMLINTSEL, (void*)CFR_IActionWizardData_V14::SaveItemDataToXMLINT);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRIActionWizardDataSEL, FRIActionWizardDataSaveItemDataToXMLFLOATSEL, (void*)CFR_IActionWizardData_V14::SaveItemDataToXMLFLOAT);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRIActionWizardDataSEL, FRIActionWizardDataSaveItemDataToXMLWCHARSEL, (void*)CFR_IActionWizardData_V14::SaveItemDataToXMLWCHAR);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRIActionWizardDataSEL, FRIActionWizardDataSaveItemDataToXMLSTRINGSEL, (void*)CFR_IActionWizardData_V14::SaveItemDataToXMLSTRING);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRIActionWizardDataSEL, FRIActionWizardDataDestroyIActionWizardDataSEL, (void*)CFR_IActionWizardData_V14::DestroyIActionWizardData);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRIActionWizardDataSEL, FRIActionWizardDataGetItemsChidrenCountSEL, (void*)CFR_IActionWizardData_V14::GetItemsChidrenCount);
	}
};

class CFR_CMapItemNameToData_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCMapItemNameToDataSEL, FRCMapItemNameToDataSetItemDataBOOLSEL, (void*)CFR_CMapItemNameToData_V14::SetItemDataBOOL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCMapItemNameToDataSEL, FRCMapItemNameToDataSetItemDataINTSEL, (void*)CFR_CMapItemNameToData_V14::SetItemDataINT);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCMapItemNameToDataSEL, FRCMapItemNameToDataSetItemDataFLOATSEL, (void*)CFR_CMapItemNameToData_V14::SetItemDataFLOAT);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCMapItemNameToDataSEL, FRCMapItemNameToDataSetItemDataWCHARSEL, (void*)CFR_CMapItemNameToData_V14::SetItemDataWCHAR);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCMapItemNameToDataSEL, FRCMapItemNameToDataSetItemDataSTRINGSEL, (void*)CFR_CMapItemNameToData_V14::SetItemDataSTRING);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCMapItemNameToDataSEL, FRCMapItemNameToDataGetItemDataINTSEL, (void*)CFR_CMapItemNameToData_V14::GetItemDataINT);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCMapItemNameToDataSEL, FRCMapItemNameToDataGetItemDataFLOATSEL, (void*)CFR_CMapItemNameToData_V14::GetItemDataFLOAT);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCMapItemNameToDataSEL, FRCMapItemNameToDataGetItemDataBOOLSEL, (void*)CFR_CMapItemNameToData_V14::GetItemDataBOOL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCMapItemNameToDataSEL, FRCMapItemNameToDataGetItemDataSTRINGSEL, (void*)CFR_CMapItemNameToData_V14::GetItemDataSTRING);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCMapItemNameToDataSEL, FRCMapItemNameToDataCheckKeyExistSEL, (void*)CFR_CMapItemNameToData_V14::CheckKeyExist);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCMapItemNameToDataSEL, FRCMapItemNameToDataIsEmptySEL, (void*)CFR_CMapItemNameToData_V14::IsEmpty);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCMapItemNameToDataSEL, FRCMapItemNameToDataGetCountSEL, (void*)CFR_CMapItemNameToData_V14::GetCount);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCMapItemNameToDataSEL, FRCMapItemNameToDataRemoveAtSEL, (void*)CFR_CMapItemNameToData_V14::RemoveAt);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCMapItemNameToDataSEL, FRCMapItemNameToDataRemovAllSEL, (void*)CFR_CMapItemNameToData_V14::RemovAll);
	}
};

class CFR_ReaderUIMgr_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRReaderUIMgrSEL, FRReaderUIMgrShowFilePasswordDlgSEL, (void*)CFR_ReaderUIMgr_V14::ShowFilePasswordDlg);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRReaderUIMgrSEL, FRReaderUIMgrGetReaderThemeObjectSEL, (void*)CFR_ReaderUIMgr_V14::GetReaderThemeObject);
	}
};

class CFR_ReaderTheme_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRReaderThemeSEL, FRReaderThemeGetBkGroundColorSEL, (void*)CFR_ReaderTheme_V14::GetBkGroundColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRReaderThemeSEL, FRReaderThemeInstallSkinThemeSEL, (void*)CFR_ReaderTheme_V14::InstallSkinTheme);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRReaderThemeSEL, FRReaderThemeInstallSkinTheme2SEL, (void*)CFR_ReaderTheme_V14::InstallSkinTheme2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRReaderThemeSEL, FRReaderThemeRegistSkinChangeProcSEL, (void*)CFR_ReaderTheme_V14::RegistSkinChangeProc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRReaderThemeSEL, FRReaderThemeUnRegistSkinChangeProcSEL, (void*)CFR_ReaderTheme_V14::UnRegistSkinChangeProc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRReaderThemeSEL, FRReaderThemeGetSkinStyleSEL, (void*)CFR_ReaderTheme_V14::GetSkinStyle);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRReaderThemeSEL, FRReaderThemeGetWindowColorSEL, (void*)CFR_ReaderTheme_V14::GetWindowColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRReaderThemeSEL, FRReaderThemeGetWindowTextColorSEL, (void*)CFR_ReaderTheme_V14::GetWindowTextColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRReaderThemeSEL, FRReaderThemeGetAppColorSEL, (void*)CFR_ReaderTheme_V14::GetAppColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRReaderThemeSEL, FRReaderThemeGetLeftPanelSeparatorColorSEL, (void*)CFR_ReaderTheme_V14::GetLeftPanelSeparatorColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRReaderThemeSEL, FRReaderThemeGetWindow2ColorSEL, (void*)CFR_ReaderTheme_V14::GetWindow2Color);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRReaderThemeSEL, FRReaderThemeSetBkGroundColorSEL, (void*)CFR_ReaderTheme_V14::SetBkGroundColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRReaderThemeSEL, FRReaderThemeEnableWindowRoundedCornersSEL, (void*)CFR_ReaderTheme_V14::EnableWindowRoundedCorners);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRReaderThemeSEL, FRReaderThemeGetColorSEL, (void*)CFR_ReaderTheme_V14::GetColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRReaderThemeSEL, FRReaderThemeGetColorMapSEL, (void*)CFR_ReaderTheme_V14::GetColorMap);
	}
};

class CFR_PluginsMamager_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPluginsMamagerSEL, FRPluginsMamagerLoadPluginSEL, (void*)CFR_PluginsMamager_V14::LoadPlugin);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPluginsMamagerSEL, FRPluginsMamagerIsLoadedPluginSEL, (void*)CFR_PluginsMamager_V14::IsLoadedPlugin);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPluginsMamagerSEL, FRPluginsMamagerIsDisabledPluginSEL, (void*)CFR_PluginsMamager_V14::IsDisabledPlugin);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPluginsMamagerSEL, FRPluginsMamagerIsPluginNeedLoadByGPOSEL, (void*)CFR_PluginsMamager_V14::IsPluginNeedLoadByGPO);
	}
};

class CFR_IReplaceAllNotify_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRIReplaceAllNotifySEL, FRIReplaceAllNotifyReplaceAllProcSEL, (void*)CFR_IReplaceAllNotify_V14::ReplaceAllProc);
	}
};

class CFR_IFindReplaceMgr_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRIFindReplaceMgrSEL, FRIFindReplaceMgrNewSEL, (void*)CFR_IFindReplaceMgr_V14::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRIFindReplaceMgrSEL, FRIFindReplaceMgrDestroySEL, (void*)CFR_IFindReplaceMgr_V14::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRIFindReplaceMgrSEL, FRIFindReplaceMgrSetToMgrSEL, (void*)CFR_IFindReplaceMgr_V14::SetToMgr);
	}
};

class CFR_PDFBitmap_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPDFBitmapSEL, FRPDFBitmapDrawSEL, (void*)CFR_PDFBitmap_V14::Draw);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPDFBitmapSEL, FRPDFBitmapGetBitmapSEL, (void*)CFR_PDFBitmap_V14::GetBitmap);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPDFBitmapSEL, FRPDFBitmapGetBitmapFromPDFIconSEL, (void*)CFR_PDFBitmap_V14::GetBitmapFromPDFIcon);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPDFBitmapSEL, FRPDFBitmapFillRoundedRectangleSEL, (void*)CFR_PDFBitmap_V14::FillRoundedRectangle);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPDFBitmapSEL, FRPDFBitmapDrawRoundedRectangleSEL, (void*)CFR_PDFBitmap_V14::DrawRoundedRectangle);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPDFBitmapSEL, FRPDFBitmapDraw2SEL, (void*)CFR_PDFBitmap_V14::Draw2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPDFBitmapSEL, FRPDFBitmapGetBitmap2SEL, (void*)CFR_PDFBitmap_V14::GetBitmap2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPDFBitmapSEL, FRPDFBitmapGetFXBitmapSEL, (void*)CFR_PDFBitmap_V14::GetFXBitmap);
	}
};

class CFR_Accessibility_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAccessibilitySEL, FRAccessibilityIsScreenReaderRunningSEL, (void*)CFR_Accessibility_V14::IsScreenReaderRunning);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAccessibilitySEL, FRAccessibilityIsATSupportEnabledSEL, (void*)CFR_Accessibility_V14::IsATSupportEnabled);
	}
};

class CFR_AppUIStyle_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppUIStyleSEL, FRAppUIStyleGetAppColorSEL, (void*)CFR_AppUIStyle_V14::GetAppColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAppUIStyleSEL, FRAppUIStyleGetRibbonImageScaleSEL, (void*)CFR_AppUIStyle_V14::GetRibbonImageScale);
	}
};

// fr_appImpl.h end

// In file fr_barImpl.h
class CFR_RibbonStyleRadioBox_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleRadioBoxSEL, FRRibbonStyleRadioBoxGetMFCButtonSEL, (void*)CFR_RibbonStyleRadioBox_V14::GetMFCButton);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleRadioBoxSEL, FRRibbonStyleRadioBoxReleaseSEL, (void*)CFR_RibbonStyleRadioBox_V14::Release);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleRadioBoxSEL, FRRibbonStyleRadioBoxSetDefaultStyleSEL, (void*)CFR_RibbonStyleRadioBox_V14::SetDefaultStyle);
	}
};

class CFR_RibbonStyleCheckBox_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleCheckBoxSEL, FRRibbonStyleCheckBoxIsCheckedSEL, (void*)CFR_RibbonStyleCheckBox_V14::IsChecked);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleCheckBoxSEL, FRRibbonStyleCheckBoxGetCheckStateSEL, (void*)CFR_RibbonStyleCheckBox_V14::GetCheckState);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleCheckBoxSEL, FRRibbonStyleCheckBoxSetCheckBox3StateSEL, (void*)CFR_RibbonStyleCheckBox_V14::SetCheckBox3State);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleCheckBoxSEL, FRRibbonStyleCheckBoxGetMFCButtonSEL, (void*)CFR_RibbonStyleCheckBox_V14::GetMFCButton);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleCheckBoxSEL, FRRibbonStyleCheckBoxReleaseSEL, (void*)CFR_RibbonStyleCheckBox_V14::Release);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleCheckBoxSEL, FRRibbonStyleCheckBoxSetDefaultStyleSEL, (void*)CFR_RibbonStyleCheckBox_V14::SetDefaultStyle);
	}
};

class CFR_RibbonStyleEdit_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleEditSEL, FRRibbonStyleEditGetEditButtonSEL, (void*)CFR_RibbonStyleEdit_V14::GetEditButton);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleEditSEL, FRRibbonStyleEditReleaseSEL, (void*)CFR_RibbonStyleEdit_V14::Release);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleEditSEL, FRRibbonStyleEditSetPromptTextSEL, (void*)CFR_RibbonStyleEdit_V14::SetPromptText);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleEditSEL, FRRibbonStyleEditSetBorderColorSEL, (void*)CFR_RibbonStyleEdit_V14::SetBorderColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleEditSEL, FRRibbonStyleEditSetRoundRadiusSEL, (void*)CFR_RibbonStyleEdit_V14::SetRoundRadius);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleEditSEL, FRRibbonStyleEditSetDefaultStyleSEL, (void*)CFR_RibbonStyleEdit_V14::SetDefaultStyle);
	}
};

class CFR_RibbonStyleLinkButton_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleLinkButtonSEL, FRRibbonStyleLinkButtonSetAlwaysUnderLineTextSEL, (void*)CFR_RibbonStyleLinkButton_V14::SetAlwaysUnderLineText);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleLinkButtonSEL, FRRibbonStyleLinkButtonSetMultilineTextSEL, (void*)CFR_RibbonStyleLinkButton_V14::SetMultilineText);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleLinkButtonSEL, FRRibbonStyleLinkButtonSetAlignStyleSEL, (void*)CFR_RibbonStyleLinkButton_V14::SetAlignStyle);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleLinkButtonSEL, FRRibbonStyleLinkButtonGetMFCButtonSEL, (void*)CFR_RibbonStyleLinkButton_V14::GetMFCButton);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleLinkButtonSEL, FRRibbonStyleLinkButtonReleaseSEL, (void*)CFR_RibbonStyleLinkButton_V14::Release);
	}
};

class CFR_RibbonStyleSliderCtrl_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleSliderCtrlSEL, FRRibbonStyleSliderCtrlGetSliderButtonSEL, (void*)CFR_RibbonStyleSliderCtrl_V14::GetSliderButton);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleSliderCtrlSEL, FRRibbonStyleSliderCtrlReleaseSEL, (void*)CFR_RibbonStyleSliderCtrl_V14::Release);
	}
};

class CFR_RibbonStyleColorButton_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleColorButtonSEL, FRRibbonStyleColorButtonGetButtonSEL, (void*)CFR_RibbonStyleColorButton_V14::GetButton);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleColorButtonSEL, FRRibbonStyleColorButtonReleaseSEL, (void*)CFR_RibbonStyleColorButton_V14::Release);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleColorButtonSEL, FRRibbonStyleColorButtonSetColorSEL, (void*)CFR_RibbonStyleColorButton_V14::SetColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleColorButtonSEL, FRRibbonStyleColorButtonGetColorSEL, (void*)CFR_RibbonStyleColorButton_V14::GetColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleColorButtonSEL, FRRibbonStyleColorButtonSetColumnsNumberSEL, (void*)CFR_RibbonStyleColorButton_V14::SetColumnsNumber);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleColorButtonSEL, FRRibbonStyleColorButtonSetImageSEL, (void*)CFR_RibbonStyleColorButton_V14::SetImage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleColorButtonSEL, FRRibbonStyleColorButtonSetAppearanceSEL, (void*)CFR_RibbonStyleColorButton_V14::SetAppearance);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleColorButtonSEL, FRRibbonStyleColorButtonEnableAutomaticButtonSEL, (void*)CFR_RibbonStyleColorButton_V14::EnableAutomaticButton);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleColorButtonSEL, FRRibbonStyleColorButtonEnableOtherButtonSEL, (void*)CFR_RibbonStyleColorButton_V14::EnableOtherButton);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleColorButtonSEL, FRRibbonStyleColorButtonSetImage2SEL, (void*)CFR_RibbonStyleColorButton_V14::SetImage2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleColorButtonSEL, FRRibbonStyleColorButtonSetTooltipSEL, (void*)CFR_RibbonStyleColorButton_V14::SetTooltip);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleColorButtonSEL, FRRibbonStyleColorButtonSetDescriptionSEL, (void*)CFR_RibbonStyleColorButton_V14::SetDescription);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleColorButtonSEL, FRRibbonStyleColorButtonEnableHelpLinkSEL, (void*)CFR_RibbonStyleColorButton_V14::EnableHelpLink);
	}
};

class CFR_RibbonStyleComboBox_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleComboBoxSEL, FRRibbonStyleComboBoxGetButtonSEL, (void*)CFR_RibbonStyleComboBox_V14::GetButton);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleComboBoxSEL, FRRibbonStyleComboBoxSetPromptSEL, (void*)CFR_RibbonStyleComboBox_V14::SetPrompt);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleComboBoxSEL, FRRibbonStyleComboBoxReleaseSEL, (void*)CFR_RibbonStyleComboBox_V14::Release);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleComboBoxSEL, FRRibbonStyleComboBoxSetInputTypeSEL, (void*)CFR_RibbonStyleComboBox_V14::SetInputType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleComboBoxSEL, FRRibbonStyleComboBoxSetLimitDecimalNumSEL, (void*)CFR_RibbonStyleComboBox_V14::SetLimitDecimalNum);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleComboBoxSEL, FRRibbonStyleComboBoxSetMaxAndMinValueSEL, (void*)CFR_RibbonStyleComboBox_V14::SetMaxAndMinValue);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleComboBoxSEL, FRRibbonStyleComboBoxSetDescriptionSEL, (void*)CFR_RibbonStyleComboBox_V14::SetDescription);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleComboBoxSEL, FRRibbonStyleComboBoxEnableHelpLinkSEL, (void*)CFR_RibbonStyleComboBox_V14::EnableHelpLink);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleComboBoxSEL, FRRibbonStyleComboBoxSetTooltipSEL, (void*)CFR_RibbonStyleComboBox_V14::SetTooltip);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleComboBoxSEL, FRRibbonStyleComboBoxSetRoundRadiusSEL, (void*)CFR_RibbonStyleComboBox_V14::SetRoundRadius);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleComboBoxSEL, FRRibbonStyleComboBoxSetDefaultStyleSEL, (void*)CFR_RibbonStyleComboBox_V14::SetDefaultStyle);
	}
};

class CFR_RibbonStyleFontComboBox_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleFontComboBoxSEL, FRRibbonStyleFontComboBoxGetButtonSEL, (void*)CFR_RibbonStyleFontComboBox_V14::GetButton);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleFontComboBoxSEL, FRRibbonStyleFontComboBoxReleaseSEL, (void*)CFR_RibbonStyleFontComboBox_V14::Release);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleFontComboBoxSEL, FRRibbonStyleFontComboBoxSelectFontSEL, (void*)CFR_RibbonStyleFontComboBox_V14::SelectFont);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleFontComboBoxSEL, FRRibbonStyleFontComboBoxInsertFontSEL, (void*)CFR_RibbonStyleFontComboBox_V14::InsertFont);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleFontComboBoxSEL, FRRibbonStyleFontComboBoxAddFontSEL, (void*)CFR_RibbonStyleFontComboBox_V14::AddFont);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleFontComboBoxSEL, FRRibbonStyleFontComboBoxSetDescriptionSEL, (void*)CFR_RibbonStyleFontComboBox_V14::SetDescription);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleFontComboBoxSEL, FRRibbonStyleFontComboBoxEnableHelpLinkSEL, (void*)CFR_RibbonStyleFontComboBox_V14::EnableHelpLink);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonStyleFontComboBoxSEL, FRRibbonStyleFontComboBoxSetTooltipSEL, (void*)CFR_RibbonStyleFontComboBox_V14::SetTooltip);
	}
};

class CFR_StyleGalleryCtrl_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRStyleGalleryCtrlSEL, FRStyleGalleryCtrlGetWndSEL, (void*)CFR_StyleGalleryCtrl_V14::GetWnd);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRStyleGalleryCtrlSEL, FRStyleGalleryCtrlReleaseSEL, (void*)CFR_StyleGalleryCtrl_V14::Release);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRStyleGalleryCtrlSEL, FRStyleGalleryCtrlAddGroupSEL, (void*)CFR_StyleGalleryCtrl_V14::AddGroup);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRStyleGalleryCtrlSEL, FRStyleGalleryCtrlAddGroup1SEL, (void*)CFR_StyleGalleryCtrl_V14::AddGroup1);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRStyleGalleryCtrlSEL, FRStyleGalleryCtrlSelectItemSEL, (void*)CFR_StyleGalleryCtrl_V14::SelectItem);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRStyleGalleryCtrlSEL, FRStyleGalleryCtrlGetSelectedItemSEL, (void*)CFR_StyleGalleryCtrl_V14::GetSelectedItem);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRStyleGalleryCtrlSEL, FRStyleGalleryCtrlSetItemSizeSEL, (void*)CFR_StyleGalleryCtrl_V14::SetItemSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRStyleGalleryCtrlSEL, FRStyleGalleryCtrlSetImageMarginSEL, (void*)CFR_StyleGalleryCtrl_V14::SetImageMargin);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRStyleGalleryCtrlSEL, FRStyleGalleryCtrlSetAppearanceSEL, (void*)CFR_StyleGalleryCtrl_V14::SetAppearance);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRStyleGalleryCtrlSEL, FRStyleGalleryCtrlSetAlignedSideSEL, (void*)CFR_StyleGalleryCtrl_V14::SetAlignedSide);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRStyleGalleryCtrlSEL, FRStyleGalleryCtrlAddItemButtonSEL, (void*)CFR_StyleGalleryCtrl_V14::AddItemButton);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRStyleGalleryCtrlSEL, FRStyleGalleryCtrlSetItemToolTipSEL, (void*)CFR_StyleGalleryCtrl_V14::SetItemToolTip);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRStyleGalleryCtrlSEL, FRStyleGalleryCtrlSetItemAccNameSEL, (void*)CFR_StyleGalleryCtrl_V14::SetItemAccName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRStyleGalleryCtrlSEL, FRStyleGalleryCtrlDisableHighContrastThemeImageSEL, (void*)CFR_StyleGalleryCtrl_V14::DisableHighContrastThemeImage);
	}
};

class CFR_StyleSpinBtnCtrl_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRStyleSpinBtnCtrlSEL, FRStyleSpinBtnCtrlGetButtonSEL, (void*)CFR_StyleSpinBtnCtrl_V14::GetButton);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRStyleSpinBtnCtrlSEL, FRStyleSpinBtnCtrlReleaseSEL, (void*)CFR_StyleSpinBtnCtrl_V14::Release);
	}
};

class CFR_StyleComboGalleryCtrl_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRStyleComboGalleryCtrlSEL, FRStyleComboGalleryCtrlGetWndSEL, (void*)CFR_StyleComboGalleryCtrl_V14::GetWnd);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRStyleComboGalleryCtrlSEL, FRStyleComboGalleryCtrlReleaseSEL, (void*)CFR_StyleComboGalleryCtrl_V14::Release);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRStyleComboGalleryCtrlSEL, FRStyleComboGalleryCtrlAddGroupSEL, (void*)CFR_StyleComboGalleryCtrl_V14::AddGroup);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRStyleComboGalleryCtrlSEL, FRStyleComboGalleryCtrlAddGroup1SEL, (void*)CFR_StyleComboGalleryCtrl_V14::AddGroup1);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRStyleComboGalleryCtrlSEL, FRStyleComboGalleryCtrlRemoveAllGroupSEL, (void*)CFR_StyleComboGalleryCtrl_V14::RemoveAllGroup);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRStyleComboGalleryCtrlSEL, FRStyleComboGalleryCtrlGetCountSEL, (void*)CFR_StyleComboGalleryCtrl_V14::GetCount);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRStyleComboGalleryCtrlSEL, FRStyleComboGalleryCtrlGetSelectedItemSEL, (void*)CFR_StyleComboGalleryCtrl_V14::GetSelectedItem);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRStyleComboGalleryCtrlSEL, FRStyleComboGalleryCtrlSelectItemSEL, (void*)CFR_StyleComboGalleryCtrl_V14::SelectItem);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRStyleComboGalleryCtrlSEL, FRStyleComboGalleryCtrlGetItemTextSEL, (void*)CFR_StyleComboGalleryCtrl_V14::GetItemText);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRStyleComboGalleryCtrlSEL, FRStyleComboGalleryCtrlSetAppearanceSEL, (void*)CFR_StyleComboGalleryCtrl_V14::SetAppearance);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRStyleComboGalleryCtrlSEL, FRStyleComboGalleryCtrlSetIconsInRowSEL, (void*)CFR_StyleComboGalleryCtrl_V14::SetIconsInRow);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRStyleComboGalleryCtrlSEL, FRStyleComboGalleryCtrlSetComboModeSEL, (void*)CFR_StyleComboGalleryCtrl_V14::SetComboMode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRStyleComboGalleryCtrlSEL, FRStyleComboGalleryCtrlSetImageSEL, (void*)CFR_StyleComboGalleryCtrl_V14::SetImage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRStyleComboGalleryCtrlSEL, FRStyleComboGalleryCtrlSetAlignStyleSEL, (void*)CFR_StyleComboGalleryCtrl_V14::SetAlignStyle);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRStyleComboGalleryCtrlSEL, FRStyleComboGalleryCtrlSetImageSideSEL, (void*)CFR_StyleComboGalleryCtrl_V14::SetImageSide);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRStyleComboGalleryCtrlSEL, FRStyleComboGalleryCtrlSetVertMarginSEL, (void*)CFR_StyleComboGalleryCtrl_V14::SetVertMargin);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRStyleComboGalleryCtrlSEL, FRStyleComboGalleryCtrlSetImage3SEL, (void*)CFR_StyleComboGalleryCtrl_V14::SetImage3);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRStyleComboGalleryCtrlSEL, FRStyleComboGalleryCtrlSetDescriptionSEL, (void*)CFR_StyleComboGalleryCtrl_V14::SetDescription);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRStyleComboGalleryCtrlSEL, FRStyleComboGalleryCtrlEnableHelpLinkSEL, (void*)CFR_StyleComboGalleryCtrl_V14::EnableHelpLink);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRStyleComboGalleryCtrlSEL, FRStyleComboGalleryCtrlSetTooltipSEL, (void*)CFR_StyleComboGalleryCtrl_V14::SetTooltip);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRStyleComboGalleryCtrlSEL, FRStyleComboGalleryCtrlDisableHighContrastThemeImageSEL, (void*)CFR_StyleComboGalleryCtrl_V14::DisableHighContrastThemeImage);
	}
};

class CFR_StyleMenuButton_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRStyleMenuButtonSEL, FRStyleMenuButtonGetButtonSEL, (void*)CFR_StyleMenuButton_V14::GetButton);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRStyleMenuButtonSEL, FRStyleMenuButtonReleaseSEL, (void*)CFR_StyleMenuButton_V14::Release);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRStyleMenuButtonSEL, FRStyleMenuButtonSetMenuSEL, (void*)CFR_StyleMenuButton_V14::SetMenu);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRStyleMenuButtonSEL, FRStyleMenuButtonSetDefaultClickSEL, (void*)CFR_StyleMenuButton_V14::SetDefaultClick);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRStyleMenuButtonSEL, FRStyleMenuButtonGetMenuResultSEL, (void*)CFR_StyleMenuButton_V14::GetMenuResult);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRStyleMenuButtonSEL, FRStyleMenuButtonSetImageSEL, (void*)CFR_StyleMenuButton_V14::SetImage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRStyleMenuButtonSEL, FRStyleMenuButtonSetImage2SEL, (void*)CFR_StyleMenuButton_V14::SetImage2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRStyleMenuButtonSEL, FRStyleMenuButtonSetAlignStyleSEL, (void*)CFR_StyleMenuButton_V14::SetAlignStyle);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRStyleMenuButtonSEL, FRStyleMenuButtonSetImageSideSEL, (void*)CFR_StyleMenuButton_V14::SetImageSide);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRStyleMenuButtonSEL, FRStyleMenuButtonSetFlatStyleSEL, (void*)CFR_StyleMenuButton_V14::SetFlatStyle);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRStyleMenuButtonSEL, FRStyleMenuButtonSetVertMarginSEL, (void*)CFR_StyleMenuButton_V14::SetVertMargin);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRStyleMenuButtonSEL, FRStyleMenuButtonEnablePopupWndSEL, (void*)CFR_StyleMenuButton_V14::EnablePopupWnd);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRStyleMenuButtonSEL, FRStyleMenuButtonSetDropdownProcSEL, (void*)CFR_StyleMenuButton_V14::SetDropdownProc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRStyleMenuButtonSEL, FRStyleMenuButtonSetAppearanceSEL, (void*)CFR_StyleMenuButton_V14::SetAppearance);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRStyleMenuButtonSEL, FRStyleMenuButtonSetTooltipSEL, (void*)CFR_StyleMenuButton_V14::SetTooltip);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRStyleMenuButtonSEL, FRStyleMenuButtonSetDescriptionSEL, (void*)CFR_StyleMenuButton_V14::SetDescription);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRStyleMenuButtonSEL, FRStyleMenuButtonEnableHelpLinkSEL, (void*)CFR_StyleMenuButton_V14::EnableHelpLink);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRStyleMenuButtonSEL, FRStyleMenuButtonSetMenu2SEL, (void*)CFR_StyleMenuButton_V14::SetMenu2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRStyleMenuButtonSEL, FRStyleMenuButtonSetRoundRadiusSEL, (void*)CFR_StyleMenuButton_V14::SetRoundRadius);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRStyleMenuButtonSEL, FRStyleMenuButtonSetDefaultStyleSEL, (void*)CFR_StyleMenuButton_V14::SetDefaultStyle);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRStyleMenuButtonSEL, FRStyleMenuButtonDisableHighContrastThemeImageSEL, (void*)CFR_StyleMenuButton_V14::DisableHighContrastThemeImage);
	}
};

class CFR_CommonControl_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCommonControlSEL, FRCommonControlAddMenuItemSEL, (void*)CFR_CommonControl_V14::AddMenuItem);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCommonControlSEL, FRCommonControlSetExecuteProcSEL, (void*)CFR_CommonControl_V14::SetExecuteProc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCommonControlSEL, FRCommonControlSetComputeEnabledProcSEL, (void*)CFR_CommonControl_V14::SetComputeEnabledProc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCommonControlSEL, FRCommonControlSetAppearanceSettingProcSEL, (void*)CFR_CommonControl_V14::SetAppearanceSettingProc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCommonControlSEL, FRCommonControlDoExecuteProcSEL, (void*)CFR_CommonControl_V14::DoExecuteProc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCommonControlSEL, FRCommonControlIsEnabledSEL, (void*)CFR_CommonControl_V14::IsEnabled);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCommonControlSEL, FRCommonControlSetAccelSEL, (void*)CFR_CommonControl_V14::SetAccel);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCommonControlSEL, FRCommonControlGetAccelSEL, (void*)CFR_CommonControl_V14::GetAccel);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCommonControlSEL, FRCommonControlSetTooltipSEL, (void*)CFR_CommonControl_V14::SetTooltip);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCommonControlSEL, FRCommonControlGetTooltipSEL, (void*)CFR_CommonControl_V14::GetTooltip);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCommonControlSEL, FRCommonControlSetTitleSEL, (void*)CFR_CommonControl_V14::SetTitle);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCommonControlSEL, FRCommonControlGetTitleSEL, (void*)CFR_CommonControl_V14::GetTitle);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCommonControlSEL, FRCommonControlSetImageSEL, (void*)CFR_CommonControl_V14::SetImage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCommonControlSEL, FRCommonControlSetVisibleSEL, (void*)CFR_CommonControl_V14::SetVisible);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCommonControlSEL, FRCommonControlGetVisibleSEL, (void*)CFR_CommonControl_V14::GetVisible);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCommonControlSEL, FRCommonControlGetTypeSEL, (void*)CFR_CommonControl_V14::GetType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCommonControlSEL, FRCommonControlGetNameSEL, (void*)CFR_CommonControl_V14::GetName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCommonControlSEL, FRCommonControlGetMenuItemCountSEL, (void*)CFR_CommonControl_V14::GetMenuItemCount);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCommonControlSEL, FRCommonControlFindMenuItemByIndexSEL, (void*)CFR_CommonControl_V14::FindMenuItemByIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCommonControlSEL, FRCommonControlGetMenuItemByNameSEL, (void*)CFR_CommonControl_V14::GetMenuItemByName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCommonControlSEL, FRCommonControlGetCategoryNameSEL, (void*)CFR_CommonControl_V14::GetCategoryName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCommonControlSEL, FRCommonControlGetPanelNameSEL, (void*)CFR_CommonControl_V14::GetPanelName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCommonControlSEL, FRCommonControlIsCheckedSEL, (void*)CFR_CommonControl_V14::IsChecked);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCommonControlSEL, FRCommonControlSetCheckSEL, (void*)CFR_CommonControl_V14::SetCheck);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCommonControlSEL, FRCommonControlSetClientDataSEL, (void*)CFR_CommonControl_V14::SetClientData);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCommonControlSEL, FRCommonControlSetDropDownAddElementProcSEL, (void*)CFR_CommonControl_V14::SetDropDownAddElementProc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCommonControlSEL, FRCommonControlSetTooltipHasHelpSEL, (void*)CFR_CommonControl_V14::SetTooltipHasHelp);
	}
};

// fr_barImpl.h end

// In file fr_docImpl.h
class CFR_UndoItemCreateWidget_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRUndoItemCreateWidgetSEL, FRUndoItemCreateWidgetCreateUndoWidgetSEL, (void*)CFR_UndoItemCreateWidget_V14::CreateUndoWidget);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRUndoItemCreateWidgetSEL, FRUndoItemCreateWidgetUndoSEL, (void*)CFR_UndoItemCreateWidget_V14::Undo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRUndoItemCreateWidgetSEL, FRUndoItemCreateWidgetRedoSEL, (void*)CFR_UndoItemCreateWidget_V14::Redo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRUndoItemCreateWidgetSEL, FRUndoItemCreateWidgetGetDescrSEL, (void*)CFR_UndoItemCreateWidget_V14::GetDescr);
	}
};

class CFR_CRSAStamp_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCRSAStampSEL, FRCRSAStampNewSEL, (void*)CFR_CRSAStamp_V14::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCRSAStampSEL, FRCRSAStampDestroySEL, (void*)CFR_CRSAStamp_V14::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCRSAStampSEL, FRCRSAStampGetLeftValueSEL, (void*)CFR_CRSAStamp_V14::GetLeftValue);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCRSAStampSEL, FRCRSAStampGetTopValueSEL, (void*)CFR_CRSAStamp_V14::GetTopValue);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCRSAStampSEL, FRCRSAStampGetDefaultCropWValueSEL, (void*)CFR_CRSAStamp_V14::GetDefaultCropWValue);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCRSAStampSEL, FRCRSAStampSetDefaultCropWValueSEL, (void*)CFR_CRSAStamp_V14::SetDefaultCropWValue);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCRSAStampSEL, FRCRSAStampGetDefaultCropHValueSEL, (void*)CFR_CRSAStamp_V14::GetDefaultCropHValue);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCRSAStampSEL, FRCRSAStampSetDefaultCropHValueSEL, (void*)CFR_CRSAStamp_V14::SetDefaultCropHValue);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCRSAStampSEL, FRCRSAStampGetDefaultWValueSEL, (void*)CFR_CRSAStamp_V14::GetDefaultWValue);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCRSAStampSEL, FRCRSAStampSetDefaultWValueSEL, (void*)CFR_CRSAStamp_V14::SetDefaultWValue);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCRSAStampSEL, FRCRSAStampGetDefaultHValueSEL, (void*)CFR_CRSAStamp_V14::GetDefaultHValue);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCRSAStampSEL, FRCRSAStampSetDefaultHValueSEL, (void*)CFR_CRSAStamp_V14::SetDefaultHValue);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCRSAStampSEL, FRCRSAStampGetWidthValueSEL, (void*)CFR_CRSAStamp_V14::GetWidthValue);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCRSAStampSEL, FRCRSAStampSetWidthValueSEL, (void*)CFR_CRSAStamp_V14::SetWidthValue);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCRSAStampSEL, FRCRSAStampGetHeightValueSEL, (void*)CFR_CRSAStamp_V14::GetHeightValue);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCRSAStampSEL, FRCRSAStampSetHeightValueSEL, (void*)CFR_CRSAStamp_V14::SetHeightValue);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCRSAStampSEL, FRCRSAStampIsPathSEL, (void*)CFR_CRSAStamp_V14::IsPath);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCRSAStampSEL, FRCRSAStampSetPathSEL, (void*)CFR_CRSAStamp_V14::SetPath);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCRSAStampSEL, FRCRSAStampGetDIBitmapSEL, (void*)CFR_CRSAStamp_V14::GetDIBitmap);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCRSAStampSEL, FRCRSAStampSetDIBitmapSEL, (void*)CFR_CRSAStamp_V14::SetDIBitmap);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCRSAStampSEL, FRCRSAStampIsPDFSignStampSEL, (void*)CFR_CRSAStamp_V14::IsPDFSignStamp);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCRSAStampSEL, FRCRSAStampGetPDFPathSEL, (void*)CFR_CRSAStamp_V14::GetPDFPath);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCRSAStampSEL, FRCRSAStampIsDynamicSEL, (void*)CFR_CRSAStamp_V14::IsDynamic);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCRSAStampSEL, FRCRSAStampGetEncodeSEL, (void*)CFR_CRSAStamp_V14::GetEncode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCRSAStampSEL, FRCRSAStampGetStampTypeSEL, (void*)CFR_CRSAStamp_V14::GetStampType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCRSAStampSEL, FRCRSAStampSetPageIdxSEL, (void*)CFR_CRSAStamp_V14::SetPageIdx);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCRSAStampSEL, FRCRSAStampGetPageIdxSEL, (void*)CFR_CRSAStamp_V14::GetPageIdx);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCRSAStampSEL, FRCRSAStampPreViewArtBoxFileSEL, (void*)CFR_CRSAStamp_V14::PreViewArtBoxFile);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCRSAStampSEL, FRCRSAStampGetStampNameSEL, (void*)CFR_CRSAStamp_V14::GetStampName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCRSAStampSEL, FRCRSAStampIsFavoriteSEL, (void*)CFR_CRSAStamp_V14::IsFavorite);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCRSAStampSEL, FRCRSAStampSetPagePieceInfoSEL, (void*)CFR_CRSAStamp_V14::SetPagePieceInfo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCRSAStampSEL, FRCRSAStampSetPagePieceInfoByDocSEL, (void*)CFR_CRSAStamp_V14::SetPagePieceInfoByDoc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCRSAStampSEL, FRCRSAStampGetIsRotateSEL, (void*)CFR_CRSAStamp_V14::GetIsRotate);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCRSAStampSEL, FRCRSAStampRemovePageSEL, (void*)CFR_CRSAStamp_V14::RemovePage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCRSAStampSEL, FRCRSAStampCopySEL, (void*)CFR_CRSAStamp_V14::Copy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCRSAStampSEL, FRCRSAStampGetPageFromNameSEL, (void*)CFR_CRSAStamp_V14::GetPageFromName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCRSAStampSEL, FRCRSAStampSetStampNameSEL, (void*)CFR_CRSAStamp_V14::SetStampName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCRSAStampSEL, FRCRSAStampSetPDFPathSEL, (void*)CFR_CRSAStamp_V14::SetPDFPath);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCRSAStampSEL, FRCRSAStampSetAppCloseDeleteSEL, (void*)CFR_CRSAStamp_V14::SetAppCloseDelete);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCRSAStampSEL, FRCRSAStampSetTypeSEL, (void*)CFR_CRSAStamp_V14::SetType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCRSAStampSEL, FRCRSAStampSetEncodeSEL, (void*)CFR_CRSAStamp_V14::SetEncode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCRSAStampSEL, FRCRSAStampSetSignListIdxSEL, (void*)CFR_CRSAStamp_V14::SetSignListIdx);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCRSAStampSEL, FRCRSAStampGetPDFStampSEL, (void*)CFR_CRSAStamp_V14::GetPDFStamp);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCRSAStampSEL, FRCRSAStampSaveStampToPageSEL, (void*)CFR_CRSAStamp_V14::SaveStampToPage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCRSAStampSEL, FRCRSAStampGetSampInfoDicSEL, (void*)CFR_CRSAStamp_V14::GetSampInfoDic);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCRSAStampSEL, FRCRSAStampAddPageNameSEL, (void*)CFR_CRSAStamp_V14::AddPageName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCRSAStampSEL, FRCRSAStampSetLeftValueSEL, (void*)CFR_CRSAStamp_V14::SetLeftValue);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCRSAStampSEL, FRCRSAStampSetTopValueSEL, (void*)CFR_CRSAStamp_V14::SetTopValue);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCRSAStampSEL, FRCRSAStampSetDynamicSEL, (void*)CFR_CRSAStamp_V14::SetDynamic);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCRSAStampSEL, FRCRSAStampSetFavoriteSEL, (void*)CFR_CRSAStamp_V14::SetFavorite);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCRSAStampSEL, FRCRSAStampGetTypeSEL, (void*)CFR_CRSAStamp_V14::GetType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCRSAStampSEL, FRCRSAStampSetIsRotateSEL, (void*)CFR_CRSAStamp_V14::SetIsRotate);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCRSAStampSEL, FRCRSAStampCheckPDFPermissionSEL, (void*)CFR_CRSAStamp_V14::CheckPDFPermission);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCRSAStampSEL, FRCRSAStampFSFadeOutImageBackgroundSEL, (void*)CFR_CRSAStamp_V14::FSFadeOutImageBackground);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCRSAStampSEL, FRCRSAStampSetTipSEL, (void*)CFR_CRSAStamp_V14::SetTip);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCRSAStampSEL, FRCRSAStampSetTemplateNameSEL, (void*)CFR_CRSAStamp_V14::SetTemplateName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCRSAStampSEL, FRCRSAStampSetThumbNailSEL, (void*)CFR_CRSAStamp_V14::SetThumbNail);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCRSAStampSEL, FRCRSAStampSetCanParserSEL, (void*)CFR_CRSAStamp_V14::SetCanParser);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCRSAStampSEL, FRCRSAStampSetImageSEL, (void*)CFR_CRSAStamp_V14::SetImage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCRSAStampSEL, FRCRSAStampSetOpacitySEL, (void*)CFR_CRSAStamp_V14::SetOpacity);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCRSAStampSEL, FRCRSAStampGetSignFilePwdSEL, (void*)CFR_CRSAStamp_V14::GetSignFilePwd);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCRSAStampSEL, FRCRSAStampGetStampFormPageSEL, (void*)CFR_CRSAStamp_V14::GetStampFormPage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCRSAStampSEL, FRCRSAStampSaveStampToPage2SEL, (void*)CFR_CRSAStamp_V14::SaveStampToPage2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCRSAStampSEL, FRCRSAStampGetSignListIdxSEL, (void*)CFR_CRSAStamp_V14::GetSignListIdx);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCRSAStampSEL, FRCRSAStampSetStampGuidSEL, (void*)CFR_CRSAStamp_V14::SetStampGuid);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCRSAStampSEL, FRCRSAStampGetStampGuidSEL, (void*)CFR_CRSAStamp_V14::GetStampGuid);
	}
};

class CFR_MarkupAnnot_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMarkupAnnotSEL, FRMarkupAnnotCreateSEL, (void*)CFR_MarkupAnnot_V14::Create);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMarkupAnnotSEL, FRMarkupAnnotDestroySEL, (void*)CFR_MarkupAnnot_V14::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMarkupAnnotSEL, FRMarkupAnnotIsGroupSEL, (void*)CFR_MarkupAnnot_V14::IsGroup);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMarkupAnnotSEL, FRMarkupAnnotIsHeaderSEL, (void*)CFR_MarkupAnnot_V14::IsHeader);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMarkupAnnotSEL, FRMarkupAnnotGetPopupSEL, (void*)CFR_MarkupAnnot_V14::GetPopup);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMarkupAnnotSEL, FRMarkupAnnotResetAppearanceSEL, (void*)CFR_MarkupAnnot_V14::ResetAppearance);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMarkupAnnotSEL, FRMarkupAnnotSetModifiedDateTimeSEL, (void*)CFR_MarkupAnnot_V14::SetModifiedDateTime);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMarkupAnnotSEL, FRMarkupAnnotGetModifiedDateTimeSEL, (void*)CFR_MarkupAnnot_V14::GetModifiedDateTime);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMarkupAnnotSEL, FRMarkupAnnotGetHotPointSEL, (void*)CFR_MarkupAnnot_V14::GetHotPoint);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMarkupAnnotSEL, FRMarkupAnnotGetColorSEL, (void*)CFR_MarkupAnnot_V14::GetColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMarkupAnnotSEL, FRMarkupAnnotMovedOutPageSEL, (void*)CFR_MarkupAnnot_V14::MovedOutPage);
	}
};

class CFR_MarkupPopup_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMarkupPopupSEL, FRMarkupPopupUpdateDataTimeSEL, (void*)CFR_MarkupPopup_V14::UpdateDataTime);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMarkupPopupSEL, FRMarkupPopupSetNoteAnchorSEL, (void*)CFR_MarkupPopup_V14::SetNoteAnchor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMarkupPopupSEL, FRMarkupPopupShowRopeSEL, (void*)CFR_MarkupPopup_V14::ShowRope);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMarkupPopupSEL, FRMarkupPopupIsNoteVisibleSEL, (void*)CFR_MarkupPopup_V14::IsNoteVisible);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMarkupPopupSEL, FRMarkupPopupUpdateNoteSEL, (void*)CFR_MarkupPopup_V14::UpdateNote);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMarkupPopupSEL, FRMarkupPopupResetNotePositionSEL, (void*)CFR_MarkupPopup_V14::ResetNotePosition);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMarkupPopupSEL, FRMarkupPopupGetPopupAnnotSEL, (void*)CFR_MarkupPopup_V14::GetPopupAnnot);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMarkupPopupSEL, FRMarkupPopupGetRectSEL, (void*)CFR_MarkupPopup_V14::GetRect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMarkupPopupSEL, FRMarkupPopupSetStateSEL, (void*)CFR_MarkupPopup_V14::SetState);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMarkupPopupSEL, FRMarkupPopupShowNoteSEL, (void*)CFR_MarkupPopup_V14::ShowNote);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMarkupPopupSEL, FRMarkupPopupSetNoteFocusSEL, (void*)CFR_MarkupPopup_V14::SetNoteFocus);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMarkupPopupSEL, FRMarkupPopupAddReplySEL, (void*)CFR_MarkupPopup_V14::AddReply);
	}
};

class CFR_MarkupPanel_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMarkupPanelSEL, FRMarkupPanelGetMarkupPanelSEL, (void*)CFR_MarkupPanel_V14::GetMarkupPanel);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMarkupPanelSEL, FRMarkupPanelRefreshAnnotSEL, (void*)CFR_MarkupPanel_V14::RefreshAnnot);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMarkupPanelSEL, FRMarkupPanelReloadAnnotsSEL, (void*)CFR_MarkupPanel_V14::ReloadAnnots);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMarkupPanelSEL, FRMarkupPanelAddAnnotSEL, (void*)CFR_MarkupPanel_V14::AddAnnot);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMarkupPanelSEL, FRMarkupPanelSetFocusSEL, (void*)CFR_MarkupPanel_V14::SetFocus);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMarkupPanelSEL, FRMarkupPanelUpdatePropertyBoxSEL, (void*)CFR_MarkupPanel_V14::UpdatePropertyBox);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMarkupPanelSEL, FRMarkupPanelAddToCreateListSEL, (void*)CFR_MarkupPanel_V14::AddToCreateList);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMarkupPanelSEL, FRMarkupPanelHideHintSEL, (void*)CFR_MarkupPanel_V14::HideHint);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMarkupPanelSEL, FRMarkupPanelRemoveAnnotSEL, (void*)CFR_MarkupPanel_V14::RemoveAnnot);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMarkupPanelSEL, FRMarkupPanelShowAnnotSEL, (void*)CFR_MarkupPanel_V14::ShowAnnot);
	}
};

class CFR_CRSASStampAnnot_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCRSASStampAnnotSEL, FRCRSASStampAnnotNewSEL, (void*)CFR_CRSASStampAnnot_V14::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCRSASStampAnnotSEL, FRCRSASStampAnnotDestroySEL, (void*)CFR_CRSASStampAnnot_V14::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCRSASStampAnnotSEL, FRCRSASStampAnnotSetStampSEL, (void*)CFR_CRSASStampAnnot_V14::SetStamp);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCRSASStampAnnotSEL, FRCRSASStampAnnotAfterMovePagesSEL, (void*)CFR_CRSASStampAnnot_V14::AfterMovePages);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCRSASStampAnnotSEL, FRCRSASStampAnnotResetAppearanceSEL, (void*)CFR_CRSASStampAnnot_V14::ResetAppearance);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCRSASStampAnnotSEL, FRCRSASStampAnnotSetColorSEL, (void*)CFR_CRSASStampAnnot_V14::SetColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCRSASStampAnnotSEL, FRCRSASStampAnnotSetOpacitySEL, (void*)CFR_CRSASStampAnnot_V14::SetOpacity);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCRSASStampAnnotSEL, FRCRSASStampAnnotSetCreationDateTimeSEL, (void*)CFR_CRSASStampAnnot_V14::SetCreationDateTime);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCRSASStampAnnotSEL, FRCRSASStampAnnotGetModifiedDateTimeSEL, (void*)CFR_CRSASStampAnnot_V14::GetModifiedDateTime);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCRSASStampAnnotSEL, FRCRSASStampAnnotGetPopupSEL, (void*)CFR_CRSASStampAnnot_V14::GetPopup);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCRSASStampAnnotSEL, FRCRSASStampAnnotGetHotPointSEL, (void*)CFR_CRSASStampAnnot_V14::GetHotPoint);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCRSASStampAnnotSEL, FRCRSASStampAnnotGetTypeSEL, (void*)CFR_CRSASStampAnnot_V14::GetType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCRSASStampAnnotSEL, FRCRSASStampAnnotIsGroupSEL, (void*)CFR_CRSASStampAnnot_V14::IsGroup);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCRSASStampAnnotSEL, FRCRSASStampAnnotIsHeaderSEL, (void*)CFR_CRSASStampAnnot_V14::IsHeader);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCRSASStampAnnotSEL, FRCRSASStampAnnotSetModifiedDateTimeSEL, (void*)CFR_CRSASStampAnnot_V14::SetModifiedDateTime);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCRSASStampAnnotSEL, FRCRSASStampAnnotGetColorSEL, (void*)CFR_CRSASStampAnnot_V14::GetColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCRSASStampAnnotSEL, FRCRSASStampAnnotGetReaderPageSEL, (void*)CFR_CRSASStampAnnot_V14::GetReaderPage);
	}
};

class CFR_EncryptPermisson_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FREncryptPermissonSEL, FREncryptPermissonCreateEncryptPermissonSEL, (void*)CFR_EncryptPermisson_V14::CreateEncryptPermisson);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FREncryptPermissonSEL, FREncryptPermissonSetEncryptPermissonSEL, (void*)CFR_EncryptPermisson_V14::SetEncryptPermisson);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FREncryptPermissonSEL, FREncryptPermissonGetEncryptPermissonSEL, (void*)CFR_EncryptPermisson_V14::GetEncryptPermisson);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FREncryptPermissonSEL, FREncryptPermissonGetPropertyPermissonSEL, (void*)CFR_EncryptPermisson_V14::GetPropertyPermisson);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FREncryptPermissonSEL, FREncryptPermissonGetAllPermissionSEL, (void*)CFR_EncryptPermisson_V14::GetAllPermission);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FREncryptPermissonSEL, FREncryptPermissonDeleteEncryptPermissionSEL, (void*)CFR_EncryptPermisson_V14::DeleteEncryptPermission);
	}
};

class CFR_CSGCertFileManage_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCSGCertFileManageSEL, FRCSGCertFileManageCreateCertFileManageSEL, (void*)CFR_CSGCertFileManage_V14::CreateCertFileManage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCSGCertFileManageSEL, FRCSGCertFileManageDestroySEL, (void*)CFR_CSGCertFileManage_V14::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCSGCertFileManageSEL, FRCSGCertFileManageGetCertFileStorePathSEL, (void*)CFR_CSGCertFileManage_V14::GetCertFileStorePath);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCSGCertFileManageSEL, FRCSGCertFileManageNewCertDataSEL, (void*)CFR_CSGCertFileManage_V14::NewCertData);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCSGCertFileManageSEL, FRCSGCertFileManageLoadStoreSEL, (void*)CFR_CSGCertFileManage_V14::LoadStore);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCSGCertFileManageSEL, FRCSGCertFileManageGetPathAndPasswordSEL, (void*)CFR_CSGCertFileManage_V14::GetPathAndPassword);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCSGCertFileManageSEL, FRCSGCertFileManageUpdateFileSEL, (void*)CFR_CSGCertFileManage_V14::UpdateFile);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCSGCertFileManageSEL, FRCSGCertFileManageBase64ToStringSEL, (void*)CFR_CSGCertFileManage_V14::Base64ToString);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCSGCertFileManageSEL, FRCSGCertFileManageStringToBase64SEL, (void*)CFR_CSGCertFileManage_V14::StringToBase64);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCSGCertFileManageSEL, FRCSGCertFileManageReloadAllFileSEL, (void*)CFR_CSGCertFileManage_V14::ReloadAllFile);
	}
};

class CFR_CSG_CreateCert_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCSGSEL, FRCSGCreateSEL, (void*)CFR_CSG_CreateCert_V14::Create);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCSGSEL, FRCSGDestroySEL, (void*)CFR_CSG_CreateCert_V14::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCSGSEL, FRCSGCreateCertSEL, (void*)CFR_CSG_CreateCert_V14::CreateCert);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCSGSEL, FRCSGGetTmpNameSEL, (void*)CFR_CSG_CreateCert_V14::GetTmpName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCSGSEL, FRCSGOpenPFXStoreSEL, (void*)CFR_CSG_CreateCert_V14::OpenPFXStore);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCSGSEL, FRCSGCreateOpenSSLCertSEL, (void*)CFR_CSG_CreateCert_V14::CreateOpenSSLCert);
	}
};

class CFR_Page_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPageSEL, FRPageGetDocumentSEL, (void*)CFR_Page_V14::GetDocument);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPageSEL, FRPageGetPageSEL, (void*)CFR_Page_V14::GetPage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPageSEL, FRPageParsePageSEL, (void*)CFR_Page_V14::ParsePage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPageSEL, FRPageGetDynPDFPageSEL, (void*)CFR_Page_V14::GetDynPDFPage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPageSEL, FRPageGetPageIndexSEL, (void*)CFR_Page_V14::GetPageIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPageSEL, FRPageIsPDFPageLoadedSEL, (void*)CFR_Page_V14::IsPDFPageLoaded);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPageSEL, FRPageAddAnnotSEL, (void*)CFR_Page_V14::AddAnnot);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPageSEL, FRPageAddAnnot2SEL, (void*)CFR_Page_V14::AddAnnot2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPageSEL, FRPageAddAnnot3SEL, (void*)CFR_Page_V14::AddAnnot3);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPageSEL, FRPageAddDynXFAPDFAnnotSEL, (void*)CFR_Page_V14::AddDynXFAPDFAnnot);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPageSEL, FRPageDeleteAnnotSEL, (void*)CFR_Page_V14::DeleteAnnot);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPageSEL, FRPageMoveAnnotSEL, (void*)CFR_Page_V14::MoveAnnot);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPageSEL, FRPageCountAnnotsSEL, (void*)CFR_Page_V14::CountAnnots);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPageSEL, FRPageGetAnnotSEL, (void*)CFR_Page_V14::GetAnnot);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPageSEL, FRPageGetAnnotByDictSEL, (void*)CFR_Page_V14::GetAnnotByDict);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPageSEL, FRPageIsValidAnnotSEL, (void*)CFR_Page_V14::IsValidAnnot);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPageSEL, FRPageGetAnnotDataListSEL, (void*)CFR_Page_V14::GetAnnotDataList);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPageSEL, FRPageGetAnnotListSEL, (void*)CFR_Page_V14::GetAnnotList);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPageSEL, FRPageGetFocusAnnotSEL, (void*)CFR_Page_V14::GetFocusAnnot);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPageSEL, FRPageSetFocusAnnotSEL, (void*)CFR_Page_V14::SetFocusAnnot);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPageSEL, FRPageGetPageFirstAnnotSEL, (void*)CFR_Page_V14::GetPageFirstAnnot);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPageSEL, FRPageGetPageLastAnnotSEL, (void*)CFR_Page_V14::GetPageLastAnnot);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPageSEL, FRPageGetPagePriorAnnotSEL, (void*)CFR_Page_V14::GetPagePriorAnnot);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPageSEL, FRPageGetPageNextAnnotSEL, (void*)CFR_Page_V14::GetPageNextAnnot);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPageSEL, FRPageCountViewsSEL, (void*)CFR_Page_V14::CountViews);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPageSEL, FRPageGetViewSEL, (void*)CFR_Page_V14::GetView);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPageSEL, FRPageIsValidViewSEL, (void*)CFR_Page_V14::IsValidView);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPageSEL, FRPageGetView2SEL, (void*)CFR_Page_V14::GetView2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPageSEL, FRPageUpdateAllViewsSEL, (void*)CFR_Page_V14::UpdateAllViews);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPageSEL, FRPageUpdateViewSEL, (void*)CFR_Page_V14::UpdateView);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPageSEL, FRPageUpdateAllViews2SEL, (void*)CFR_Page_V14::UpdateAllViews2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPageSEL, FRPageLockPageSEL, (void*)CFR_Page_V14::LockPage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPageSEL, FRPageUnLockPageSEL, (void*)CFR_Page_V14::UnLockPage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPageSEL, FRPageIsLockedSEL, (void*)CFR_Page_V14::IsLocked);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPageSEL, FRPageIsParsedSEL, (void*)CFR_Page_V14::IsParsed);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPageSEL, FRPageGetPageTabOrderSEL, (void*)CFR_Page_V14::GetPageTabOrder);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPageSEL, FRPageSetPageTabOrderSEL, (void*)CFR_Page_V14::SetPageTabOrder);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPageSEL, FRPageInsertWidgetTabOrderSEL, (void*)CFR_Page_V14::InsertWidgetTabOrder);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPageSEL, FRPageSetContentModificationSEL, (void*)CFR_Page_V14::SetContentModification);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPageSEL, FRPageGenerateContentSEL, (void*)CFR_Page_V14::GenerateContent);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPageSEL, FRPageGetXFAPageSEL, (void*)CFR_Page_V14::GetXFAPage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPageSEL, FRPageGetAnnotByXFAWidgetSEL, (void*)CFR_Page_V14::GetAnnotByXFAWidget);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPageSEL, FRPageRefreshXFAPageViewSEL, (void*)CFR_Page_V14::RefreshXFAPageView);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPageSEL, FRPageSetMergeTextFlagSEL, (void*)CFR_Page_V14::SetMergeTextFlag);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPageSEL, FRPageClearContentModificationSEL, (void*)CFR_Page_V14::ClearContentModification);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPageSEL, FRPageResetPageAnnotsSEL, (void*)CFR_Page_V14::ResetPageAnnots);
	}
};

class CFR_IBAAnnotFiller_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRIBAAnnotFillerSEL, FRIBAAnnotFillerNewSEL, (void*)CFR_IBAAnnotFiller_V14::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRIBAAnnotFillerSEL, FRIBAAnnotFillerDestroySEL, (void*)CFR_IBAAnnotFiller_V14::Destroy);
	}
};

class CFR_IBAAnnotDesigner_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRIBAAnnotDesignerSEL, FRIBAAnnotDesignerNewSEL, (void*)CFR_IBAAnnotDesigner_V14::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRIBAAnnotDesignerSEL, FRIBAAnnotDesignerDestroySEL, (void*)CFR_IBAAnnotDesigner_V14::Destroy);
	}
};

class CFR_CBFInterForm_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCBFInterFormSEL, FRCBFInterFormGetDocumentSEL, (void*)CFR_CBFInterForm_V14::GetDocument);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCBFInterFormSEL, FRCBFInterFormGetWidgetSEL, (void*)CFR_CBFInterForm_V14::GetWidget);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCBFInterFormSEL, FRCBFInterFormRemoveMapSEL, (void*)CFR_CBFInterForm_V14::RemoveMap);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCBFInterFormSEL, FRCBFInterFormGetReaderInterFormSEL, (void*)CFR_CBFInterForm_V14::GetReaderInterForm);
	}
};

class CFR_BFFormNotify_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRBFFormNotifySEL, FRBFFormNotifyNewSEL, (void*)CFR_BFFormNotify_V14::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRBFFormNotifySEL, FRBFFormNotifyDestroySEL, (void*)CFR_BFFormNotify_V14::Destroy);
	}
};

class CFR_BFAnnotHandler_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRBFAnnotHandlerSEL, FRBFAnnotHandlerNewSEL, (void*)CFR_BFAnnotHandler_V14::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRBFAnnotHandlerSEL, FRBFAnnotHandlerDestroySEL, (void*)CFR_BFAnnotHandler_V14::Destroy);
	}
};

class CFR_BaseForm_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRBaseFormSEL, FRBaseFormGetBaseFormSEL, (void*)CFR_BaseForm_V14::GetBaseForm);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRBaseFormSEL, FRBaseFormBeginTabOrderDesignSEL, (void*)CFR_BaseForm_V14::BeginTabOrderDesign);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRBaseFormSEL, FRBaseFormEndTabOrderDesignSEL, (void*)CFR_BaseForm_V14::EndTabOrderDesign);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRBaseFormSEL, FRBaseFormShowTabOrderSEL, (void*)CFR_BaseForm_V14::ShowTabOrder);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRBaseFormSEL, FRBaseFormSetFormFillerSEL, (void*)CFR_BaseForm_V14::SetFormFiller);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRBaseFormSEL, FRBaseFormSetSignatureFillerSEL, (void*)CFR_BaseForm_V14::SetSignatureFiller);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRBaseFormSEL, FRBaseFormGetFillerByAnnotSEL, (void*)CFR_BaseForm_V14::GetFillerByAnnot);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRBaseFormSEL, FRBaseFormSetFormDesignerSEL, (void*)CFR_BaseForm_V14::SetFormDesigner);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRBaseFormSEL, FRBaseFormSetSignatureHandlerSEL, (void*)CFR_BaseForm_V14::SetSignatureHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRBaseFormSEL, FRBaseFormSetXFASignatureHandlerSEL, (void*)CFR_BaseForm_V14::SetXFASignatureHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRBaseFormSEL, FRBaseFormGetXFASignatureHandlerSEL, (void*)CFR_BaseForm_V14::GetXFASignatureHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRBaseFormSEL, FRBaseFormIsHighLightSEL, (void*)CFR_BaseForm_V14::IsHighLight);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRBaseFormSEL, FRBaseFormSetHighLightSEL, (void*)CFR_BaseForm_V14::SetHighLight);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRBaseFormSEL, FRBaseFormSetHighLightColorSEL, (void*)CFR_BaseForm_V14::SetHighLightColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRBaseFormSEL, FRBaseFormGetHighLightColorSEL, (void*)CFR_BaseForm_V14::GetHighLightColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRBaseFormSEL, FRBaseFormGetRequiredColorSEL, (void*)CFR_BaseForm_V14::GetRequiredColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRBaseFormSEL, FRBaseFormIsFormDesignerAssistEnabledSEL, (void*)CFR_BaseForm_V14::IsFormDesignerAssistEnabled);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRBaseFormSEL, FRBaseFormSetFormDesignerAssistEnabledSEL, (void*)CFR_BaseForm_V14::SetFormDesignerAssistEnabled);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRBaseFormSEL, FRBaseFormGetAutoCompleteChoiceSEL, (void*)CFR_BaseForm_V14::GetAutoCompleteChoice);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRBaseFormSEL, FRBaseFormIsOpenPropertyAfterCreateSEL, (void*)CFR_BaseForm_V14::IsOpenPropertyAfterCreate);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRBaseFormSEL, FRBaseFormShowFocusRectSEL, (void*)CFR_BaseForm_V14::ShowFocusRect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRBaseFormSEL, FRBaseFormShowOverflowIndicatorSEL, (void*)CFR_BaseForm_V14::ShowOverflowIndicator);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRBaseFormSEL, FRBaseFormIsNumericalDataEnableSEL, (void*)CFR_BaseForm_V14::IsNumericalDataEnable);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRBaseFormSEL, FRBaseFormSetFormNotifySEL, (void*)CFR_BaseForm_V14::SetFormNotify);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRBaseFormSEL, FRBaseFormCollectAPStreamRefCountSEL, (void*)CFR_BaseForm_V14::CollectAPStreamRefCount);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRBaseFormSEL, FRBaseFormClearAPStreamRefCountSEL, (void*)CFR_BaseForm_V14::ClearAPStreamRefCount);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRBaseFormSEL, FRBaseFormGetAPStreamRefCountSEL, (void*)CFR_BaseForm_V14::GetAPStreamRefCount);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRBaseFormSEL, FRBaseFormShowSEL, (void*)CFR_BaseForm_V14::Show);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRBaseFormSEL, FRBaseFormSetWidgetMsgHookSEL, (void*)CFR_BaseForm_V14::SetWidgetMsgHook);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRBaseFormSEL, FRBaseFormGetWidgetMsgHookSEL, (void*)CFR_BaseForm_V14::GetWidgetMsgHook);
	}
};

class CFR_IFormDesignerNotify_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRIFormDesignerNotifySEL, FRIFormDesignerNotifyNewSEL, (void*)CFR_IFormDesignerNotify_V14::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRIFormDesignerNotifySEL, FRIFormDesignerNotifyDestroySEL, (void*)CFR_IFormDesignerNotify_V14::Destroy);
	}
};

class CFR_CBFWidget_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCBFWidgetSEL, FRCBFWidgetResetAppearanceSEL, (void*)CFR_CBFWidget_V14::ResetAppearance);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCBFWidgetSEL, FRCBFWidgetIsAppearanceValidSEL, (void*)CFR_CBFWidget_V14::IsAppearanceValid);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCBFWidgetSEL, FRCBFWidgetGetFieldTypeSEL, (void*)CFR_CBFWidget_V14::GetFieldType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCBFWidgetSEL, FRCBFWidgetGetFieldFlagsSEL, (void*)CFR_CBFWidget_V14::GetFieldFlags);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCBFWidgetSEL, FRCBFWidgetGetRotateSEL, (void*)CFR_CBFWidget_V14::GetRotate);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCBFWidgetSEL, FRCBFWidgetGetTextColorSEL, (void*)CFR_CBFWidget_V14::GetTextColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCBFWidgetSEL, FRCBFWidgetGetFontSEL, (void*)CFR_CBFWidget_V14::GetFont);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCBFWidgetSEL, FRCBFWidgetGetBaseFontSEL, (void*)CFR_CBFWidget_V14::GetBaseFont);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCBFWidgetSEL, FRCBFWidgetIsReadOnlySEL, (void*)CFR_CBFWidget_V14::IsReadOnly);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCBFWidgetSEL, FRCBFWidgetIsVisibleSEL, (void*)CFR_CBFWidget_V14::IsVisible);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCBFWidgetSEL, FRCBFWidgetSetRectSEL, (void*)CFR_CBFWidget_V14::SetRect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCBFWidgetSEL, FRCBFWidgetGetRectSEL, (void*)CFR_CBFWidget_V14::GetRect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCBFWidgetSEL, FRCBFWidgetClearCachedAPSEL, (void*)CFR_CBFWidget_V14::ClearCachedAP);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCBFWidgetSEL, FRCBFWidgetDrawAppearanceSEL, (void*)CFR_CBFWidget_V14::DrawAppearance);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCBFWidgetSEL, FRCBFWidgetResetAppearance2SEL, (void*)CFR_CBFWidget_V14::ResetAppearance2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCBFWidgetSEL, FRCBFWidgetHideHintSEL, (void*)CFR_CBFWidget_V14::HideHint);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCBFWidgetSEL, FRCBFWidgetShowHintSEL, (void*)CFR_CBFWidget_V14::ShowHint);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCBFWidgetSEL, FRCBFWidgetGetFormControlSEL, (void*)CFR_CBFWidget_V14::GetFormControl);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCBFWidgetSEL, FRCBFWidgetOnFormatSEL, (void*)CFR_CBFWidget_V14::OnFormat);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCBFWidgetSEL, FRCBFWidgetGetInterFormSEL, (void*)CFR_CBFWidget_V14::GetInterForm);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCBFWidgetSEL, FRCBFWidgetGetAnnotDictSEL, (void*)CFR_CBFWidget_V14::GetAnnotDict);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCBFWidgetSEL, FRCBFWidgetGetNameSEL, (void*)CFR_CBFWidget_V14::GetName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCBFWidgetSEL, FRCBFWidgetSetRotateSEL, (void*)CFR_CBFWidget_V14::SetRotate);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCBFWidgetSEL, FRCBFWidgetGetIReaderAnnotSEL, (void*)CFR_CBFWidget_V14::GetIReaderAnnot);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCBFWidgetSEL, FRCBFWidgetSetNameSEL, (void*)CFR_CBFWidget_V14::SetName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCBFWidgetSEL, FRCBFWidgetHasAActionSEL, (void*)CFR_CBFWidget_V14::HasAAction);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCBFWidgetSEL, FRCBFWidgetOnAActionSEL, (void*)CFR_CBFWidget_V14::OnAAction);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCBFWidgetSEL, FRCBFWidgetDrawShadowSEL, (void*)CFR_CBFWidget_V14::DrawShadow);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCBFWidgetSEL, FRCBFWidgetGetMixXFAWidgetSEL, (void*)CFR_CBFWidget_V14::GetMixXFAWidget);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCBFWidgetSEL, FRCBFWidgetDrawCustomShadowSEL, (void*)CFR_CBFWidget_V14::DrawCustomShadow);
	}
};

class CFR_IBFSimpleFromProperties_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRIBFSimpleFromPropertiesSEL, FRIBFSimpleFromPropertiesIsVisibleSEL, (void*)CFR_IBFSimpleFromProperties_V14::IsVisible);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRIBFSimpleFromPropertiesSEL, FRIBFSimpleFromPropertiesShowSEL, (void*)CFR_IBFSimpleFromProperties_V14::Show);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRIBFSimpleFromPropertiesSEL, FRIBFSimpleFromPropertiesHideSEL, (void*)CFR_IBFSimpleFromProperties_V14::Hide);
	}
};

class CFR_SGRDN_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRSGRDNSEL, FRSGRDNCreateSEL, (void*)CFR_SGRDN_V14::Create);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRSGRDNSEL, FRSGRDNDestroySEL, (void*)CFR_SGRDN_V14::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRSGRDNSEL, FRSGRDNSetcwCSEL, (void*)CFR_SGRDN_V14::SetcwC);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRSGRDNSEL, FRSGRDNGetcwCSEL, (void*)CFR_SGRDN_V14::GetcwC);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRSGRDNSEL, FRSGRDNSetcwCNSEL, (void*)CFR_SGRDN_V14::SetcwCN);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRSGRDNSEL, FRSGRDNGetcwCNSEL, (void*)CFR_SGRDN_V14::GetcwCN);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRSGRDNSEL, FRSGRDNSetcwESEL, (void*)CFR_SGRDN_V14::SetcwE);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRSGRDNSEL, FRSGRDNGetcwESEL, (void*)CFR_SGRDN_V14::GetcwE);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRSGRDNSEL, FRSGRDNSetcwLSEL, (void*)CFR_SGRDN_V14::SetcwL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRSGRDNSEL, FRSGRDNGetcwLSEL, (void*)CFR_SGRDN_V14::GetcwL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRSGRDNSEL, FRSGRDNSetcwOSEL, (void*)CFR_SGRDN_V14::SetcwO);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRSGRDNSEL, FRSGRDNGetcwOSEL, (void*)CFR_SGRDN_V14::GetcwO);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRSGRDNSEL, FRSGRDNSetcwOUSEL, (void*)CFR_SGRDN_V14::SetcwOU);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRSGRDNSEL, FRSGRDNGetcwOUSEL, (void*)CFR_SGRDN_V14::GetcwOU);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRSGRDNSEL, FRSGRDNSetcwSTSEL, (void*)CFR_SGRDN_V14::SetcwST);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRSGRDNSEL, FRSGRDNGetcwSTSEL, (void*)CFR_SGRDN_V14::GetcwST);
	}
};

class CFR_SGCERTIFICATE_INFO_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRSGCERTIFICATESEL, FRSGCERTIFICATECreateSEL, (void*)CFR_SGCERTIFICATE_INFO_V14::Create);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRSGCERTIFICATESEL, FRSGCERTIFICATEDestroySEL, (void*)CFR_SGCERTIFICATE_INFO_V14::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRSGCERTIFICATESEL, FRSGCERTIFICATESetFlagsSEL, (void*)CFR_SGCERTIFICATE_INFO_V14::SetFlags);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRSGCERTIFICATESEL, FRSGCERTIFICATEGetFlagsSEL, (void*)CFR_SGCERTIFICATE_INFO_V14::GetFlags);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRSGCERTIFICATESEL, FRSGCERTIFICATESetIssuersArrSEL, (void*)CFR_SGCERTIFICATE_INFO_V14::SetIssuersArr);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRSGCERTIFICATESEL, FRSGCERTIFICATEGetIssuersArrSEL, (void*)CFR_SGCERTIFICATE_INFO_V14::GetIssuersArr);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRSGCERTIFICATESEL, FRSGCERTIFICATESetKeyUsageArrSEL, (void*)CFR_SGCERTIFICATE_INFO_V14::SetKeyUsageArr);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRSGCERTIFICATESEL, FRSGCERTIFICATEGetKeyUsageArrSEL, (void*)CFR_SGCERTIFICATE_INFO_V14::GetKeyUsageArr);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRSGCERTIFICATESEL, FRSGCERTIFICATESetOidArrSEL, (void*)CFR_SGCERTIFICATE_INFO_V14::SetOidArr);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRSGCERTIFICATESEL, FRSGCERTIFICATEGetOidArrSEL, (void*)CFR_SGCERTIFICATE_INFO_V14::GetOidArr);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRSGCERTIFICATESEL, FRSGCERTIFICATESetSubjectDNArrSEL, (void*)CFR_SGCERTIFICATE_INFO_V14::SetSubjectDNArr);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRSGCERTIFICATESEL, FRSGCERTIFICATEGetSubjectDNArrSEL, (void*)CFR_SGCERTIFICATE_INFO_V14::GetSubjectDNArr);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRSGCERTIFICATESEL, FRSGCERTIFICATESetUrlSEL, (void*)CFR_SGCERTIFICATE_INFO_V14::SetUrl);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRSGCERTIFICATESEL, FRSGCERTIFICATEGetUrlSEL, (void*)CFR_SGCERTIFICATE_INFO_V14::GetUrl);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRSGCERTIFICATESEL, FRSGCERTIFICATESetUrlTypeSEL, (void*)CFR_SGCERTIFICATE_INFO_V14::SetUrlType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRSGCERTIFICATESEL, FRSGCERTIFICATEGetUrlTypeSEL, (void*)CFR_SGCERTIFICATE_INFO_V14::GetUrlType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRSGCERTIFICATESEL, FRSGCERTIFICATESetSubjectArrSEL, (void*)CFR_SGCERTIFICATE_INFO_V14::SetSubjectArr);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRSGCERTIFICATESEL, FRSGCERTIFICATEGetSubjectArrSEL, (void*)CFR_SGCERTIFICATE_INFO_V14::GetSubjectArr);
	}
};

class CFR_SGSEEDVALUE_INFO_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRSGSEEDVALUESEL, FRSGSEEDVALUECreateSEL, (void*)CFR_SGSEEDVALUE_INFO_V14::Create);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRSGSEEDVALUESEL, FRSGSEEDVALUEDestroySEL, (void*)CFR_SGSEEDVALUE_INFO_V14::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRSGSEEDVALUESEL, FRSGSEEDVALUEGetCertInfoSEL, (void*)CFR_SGSEEDVALUE_INFO_V14::GetCertInfo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRSGSEEDVALUESEL, FRSGSEEDVALUESetDigestMethodArrSEL, (void*)CFR_SGSEEDVALUE_INFO_V14::SetDigestMethodArr);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRSGSEEDVALUESEL, FRSGSEEDVALUEGetDigestMethodArrSEL, (void*)CFR_SGSEEDVALUE_INFO_V14::GetDigestMethodArr);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRSGSEEDVALUESEL, FRSGSEEDVALUESetFilterSEL, (void*)CFR_SGSEEDVALUE_INFO_V14::SetFilter);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRSGSEEDVALUESEL, FRSGSEEDVALUEGetFilterSEL, (void*)CFR_SGSEEDVALUE_INFO_V14::GetFilter);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRSGSEEDVALUESEL, FRSGSEEDVALUESetFlagsSEL, (void*)CFR_SGSEEDVALUE_INFO_V14::SetFlags);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRSGSEEDVALUESEL, FRSGSEEDVALUEGetFlagsSEL, (void*)CFR_SGSEEDVALUE_INFO_V14::GetFlags);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRSGSEEDVALUESEL, FRSGSEEDVALUESetlegalAttestationsArrSEL, (void*)CFR_SGSEEDVALUE_INFO_V14::SetlegalAttestationsArr);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRSGSEEDVALUESEL, FRSGSEEDVALUEGetlegalAttestationsArrSEL, (void*)CFR_SGSEEDVALUE_INFO_V14::GetlegalAttestationsArr);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRSGSEEDVALUESEL, FRSGSEEDVALUESetmdpSEL, (void*)CFR_SGSEEDVALUE_INFO_V14::Setmdp);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRSGSEEDVALUESEL, FRSGSEEDVALUEGetmdpSEL, (void*)CFR_SGSEEDVALUE_INFO_V14::Getmdp);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRSGSEEDVALUESEL, FRSGSEEDVALUESetReasonArrSEL, (void*)CFR_SGSEEDVALUE_INFO_V14::SetReasonArr);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRSGSEEDVALUESEL, FRSGSEEDVALUEGetReasonArrSEL, (void*)CFR_SGSEEDVALUE_INFO_V14::GetReasonArr);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRSGSEEDVALUESEL, FRSGSEEDVALUESetbAddRevInfoSEL, (void*)CFR_SGSEEDVALUE_INFO_V14::SetbAddRevInfo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRSGSEEDVALUESEL, FRSGSEEDVALUEGetbAddRevInfoSEL, (void*)CFR_SGSEEDVALUE_INFO_V14::GetbAddRevInfo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRSGSEEDVALUESEL, FRSGSEEDVALUESetSubFilterArrSEL, (void*)CFR_SGSEEDVALUE_INFO_V14::SetSubFilterArr);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRSGSEEDVALUESEL, FRSGSEEDVALUEGetSubFilterArrSEL, (void*)CFR_SGSEEDVALUE_INFO_V14::GetSubFilterArr);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRSGSEEDVALUESEL, FRSGSEEDVALUESetVersionSEL, (void*)CFR_SGSEEDVALUE_INFO_V14::SetVersion);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRSGSEEDVALUESEL, FRSGSEEDVALUEGetVersionSEL, (void*)CFR_SGSEEDVALUE_INFO_V14::GetVersion);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRSGSEEDVALUESEL, FRSGSEEDVALUESettimeStampspecSEL, (void*)CFR_SGSEEDVALUE_INFO_V14::SettimeStampspec);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRSGSEEDVALUESEL, FRSGSEEDVALUEGettimeStampspecSEL, (void*)CFR_SGSEEDVALUE_INFO_V14::GettimeStampspec);
	}
};

class CFR_SGBaseHandler_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRSGBaseHandlerSEL, FRSGBaseHandlerNewSEL, (void*)CFR_SGBaseHandler_V14::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRSGBaseHandlerSEL, FRSGBaseHandlerDestroySEL, (void*)CFR_SGBaseHandler_V14::Destroy);
	}
};

class CFR_IClipBoard_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRIClipBoardSEL, FRIClipBoardGetClipboardSEL, (void*)CFR_IClipBoard_V14::GetClipboard);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRIClipBoardSEL, FRIClipBoardRemoveElementSEL, (void*)CFR_IClipBoard_V14::RemoveElement);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRIClipBoardSEL, FRIClipBoardInitialSEL, (void*)CFR_IClipBoard_V14::Initial);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRIClipBoardSEL, FRIClipBoardReleaseSEL, (void*)CFR_IClipBoard_V14::Release);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRIClipBoardSEL, FRIClipBoardGetElementCountsSEL, (void*)CFR_IClipBoard_V14::GetElementCounts);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRIClipBoardSEL, FRIClipBoardGetElementSEL, (void*)CFR_IClipBoard_V14::GetElement);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRIClipBoardSEL, FRIClipBoardAddElementSEL, (void*)CFR_IClipBoard_V14::AddElement);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRIClipBoardSEL, FRIClipBoardGetMD5SEL, (void*)CFR_IClipBoard_V14::GetMD5);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRIClipBoardSEL, FRIClipBoardGetTypeSEL, (void*)CFR_IClipBoard_V14::GetType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRIClipBoardSEL, FRIClipBoardGetSubtypeSEL, (void*)CFR_IClipBoard_V14::GetSubtype);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRIClipBoardSEL, FRIClipBoardGetRectSEL, (void*)CFR_IClipBoard_V14::GetRect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRIClipBoardSEL, FRIClipBoardExportToXMLSEL, (void*)CFR_IClipBoard_V14::ExportToXML);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRIClipBoardSEL, FRIClipBoardImportFromXMLSEL, (void*)CFR_IClipBoard_V14::ImportFromXML);
	}
};

class CFR_CCBAnnotation_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCCBAnnotationSEL, FRCCBAnnotationDeleteSEL, (void*)CFR_CCBAnnotation_V14::Delete);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCCBAnnotationSEL, FRCCBAnnotationParseToXMLSEL, (void*)CFR_CCBAnnotation_V14::ParseToXML);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCCBAnnotationSEL, FRCCBAnnotationParseToDictSEL, (void*)CFR_CCBAnnotation_V14::ParseToDict);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCCBAnnotationSEL, FRCCBAnnotationIsKeyNeeded_ToXMLSEL, (void*)CFR_CCBAnnotation_V14::IsKeyNeeded_ToXML);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCCBAnnotationSEL, FRCCBAnnotationIsKeyNeeded_ToDictSEL, (void*)CFR_CCBAnnotation_V14::IsKeyNeeded_ToDict);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCCBAnnotationSEL, FRCCBAnnotationAddNecessaryKeyToList_ToXMLSEL, (void*)CFR_CCBAnnotation_V14::AddNecessaryKeyToList_ToXML);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCCBAnnotationSEL, FRCCBAnnotationNewSEL, (void*)CFR_CCBAnnotation_V14::New);
	}
};

class CFR_ISpellCheck_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
	}
};

class CFR_CJavaScriptEditer_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCJavaScriptEditerSEL, FRCJavaScriptEditerIsUseExternalJSEditorSEL, (void*)CFR_CJavaScriptEditer_V14::IsUseExternalJSEditor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCJavaScriptEditerSEL, FRCJavaScriptEditerEditWithGlobalWndSEL, (void*)CFR_CJavaScriptEditer_V14::EditWithGlobalWnd);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCJavaScriptEditerSEL, FRCJavaScriptEditerEditWithExternalJSEditorSEL, (void*)CFR_CJavaScriptEditer_V14::EditWithExternalJSEditor);
	}
};

class CFR_IBAImageSource_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRIBAImageSourceSEL, FRIBAImageSourceNewIBAImageSourceSEL, (void*)CFR_IBAImageSource_V14::NewIBAImageSource);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRIBAImageSourceSEL, FRIBAImageSourceDestroyImageSourceSEL, (void*)CFR_IBAImageSource_V14::DestroyImageSource);
	}
};

class CFR_CBAFigureRecognition_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCBAFigureRecognitionSEL, FRCBAFigureRecognitionNewCBAFigureRecognitionSEL, (void*)CFR_CBAFigureRecognition_V14::NewCBAFigureRecognition);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCBAFigureRecognitionSEL, FRCBAFigureRecognitionDestroyCBA_FigureRecognitionSEL, (void*)CFR_CBAFigureRecognition_V14::DestroyCBA_FigureRecognition);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCBAFigureRecognitionSEL, FRCBAFigureRecognitionSetColorSourceSEL, (void*)CFR_CBAFigureRecognition_V14::SetColorSource);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCBAFigureRecognitionSEL, FRCBAFigureRecognitionFindRectBy4PointSEL, (void*)CFR_CBAFigureRecognition_V14::FindRectBy4Point);
	}
};

class CFR_AnnotObserver_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAnnotObserverSEL, FRAnnotObserverCreateAnnotObserverSEL, (void*)CFR_AnnotObserver_V14::CreateAnnotObserver);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAnnotObserverSEL, FRAnnotObserverDestroyAnnotObserverSEL, (void*)CFR_AnnotObserver_V14::DestroyAnnotObserver);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAnnotObserverSEL, FRAnnotObserverIsValidSEL, (void*)CFR_AnnotObserver_V14::IsValid);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAnnotObserverSEL, FRAnnotObserverGetAnnotObjSEL, (void*)CFR_AnnotObserver_V14::GetAnnotObj);
	}
};

class CFR_DocumentObserver_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocumentObserverSEL, FRDocumentObserverCreateDocumentObserverSEL, (void*)CFR_DocumentObserver_V14::CreateDocumentObserver);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocumentObserverSEL, FRDocumentObserverDestroyDocumentObserverSEL, (void*)CFR_DocumentObserver_V14::DestroyDocumentObserver);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocumentObserverSEL, FRDocumentObserverIsValidSEL, (void*)CFR_DocumentObserver_V14::IsValid);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRDocumentObserverSEL, FRDocumentObserverGetDocumentObjSEL, (void*)CFR_DocumentObserver_V14::GetDocumentObj);
	}
};

class CFR_InnerContentProvider_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInnerContentProviderSEL, FRInnerContentProviderGetInnerContentProviderSEL, (void*)CFR_InnerContentProvider_V14::GetInnerContentProvider);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInnerContentProviderSEL, FRInnerContentProviderOnGetContentSizeSEL, (void*)CFR_InnerContentProvider_V14::OnGetContentSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInnerContentProviderSEL, FRInnerContentProviderOnReadContentSEL, (void*)CFR_InnerContentProvider_V14::OnReadContent);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInnerContentProviderSEL, FRInnerContentProviderOnBackFillContentSEL, (void*)CFR_InnerContentProvider_V14::OnBackFillContent);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInnerContentProviderSEL, FRInnerContentProviderOnGetAppPermissionsSEL, (void*)CFR_InnerContentProvider_V14::OnGetAppPermissions);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInnerContentProviderSEL, FRInnerContentProviderOnGetAttachmentSizeSEL, (void*)CFR_InnerContentProvider_V14::OnGetAttachmentSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRInnerContentProviderSEL, FRInnerContentProviderOnReadAttachmentContentSEL, (void*)CFR_InnerContentProvider_V14::OnReadAttachmentContent);
	}
};

class CFR_IFXPDFAInterface_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRIFXPDFAInterfaceSEL, FRIFXPDFAInterfaceGetIFXPDFAInterfaceSEL, (void*)CFR_IFXPDFAInterface_V14::GetIFXPDFAInterface);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRIFXPDFAInterfaceSEL, FRIFXPDFAInterfaceSimplePDFACheckSEL, (void*)CFR_IFXPDFAInterface_V14::SimplePDFACheck);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRIFXPDFAInterfaceSEL, FRIFXPDFAInterfacePDFACheckIsClickEditingSEL, (void*)CFR_IFXPDFAInterface_V14::PDFACheckIsClickEditing);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRIFXPDFAInterfaceSEL, FRIFXPDFAInterfaceShowPreflightWndSEL, (void*)CFR_IFXPDFAInterface_V14::ShowPreflightWnd);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRIFXPDFAInterfaceSEL, FRIFXPDFAInterfaceGetPreflightWndShowSEL, (void*)CFR_IFXPDFAInterface_V14::GetPreflightWndShow);
	}
};

class CFR_IConvertToPDF_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRIConvertToPDFSEL, FRIConvertToPDFGetFileTypeSEL, (void*)CFR_IConvertToPDF_V14::GetFileType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRIConvertToPDFSEL, FRIConvertToPDFGetFileFilterSEL, (void*)CFR_IConvertToPDF_V14::GetFileFilter);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRIConvertToPDFSEL, FRIConvertToPDFConvertToPDFSEL, (void*)CFR_IConvertToPDF_V14::ConvertToPDF);
	}
};

class CFR_ITagePDF_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRITagePDFSEL, FRITagePDFClearAllDataSEL, (void*)CFR_ITagePDF_V14::ClearAllData);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRITagePDFSEL, FRITagePDFTryRebuildPanelSEL, (void*)CFR_ITagePDF_V14::TryRebuildPanel);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRITagePDFSEL, FRITagePDFAsyncUpdateCheckerInfoSEL, (void*)CFR_ITagePDF_V14::AsyncUpdateCheckerInfo);
	}
};

class CFR_TextPage_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRTextPageSEL, FRTextPageGetReaderTextPageSEL, (void*)CFR_TextPage_V14::GetReaderTextPage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRTextPageSEL, FRTextPageReParseTextPageSEL, (void*)CFR_TextPage_V14::ReParseTextPage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRTextPageSEL, FRTextPageCreateFRTextPageSEL, (void*)CFR_TextPage_V14::CreateFRTextPage);
	}
};

class CFR_ISignatureCheck_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRISignatureCheckSEL, FRISignatureCheckNewSEL, (void*)CFR_ISignatureCheck_V14::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRISignatureCheckSEL, FRISignatureCheckDestroySEL, (void*)CFR_ISignatureCheck_V14::Destroy);
	}
};

// fr_docImpl.h end

// In file fr_fxnetappImpl.h
// fr_fxnetappImpl.h end

// In file fr_menuImpl.h
// fr_menuImpl.h end

// In file fr_sysImpl.h
class CFR_SystemHandler_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRSystemHandlerSEL, FRSystemHandlerIsStandardFontSEL, (void*)CFR_SystemHandler_V14::IsStandardFont);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRSystemHandlerSEL, FRSystemHandlerGetDefaultFontNameByCharsetSEL, (void*)CFR_SystemHandler_V14::GetDefaultFontNameByCharset);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRSystemHandlerSEL, FRSystemHandlerGetFullNameSEL, (void*)CFR_SystemHandler_V14::GetFullName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRSystemHandlerSEL, FRSystemHandlerGetNativeTrueTypeFontSEL, (void*)CFR_SystemHandler_V14::GetNativeTrueTypeFont);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRSystemHandlerSEL, FRSystemHandlerFindNativeTrueTypeFontSEL, (void*)CFR_SystemHandler_V14::FindNativeTrueTypeFont);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRSystemHandlerSEL, FRSystemHandlerGetFontCharsetSEL, (void*)CFR_SystemHandler_V14::GetFontCharset);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRSystemHandlerSEL, FRSystemHandlerConvertToFWLVitrualKeyCodeSEL, (void*)CFR_SystemHandler_V14::ConvertToFWLVitrualKeyCode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRSystemHandlerSEL, FRSystemHandlerCreatePopupMenuSEL, (void*)CFR_SystemHandler_V14::CreatePopupMenu);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRSystemHandlerSEL, FRSystemHandlerAppendMenuItemSEL, (void*)CFR_SystemHandler_V14::AppendMenuItem);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRSystemHandlerSEL, FRSystemHandlerEnableMenuItemSEL, (void*)CFR_SystemHandler_V14::EnableMenuItem);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRSystemHandlerSEL, FRSystemHandlerTrackPopupMenuSEL, (void*)CFR_SystemHandler_V14::TrackPopupMenu);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRSystemHandlerSEL, FRSystemHandlerDestroyMenuSEL, (void*)CFR_SystemHandler_V14::DestroyMenu);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRSystemHandlerSEL, FRSystemHandlerCreatePopupSubMenuSEL, (void*)CFR_SystemHandler_V14::CreatePopupSubMenu);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRSystemHandlerSEL, FRSystemHandlerAppendSubMenuSEL, (void*)CFR_SystemHandler_V14::AppendSubMenu);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRSystemHandlerSEL, FRSystemHandlerSetCursorSEL, (void*)CFR_SystemHandler_V14::SetCursor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRSystemHandlerSEL, FRSystemHandlerSetCustomCursorHandlerSEL, (void*)CFR_SystemHandler_V14::SetCustomCursorHandler);
	}
};

class CFR_CTBLogFonts_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCTBLogFontsSEL, FRCTBLogFontsNewSEL, (void*)CFR_CTBLogFonts_V14::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCTBLogFontsSEL, FRCTBLogFontsDestroySEL, (void*)CFR_CTBLogFonts_V14::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCTBLogFontsSEL, FRCTBLogFontsGetSizeSEL, (void*)CFR_CTBLogFonts_V14::GetSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCTBLogFontsSEL, FRCTBLogFontsGetAtSEL, (void*)CFR_CTBLogFonts_V14::GetAt);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCTBLogFontsSEL, FRCTBLogFontsAddSEL, (void*)CFR_CTBLogFonts_V14::Add);
	}
};

class CFR_TBSYSFONTDATA_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRTBSYSFONTDATASEL, FRTBSYSFONTDATACreateSEL, (void*)CFR_TBSYSFONTDATA_V14::Create);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRTBSYSFONTDATASEL, FRTBSYSFONTDATADestroySEL, (void*)CFR_TBSYSFONTDATA_V14::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRTBSYSFONTDATASEL, FRTBSYSFONTDATASetFaceNameSEL, (void*)CFR_TBSYSFONTDATA_V14::SetFaceName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRTBSYSFONTDATASEL, FRTBSYSFONTDATAGetFaceNameSEL, (void*)CFR_TBSYSFONTDATA_V14::GetFaceName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRTBSYSFONTDATASEL, FRTBSYSFONTDATASetScriptNameSEL, (void*)CFR_TBSYSFONTDATA_V14::SetScriptName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRTBSYSFONTDATASEL, FRTBSYSFONTDATAGetScriptNameSEL, (void*)CFR_TBSYSFONTDATA_V14::GetScriptName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRTBSYSFONTDATASEL, FRTBSYSFONTDATASetTagNameSEL, (void*)CFR_TBSYSFONTDATA_V14::SetTagName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRTBSYSFONTDATASEL, FRTBSYSFONTDATAGetTagNameSEL, (void*)CFR_TBSYSFONTDATA_V14::GetTagName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRTBSYSFONTDATASEL, FRTBSYSFONTDATASetFullNameSEL, (void*)CFR_TBSYSFONTDATA_V14::SetFullName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRTBSYSFONTDATASEL, FRTBSYSFONTDATAGetFullNameSEL, (void*)CFR_TBSYSFONTDATA_V14::GetFullName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRTBSYSFONTDATASEL, FRTBSYSFONTDATASetPSNameSEL, (void*)CFR_TBSYSFONTDATA_V14::SetPSName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRTBSYSFONTDATASEL, FRTBSYSFONTDATAGetPSNameSEL, (void*)CFR_TBSYSFONTDATA_V14::GetPSName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRTBSYSFONTDATASEL, FRTBSYSFONTDATASetNamesArrSEL, (void*)CFR_TBSYSFONTDATA_V14::SetNamesArr);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRTBSYSFONTDATASEL, FRTBSYSFONTDATAGetNamesArrSEL, (void*)CFR_TBSYSFONTDATA_V14::GetNamesArr);
	}
};

class CFR_ITBSysFont_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRITBSysFontSEL, FRITBSysFontGetSysFontObjectSEL, (void*)CFR_ITBSysFont_V14::GetSysFontObject);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRITBSysFontSEL, FRITBSysFontLoadLogFontsSEL, (void*)CFR_ITBSysFont_V14::LoadLogFonts);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRITBSysFontSEL, FRITBSysFontGetSysFontFaceNameSEL, (void*)CFR_ITBSysFont_V14::GetSysFontFaceName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRITBSysFontSEL, FRITBSysFontGetAllFormatFontSizeSEL, (void*)CFR_ITBSysFont_V14::GetAllFormatFontSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRITBSysFontSEL, FRITBSysFontGetAtAllFormatFontSEL, (void*)CFR_ITBSysFont_V14::GetAtAllFormatFont);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRITBSysFontSEL, FRITBSysFontGetFontFaceNameBoldItalicSEL, (void*)CFR_ITBSysFont_V14::GetFontFaceNameBoldItalic);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRITBSysFontSEL, FRITBSysFontGetStdFontSizeSEL, (void*)CFR_ITBSysFont_V14::GetStdFontSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRITBSysFontSEL, FRITBSysFontGetAtStdFontSEL, (void*)CFR_ITBSysFont_V14::GetAtStdFont);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRITBSysFontSEL, FRITBSysFontGetAtStdFont2SEL, (void*)CFR_ITBSysFont_V14::GetAtStdFont2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRITBSysFontSEL, FRITBSysFontIsStandardFontSEL, (void*)CFR_ITBSysFont_V14::IsStandardFont);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRITBSysFontSEL, FRITBSysFontGetScriptNameSEL, (void*)CFR_ITBSysFont_V14::GetScriptName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRITBSysFontSEL, FRITBSysFontFontNamePDF2NameSEL, (void*)CFR_ITBSysFont_V14::FontNamePDF2Name);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRITBSysFontSEL, FRITBSysFontGetCharsetByFontNameSEL, (void*)CFR_ITBSysFont_V14::GetCharsetByFontName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRITBSysFontSEL, FRITBSysFontGetBaseFontNameSEL, (void*)CFR_ITBSysFont_V14::GetBaseFontName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRITBSysFontSEL, FRITBSysFontGetFullNameSEL, (void*)CFR_ITBSysFont_V14::GetFullName);
	}
};

// fr_sysImpl.h end

// In file fr_viewImpl.h
class CFR_Redaction_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRedactionSEL, FRRedactionApplyDocSEL, (void*)CFR_Redaction_V14::ApplyDoc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRedactionSEL, FRRedactionApplySEL, (void*)CFR_Redaction_V14::Apply);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRedactionSEL, FRRedactionApplyDoc2SEL, (void*)CFR_Redaction_V14::ApplyDoc2);
	}
};

class CFR_Reader_DispViewerEx_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRReaderSEL, FRReaderCreateDispViewerSEL, (void*)CFR_Reader_DispViewerEx_V14::CreateDispViewer);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRReaderSEL, FRReaderGetDocViewSEL, (void*)CFR_Reader_DispViewerEx_V14::GetDocView);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRReaderSEL, FRReaderSetSizeSEL, (void*)CFR_Reader_DispViewerEx_V14::SetSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRReaderSEL, FRReaderGetRenderDataSEL, (void*)CFR_Reader_DispViewerEx_V14::GetRenderData);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRReaderSEL, FRReaderContinueRenderingSEL, (void*)CFR_Reader_DispViewerEx_V14::ContinueRendering);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRReaderSEL, FRReaderSetCenterPosSEL, (void*)CFR_Reader_DispViewerEx_V14::SetCenterPos);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRReaderSEL, FRReaderDocToWindowSEL, (void*)CFR_Reader_DispViewerEx_V14::DocToWindow);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRReaderSEL, FRReaderGetCurrentMatrixSEL, (void*)CFR_Reader_DispViewerEx_V14::GetCurrentMatrix);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRReaderSEL, FRReaderGetSizeSEL, (void*)CFR_Reader_DispViewerEx_V14::GetSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRReaderSEL, FRReaderDestroyDispViewerSEL, (void*)CFR_Reader_DispViewerEx_V14::DestroyDispViewer);
	}
};

class CFR_IReaderDispViewerHandler_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRIReaderDispViewerHandlerSEL, FRIReaderDispViewerHandlerNewSEL, (void*)CFR_IReaderDispViewerHandler_V14::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRIReaderDispViewerHandlerSEL, FRIReaderDispViewerHandlerDestroySEL, (void*)CFR_IReaderDispViewerHandler_V14::Destroy);
	}
};

class CFR_IPDFViewerEventHandler_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRIPDFViewerEventHandlerSEL, FRIPDFViewerEventHandlerNewSEL, (void*)CFR_IPDFViewerEventHandler_V14::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRIPDFViewerEventHandlerSEL, FRIPDFViewerEventHandlerDestroySEL, (void*)CFR_IPDFViewerEventHandler_V14::Destroy);
	}
};

class CFR_ToolFormatMgr_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRToolFormatMgrSEL, FRToolFormatMgrGetSEL, (void*)CFR_ToolFormatMgr_V14::Get);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRToolFormatMgrSEL, FRToolFormatMgrRegistFormatEventSEL, (void*)CFR_ToolFormatMgr_V14::RegistFormatEvent);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRToolFormatMgrSEL, FRToolFormatMgrUnregisterFormatEventSEL, (void*)CFR_ToolFormatMgr_V14::UnregisterFormatEvent);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRToolFormatMgrSEL, FRToolFormatMgrAddGroupSEL, (void*)CFR_ToolFormatMgr_V14::AddGroup);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRToolFormatMgrSEL, FRToolFormatMgrAddGroupToFormatSEL, (void*)CFR_ToolFormatMgr_V14::AddGroupToFormat);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRToolFormatMgrSEL, FRToolFormatMgrShowToolFormatSEL, (void*)CFR_ToolFormatMgr_V14::ShowToolFormat);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRToolFormatMgrSEL, FRToolFormatMgrIsToolFormatExistSEL, (void*)CFR_ToolFormatMgr_V14::IsToolFormatExist);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRToolFormatMgrSEL, FRToolFormatMgrGetFormatGroupsSEL, (void*)CFR_ToolFormatMgr_V14::GetFormatGroups);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRToolFormatMgrSEL, FRToolFormatMgrChangeFormatSizeSEL, (void*)CFR_ToolFormatMgr_V14::ChangeFormatSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRToolFormatMgrSEL, FRToolFormatMgrUpdateFormatStatusSEL, (void*)CFR_ToolFormatMgr_V14::UpdateFormatStatus);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRToolFormatMgrSEL, FRToolFormatMgrShowToolFormat2SEL, (void*)CFR_ToolFormatMgr_V14::ShowToolFormat2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRToolFormatMgrSEL, FRToolFormatMgrGetLastToolFormatNameSEL, (void*)CFR_ToolFormatMgr_V14::GetLastToolFormatName);
	}
};

class CFR_TextSelectedData_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRTextSelectedDataSEL, FRTextSelectedDataNewSEL, (void*)CFR_TextSelectedData_V14::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRTextSelectedDataSEL, FRTextSelectedDataDestroySEL, (void*)CFR_TextSelectedData_V14::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRTextSelectedDataSEL, FRTextSelectedDataGetSelectedPagesSEL, (void*)CFR_TextSelectedData_V14::GetSelectedPages);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRTextSelectedDataSEL, FRTextSelectedDataGetSelectedDataCountByPageIndexSEL, (void*)CFR_TextSelectedData_V14::GetSelectedDataCountByPageIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRTextSelectedDataSEL, FRTextSelectedDataGetSelectedDatasSEL, (void*)CFR_TextSelectedData_V14::GetSelectedDatas);
	}
};

class CFR_IRPPropertySource_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRIRPPropertySourceSEL, FRIRPPropertySourceGetSelectObjectTypeSEL, (void*)CFR_IRPPropertySource_V14::GetSelectObjectType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRIRPPropertySourceSEL, FRIRPPropertySourceCountSelectObjectsSEL, (void*)CFR_IRPPropertySource_V14::CountSelectObjects);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRIRPPropertySourceSEL, FRIRPPropertySourceGetSelectObjectSEL, (void*)CFR_IRPPropertySource_V14::GetSelectObject);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRIRPPropertySourceSEL, FRIRPPropertySourceSetPropertySourceCallbackSEL, (void*)CFR_IRPPropertySource_V14::SetPropertySourceCallback);
	}
};

class CFR_LayerOperation_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRLayerOperationSEL, FRLayerOperationCreateSEL, (void*)CFR_LayerOperation_V14::Create);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRLayerOperationSEL, FRLayerOperationDestroyLayerOperationSEL, (void*)CFR_LayerOperation_V14::DestroyLayerOperation);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRLayerOperationSEL, FRLayerOperationImportLayerSEL, (void*)CFR_LayerOperation_V14::ImportLayer);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRLayerOperationSEL, FRLayerOperationIsChildOCGSEL, (void*)CFR_LayerOperation_V14::IsChildOCG);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRLayerOperationSEL, FRLayerOperationDeleteOCGSEL, (void*)CFR_LayerOperation_V14::DeleteOCG);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRLayerOperationSEL, FRLayerOperationReplaceOCGSEL, (void*)CFR_LayerOperation_V14::ReplaceOCG);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRLayerOperationSEL, FRLayerOperationReplaceOCGContentHandlerSEL, (void*)CFR_LayerOperation_V14::ReplaceOCGContentHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRLayerOperationSEL, FRLayerOperationInsertChildOCGSEL, (void*)CFR_LayerOperation_V14::InsertChildOCG);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRLayerOperationSEL, FRLayerOperationDeleteObjectByVisibleSEL, (void*)CFR_LayerOperation_V14::DeleteObjectByVisible);
	}
};

// fr_viewImpl.h end

// In file middle_imagecompressImpl.h
// middle_imagecompressImpl.h end

// In file middle_optimizeImpl.h
// middle_optimizeImpl.h end

// In file middle_pdfImpl.h
class CFPD_CEditObject_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCEditObjectSEL, FPDCEditObjectNewSEL, (void*)CFPD_CEditObject_V14::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCEditObjectSEL, FPDCEditObjectNew2SEL, (void*)CFPD_CEditObject_V14::New2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCEditObjectSEL, FPDCEditObjectDeleteSEL, (void*)CFPD_CEditObject_V14::Delete);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCEditObjectSEL, FPDCEditObjectCombineObjctSEL, (void*)CFPD_CEditObject_V14::CombineObjct);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCEditObjectSEL, FPDCEditObjectIsEqualSEL, (void*)CFPD_CEditObject_V14::IsEqual);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCEditObjectSEL, FPDCEditObjectCopyBaseInfoSEL, (void*)CFPD_CEditObject_V14::CopyBaseInfo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCEditObjectSEL, FPDCEditObjectUpdateFormInfoSEL, (void*)CFPD_CEditObject_V14::UpdateFormInfo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCEditObjectSEL, FPDCEditObjectUpdateFormInfo2SEL, (void*)CFPD_CEditObject_V14::UpdateFormInfo2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCEditObjectSEL, FPDCEditObjectGetLastFormObjSEL, (void*)CFPD_CEditObject_V14::GetLastFormObj);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCEditObjectSEL, FPDCEditObjectGetFirstFormObjSEL, (void*)CFPD_CEditObject_V14::GetFirstFormObj);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCEditObjectSEL, FPDCEditObjectGetContainerSEL, (void*)CFPD_CEditObject_V14::GetContainer);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCEditObjectSEL, FPDCEditObjectGetObjBBoxSEL, (void*)CFPD_CEditObject_V14::GetObjBBox);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCEditObjectSEL, FPDCEditObjectResetSEL, (void*)CFPD_CEditObject_V14::Reset);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCEditObjectSEL, FPDCEditObjectUndoRedoStateSEL, (void*)CFPD_CEditObject_V14::UndoRedoState);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCEditObjectSEL, FPDCEditObjectMergeTextObjRangeSEL, (void*)CFPD_CEditObject_V14::MergeTextObjRange);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCEditObjectSEL, FPDCEditObjectMergeTextObjRange2SEL, (void*)CFPD_CEditObject_V14::MergeTextObjRange2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCEditObjectSEL, FPDCEditObjectGetPageObjectSEL, (void*)CFPD_CEditObject_V14::GetPageObject);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCEditObjectSEL, FPDCEditObjectGetIndexSEL, (void*)CFPD_CEditObject_V14::GetIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCEditObjectSEL, FPDCEditObjectGetPosSEL, (void*)CFPD_CEditObject_V14::GetPos);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCEditObjectSEL, FPDCEditObjectGetTextRangeCountSEL, (void*)CFPD_CEditObject_V14::GetTextRangeCount);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCEditObjectSEL, FPDCEditObjectGetIsInFormSEL, (void*)CFPD_CEditObject_V14::GetIsInForm);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCEditObjectSEL, FPDCEditObjectGetVecFormObjectSEL, (void*)CFPD_CEditObject_V14::GetVecFormObject);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCEditObjectSEL, FPDCEditObjectGetVecFormIndexSEL, (void*)CFPD_CEditObject_V14::GetVecFormIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCEditObjectSEL, FPDCEditObjectGetMtFormSEL, (void*)CFPD_CEditObject_V14::GetMtForm);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCEditObjectSEL, FPDCEditObjectGetTextRangeByIndexSEL, (void*)CFPD_CEditObject_V14::GetTextRangeByIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCEditObjectSEL, FPDCEditObjectSetVecFormObjectSEL, (void*)CFPD_CEditObject_V14::SetVecFormObject);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCEditObjectSEL, FPDCEditObjectSetVecFormIndexSEL, (void*)CFPD_CEditObject_V14::SetVecFormIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCEditObjectSEL, FPDCEditObjectSetMtFormSEL, (void*)CFPD_CEditObject_V14::SetMtForm);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCEditObjectSEL, FPDCEditObjectSetTextRangeSEL, (void*)CFPD_CEditObject_V14::SetTextRange);
	}
};

class CFPD_IJoinSplit_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIJoinSplitSEL, FPDIJoinSplitExitJoinEditingSEL, (void*)CFPD_IJoinSplit_V14::ExitJoinEditing);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIJoinSplitSEL, FPDIJoinSplitOnActivateSEL, (void*)CFPD_IJoinSplit_V14::OnActivate);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIJoinSplitSEL, FPDIJoinSplitOnDeactivateSEL, (void*)CFPD_IJoinSplit_V14::OnDeactivate);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIJoinSplitSEL, FPDIJoinSplitOnPaintSEL, (void*)CFPD_IJoinSplit_V14::OnPaint);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIJoinSplitSEL, FPDIJoinSplitOnLeftButtonDownSEL, (void*)CFPD_IJoinSplit_V14::OnLeftButtonDown);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIJoinSplitSEL, FPDIJoinSplitOnLeftButtonUpSEL, (void*)CFPD_IJoinSplit_V14::OnLeftButtonUp);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIJoinSplitSEL, FPDIJoinSplitOnMouseMoveSEL, (void*)CFPD_IJoinSplit_V14::OnMouseMove);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIJoinSplitSEL, FPDIJoinSplitOnRightButtonUpSEL, (void*)CFPD_IJoinSplit_V14::OnRightButtonUp);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIJoinSplitSEL, FPDIJoinSplitIsProcessingSEL, (void*)CFPD_IJoinSplit_V14::IsProcessing);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIJoinSplitSEL, FPDIJoinSplitBtnEnableStatusSEL, (void*)CFPD_IJoinSplit_V14::BtnEnableStatus);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIJoinSplitSEL, FPDIJoinSplitJoinBoxesSEL, (void*)CFPD_IJoinSplit_V14::JoinBoxes);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIJoinSplitSEL, FPDIJoinSplitSplitBoxesSEL, (void*)CFPD_IJoinSplit_V14::SplitBoxes);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIJoinSplitSEL, FPDIJoinSplitLinkBoxesSEL, (void*)CFPD_IJoinSplit_V14::LinkBoxes);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIJoinSplitSEL, FPDIJoinSplitUnlinkBoxesSEL, (void*)CFPD_IJoinSplit_V14::UnlinkBoxes);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIJoinSplitSEL, FPDIJoinSplitSelectNoneSEL, (void*)CFPD_IJoinSplit_V14::SelectNone);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIJoinSplitSEL, FPDIJoinSplitGetEditInfoSEL, (void*)CFPD_IJoinSplit_V14::GetEditInfo);
	}
};

class CFPD_ITouchup_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITouchupSEL, FPDITouchupOnActivateSEL, (void*)CFPD_ITouchup_V14::OnActivate);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITouchupSEL, FPDITouchupOnDeactivateSEL, (void*)CFPD_ITouchup_V14::OnDeactivate);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITouchupSEL, FPDITouchupExistEditingSEL, (void*)CFPD_ITouchup_V14::ExistEditing);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITouchupSEL, FPDITouchupOnPaintSEL, (void*)CFPD_ITouchup_V14::OnPaint);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITouchupSEL, FPDITouchupOnCharSEL, (void*)CFPD_ITouchup_V14::OnChar);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITouchupSEL, FPDITouchupOnVKUPSEL, (void*)CFPD_ITouchup_V14::OnVKUP);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITouchupSEL, FPDITouchupOnVKDOWNSEL, (void*)CFPD_ITouchup_V14::OnVKDOWN);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITouchupSEL, FPDITouchupOnLeftButtonDownSEL, (void*)CFPD_ITouchup_V14::OnLeftButtonDown);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITouchupSEL, FPDITouchupOnLeftButtonUpSEL, (void*)CFPD_ITouchup_V14::OnLeftButtonUp);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITouchupSEL, FPDITouchupOnLeftButtonDblClkSEL, (void*)CFPD_ITouchup_V14::OnLeftButtonDblClk);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITouchupSEL, FPDITouchupOnMouseMoveSEL, (void*)CFPD_ITouchup_V14::OnMouseMove);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITouchupSEL, FPDITouchupOnMouseWheelSEL, (void*)CFPD_ITouchup_V14::OnMouseWheel);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITouchupSEL, FPDITouchupOnRightButtonDownSEL, (void*)CFPD_ITouchup_V14::OnRightButtonDown);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITouchupSEL, FPDITouchupOnRightButtonUpSEL, (void*)CFPD_ITouchup_V14::OnRightButtonUp);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITouchupSEL, FPDITouchupCanSelectAllSEL, (void*)CFPD_ITouchup_V14::CanSelectAll);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITouchupSEL, FPDITouchupDoSelectAllSEL, (void*)CFPD_ITouchup_V14::DoSelectAll);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITouchupSEL, FPDITouchupCanDeleteSEL, (void*)CFPD_ITouchup_V14::CanDelete);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITouchupSEL, FPDITouchupDoDeleteSEL, (void*)CFPD_ITouchup_V14::DoDelete);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITouchupSEL, FPDITouchupCanCopySEL, (void*)CFPD_ITouchup_V14::CanCopy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITouchupSEL, FPDITouchupDoCopySEL, (void*)CFPD_ITouchup_V14::DoCopy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITouchupSEL, FPDITouchupCanCutSEL, (void*)CFPD_ITouchup_V14::CanCut);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITouchupSEL, FPDITouchupDoCutSEL, (void*)CFPD_ITouchup_V14::DoCut);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITouchupSEL, FPDITouchupCanPasteSEL, (void*)CFPD_ITouchup_V14::CanPaste);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITouchupSEL, FPDITouchupDoPasteSEL, (void*)CFPD_ITouchup_V14::DoPaste);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITouchupSEL, FPDITouchupCanDeselectAllSEL, (void*)CFPD_ITouchup_V14::CanDeselectAll);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITouchupSEL, FPDITouchupDoDeselectAllSEL, (void*)CFPD_ITouchup_V14::DoDeselectAll);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITouchupSEL, FPDITouchupOnFontNameChangedSEL, (void*)CFPD_ITouchup_V14::OnFontNameChanged);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITouchupSEL, FPDITouchupOnFontSizeChangedSEL, (void*)CFPD_ITouchup_V14::OnFontSizeChanged);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITouchupSEL, FPDITouchupOnTextColorChangedSEL, (void*)CFPD_ITouchup_V14::OnTextColorChanged);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITouchupSEL, FPDITouchupOnBoldItlicChangedSEL, (void*)CFPD_ITouchup_V14::OnBoldItlicChanged);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITouchupSEL, FPDITouchupOnAlignChangedSEL, (void*)CFPD_ITouchup_V14::OnAlignChanged);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITouchupSEL, FPDITouchupOnCharSpaceChangedSEL, (void*)CFPD_ITouchup_V14::OnCharSpaceChanged);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITouchupSEL, FPDITouchupOnCharHorzScaleChangedSEL, (void*)CFPD_ITouchup_V14::OnCharHorzScaleChanged);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITouchupSEL, FPDITouchupOnLineLeadingChangedSEL, (void*)CFPD_ITouchup_V14::OnLineLeadingChanged);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITouchupSEL, FPDITouchupOnUnderlineChangedSEL, (void*)CFPD_ITouchup_V14::OnUnderlineChanged);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITouchupSEL, FPDITouchupOnCrossChangedSEL, (void*)CFPD_ITouchup_V14::OnCrossChanged);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITouchupSEL, FPDITouchupOnSuperScriptChangedSEL, (void*)CFPD_ITouchup_V14::OnSuperScriptChanged);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITouchupSEL, FPDITouchupOnSubScriptChangedSEL, (void*)CFPD_ITouchup_V14::OnSubScriptChanged);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITouchupSEL, FPDITouchupOnParagraphSpacingChangedSEL, (void*)CFPD_ITouchup_V14::OnParagraphSpacingChanged);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITouchupSEL, FPDITouchupOnInDentChangedSEL, (void*)CFPD_ITouchup_V14::OnInDentChanged);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITouchupSEL, FPDITouchupOnDeDentChangedSEL, (void*)CFPD_ITouchup_V14::OnDeDentChanged);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITouchupSEL, FPDITouchupGetFXEditorSEL, (void*)CFPD_ITouchup_V14::GetFXEditor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITouchupSEL, FPDITouchupOnAfterBulletChangeSEL, (void*)CFPD_ITouchup_V14::OnAfterBulletChange);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITouchupSEL, FPDITouchupGetCaretPositonSEL, (void*)CFPD_ITouchup_V14::GetCaretPositon);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITouchupSEL, FPDITouchupIsProcessingSEL, (void*)CFPD_ITouchup_V14::IsProcessing);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITouchupSEL, FPDITouchupEditContentSEL, (void*)CFPD_ITouchup_V14::EditContent);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITouchupSEL, FPDITouchupEditContent2SEL, (void*)CFPD_ITouchup_V14::EditContent2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITouchupSEL, FPDITouchupOnInsertTextSEL, (void*)CFPD_ITouchup_V14::OnInsertText);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITouchupSEL, FPDITouchupOnBulletedListSEL, (void*)CFPD_ITouchup_V14::OnBulletedList);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITouchupSEL, FPDITouchupOnNumberedListSEL, (void*)CFPD_ITouchup_V14::OnNumberedList);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITouchupSEL, FPDITouchupOnPageOnVisibleSEL, (void*)CFPD_ITouchup_V14::OnPageOnVisible);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITouchupSEL, FPDITouchupOnWritingDirctionChangedSEL, (void*)CFPD_ITouchup_V14::OnWritingDirctionChanged);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITouchupSEL, FPDITouchupOnBeforeUndoSEL, (void*)CFPD_ITouchup_V14::OnBeforeUndo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITouchupSEL, FPDITouchupOnBeforeRedoSEL, (void*)CFPD_ITouchup_V14::OnBeforeRedo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITouchupSEL, FPDITouchupOnAfterUndoSEL, (void*)CFPD_ITouchup_V14::OnAfterUndo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITouchupSEL, FPDITouchupOnAfterRedoSEL, (void*)CFPD_ITouchup_V14::OnAfterRedo);
	}
};

class CFPD_ITouchupManager_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITouchupManagerSEL, FPDITouchupManagerCreateManagerSEL, (void*)CFPD_ITouchupManager_V14::CreateManager);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITouchupManagerSEL, FPDITouchupManagerGetTouchupSEL, (void*)CFPD_ITouchupManager_V14::GetTouchup);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITouchupManagerSEL, FPDITouchupManagerGetJoinSpiltSEL, (void*)CFPD_ITouchupManager_V14::GetJoinSpilt);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITouchupManagerSEL, FPDITouchupManagerReleaseManagerSEL, (void*)CFPD_ITouchupManager_V14::ReleaseManager);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITouchupManagerSEL, FPDITouchupManagerGetTouchupSpellCheckSEL, (void*)CFPD_ITouchupManager_V14::GetTouchupSpellCheck);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITouchupManagerSEL, FPDITouchupManagerGetTouchupFindReplaceSEL, (void*)CFPD_ITouchupManager_V14::GetTouchupFindReplace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITouchupManagerSEL, FPDITouchupManagerOnAfterInsertPagesSEL, (void*)CFPD_ITouchupManager_V14::OnAfterInsertPages);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITouchupManagerSEL, FPDITouchupManagerOnAfterDeletePagesSEL, (void*)CFPD_ITouchupManager_V14::OnAfterDeletePages);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITouchupManagerSEL, FPDITouchupManagerOnAfterReplacePagesSEL, (void*)CFPD_ITouchupManager_V14::OnAfterReplacePages);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITouchupManagerSEL, FPDITouchupManagerOnAfterResizePageSEL, (void*)CFPD_ITouchupManager_V14::OnAfterResizePage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITouchupManagerSEL, FPDITouchupManagerOnAfterRotatePageSEL, (void*)CFPD_ITouchupManager_V14::OnAfterRotatePage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITouchupManagerSEL, FPDITouchupManagerOnAfterMovePagesSEL, (void*)CFPD_ITouchupManager_V14::OnAfterMovePages);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITouchupManagerSEL, FPDITouchupManagerOnPageContentChangeSEL, (void*)CFPD_ITouchupManager_V14::OnPageContentChange);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITouchupManagerSEL, FPDITouchupManagerOnDocOCGStateChangedSEL, (void*)CFPD_ITouchupManager_V14::OnDocOCGStateChanged);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITouchupManagerSEL, FPDITouchupManagerSetInteractionConfigSEL, (void*)CFPD_ITouchupManager_V14::SetInteractionConfig);
	}
};

class CFPD_ITouchUndoItem_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITouchUndoItemSEL, FPDITouchUndoItemOnUndoSEL, (void*)CFPD_ITouchUndoItem_V14::OnUndo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITouchUndoItemSEL, FPDITouchUndoItemOnRedoSEL, (void*)CFPD_ITouchUndoItem_V14::OnRedo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITouchUndoItemSEL, FPDITouchUndoItemOnReleaseSEL, (void*)CFPD_ITouchUndoItem_V14::OnRelease);
	}
};

class CFPD_ITouchPopupMenu_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITouchPopupMenuSEL, FPDITouchPopupMenuNewSEL, (void*)CFPD_ITouchPopupMenu_V14::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITouchPopupMenuSEL, FPDITouchPopupMenuDestroySEL, (void*)CFPD_ITouchPopupMenu_V14::Destroy);
	}
};

class CFPD_ITouchProgressBar_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITouchProgressBarSEL, FPDITouchProgressBarNewSEL, (void*)CFPD_ITouchProgressBar_V14::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITouchProgressBarSEL, FPDITouchProgressBarDestroySEL, (void*)CFPD_ITouchProgressBar_V14::Destroy);
	}
};

class CFPD_ITouchOperationNotify_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITouchOperationNotifySEL, FPDITouchOperationNotifyNewSEL, (void*)CFPD_ITouchOperationNotify_V14::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITouchOperationNotifySEL, FPDITouchOperationNotifyDestroySEL, (void*)CFPD_ITouchOperationNotify_V14::Destroy);
	}
};

class CFPD_ITouchUndoHandler_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITouchUndoHandlerSEL, FPDITouchUndoHandlerNewSEL, (void*)CFPD_ITouchUndoHandler_V14::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITouchUndoHandlerSEL, FPDITouchUndoHandlerDestroySEL, (void*)CFPD_ITouchUndoHandler_V14::Destroy);
	}
};

class CFPD_ITouchTextFormatHandler_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITouchTextFormatHandlerSEL, FPDITouchTextFormatHandlerNewSEL, (void*)CFPD_ITouchTextFormatHandler_V14::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITouchTextFormatHandlerSEL, FPDITouchTextFormatHandlerDestroySEL, (void*)CFPD_ITouchTextFormatHandler_V14::Destroy);
	}
};

class CFPD_ITouchProvider_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITouchProviderSEL, FPDITouchProviderNewSEL, (void*)CFPD_ITouchProvider_V14::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITouchProviderSEL, FPDITouchProviderDestroySEL, (void*)CFPD_ITouchProvider_V14::Destroy);
	}
};

class CFPD_ITouchupSpellCheckHandler_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITouchupSpellCheckHandlerSEL, FPDITouchupSpellCheckHandlerNewSEL, (void*)CFPD_ITouchupSpellCheckHandler_V14::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITouchupSpellCheckHandlerSEL, FPDITouchupSpellCheckHandlerDestroySEL, (void*)CFPD_ITouchupSpellCheckHandler_V14::Destroy);
	}
};

class CFPD_IFindReplace_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIFindReplaceSEL, FPDIFindReplaceFindSEL, (void*)CFPD_IFindReplace_V14::Find);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIFindReplaceSEL, FPDIFindReplaceReplaceSEL, (void*)CFPD_IFindReplace_V14::Replace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIFindReplaceSEL, FPDIFindReplaceReplaceAllSEL, (void*)CFPD_IFindReplace_V14::ReplaceAll);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIFindReplaceSEL, FPDIFindReplaceIsProcessInterruptSEL, (void*)CFPD_IFindReplace_V14::IsProcessInterrupt);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIFindReplaceSEL, FPDIFindReplaceInterruptProcessSEL, (void*)CFPD_IFindReplace_V14::InterruptProcess);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIFindReplaceSEL, FPDIFindReplaceClearCacheSEL, (void*)CFPD_IFindReplace_V14::ClearCache);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIFindReplaceSEL, FPDIFindReplaceSetHighlightColorSEL, (void*)CFPD_IFindReplace_V14::SetHighlightColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIFindReplaceSEL, FPDIFindReplaceFind2SEL, (void*)CFPD_IFindReplace_V14::Find2);
	}
};

class CFPD_ITouchupSpellCheck_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITouchupSpellCheckSEL, FPDITouchupSpellCheckOnActivateSEL, (void*)CFPD_ITouchupSpellCheck_V14::OnActivate);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITouchupSpellCheckSEL, FPDITouchupSpellCheckOnDeactivateSEL, (void*)CFPD_ITouchupSpellCheck_V14::OnDeactivate);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITouchupSpellCheckSEL, FPDITouchupSpellCheckIsProcessingSEL, (void*)CFPD_ITouchupSpellCheck_V14::IsProcessing);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITouchupSpellCheckSEL, FPDITouchupSpellCheckOnPaintSEL, (void*)CFPD_ITouchupSpellCheck_V14::OnPaint);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITouchupSpellCheckSEL, FPDITouchupSpellCheckSpellCheckSEL, (void*)CFPD_ITouchupSpellCheck_V14::SpellCheck);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITouchupSpellCheckSEL, FPDITouchupSpellCheckRespondToHitSEL, (void*)CFPD_ITouchupSpellCheck_V14::RespondToHit);
	}
};

class CFPD_IFindReplaceHandler_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIFindReplaceHandlerSEL, FPDIFindReplaceHandlerNewSEL, (void*)CFPD_IFindReplaceHandler_V14::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIFindReplaceHandlerSEL, FPDIFindReplaceHandlerDestroySEL, (void*)CFPD_IFindReplaceHandler_V14::Destroy);
	}
};

class CFPD_ICollectSensorHandler_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDICollectSensorHandlerSEL, FPDICollectSensorHandlerNewSEL, (void*)CFPD_ICollectSensorHandler_V14::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDICollectSensorHandlerSEL, FPDICollectSensorHandlerDestroySEL, (void*)CFPD_ICollectSensorHandler_V14::Destroy);
	}
};

class CFPD_PathObjectUtils_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPathObjectUtilsSEL, FPDPathObjectUtilsGetLineWidthSEL, (void*)CFPD_PathObjectUtils_V14::GetLineWidth);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPathObjectUtilsSEL, FPDPathObjectUtilsSetLineWidthSEL, (void*)CFPD_PathObjectUtils_V14::SetLineWidth);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPathObjectUtilsSEL, FPDPathObjectUtilsSetMiterLimitSEL, (void*)CFPD_PathObjectUtils_V14::SetMiterLimit);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPathObjectUtilsSEL, FPDPathObjectUtilsGetMiterLimitSEL, (void*)CFPD_PathObjectUtils_V14::GetMiterLimit);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPathObjectUtilsSEL, FPDPathObjectUtilsSetLineCapSEL, (void*)CFPD_PathObjectUtils_V14::SetLineCap);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPathObjectUtilsSEL, FPDPathObjectUtilsGetLineCapSEL, (void*)CFPD_PathObjectUtils_V14::GetLineCap);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPathObjectUtilsSEL, FPDPathObjectUtilsGetLineJoinSEL, (void*)CFPD_PathObjectUtils_V14::GetLineJoin);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPathObjectUtilsSEL, FPDPathObjectUtilsSetLineJoinSEL, (void*)CFPD_PathObjectUtils_V14::SetLineJoin);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPathObjectUtilsSEL, FPDPathObjectUtilsGetLineStyleSEL, (void*)CFPD_PathObjectUtils_V14::GetLineStyle);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPathObjectUtilsSEL, FPDPathObjectUtilsSetLineStyleSEL, (void*)CFPD_PathObjectUtils_V14::SetLineStyle);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPathObjectUtilsSEL, FPDPathObjectUtilsGetStrokeInfoSEL, (void*)CFPD_PathObjectUtils_V14::GetStrokeInfo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPathObjectUtilsSEL, FPDPathObjectUtilsSetStrokeInfoSEL, (void*)CFPD_PathObjectUtils_V14::SetStrokeInfo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPathObjectUtilsSEL, FPDPathObjectUtilsGetFillInfoSEL, (void*)CFPD_PathObjectUtils_V14::GetFillInfo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPathObjectUtilsSEL, FPDPathObjectUtilsSetFillInfoSEL, (void*)CFPD_PathObjectUtils_V14::SetFillInfo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPathObjectUtilsSEL, FPDPathObjectUtilsSetColorSpaceSEL, (void*)CFPD_PathObjectUtils_V14::SetColorSpace);
	}
};

class CFPD_ShadingObjectUtils_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDShadingObjectUtilsSEL, FPDShadingObjectUtilsChangeShadingColorSEL, (void*)CFPD_ShadingObjectUtils_V14::ChangeShadingColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDShadingObjectUtilsSEL, FPDShadingObjectUtilsChangeColorUndoStartSEL, (void*)CFPD_ShadingObjectUtils_V14::ChangeColorUndoStart);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDShadingObjectUtilsSEL, FPDShadingObjectUtilsChangeColorUndoEndSEL, (void*)CFPD_ShadingObjectUtils_V14::ChangeColorUndoEnd);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDShadingObjectUtilsSEL, FPDShadingObjectUtilsChangeColorUndoCancleSEL, (void*)CFPD_ShadingObjectUtils_V14::ChangeColorUndoCancle);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDShadingObjectUtilsSEL, FPDShadingObjectUtilsEditReferenceLineSEL, (void*)CFPD_ShadingObjectUtils_V14::EditReferenceLine);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDShadingObjectUtilsSEL, FPDShadingObjectUtilsSetGridientCursorColorSEL, (void*)CFPD_ShadingObjectUtils_V14::SetGridientCursorColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDShadingObjectUtilsSEL, FPDShadingObjectUtilsGetGridientCursorColorSEL, (void*)CFPD_ShadingObjectUtils_V14::GetGridientCursorColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDShadingObjectUtilsSEL, FPDShadingObjectUtilsGetGridientColorAtSEL, (void*)CFPD_ShadingObjectUtils_V14::GetGridientColorAt);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDShadingObjectUtilsSEL, FPDShadingObjectUtilsGetGridientCursorLocationSEL, (void*)CFPD_ShadingObjectUtils_V14::GetGridientCursorLocation);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDShadingObjectUtilsSEL, FPDShadingObjectUtilsGetGridientCursorIndexSEL, (void*)CFPD_ShadingObjectUtils_V14::GetGridientCursorIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDShadingObjectUtilsSEL, FPDShadingObjectUtilsSetGradientColorShowRectSEL, (void*)CFPD_ShadingObjectUtils_V14::SetGradientColorShowRect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDShadingObjectUtilsSEL, FPDShadingObjectUtilsAddGradientCursorInfoBeforeSEL, (void*)CFPD_ShadingObjectUtils_V14::AddGradientCursorInfoBefore);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDShadingObjectUtilsSEL, FPDShadingObjectUtilsAddGradientCursorInfoExcuteSEL, (void*)CFPD_ShadingObjectUtils_V14::AddGradientCursorInfoExcute);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDShadingObjectUtilsSEL, FPDShadingObjectUtilsAddGradientCursorInfoEndSEL, (void*)CFPD_ShadingObjectUtils_V14::AddGradientCursorInfoEnd);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDShadingObjectUtilsSEL, FPDShadingObjectUtilsAddGradientCursorInfoDblClkSEL, (void*)CFPD_ShadingObjectUtils_V14::AddGradientCursorInfoDblClk);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDShadingObjectUtilsSEL, FPDShadingObjectUtilsDelGradientCursorInfoSEL, (void*)CFPD_ShadingObjectUtils_V14::DelGradientCursorInfo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDShadingObjectUtilsSEL, FPDShadingObjectUtilsDefaultGradientDataInitSEL, (void*)CFPD_ShadingObjectUtils_V14::DefaultGradientDataInit);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDShadingObjectUtilsSEL, FPDShadingObjectUtilsSetGradientCurrentInfoSEL, (void*)CFPD_ShadingObjectUtils_V14::SetGradientCurrentInfo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDShadingObjectUtilsSEL, FPDShadingObjectUtilsPaintGridientSEL, (void*)CFPD_ShadingObjectUtils_V14::PaintGridient);
	}
};

class CFPD_PathEditor_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPathEditorSEL, FPDPathEditorHasStartEditSEL, (void*)CFPD_PathEditor_V14::HasStartEdit);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPathEditorSEL, FPDPathEditorIsClipPathModeSEL, (void*)CFPD_PathEditor_V14::IsClipPathMode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPathEditorSEL, FPDPathEditorAppendSubPathSEL, (void*)CFPD_PathEditor_V14::AppendSubPath);
	}
};

class CFPD_ShadingEditor_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDShadingEditorSEL, FPDShadingEditorIsReferenceLineWorkingSEL, (void*)CFPD_ShadingEditor_V14::IsReferenceLineWorking);
	}
};

class CFPD_TextEditor_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextEditorSEL, FPDTextEditorOnFontNameChangedSEL, (void*)CFPD_TextEditor_V14::OnFontNameChanged);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextEditorSEL, FPDTextEditorOnFontSizeChangedSEL, (void*)CFPD_TextEditor_V14::OnFontSizeChanged);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextEditorSEL, FPDTextEditorOnTextColorChangedSEL, (void*)CFPD_TextEditor_V14::OnTextColorChanged);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextEditorSEL, FPDTextEditorOnBoldChangedSEL, (void*)CFPD_TextEditor_V14::OnBoldChanged);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextEditorSEL, FPDTextEditorOnItalicChangedSEL, (void*)CFPD_TextEditor_V14::OnItalicChanged);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextEditorSEL, FPDTextEditorOnAlignChangedSEL, (void*)CFPD_TextEditor_V14::OnAlignChanged);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextEditorSEL, FPDTextEditorOnCharSpaceChangedSEL, (void*)CFPD_TextEditor_V14::OnCharSpaceChanged);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextEditorSEL, FPDTextEditorOnWordSpaceChangedSEL, (void*)CFPD_TextEditor_V14::OnWordSpaceChanged);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextEditorSEL, FPDTextEditorOnCharHorzScaleChangedSEL, (void*)CFPD_TextEditor_V14::OnCharHorzScaleChanged);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextEditorSEL, FPDTextEditorOnLineLeadingChangedSEL, (void*)CFPD_TextEditor_V14::OnLineLeadingChanged);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextEditorSEL, FPDTextEditorOnUnderlineChangedSEL, (void*)CFPD_TextEditor_V14::OnUnderlineChanged);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextEditorSEL, FPDTextEditorOnCrossChangedSEL, (void*)CFPD_TextEditor_V14::OnCrossChanged);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextEditorSEL, FPDTextEditorOnSuperScriptChangedSEL, (void*)CFPD_TextEditor_V14::OnSuperScriptChanged);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextEditorSEL, FPDTextEditorOnSubScriptChangedSEL, (void*)CFPD_TextEditor_V14::OnSubScriptChanged);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextEditorSEL, FPDTextEditorOnWritingDirctionChangedSEL, (void*)CFPD_TextEditor_V14::OnWritingDirctionChanged);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextEditorSEL, FPDTextEditorIsSelectSEL, (void*)CFPD_TextEditor_V14::IsSelect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextEditorSEL, FPDTextEditorCopySEL, (void*)CFPD_TextEditor_V14::Copy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextEditorSEL, FPDTextEditorPasteSEL, (void*)CFPD_TextEditor_V14::Paste);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextEditorSEL, FPDTextEditorCutSEL, (void*)CFPD_TextEditor_V14::Cut);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextEditorSEL, FPDTextEditorDeleteSEL, (void*)CFPD_TextEditor_V14::Delete);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextEditorSEL, FPDTextEditorSelectAllSEL, (void*)CFPD_TextEditor_V14::SelectAll);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextEditorSEL, FPDTextEditorIsAddSEL, (void*)CFPD_TextEditor_V14::IsAdd);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextEditorSEL, FPDTextEditorGetCaretPositonSEL, (void*)CFPD_TextEditor_V14::GetCaretPositon);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextEditorSEL, FPDTextEditorOnInsertTextSEL, (void*)CFPD_TextEditor_V14::OnInsertText);
	}
};

class CFPD_TextObjectUtils_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextObjectUtilsSEL, FPDTextObjectUtilsGetFontSizeSEL, (void*)CFPD_TextObjectUtils_V14::GetFontSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextObjectUtilsSEL, FPDTextObjectUtilsSetFontSizeSEL, (void*)CFPD_TextObjectUtils_V14::SetFontSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextObjectUtilsSEL, FPDTextObjectUtilsGetHorizontalScaleSEL, (void*)CFPD_TextObjectUtils_V14::GetHorizontalScale);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextObjectUtilsSEL, FPDTextObjectUtilsSetHorizontalScaleSEL, (void*)CFPD_TextObjectUtils_V14::SetHorizontalScale);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextObjectUtilsSEL, FPDTextObjectUtilsSetCharSpaceSEL, (void*)CFPD_TextObjectUtils_V14::SetCharSpace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextObjectUtilsSEL, FPDTextObjectUtilsGetCharSpaceSEL, (void*)CFPD_TextObjectUtils_V14::GetCharSpace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextObjectUtilsSEL, FPDTextObjectUtilsGetWordSpaceSEL, (void*)CFPD_TextObjectUtils_V14::GetWordSpace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextObjectUtilsSEL, FPDTextObjectUtilsSetWordSpaceSEL, (void*)CFPD_TextObjectUtils_V14::SetWordSpace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextObjectUtilsSEL, FPDTextObjectUtilsSetFontSEL, (void*)CFPD_TextObjectUtils_V14::SetFont);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextObjectUtilsSEL, FPDTextObjectUtilsGetFontSEL, (void*)CFPD_TextObjectUtils_V14::GetFont);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextObjectUtilsSEL, FPDTextObjectUtilsGetTextModeSEL, (void*)CFPD_TextObjectUtils_V14::GetTextMode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextObjectUtilsSEL, FPDTextObjectUtilsSetTextModeSEL, (void*)CFPD_TextObjectUtils_V14::SetTextMode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextObjectUtilsSEL, FPDTextObjectUtilsCanRemoveTextKerningSEL, (void*)CFPD_TextObjectUtils_V14::CanRemoveTextKerning);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextObjectUtilsSEL, FPDTextObjectUtilsRemoveTextKerningSEL, (void*)CFPD_TextObjectUtils_V14::RemoveTextKerning);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextObjectUtilsSEL, FPDTextObjectUtilsCanMergeTextSEL, (void*)CFPD_TextObjectUtils_V14::CanMergeText);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextObjectUtilsSEL, FPDTextObjectUtilsMergeTextSEL, (void*)CFPD_TextObjectUtils_V14::MergeText);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextObjectUtilsSEL, FPDTextObjectUtilsCanSplitTextSEL, (void*)CFPD_TextObjectUtils_V14::CanSplitText);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextObjectUtilsSEL, FPDTextObjectUtilsSplitTextSEL, (void*)CFPD_TextObjectUtils_V14::SplitText);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextObjectUtilsSEL, FPDTextObjectUtilsCanText2PathSEL, (void*)CFPD_TextObjectUtils_V14::CanText2Path);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextObjectUtilsSEL, FPDTextObjectUtilsGetStrokeInfoSEL, (void*)CFPD_TextObjectUtils_V14::GetStrokeInfo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextObjectUtilsSEL, FPDTextObjectUtilsSetStrokeInfoSEL, (void*)CFPD_TextObjectUtils_V14::SetStrokeInfo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextObjectUtilsSEL, FPDTextObjectUtilsGetFillInfoSEL, (void*)CFPD_TextObjectUtils_V14::GetFillInfo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextObjectUtilsSEL, FPDTextObjectUtilsSetFillInfoSEL, (void*)CFPD_TextObjectUtils_V14::SetFillInfo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextObjectUtilsSEL, FPDTextObjectUtilsSetColorSpaceSEL, (void*)CFPD_TextObjectUtils_V14::SetColorSpace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextObjectUtilsSEL, FPDTextObjectUtilsGetTextColorInfoSEL, (void*)CFPD_TextObjectUtils_V14::GetTextColorInfo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextObjectUtilsSEL, FPDTextObjectUtilsIsWordSpaceValidSEL, (void*)CFPD_TextObjectUtils_V14::IsWordSpaceValid);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextObjectUtilsSEL, FPDTextObjectUtilsGetFontBoldInfoSEL, (void*)CFPD_TextObjectUtils_V14::GetFontBoldInfo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextObjectUtilsSEL, FPDTextObjectUtilsGetFontItalicSEL, (void*)CFPD_TextObjectUtils_V14::GetFontItalic);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextObjectUtilsSEL, FPDTextObjectUtilsGetLineWidthSEL, (void*)CFPD_TextObjectUtils_V14::GetLineWidth);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextObjectUtilsSEL, FPDTextObjectUtilsSetLineWidthSEL, (void*)CFPD_TextObjectUtils_V14::SetLineWidth);
	}
};

class CFPD_GraphicObject_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDGraphicObjectSEL, FPDGraphicObjectCreateSEL, (void*)CFPD_GraphicObject_V14::Create);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDGraphicObjectSEL, FPDGraphicObjectDestroySEL, (void*)CFPD_GraphicObject_V14::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDGraphicObjectSEL, FPDGraphicObjectGetPageSEL, (void*)CFPD_GraphicObject_V14::GetPage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDGraphicObjectSEL, FPDGraphicObjectGetGraphicObjectSEL, (void*)CFPD_GraphicObject_V14::GetGraphicObject);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDGraphicObjectSEL, FPDGraphicObjectGetIndexSEL, (void*)CFPD_GraphicObject_V14::GetIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDGraphicObjectSEL, FPDGraphicObjectGetPositionSEL, (void*)CFPD_GraphicObject_V14::GetPosition);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDGraphicObjectSEL, FPDGraphicObjectIsInFormSEL, (void*)CFPD_GraphicObject_V14::IsInForm);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDGraphicObjectSEL, FPDGraphicObjectGetFormIndexSEL, (void*)CFPD_GraphicObject_V14::GetFormIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDGraphicObjectSEL, FPDGraphicObjectGetFormObjectsSEL, (void*)CFPD_GraphicObject_V14::GetFormObjects);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDGraphicObjectSEL, FPDGraphicObjectGetFormMatrixSEL, (void*)CFPD_GraphicObject_V14::GetFormMatrix);
	}
};

class CFPD_GraphicEditor_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDGraphicEditorSEL, FPDGraphicEditorGetTypeSEL, (void*)CFPD_GraphicEditor_V14::GetType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDGraphicEditorSEL, FPDGraphicEditorEndEditSEL, (void*)CFPD_GraphicEditor_V14::EndEdit);
	}
};

class CFPD_GraphicObjectUtils_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDGraphicObjectUtilsSEL, FPDGraphicObjectUtilsGetHeightSEL, (void*)CFPD_GraphicObjectUtils_V14::GetHeight);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDGraphicObjectUtilsSEL, FPDGraphicObjectUtilsSetHeightSEL, (void*)CFPD_GraphicObjectUtils_V14::SetHeight);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDGraphicObjectUtilsSEL, FPDGraphicObjectUtilsSetWidthSEL, (void*)CFPD_GraphicObjectUtils_V14::SetWidth);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDGraphicObjectUtilsSEL, FPDGraphicObjectUtilsGetWidthSEL, (void*)CFPD_GraphicObjectUtils_V14::GetWidth);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDGraphicObjectUtilsSEL, FPDGraphicObjectUtilsGetXPositionSEL, (void*)CFPD_GraphicObjectUtils_V14::GetXPosition);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDGraphicObjectUtilsSEL, FPDGraphicObjectUtilsSetXPositionSEL, (void*)CFPD_GraphicObjectUtils_V14::SetXPosition);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDGraphicObjectUtilsSEL, FPDGraphicObjectUtilsGetYPositionSEL, (void*)CFPD_GraphicObjectUtils_V14::GetYPosition);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDGraphicObjectUtilsSEL, FPDGraphicObjectUtilsSetYPositionSEL, (void*)CFPD_GraphicObjectUtils_V14::SetYPosition);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDGraphicObjectUtilsSEL, FPDGraphicObjectUtilsGetOpacitySEL, (void*)CFPD_GraphicObjectUtils_V14::GetOpacity);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDGraphicObjectUtilsSEL, FPDGraphicObjectUtilsSetOpacitySEL, (void*)CFPD_GraphicObjectUtils_V14::SetOpacity);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDGraphicObjectUtilsSEL, FPDGraphicObjectUtilsRotateSEL, (void*)CFPD_GraphicObjectUtils_V14::Rotate);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDGraphicObjectUtilsSEL, FPDGraphicObjectUtilsFlipSEL, (void*)CFPD_GraphicObjectUtils_V14::Flip);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDGraphicObjectUtilsSEL, FPDGraphicObjectUtilsShearSEL, (void*)CFPD_GraphicObjectUtils_V14::Shear);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDGraphicObjectUtilsSEL, FPDGraphicObjectUtilsMoveSEL, (void*)CFPD_GraphicObjectUtils_V14::Move);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDGraphicObjectUtilsSEL, FPDGraphicObjectUtilsAlignSEL, (void*)CFPD_GraphicObjectUtils_V14::Align);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDGraphicObjectUtilsSEL, FPDGraphicObjectUtilsCenterSEL, (void*)CFPD_GraphicObjectUtils_V14::Center);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDGraphicObjectUtilsSEL, FPDGraphicObjectUtilsDistributeSEL, (void*)CFPD_GraphicObjectUtils_V14::Distribute);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDGraphicObjectUtilsSEL, FPDGraphicObjectUtilsSizeSEL, (void*)CFPD_GraphicObjectUtils_V14::Size);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDGraphicObjectUtilsSEL, FPDGraphicObjectUtilsScaleSEL, (void*)CFPD_GraphicObjectUtils_V14::Scale);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDGraphicObjectUtilsSEL, FPDGraphicObjectUtilsScaleFloatSEL, (void*)CFPD_GraphicObjectUtils_V14::ScaleFloat);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDGraphicObjectUtilsSEL, FPDGraphicObjectUtilsChangeRenderingOrderSEL, (void*)CFPD_GraphicObjectUtils_V14::ChangeRenderingOrder);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDGraphicObjectUtilsSEL, FPDGraphicObjectUtilsCanChangeRenderingOrderSEL, (void*)CFPD_GraphicObjectUtils_V14::CanChangeRenderingOrder);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDGraphicObjectUtilsSEL, FPDGraphicObjectUtilsClearClipPathSEL, (void*)CFPD_GraphicObjectUtils_V14::ClearClipPath);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDGraphicObjectUtilsSEL, FPDGraphicObjectUtilsEditClipPathSEL, (void*)CFPD_GraphicObjectUtils_V14::EditClipPath);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDGraphicObjectUtilsSEL, FPDGraphicObjectUtilsAddClipPathSEL, (void*)CFPD_GraphicObjectUtils_V14::AddClipPath);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDGraphicObjectUtilsSEL, FPDGraphicObjectUtilsGetTypeSEL, (void*)CFPD_GraphicObjectUtils_V14::GetType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDGraphicObjectUtilsSEL, FPDGraphicObjectUtilsCutSEL, (void*)CFPD_GraphicObjectUtils_V14::Cut);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDGraphicObjectUtilsSEL, FPDGraphicObjectUtilsCopySEL, (void*)CFPD_GraphicObjectUtils_V14::Copy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDGraphicObjectUtilsSEL, FPDGraphicObjectUtilsDeleteSEL, (void*)CFPD_GraphicObjectUtils_V14::Delete);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDGraphicObjectUtilsSEL, FPDGraphicObjectUtilsSavePageArchiveSEL, (void*)CFPD_GraphicObjectUtils_V14::SavePageArchive);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDGraphicObjectUtilsSEL, FPDGraphicObjectUtilsReadPageArchiveSEL, (void*)CFPD_GraphicObjectUtils_V14::ReadPageArchive);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDGraphicObjectUtilsSEL, FPDGraphicObjectUtilsReadPageArchive2SEL, (void*)CFPD_GraphicObjectUtils_V14::ReadPageArchive2);
	}
};

class CFPD_ImageEditor_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageEditorSEL, FPDImageEditorSaveAsImageSEL, (void*)CFPD_ImageEditor_V14::SaveAsImage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageEditorSEL, FPDImageEditorPreviewFilterSEL, (void*)CFPD_ImageEditor_V14::PreviewFilter);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageEditorSEL, FPDImageEditorCancelPreviewFilterSEL, (void*)CFPD_ImageEditor_V14::CancelPreviewFilter);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageEditorSEL, FPDImageEditorAdjustFilterSEL, (void*)CFPD_ImageEditor_V14::AdjustFilter);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageEditorSEL, FPDImageEditorRotateVerticallySEL, (void*)CFPD_ImageEditor_V14::RotateVertically);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageEditorSEL, FPDImageEditorRotateHorizontallySEL, (void*)CFPD_ImageEditor_V14::RotateHorizontally);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageEditorSEL, FPDImageEditorReplaceSEL, (void*)CFPD_ImageEditor_V14::Replace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageEditorSEL, FPDImageEditorCopySEL, (void*)CFPD_ImageEditor_V14::Copy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageEditorSEL, FPDImageEditorPasteSEL, (void*)CFPD_ImageEditor_V14::Paste);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageEditorSEL, FPDImageEditorDeleteRegionSEL, (void*)CFPD_ImageEditor_V14::DeleteRegion);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageEditorSEL, FPDImageEditorZoomInSEL, (void*)CFPD_ImageEditor_V14::ZoomIn);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageEditorSEL, FPDImageEditorZoomToSEL, (void*)CFPD_ImageEditor_V14::ZoomTo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageEditorSEL, FPDImageEditorZoomOutSEL, (void*)CFPD_ImageEditor_V14::ZoomOut);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageEditorSEL, FPDImageEditorAdjustColorSEL, (void*)CFPD_ImageEditor_V14::AdjustColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageEditorSEL, FPDImageEditorLoadFromClipboardSEL, (void*)CFPD_ImageEditor_V14::LoadFromClipboard);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageEditorSEL, FPDImageEditorOnClientRectChangedSEL, (void*)CFPD_ImageEditor_V14::OnClientRectChanged);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageEditorSEL, FPDImageEditorSetActionTypeSEL, (void*)CFPD_ImageEditor_V14::SetActionType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageEditorSEL, FPDImageEditorGetActionTypeSEL, (void*)CFPD_ImageEditor_V14::GetActionType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageEditorSEL, FPDImageEditorOnSetCursorSEL, (void*)CFPD_ImageEditor_V14::OnSetCursor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageEditorSEL, FPDImageEditorOnSizeSEL, (void*)CFPD_ImageEditor_V14::OnSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageEditorSEL, FPDImageEditorGetCurrentOptionDataSEL, (void*)CFPD_ImageEditor_V14::GetCurrentOptionData);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageEditorSEL, FPDImageEditorGetPublicOptionDataSEL, (void*)CFPD_ImageEditor_V14::GetPublicOptionData);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageEditorSEL, FPDImageEditorGetImageHistogramDataSEL, (void*)CFPD_ImageEditor_V14::GetImageHistogramData);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageEditorSEL, FPDImageEditorCompositeImageObjectSEL, (void*)CFPD_ImageEditor_V14::CompositeImageObject);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageEditorSEL, FPDImageEditorCancelEditSEL, (void*)CFPD_ImageEditor_V14::CancelEdit);
	}
};

class CFPD_IPageEditor_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIPageEditorSEL, FPDIPageEditorStartEditSEL, (void*)CFPD_IPageEditor_V14::StartEdit);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIPageEditorSEL, FPDIPageEditorRestartEditSEL, (void*)CFPD_IPageEditor_V14::RestartEdit);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIPageEditorSEL, FPDIPageEditorEndEditSEL, (void*)CFPD_IPageEditor_V14::EndEdit);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIPageEditorSEL, FPDIPageEditorHasSelectionSEL, (void*)CFPD_IPageEditor_V14::HasSelection);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIPageEditorSEL, FPDIPageEditorCountSelectionSEL, (void*)CFPD_IPageEditor_V14::CountSelection);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIPageEditorSEL, FPDIPageEditorGetSelectionSEL, (void*)CFPD_IPageEditor_V14::GetSelection);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIPageEditorSEL, FPDIPageEditorHaveFillColorInSelectionSEL, (void*)CFPD_IPageEditor_V14::HaveFillColorInSelection);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIPageEditorSEL, FPDIPageEditorGetActivePageSEL, (void*)CFPD_IPageEditor_V14::GetActivePage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIPageEditorSEL, FPDIPageEditorSetObjectFilterSEL, (void*)CFPD_IPageEditor_V14::SetObjectFilter);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIPageEditorSEL, FPDIPageEditorOnVKUPSEL, (void*)CFPD_IPageEditor_V14::OnVKUP);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIPageEditorSEL, FPDIPageEditorOnVKDOWNSEL, (void*)CFPD_IPageEditor_V14::OnVKDOWN);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIPageEditorSEL, FPDIPageEditorOnLeftButtonDownSEL, (void*)CFPD_IPageEditor_V14::OnLeftButtonDown);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIPageEditorSEL, FPDIPageEditorOnLeftButtonUpSEL, (void*)CFPD_IPageEditor_V14::OnLeftButtonUp);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIPageEditorSEL, FPDIPageEditorOnLeftButtonDblClkSEL, (void*)CFPD_IPageEditor_V14::OnLeftButtonDblClk);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIPageEditorSEL, FPDIPageEditorOnMouseMoveSEL, (void*)CFPD_IPageEditor_V14::OnMouseMove);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIPageEditorSEL, FPDIPageEditorOnMouseWheelSEL, (void*)CFPD_IPageEditor_V14::OnMouseWheel);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIPageEditorSEL, FPDIPageEditorOnRightButtonDownSEL, (void*)CFPD_IPageEditor_V14::OnRightButtonDown);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIPageEditorSEL, FPDIPageEditorOnRightButtonUpSEL, (void*)CFPD_IPageEditor_V14::OnRightButtonUp);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIPageEditorSEL, FPDIPageEditorOnReleaseCaptureSEL, (void*)CFPD_IPageEditor_V14::OnReleaseCapture);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIPageEditorSEL, FPDIPageEditorOnLeavePageSEL, (void*)CFPD_IPageEditor_V14::OnLeavePage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIPageEditorSEL, FPDIPageEditorOnPaintSEL, (void*)CFPD_IPageEditor_V14::OnPaint);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIPageEditorSEL, FPDIPageEditorGetObjectAtPointSEL, (void*)CFPD_IPageEditor_V14::GetObjectAtPoint);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIPageEditorSEL, FPDIPageEditorCanPasteSEL, (void*)CFPD_IPageEditor_V14::CanPaste);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIPageEditorSEL, FPDIPageEditorPasteSEL, (void*)CFPD_IPageEditor_V14::Paste);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIPageEditorSEL, FPDIPageEditorSelectAllSEL, (void*)CFPD_IPageEditor_V14::SelectAll);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIPageEditorSEL, FPDIPageEditorGetGraphicEditorSEL, (void*)CFPD_IPageEditor_V14::GetGraphicEditor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIPageEditorSEL, FPDIPageEditorGetGraphicObjectUtilsSEL, (void*)CFPD_IPageEditor_V14::GetGraphicObjectUtils);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIPageEditorSEL, FPDIPageEditorCreatePathSEL, (void*)CFPD_IPageEditor_V14::CreatePath);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIPageEditorSEL, FPDIPageEditorCreateShadingSEL, (void*)CFPD_IPageEditor_V14::CreateShading);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIPageEditorSEL, FPDIPageEditorCreateImageSEL, (void*)CFPD_IPageEditor_V14::CreateImage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIPageEditorSEL, FPDIPageEditorCreateTextSEL, (void*)CFPD_IPageEditor_V14::CreateText);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIPageEditorSEL, FPDIPageEditorCreatePageEditorSEL, (void*)CFPD_IPageEditor_V14::CreatePageEditor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIPageEditorSEL, FPDIPageEditorDestroyPageEditorSEL, (void*)CFPD_IPageEditor_V14::DestroyPageEditor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIPageEditorSEL, FPDIPageEditorClearSelectionSEL, (void*)CFPD_IPageEditor_V14::ClearSelection);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIPageEditorSEL, FPDIPageEditorText2PathSEL, (void*)CFPD_IPageEditor_V14::Text2Path);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIPageEditorSEL, FPDIPageEditorOnCharSEL, (void*)CFPD_IPageEditor_V14::OnChar);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIPageEditorSEL, FPDIPageEditorEditGraphicObjectSEL, (void*)CFPD_IPageEditor_V14::EditGraphicObject);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIPageEditorSEL, FPDIPageEditorCreateImage2SEL, (void*)CFPD_IPageEditor_V14::CreateImage2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIPageEditorSEL, FPDIPageEditorCreateImage3SEL, (void*)CFPD_IPageEditor_V14::CreateImage3);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIPageEditorSEL, FPDIPageEditorCreateText2SEL, (void*)CFPD_IPageEditor_V14::CreateText2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIPageEditorSEL, FPDIPageEditorPaste2SEL, (void*)CFPD_IPageEditor_V14::Paste2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIPageEditorSEL, FPDIPageEditorOnDocOCGStateChangedSEL, (void*)CFPD_IPageEditor_V14::OnDocOCGStateChanged);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIPageEditorSEL, FPDIPageEditorSetInteractionConfigSEL, (void*)CFPD_IPageEditor_V14::SetInteractionConfig);
	}
};

class CFPD_IUndoItem_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIUndoItemSEL, FPDIUndoItemOnUndoSEL, (void*)CFPD_IUndoItem_V14::OnUndo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIUndoItemSEL, FPDIUndoItemOnRedoSEL, (void*)CFPD_IUndoItem_V14::OnRedo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIUndoItemSEL, FPDIUndoItemOnReleaseSEL, (void*)CFPD_IUndoItem_V14::OnRelease);
	}
};

class CFPD_IClipboard_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIClipboardSEL, FPDIClipboardNewSEL, (void*)CFPD_IClipboard_V14::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIClipboardSEL, FPDIClipboardDestroySEL, (void*)CFPD_IClipboard_V14::Destroy);
	}
};

class CFPD_IPopupMenu_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIPopupMenuSEL, FPDIPopupMenuNewSEL, (void*)CFPD_IPopupMenu_V14::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIPopupMenuSEL, FPDIPopupMenuDestroySEL, (void*)CFPD_IPopupMenu_V14::Destroy);
	}
};

class CFPD_ITip_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITipSEL, FPDITipNewSEL, (void*)CFPD_ITip_V14::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITipSEL, FPDITipDestroySEL, (void*)CFPD_ITip_V14::Destroy);
	}
};

class CFPD_IOperationNotify_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIOperationNotifySEL, FPDIOperationNotifyNewSEL, (void*)CFPD_IOperationNotify_V14::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIOperationNotifySEL, FPDIOperationNotifyDestroySEL, (void*)CFPD_IOperationNotify_V14::Destroy);
	}
};

class CFPD_IPublicOptionData_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIPublicOptionDataSEL, FPDIPublicOptionDataSetForegroundColorSEL, (void*)CFPD_IPublicOptionData_V14::SetForegroundColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIPublicOptionDataSEL, FPDIPublicOptionDataGetForegroundColorSEL, (void*)CFPD_IPublicOptionData_V14::GetForegroundColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIPublicOptionDataSEL, FPDIPublicOptionDataSetBackgroundColorSEL, (void*)CFPD_IPublicOptionData_V14::SetBackgroundColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIPublicOptionDataSEL, FPDIPublicOptionDataGetBackgroundColorSEL, (void*)CFPD_IPublicOptionData_V14::GetBackgroundColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIPublicOptionDataSEL, FPDIPublicOptionDataSetLayerOpacitySEL, (void*)CFPD_IPublicOptionData_V14::SetLayerOpacity);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIPublicOptionDataSEL, FPDIPublicOptionDataGetLayerOpacitySEL, (void*)CFPD_IPublicOptionData_V14::GetLayerOpacity);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIPublicOptionDataSEL, FPDIPublicOptionDataSetLayerFillSEL, (void*)CFPD_IPublicOptionData_V14::SetLayerFill);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIPublicOptionDataSEL, FPDIPublicOptionDataGetLayerFillSEL, (void*)CFPD_IPublicOptionData_V14::GetLayerFill);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIPublicOptionDataSEL, FPDIPublicOptionDataSetLayerBlendModeSEL, (void*)CFPD_IPublicOptionData_V14::SetLayerBlendMode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIPublicOptionDataSEL, FPDIPublicOptionDataGetLayerBlendModeSEL, (void*)CFPD_IPublicOptionData_V14::GetLayerBlendMode);
	}
};

class CFPD_IBaseBrushOptionData_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIBaseBrushOptionDataSEL, FPDIBaseBrushOptionDataSetBrushDiameterSEL, (void*)CFPD_IBaseBrushOptionData_V14::SetBrushDiameter);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIBaseBrushOptionDataSEL, FPDIBaseBrushOptionDataGetBrushDiameterSEL, (void*)CFPD_IBaseBrushOptionData_V14::GetBrushDiameter);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIBaseBrushOptionDataSEL, FPDIBaseBrushOptionDataSetBrushHardnessSEL, (void*)CFPD_IBaseBrushOptionData_V14::SetBrushHardness);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIBaseBrushOptionDataSEL, FPDIBaseBrushOptionDataGetBrushHardnessSEL, (void*)CFPD_IBaseBrushOptionData_V14::GetBrushHardness);
	}
};

class CFPD_IBrushOptionData_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIBrushOptionDataSEL, FPDIBrushOptionDataSetBlendModeSEL, (void*)CFPD_IBrushOptionData_V14::SetBlendMode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIBrushOptionDataSEL, FPDIBrushOptionDataGetBlendModeSEL, (void*)CFPD_IBrushOptionData_V14::GetBlendMode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIBrushOptionDataSEL, FPDIBrushOptionDataSetFlowSEL, (void*)CFPD_IBrushOptionData_V14::SetFlow);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIBrushOptionDataSEL, FPDIBrushOptionDataGetFlowSEL, (void*)CFPD_IBrushOptionData_V14::GetFlow);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIBrushOptionDataSEL, FPDIBrushOptionDataSetOpacitySEL, (void*)CFPD_IBrushOptionData_V14::SetOpacity);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIBrushOptionDataSEL, FPDIBrushOptionDataGetOpacitySEL, (void*)CFPD_IBrushOptionData_V14::GetOpacity);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIBrushOptionDataSEL, FPDIBrushOptionDataSetBaseBrushDiameterSEL, (void*)CFPD_IBrushOptionData_V14::SetBaseBrushDiameter);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIBrushOptionDataSEL, FPDIBrushOptionDataGetBaseBrushDiameterSEL, (void*)CFPD_IBrushOptionData_V14::GetBaseBrushDiameter);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIBrushOptionDataSEL, FPDIBrushOptionDataSetBaseBrushHardnessSEL, (void*)CFPD_IBrushOptionData_V14::SetBaseBrushHardness);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIBrushOptionDataSEL, FPDIBrushOptionDataGetBaseBrushHardnessSEL, (void*)CFPD_IBrushOptionData_V14::GetBaseBrushHardness);
	}
};

class CFPD_IEraserOptionData_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIEraserOptionDataSEL, FPDIEraserOptionDataSetEraserModeSEL, (void*)CFPD_IEraserOptionData_V14::SetEraserMode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIEraserOptionDataSEL, FPDIEraserOptionDataGetEraserModeSEL, (void*)CFPD_IEraserOptionData_V14::GetEraserMode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIEraserOptionDataSEL, FPDIEraserOptionDataSetFlowSEL, (void*)CFPD_IEraserOptionData_V14::SetFlow);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIEraserOptionDataSEL, FPDIEraserOptionDataGetFlowSEL, (void*)CFPD_IEraserOptionData_V14::GetFlow);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIEraserOptionDataSEL, FPDIEraserOptionDataSetOpacitySEL, (void*)CFPD_IEraserOptionData_V14::SetOpacity);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIEraserOptionDataSEL, FPDIEraserOptionDataGetOpacitySEL, (void*)CFPD_IEraserOptionData_V14::GetOpacity);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIEraserOptionDataSEL, FPDIEraserOptionDataSetEraserHistorySEL, (void*)CFPD_IEraserOptionData_V14::SetEraserHistory);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIEraserOptionDataSEL, FPDIEraserOptionDataGetEraserHistorySEL, (void*)CFPD_IEraserOptionData_V14::GetEraserHistory);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIEraserOptionDataSEL, FPDIEraserOptionDataSetBaseBrushDiameterSEL, (void*)CFPD_IEraserOptionData_V14::SetBaseBrushDiameter);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIEraserOptionDataSEL, FPDIEraserOptionDataGetBaseBrushDiameterSEL, (void*)CFPD_IEraserOptionData_V14::GetBaseBrushDiameter);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIEraserOptionDataSEL, FPDIEraserOptionDataSetBaseBrushHardnessSEL, (void*)CFPD_IEraserOptionData_V14::SetBaseBrushHardness);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIEraserOptionDataSEL, FPDIEraserOptionDataGetBaseBrushHardnessSEL, (void*)CFPD_IEraserOptionData_V14::GetBaseBrushHardness);
	}
};

class CFPD_IMagicWandOptionData_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIMagicWandOptionDataSEL, FPDIMagicWandOptionDataSetToleranceSEL, (void*)CFPD_IMagicWandOptionData_V14::SetTolerance);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIMagicWandOptionDataSEL, FPDIMagicWandOptionDataGetToleranceSEL, (void*)CFPD_IMagicWandOptionData_V14::GetTolerance);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIMagicWandOptionDataSEL, FPDIMagicWandOptionDataSetIsContinuousSEL, (void*)CFPD_IMagicWandOptionData_V14::SetIsContinuous);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIMagicWandOptionDataSEL, FPDIMagicWandOptionDataGetIsContinuousSEL, (void*)CFPD_IMagicWandOptionData_V14::GetIsContinuous);
	}
};

class CFPD_IDodgeOptionData_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIDodgeOptionDataSEL, FPDIDodgeOptionDataSetDodgeModeSEL, (void*)CFPD_IDodgeOptionData_V14::SetDodgeMode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIDodgeOptionDataSEL, FPDIDodgeOptionDataGetDodgeModeSEL, (void*)CFPD_IDodgeOptionData_V14::GetDodgeMode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIDodgeOptionDataSEL, FPDIDodgeOptionDataSetFlowSEL, (void*)CFPD_IDodgeOptionData_V14::SetFlow);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIDodgeOptionDataSEL, FPDIDodgeOptionDataGetFlowSEL, (void*)CFPD_IDodgeOptionData_V14::GetFlow);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIDodgeOptionDataSEL, FPDIDodgeOptionDataSetOpacitySEL, (void*)CFPD_IDodgeOptionData_V14::SetOpacity);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIDodgeOptionDataSEL, FPDIDodgeOptionDataGetOpacitySEL, (void*)CFPD_IDodgeOptionData_V14::GetOpacity);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIDodgeOptionDataSEL, FPDIDodgeOptionDataSetBaseBrushDiameterSEL, (void*)CFPD_IDodgeOptionData_V14::SetBaseBrushDiameter);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIDodgeOptionDataSEL, FPDIDodgeOptionDataGetBaseBrushDiameterSEL, (void*)CFPD_IDodgeOptionData_V14::GetBaseBrushDiameter);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIDodgeOptionDataSEL, FPDIDodgeOptionDataSetBaseBrushHardnessSEL, (void*)CFPD_IDodgeOptionData_V14::SetBaseBrushHardness);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIDodgeOptionDataSEL, FPDIDodgeOptionDataGetBaseBrushHardnessSEL, (void*)CFPD_IDodgeOptionData_V14::GetBaseBrushHardness);
	}
};

class CFPD_IBurnOptionData_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIBurnOptionDataSEL, FPDIBurnOptionDataSetFlowSEL, (void*)CFPD_IBurnOptionData_V14::SetFlow);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIBurnOptionDataSEL, FPDIBurnOptionDataGetFlowSEL, (void*)CFPD_IBurnOptionData_V14::GetFlow);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIBurnOptionDataSEL, FPDIBurnOptionDataSetOpacitySEL, (void*)CFPD_IBurnOptionData_V14::SetOpacity);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIBurnOptionDataSEL, FPDIBurnOptionDataGetOpacitySEL, (void*)CFPD_IBurnOptionData_V14::GetOpacity);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIBurnOptionDataSEL, FPDIBurnOptionDataSetBurnModeSEL, (void*)CFPD_IBurnOptionData_V14::SetBurnMode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIBurnOptionDataSEL, FPDIBurnOptionDataGetBurnModeSEL, (void*)CFPD_IBurnOptionData_V14::GetBurnMode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIBurnOptionDataSEL, FPDIBurnOptionDataSetBaseBrushDiameterSEL, (void*)CFPD_IBurnOptionData_V14::SetBaseBrushDiameter);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIBurnOptionDataSEL, FPDIBurnOptionDataGetBaseBrushDiameterSEL, (void*)CFPD_IBurnOptionData_V14::GetBaseBrushDiameter);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIBurnOptionDataSEL, FPDIBurnOptionDataSetBaseBrushHardnessSEL, (void*)CFPD_IBurnOptionData_V14::SetBaseBrushHardness);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIBurnOptionDataSEL, FPDIBurnOptionDataGetBaseBrushHardnessSEL, (void*)CFPD_IBurnOptionData_V14::GetBaseBrushHardness);
	}
};

class CFPD_IEyedropperData_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIEyedropperDataSEL, FPDIEyedropperDataGetSampleTypeSEL, (void*)CFPD_IEyedropperData_V14::GetSampleType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIEyedropperDataSEL, FPDIEyedropperDataSetSampleTypeSEL, (void*)CFPD_IEyedropperData_V14::SetSampleType);
	}
};

class CFPD_ICloneStampData_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDICloneStampDataSEL, FPDICloneStampDataSetBlendModeSEL, (void*)CFPD_ICloneStampData_V14::SetBlendMode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDICloneStampDataSEL, FPDICloneStampDataGetBlendModeSEL, (void*)CFPD_ICloneStampData_V14::GetBlendMode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDICloneStampDataSEL, FPDICloneStampDataSetFlowSEL, (void*)CFPD_ICloneStampData_V14::SetFlow);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDICloneStampDataSEL, FPDICloneStampDataGetFlowSEL, (void*)CFPD_ICloneStampData_V14::GetFlow);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDICloneStampDataSEL, FPDICloneStampDataSetOpacitySEL, (void*)CFPD_ICloneStampData_V14::SetOpacity);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDICloneStampDataSEL, FPDICloneStampDataGetOpacitySEL, (void*)CFPD_ICloneStampData_V14::GetOpacity);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDICloneStampDataSEL, FPDICloneStampDataSetIsAlineCheckSEL, (void*)CFPD_ICloneStampData_V14::SetIsAlineCheck);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDICloneStampDataSEL, FPDICloneStampDataGetIsAlineCheckSEL, (void*)CFPD_ICloneStampData_V14::GetIsAlineCheck);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDICloneStampDataSEL, FPDICloneStampDataSetBaseBrushDiameterSEL, (void*)CFPD_ICloneStampData_V14::SetBaseBrushDiameter);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDICloneStampDataSEL, FPDICloneStampDataGetBaseBrushDiameterSEL, (void*)CFPD_ICloneStampData_V14::GetBaseBrushDiameter);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDICloneStampDataSEL, FPDICloneStampDataSetBaseBrushHardnessSEL, (void*)CFPD_ICloneStampData_V14::SetBaseBrushHardness);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDICloneStampDataSEL, FPDICloneStampDataGetBaseBrushHardnessSEL, (void*)CFPD_ICloneStampData_V14::GetBaseBrushHardness);
	}
};

class CFPD_IPaintBucketOptionData_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIPaintBucketOptionDataSEL, FPDIPaintBucketOptionDataSetToleranceSEL, (void*)CFPD_IPaintBucketOptionData_V14::SetTolerance);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIPaintBucketOptionDataSEL, FPDIPaintBucketOptionDataGetToleranceSEL, (void*)CFPD_IPaintBucketOptionData_V14::GetTolerance);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIPaintBucketOptionDataSEL, FPDIPaintBucketOptionDataSetOpacitySEL, (void*)CFPD_IPaintBucketOptionData_V14::SetOpacity);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIPaintBucketOptionDataSEL, FPDIPaintBucketOptionDataGetOpacitySEL, (void*)CFPD_IPaintBucketOptionData_V14::GetOpacity);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIPaintBucketOptionDataSEL, FPDIPaintBucketOptionDataSetColorBlendModeSEL, (void*)CFPD_IPaintBucketOptionData_V14::SetColorBlendMode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIPaintBucketOptionDataSEL, FPDIPaintBucketOptionDataGetColorBlendModeSEL, (void*)CFPD_IPaintBucketOptionData_V14::GetColorBlendMode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIPaintBucketOptionDataSEL, FPDIPaintBucketOptionDataSetContinuousSEL, (void*)CFPD_IPaintBucketOptionData_V14::SetContinuous);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIPaintBucketOptionDataSEL, FPDIPaintBucketOptionDataGetContinuousSEL, (void*)CFPD_IPaintBucketOptionData_V14::GetContinuous);
	}
};

class CFPD_ISpotHealingBrushData_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDISpotHealingBrushDataSEL, FPDISpotHealingBrushDataGetDiameterSEL, (void*)CFPD_ISpotHealingBrushData_V14::GetDiameter);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDISpotHealingBrushDataSEL, FPDISpotHealingBrushDataSetDiameterSEL, (void*)CFPD_ISpotHealingBrushData_V14::SetDiameter);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDISpotHealingBrushDataSEL, FPDISpotHealingBrushDataGetRoundnessSEL, (void*)CFPD_ISpotHealingBrushData_V14::GetRoundness);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDISpotHealingBrushDataSEL, FPDISpotHealingBrushDataSetRoundnessSEL, (void*)CFPD_ISpotHealingBrushData_V14::SetRoundness);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDISpotHealingBrushDataSEL, FPDISpotHealingBrushDataGetAlineSEL, (void*)CFPD_ISpotHealingBrushData_V14::GetAline);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDISpotHealingBrushDataSEL, FPDISpotHealingBrushDataSetAlineSEL, (void*)CFPD_ISpotHealingBrushData_V14::SetAline);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDISpotHealingBrushDataSEL, FPDISpotHealingBrushDataGetModeSEL, (void*)CFPD_ISpotHealingBrushData_V14::GetMode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDISpotHealingBrushDataSEL, FPDISpotHealingBrushDataSetModeSEL, (void*)CFPD_ISpotHealingBrushData_V14::SetMode);
	}
};

// middle_pdfImpl.h end

// In file middle_portfolioImpl.h
// middle_portfolioImpl.h end

// In file middle_preflightImpl.h
// middle_preflightImpl.h end

// In file fofd_basicImpl.h
class CFOFD_Fontmapper_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
	}
};

// fofd_basicImpl.h end

// In file fofd_docImpl.h
// fofd_docImpl.h end

// In file fofd_pageImpl.h
// fofd_pageImpl.h end

// In file fofd_renderImpl.h
// fofd_renderImpl.h end

// In file fofd_sigImpl.h
// fofd_sigImpl.h end

// In file fpd_3DImpl.h
class CFPD_3DCompositionProvider_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3DCompositionProviderSEL, FPD3DCompositionProviderNewSEL, (void*)CFPD_3DCompositionProvider_V14::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3DCompositionProviderSEL, FPD3DCompositionProviderDestroySEL, (void*)CFPD_3DCompositionProvider_V14::Destroy);
	}
};

class CFPD_BoundingBox_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDBoundingBoxSEL, FPDBoundingBoxCreateBoxSEL, (void*)CFPD_BoundingBox_V14::CreateBox);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDBoundingBoxSEL, FPDBoundingBoxDeleteBoxSEL, (void*)CFPD_BoundingBox_V14::DeleteBox);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDBoundingBoxSEL, FPDBoundingBoxGetSqrSEL, (void*)CFPD_BoundingBox_V14::GetSqr);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDBoundingBoxSEL, FPDBoundingBoxGetCenterSEL, (void*)CFPD_BoundingBox_V14::GetCenter);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDBoundingBoxSEL, FPDBoundingBoxGetSizeSEL, (void*)CFPD_BoundingBox_V14::GetSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDBoundingBoxSEL, FPDBoundingBoxGetMaxValuesSEL, (void*)CFPD_BoundingBox_V14::GetMaxValues);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDBoundingBoxSEL, FPDBoundingBoxGetMinValuesSEL, (void*)CFPD_BoundingBox_V14::GetMinValues);
	}
};

// fpd_3DImpl.h end

// In file fpd_barcodeImpl.h
// fpd_barcodeImpl.h end

// In file fpd_convertImpl.h
// fpd_convertImpl.h end

// In file fpd_docImpl.h
class CFPD_CertStore_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCertStoreSEL, FPDCertStoreNewSEL, (void*)CFPD_CertStore_V14::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCertStoreSEL, FPDCertStoreDestroySEL, (void*)CFPD_CertStore_V14::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCertStoreSEL, FPDCertStoreGetHCertStoreSEL, (void*)CFPD_CertStore_V14::GetHCertStore);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCertStoreSEL, FPDCertStoreLoadMYSystemCertsSEL, (void*)CFPD_CertStore_V14::LoadMYSystemCerts);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCertStoreSEL, FPDCertStoreGetCertFromCertSNIdSEL, (void*)CFPD_CertStore_V14::GetCertFromCertSNId);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCertStoreSEL, FPDCertStoreGetCertSNIDSEL, (void*)CFPD_CertStore_V14::GetCertSNID);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCertStoreSEL, FPDCertStoreGetCertCountSEL, (void*)CFPD_CertStore_V14::GetCertCount);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCertStoreSEL, FPDCertStoreGetCertsArraySEL, (void*)CFPD_CertStore_V14::GetCertsArray);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCertStoreSEL, FPDCertStoreIsPrivateKeyCertSEL, (void*)CFPD_CertStore_V14::IsPrivateKeyCert);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCertStoreSEL, FPDCertStoreLoadOtherCertsSEL, (void*)CFPD_CertStore_V14::LoadOtherCerts);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCertStoreSEL, FPDCertStoreLoadFileCertsSEL, (void*)CFPD_CertStore_V14::LoadFileCerts);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCertStoreSEL, FPDCertStoreAddCertSEL, (void*)CFPD_CertStore_V14::AddCert);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCertStoreSEL, FPDCertStoreAddCertsSEL, (void*)CFPD_CertStore_V14::AddCerts);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCertStoreSEL, FPDCertStoreAddDocDssCertsSEL, (void*)CFPD_CertStore_V14::AddDocDssCerts);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCertStoreSEL, FPDCertStoreGetCertFromCertSNIDHEXSEL, (void*)CFPD_CertStore_V14::GetCertFromCertSNIDHEX);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCertStoreSEL, FPDCertStoreFindCertSEL, (void*)CFPD_CertStore_V14::FindCert);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCertStoreSEL, FPDCertStoreIsPrivateHasUsageSEL, (void*)CFPD_CertStore_V14::IsPrivateHasUsage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCertStoreSEL, FPDCertStoreIsSm2SignWithSm3SEL, (void*)CFPD_CertStore_V14::IsSm2SignWithSm3);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCertStoreSEL, FPDCertStoreAddCert2SEL, (void*)CFPD_CertStore_V14::AddCert2);
	}
};

class CFPD_PageLabel_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageLabelSEL, FPDPageLabelNewSEL, (void*)CFPD_PageLabel_V14::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageLabelSEL, FPDPageLabelDestroySEL, (void*)CFPD_PageLabel_V14::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageLabelSEL, FPDPageLabelGetLabelSEL, (void*)CFPD_PageLabel_V14::GetLabel);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageLabelSEL, FPDPageLabelGetPageByLabelSEL, (void*)CFPD_PageLabel_V14::GetPageByLabel);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageLabelSEL, FPDPageLabelGetPageByLabel2SEL, (void*)CFPD_PageLabel_V14::GetPageByLabel2);
	}
};

class CFPD_SignCert_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignCertSEL, FPDSignCertCreateCertSEL, (void*)CFPD_SignCert_V14::CreateCert);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignCertSEL, FPDSignCertDestroyCertSEL, (void*)CFPD_SignCert_V14::DestroyCert);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignCertSEL, FPDSignCertInitSEL, (void*)CFPD_SignCert_V14::Init);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignCertSEL, FPDSignCertInit1SEL, (void*)CFPD_SignCert_V14::Init1);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignCertSEL, FPDSignCertInit2SEL, (void*)CFPD_SignCert_V14::Init2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignCertSEL, FPDSignCertGetStreamSEL, (void*)CFPD_SignCert_V14::GetStream);
	}
};

class CFPD_SignCertHandler_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignCertHandlerSEL, FPDSignCertHandlerNewSEL, (void*)CFPD_SignCertHandler_V14::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignCertHandlerSEL, FPDSignCertHandlerDestroySEL, (void*)CFPD_SignCertHandler_V14::Destroy);
	}
};

class CFPD_CertMethod_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCertMethodSEL, FPDCertMethodGetCertSNIDSEL, (void*)CFPD_CertMethod_V14::GetCertSNID);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCertMethodSEL, FPDCertMethodGetCertSNIDHEXSEL, (void*)CFPD_CertMethod_V14::GetCertSNIDHEX);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCertMethodSEL, FPDCertMethodGetCertChainsFromCertSEL, (void*)CFPD_CertMethod_V14::GetCertChainsFromCert);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCertMethodSEL, FPDCertMethodFreeCertChainsSEL, (void*)CFPD_CertMethod_V14::FreeCertChains);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCertMethodSEL, FPDCertMethodGetCertChainsFromCert1SEL, (void*)CFPD_CertMethod_V14::GetCertChainsFromCert1);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCertMethodSEL, FPDCertMethodClearCertPinSEL, (void*)CFPD_CertMethod_V14::ClearCertPin);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCertMethodSEL, FPDCertMethodGetCertIssuerSEL, (void*)CFPD_CertMethod_V14::GetCertIssuer);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCertMethodSEL, FPDCertMethodGetCertExpriesSEL, (void*)CFPD_CertMethod_V14::GetCertExpries);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCertMethodSEL, FPDCertMethodGetCertIssuerNameSEL, (void*)CFPD_CertMethod_V14::GetCertIssuerName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCertMethodSEL, FPDCertMethodGetCertNameSEL, (void*)CFPD_CertMethod_V14::GetCertName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCertMethodSEL, FPDCertMethodGetSignerNameSEL, (void*)CFPD_CertMethod_V14::GetSignerName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCertMethodSEL, FPDCertMethodIsSelfSignedCertSEL, (void*)CFPD_CertMethod_V14::IsSelfSignedCert);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCertMethodSEL, FPDCertMethodIsValidRootSEL, (void*)CFPD_CertMethod_V14::IsValidRoot);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCertMethodSEL, FPDCertMethodGetCertStartTimeSEL, (void*)CFPD_CertMethod_V14::GetCertStartTime);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCertMethodSEL, FPDCertMethodGetCertStartTime1SEL, (void*)CFPD_CertMethod_V14::GetCertStartTime1);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCertMethodSEL, FPDCertMethodGetCertExpiredTimeSEL, (void*)CFPD_CertMethod_V14::GetCertExpiredTime);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCertMethodSEL, FPDCertMethodSystemTimeToStringSEL, (void*)CFPD_CertMethod_V14::SystemTimeToString);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCertMethodSEL, FPDCertMethodCertOverdueSEL, (void*)CFPD_CertMethod_V14::CertOverdue);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCertMethodSEL, FPDCertMethodCertToStringSEL, (void*)CFPD_CertMethod_V14::CertToString);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCertMethodSEL, FPDCertMethodGetCertDNSEL, (void*)CFPD_CertMethod_V14::GetCertDN);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCertMethodSEL, FPDCertMethodCertCloneSEL, (void*)CFPD_CertMethod_V14::CertClone);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCertMethodSEL, FPDCertMethodGetExtKeyUsageSEL, (void*)CFPD_CertMethod_V14::GetExtKeyUsage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCertMethodSEL, FPDCertMethodGetCertStartTime2SEL, (void*)CFPD_CertMethod_V14::GetCertStartTime2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCertMethodSEL, FPDCertMethodGetCertExpritesTimeSEL, (void*)CFPD_CertMethod_V14::GetCertExpritesTime);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCertMethodSEL, FPDCertMethodCsToHexSEL, (void*)CFPD_CertMethod_V14::CsToHex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCertMethodSEL, FPDCertMethodGenerateHashDataSEL, (void*)CFPD_CertMethod_V14::GenerateHashData);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCertMethodSEL, FPDCertMethodGenerateHashData1SEL, (void*)CFPD_CertMethod_V14::GenerateHashData1);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCertMethodSEL, FPDCertMethodFindCustomSignOIDSEL, (void*)CFPD_CertMethod_V14::FindCustomSignOID);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCertMethodSEL, FPDCertMethodGetQCStatementsSEL, (void*)CFPD_CertMethod_V14::GetQCStatements);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCertMethodSEL, FPDCertMethodIsTime1NotLaterThanTime2SEL, (void*)CFPD_CertMethod_V14::IsTime1NotLaterThanTime2);
	}
};

class CFPD_SignCRL_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignCRLSEL, FPDSignCRLNewSEL, (void*)CFPD_SignCRL_V14::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignCRLSEL, FPDSignCRLDestroySEL, (void*)CFPD_SignCRL_V14::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignCRLSEL, FPDSignCRLInitSEL, (void*)CFPD_SignCRL_V14::Init);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignCRLSEL, FPDSignCRLInit1SEL, (void*)CFPD_SignCRL_V14::Init1);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignCRLSEL, FPDSignCRLGetStreamSEL, (void*)CFPD_SignCRL_V14::GetStream);
	}
};

class CFPD_SignOCSP_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignOCSPSEL, FPDSignOCSPNewSEL, (void*)CFPD_SignOCSP_V14::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignOCSPSEL, FPDSignOCSPDestroySEL, (void*)CFPD_SignOCSP_V14::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignOCSPSEL, FPDSignOCSPInitSEL, (void*)CFPD_SignOCSP_V14::Init);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignOCSPSEL, FPDSignOCSPInit1SEL, (void*)CFPD_SignOCSP_V14::Init1);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignOCSPSEL, FPDSignOCSPGetStreamSEL, (void*)CFPD_SignOCSP_V14::GetStream);
	}
};

class CFPD_CGWSignDataRevoInfo_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCGWSignDataRevoInfoSEL, FPDCGWSignDataRevoInfoGetTypeSEL, (void*)CFPD_CGWSignDataRevoInfo_V14::GetType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCGWSignDataRevoInfoSEL, FPDCGWSignDataRevoInfoSetTypeSEL, (void*)CFPD_CGWSignDataRevoInfo_V14::SetType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCGWSignDataRevoInfoSEL, FPDCGWSignDataRevoInfoGetRevoInfoPDFSteamSEL, (void*)CFPD_CGWSignDataRevoInfo_V14::GetRevoInfoPDFSteam);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCGWSignDataRevoInfoSEL, FPDCGWSignDataRevoInfoGetRevoinfoSizeSEL, (void*)CFPD_CGWSignDataRevoInfo_V14::GetRevoinfoSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCGWSignDataRevoInfoSEL, FPDCGWSignDataRevoInfoGetLocalSignVarifyTimeSEL, (void*)CFPD_CGWSignDataRevoInfo_V14::GetLocalSignVarifyTime);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCGWSignDataRevoInfoSEL, FPDCGWSignDataRevoInfoSetLocalSignVarifyTimeSEL, (void*)CFPD_CGWSignDataRevoInfo_V14::SetLocalSignVarifyTime);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCGWSignDataRevoInfoSEL, FPDCGWSignDataRevoInfoGetLocalRevoCheckTimeSEL, (void*)CFPD_CGWSignDataRevoInfo_V14::GetLocalRevoCheckTime);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCGWSignDataRevoInfoSEL, FPDCGWSignDataRevoInfoSetLocalRevoCheckTimeSEL, (void*)CFPD_CGWSignDataRevoInfo_V14::SetLocalRevoCheckTime);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCGWSignDataRevoInfoSEL, FPDCGWSignDataRevoInfoGetRevoInfoHashKeySEL, (void*)CFPD_CGWSignDataRevoInfo_V14::GetRevoInfoHashKey);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCGWSignDataRevoInfoSEL, FPDCGWSignDataRevoInfoDestroySEL, (void*)CFPD_CGWSignDataRevoInfo_V14::Destroy);
	}
};

class CFPD_ReovcationProgressCallBack_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDReovcationProgressCallBackSEL, FPDReovcationProgressCallBackNewSEL, (void*)CFPD_ReovcationProgressCallBack_V14::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDReovcationProgressCallBackSEL, FPDReovcationProgressCallBackDestroySEL, (void*)CFPD_ReovcationProgressCallBack_V14::Destroy);
	}
};

class CFPD_CHECKREVOINFODATA_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCHECKREVOINFODATASEL, FPDCHECKREVOINFODATANewSEL, (void*)CFPD_CHECKREVOINFODATA_V14::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCHECKREVOINFODATASEL, FPDCHECKREVOINFODATADestroySEL, (void*)CFPD_CHECKREVOINFODATA_V14::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCHECKREVOINFODATASEL, FPDCHECKREVOINFODATAGetSignContensSEL, (void*)CFPD_CHECKREVOINFODATA_V14::GetSignContens);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCHECKREVOINFODATASEL, FPDCHECKREVOINFODATASetSignContensSEL, (void*)CFPD_CHECKREVOINFODATA_V14::SetSignContens);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCHECKREVOINFODATASEL, FPDCHECKREVOINFODATAGetSignHashSEL, (void*)CFPD_CHECKREVOINFODATA_V14::GetSignHash);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCHECKREVOINFODATASEL, FPDCHECKREVOINFODATASetSignHashSEL, (void*)CFPD_CHECKREVOINFODATA_V14::SetSignHash);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCHECKREVOINFODATASEL, FPDCHECKREVOINFODATASetETypeSEL, (void*)CFPD_CHECKREVOINFODATA_V14::SetEType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCHECKREVOINFODATASEL, FPDCHECKREVOINFODATAGetETypeSEL, (void*)CFPD_CHECKREVOINFODATA_V14::GetEType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCHECKREVOINFODATASEL, FPDCHECKREVOINFODATAGetUTCtimeSEL, (void*)CFPD_CHECKREVOINFODATA_V14::GetUTCtime);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCHECKREVOINFODATASEL, FPDCHECKREVOINFODATASetUTCtimeSEL, (void*)CFPD_CHECKREVOINFODATA_V14::SetUTCtime);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCHECKREVOINFODATASEL, FPDCHECKREVOINFODATAGetDSSInfoSEL, (void*)CFPD_CHECKREVOINFODATA_V14::GetDSSInfo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCHECKREVOINFODATASEL, FPDCHECKREVOINFODATASetDSSInfoSEL, (void*)CFPD_CHECKREVOINFODATA_V14::SetDSSInfo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCHECKREVOINFODATASEL, FPDCHECKREVOINFODATAGetSignInfoSEL, (void*)CFPD_CHECKREVOINFODATA_V14::GetSignInfo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCHECKREVOINFODATASEL, FPDCHECKREVOINFODATASetSignInfoSEL, (void*)CFPD_CHECKREVOINFODATA_V14::SetSignInfo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCHECKREVOINFODATASEL, FPDCHECKREVOINFODATASetEReturnTypeSEL, (void*)CFPD_CHECKREVOINFODATA_V14::SetEReturnType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCHECKREVOINFODATASEL, FPDCHECKREVOINFODATAGetEReturnTypeSEL, (void*)CFPD_CHECKREVOINFODATA_V14::GetEReturnType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCHECKREVOINFODATASEL, FPDCHECKREVOINFODATAGetReturnUTCtimeSEL, (void*)CFPD_CHECKREVOINFODATA_V14::GetReturnUTCtime);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCHECKREVOINFODATASEL, FPDCHECKREVOINFODATASetReturnUTCtimeSEL, (void*)CFPD_CHECKREVOINFODATA_V14::SetReturnUTCtime);
	}
};

class CFPD_CHECKData_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCHECKDataSEL, FPDCHECKDataNewSEL, (void*)CFPD_CHECKData_V14::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCHECKDataSEL, FPDCHECKDataDestroySEL, (void*)CFPD_CHECKData_V14::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCHECKDataSEL, FPDCHECKDataGetCheckDataTypeSEL, (void*)CFPD_CHECKData_V14::GetCheckDataType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCHECKDataSEL, FPDCHECKDataSetCheckDataTypeSEL, (void*)CFPD_CHECKData_V14::SetCheckDataType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCHECKDataSEL, FPDCHECKDataGetSigntimeSEL, (void*)CFPD_CHECKData_V14::GetSigntime);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCHECKDataSEL, FPDCHECKDataSetSigntimeSEL, (void*)CFPD_CHECKData_V14::SetSigntime);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCHECKDataSEL, FPDCHECKDataGetNexttimeSEL, (void*)CFPD_CHECKData_V14::GetNexttime);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCHECKDataSEL, FPDCHECKDataSetNexttimeSEL, (void*)CFPD_CHECKData_V14::SetNexttime);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCHECKDataSEL, FPDCHECKDataGetRevocationtimeSEL, (void*)CFPD_CHECKData_V14::GetRevocationtime);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCHECKDataSEL, FPDCHECKDataSetRevocationtimeSEL, (void*)CFPD_CHECKData_V14::SetRevocationtime);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCHECKDataSEL, FPDCHECKDataGetIssuerSEL, (void*)CFPD_CHECKData_V14::GetIssuer);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCHECKDataSEL, FPDCHECKDataSetIssuerSEL, (void*)CFPD_CHECKData_V14::SetIssuer);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCHECKDataSEL, FPDCHECKDataGetURLSEL, (void*)CFPD_CHECKData_V14::GetURL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCHECKDataSEL, FPDCHECKDataSetURLSEL, (void*)CFPD_CHECKData_V14::SetURL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCHECKDataSEL, FPDCHECKDataGetResponseDataSEL, (void*)CFPD_CHECKData_V14::GetResponseData);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCHECKDataSEL, FPDCHECKDataSetResponseDataSEL, (void*)CFPD_CHECKData_V14::SetResponseData);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCHECKDataSEL, FPDCHECKDataGetRevoDataSEL, (void*)CFPD_CHECKData_V14::GetRevoData);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCHECKDataSEL, FPDCHECKDataSetResponseData2SEL, (void*)CFPD_CHECKData_V14::SetResponseData2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCHECKDataSEL, FPDCHECKDataGetResponseIssuerSEL, (void*)CFPD_CHECKData_V14::GetResponseIssuer);
	}
};

class CFPD_VerifyRevoke_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVerifyRevokeSEL, FPDVerifyRevokeCreateRevokeSEL, (void*)CFPD_VerifyRevoke_V14::CreateRevoke);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVerifyRevokeSEL, FPDVerifyRevokeDeleteRevokeSEL, (void*)CFPD_VerifyRevoke_V14::DeleteRevoke);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVerifyRevokeSEL, FPDVerifyRevokeSetReovactionProgressCallBackSEL, (void*)CFPD_VerifyRevoke_V14::SetReovactionProgressCallBack);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVerifyRevokeSEL, FPDVerifyRevokeCheckRevoInfoSEL, (void*)CFPD_VerifyRevoke_V14::CheckRevoInfo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVerifyRevokeSEL, FPDVerifyRevokeSetRevoCheckTimeSEL, (void*)CFPD_VerifyRevoke_V14::SetRevoCheckTime);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVerifyRevokeSEL, FPDVerifyRevokeSetSignTimeSEL, (void*)CFPD_VerifyRevoke_V14::SetSignTime);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVerifyRevokeSEL, FPDVerifyRevokeSetCRLPathSEL, (void*)CFPD_VerifyRevoke_V14::SetCRLPath);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVerifyRevokeSEL, FPDVerifyRevokeSetTimeOutUrlSEL, (void*)CFPD_VerifyRevoke_V14::SetTimeOutUrl);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVerifyRevokeSEL, FPDVerifyRevokeGetTimeOutUrlSEL, (void*)CFPD_VerifyRevoke_V14::GetTimeOutUrl);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVerifyRevokeSEL, FPDVerifyRevokeSetCertAndIssureSEL, (void*)CFPD_VerifyRevoke_V14::SetCertAndIssure);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVerifyRevokeSEL, FPDVerifyRevokeClearCheckDataSEL, (void*)CFPD_VerifyRevoke_V14::ClearCheckData);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVerifyRevokeSEL, FPDVerifyRevokeClearCheckRevoSEL, (void*)CFPD_VerifyRevoke_V14::ClearCheckRevo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVerifyRevokeSEL, FPDVerifyRevokeGetRevoInfoInDssSEL, (void*)CFPD_VerifyRevoke_V14::GetRevoInfoInDss);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVerifyRevokeSEL, FPDVerifyRevokeGetDSSDataRevoinfoSEL, (void*)CFPD_VerifyRevoke_V14::GetDSSDataRevoinfo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVerifyRevokeSEL, FPDVerifyRevokeGetSignDataRevoinfoSEL, (void*)CFPD_VerifyRevoke_V14::GetSignDataRevoinfo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVerifyRevokeSEL, FPDVerifyRevokeCheckCertRevo_onlineSEL, (void*)CFPD_VerifyRevoke_V14::CheckCertRevo_online);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVerifyRevokeSEL, FPDVerifyRevokeCheckRevoInfoInSignDataSEL, (void*)CFPD_VerifyRevoke_V14::CheckRevoInfoInSignData);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVerifyRevokeSEL, FPDVerifyRevokeGetXCertSEL, (void*)CFPD_VerifyRevoke_V14::GetXCert);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVerifyRevokeSEL, FPDVerifyRevokeGetXIssuerSEL, (void*)CFPD_VerifyRevoke_V14::GetXIssuer);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVerifyRevokeSEL, FPDVerifyRevokeSetCRLDownloadHandlerSEL, (void*)CFPD_VerifyRevoke_V14::SetCRLDownloadHandler);
	}
};

class CFPD_VRI_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVRISEL, FPDVRICreateVRISEL, (void*)CFPD_VRI_V14::CreateVRI);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVRISEL, FPDVRICreateVRI1SEL, (void*)CFPD_VRI_V14::CreateVRI1);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVRISEL, FPDVRIDeleteVRISEL, (void*)CFPD_VRI_V14::DeleteVRI);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVRISEL, FPDVRIAddTUSEL, (void*)CFPD_VRI_V14::AddTU);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVRISEL, FPDVRIAddCRLSEL, (void*)CFPD_VRI_V14::AddCRL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVRISEL, FPDVRIAddOCSPSEL, (void*)CFPD_VRI_V14::AddOCSP);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVRISEL, FPDVRIIsInArraySEL, (void*)CFPD_VRI_V14::IsInArray);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVRISEL, FPDVRIGetDictSEL, (void*)CFPD_VRI_V14::GetDict);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVRISEL, FPDVRIGetCRLArraySEL, (void*)CFPD_VRI_V14::GetCRLArray);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVRISEL, FPDVRIGetOCSPArraySEL, (void*)CFPD_VRI_V14::GetOCSPArray);
	}
};

class CFPD_DSS_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDSSSEL, FPDDSSCreateDSSSEL, (void*)CFPD_DSS_V14::CreateDSS);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDSSSEL, FPDDSSDeleteDSSSEL, (void*)CFPD_DSS_V14::DeleteDSS);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDSSSEL, FPDDSSIsEmptySEL, (void*)CFPD_DSS_V14::IsEmpty);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDSSSEL, FPDDSSAddVRISEL, (void*)CFPD_DSS_V14::AddVRI);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDSSSEL, FPDDSSAddVRI1SEL, (void*)CFPD_DSS_V14::AddVRI1);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDSSSEL, FPDDSSGetVRIDictSEL, (void*)CFPD_DSS_V14::GetVRIDict);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDSSSEL, FPDDSSGetCertArraySEL, (void*)CFPD_DSS_V14::GetCertArray);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDSSSEL, FPDDSSGetCRLArraySEL, (void*)CFPD_DSS_V14::GetCRLArray);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDSSSEL, FPDDSSGetOCSPArraySEL, (void*)CFPD_DSS_V14::GetOCSPArray);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDSSSEL, FPDDSSGetDSSSEL, (void*)CFPD_DSS_V14::GetDSS);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDSSSEL, FPDDSSCreateDSSForDocSEL, (void*)CFPD_DSS_V14::CreateDSSForDoc);
	}
};

class CFPD_SignatureVerifyResult_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureVerifyResultSEL, FPDSignatureVerifyResultCreateVerifyResultSEL, (void*)CFPD_SignatureVerifyResult_V14::CreateVerifyResult);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureVerifyResultSEL, FPDSignatureVerifyResultDeleteResultSEL, (void*)CFPD_SignatureVerifyResult_V14::DeleteResult);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureVerifyResultSEL, FPDSignatureVerifyResultSetOCSPRespResultSEL, (void*)CFPD_SignatureVerifyResult_V14::SetOCSPRespResult);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureVerifyResultSEL, FPDSignatureVerifyResultSetTSTResultSEL, (void*)CFPD_SignatureVerifyResult_V14::SetTSTResult);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureVerifyResultSEL, FPDSignatureVerifyResultGetSignatureNameSEL, (void*)CFPD_SignatureVerifyResult_V14::GetSignatureName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureVerifyResultSEL, FPDSignatureVerifyResultGetSignatureHashSEL, (void*)CFPD_SignatureVerifyResult_V14::GetSignatureHash);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureVerifyResultSEL, FPDSignatureVerifyResultGetSignatureStatusSEL, (void*)CFPD_SignatureVerifyResult_V14::GetSignatureStatus);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureVerifyResultSEL, FPDSignatureVerifyResultGetSigCheckTimeSEL, (void*)CFPD_SignatureVerifyResult_V14::GetSigCheckTime);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureVerifyResultSEL, FPDSignatureVerifyResultGetLTVattributeSEL, (void*)CFPD_SignatureVerifyResult_V14::GetLTVattribute);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureVerifyResultSEL, FPDSignatureVerifyResultGetSigCheckTimeTypeSEL, (void*)CFPD_SignatureVerifyResult_V14::GetSigCheckTimeType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureVerifyResultSEL, FPDSignatureVerifyResultGetCertResultStringSEL, (void*)CFPD_SignatureVerifyResult_V14::GetCertResultString);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureVerifyResultSEL, FPDSignatureVerifyResultGetCertVerifyResultSEL, (void*)CFPD_SignatureVerifyResult_V14::GetCertVerifyResult);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureVerifyResultSEL, FPDSignatureVerifyResultGetOCSPSigResultSEL, (void*)CFPD_SignatureVerifyResult_V14::GetOCSPSigResult);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureVerifyResultSEL, FPDSignatureVerifyResultGetSigTSTResultSEL, (void*)CFPD_SignatureVerifyResult_V14::GetSigTSTResult);
	}
};

class CFPD_TrustedCertStore_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTrustedCertStoreSEL, FPDTrustedCertStoreNewSEL, (void*)CFPD_TrustedCertStore_V14::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTrustedCertStoreSEL, FPDTrustedCertStoreDestroySEL, (void*)CFPD_TrustedCertStore_V14::Destroy);
	}
};

class CFPD_LtvVerifier_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLtvVerifierSEL, FPDLtvVerifierNewSEL, (void*)CFPD_LtvVerifier_V14::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLtvVerifierSEL, FPDLtvVerifierDestorySEL, (void*)CFPD_LtvVerifier_V14::Destory);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLtvVerifierSEL, FPDLtvVerifierSetRevocationHandlerSEL, (void*)CFPD_LtvVerifier_V14::SetRevocationHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLtvVerifierSEL, FPDLtvVerifierSetVerifyModeSEL, (void*)CFPD_LtvVerifier_V14::SetVerifyMode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLtvVerifierSEL, FPDLtvVerifierSetCertStoreSEL, (void*)CFPD_LtvVerifier_V14::SetCertStore);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLtvVerifierSEL, FPDLtvVerifierVerifySEL, (void*)CFPD_LtvVerifier_V14::Verify);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLtvVerifierSEL, FPDLtvVerifierVerifySingleSigSEL, (void*)CFPD_LtvVerifier_V14::VerifySingleSig);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLtvVerifierSEL, FPDLtvVerifierAddDSSSEL, (void*)CFPD_LtvVerifier_V14::AddDSS);
	}
};

class CFPD_SigModifyList_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSigModifyListSEL, FPDSigModifyListNewSEL, (void*)CFPD_SigModifyList_V14::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSigModifyListSEL, FPDSigModifyListDeleteSEL, (void*)CFPD_SigModifyList_V14::Delete);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSigModifyListSEL, FPDSigModifyListGetOBJECTTYPEListSEL, (void*)CFPD_SigModifyList_V14::GetOBJECTTYPEList);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSigModifyListSEL, FPDSigModifyListGetMODIFYTYPEByOBJTYPESEL, (void*)CFPD_SigModifyList_V14::GetMODIFYTYPEByOBJTYPE);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSigModifyListSEL, FPDSigModifyListGetMODIFYADATACountByModifyTypeSEL, (void*)CFPD_SigModifyList_V14::GetMODIFYADATACountByModifyType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSigModifyListSEL, FPDSigModifyListGetMODIFYADATAByModifyTypeAndIndexSEL, (void*)CFPD_SigModifyList_V14::GetMODIFYADATAByModifyTypeAndIndex);
	}
};

class CFPD_IncreSaveModifyDetector_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIncreSaveModifyDetectorSEL, FPDIncreSaveModifyDetectorNewSEL, (void*)CFPD_IncreSaveModifyDetector_V14::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIncreSaveModifyDetectorSEL, FPDIncreSaveModifyDetectorDeleteSEL, (void*)CFPD_IncreSaveModifyDetector_V14::Delete);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIncreSaveModifyDetectorSEL, FPDIncreSaveModifyDetectorParseIncrementObjectSEL, (void*)CFPD_IncreSaveModifyDetector_V14::ParseIncrementObject);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIncreSaveModifyDetectorSEL, FPDIncreSaveModifyDetectorCheckLegalityForModifySEL, (void*)CFPD_IncreSaveModifyDetector_V14::CheckLegalityForModify);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIncreSaveModifyDetectorSEL, FPDIncreSaveModifyDetectorGetAccessPermissionsSEL, (void*)CFPD_IncreSaveModifyDetector_V14::GetAccessPermissions);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIncreSaveModifyDetectorSEL, FPDIncreSaveModifyDetectorIsHasSignSEL, (void*)CFPD_IncreSaveModifyDetector_V14::IsHasSign);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIncreSaveModifyDetectorSEL, FPDIncreSaveModifyDetectorGetSignListCountSEL, (void*)CFPD_IncreSaveModifyDetector_V14::GetSignListCount);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIncreSaveModifyDetectorSEL, FPDIncreSaveModifyDetectorFindIncrementIndexSEL, (void*)CFPD_IncreSaveModifyDetector_V14::FindIncrementIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIncreSaveModifyDetectorSEL, FPDIncreSaveModifyDetectorFindNextIncrementIndexSEL, (void*)CFPD_IncreSaveModifyDetector_V14::FindNextIncrementIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIncreSaveModifyDetectorSEL, FPDIncreSaveModifyDetectorFindPreIncrementIndexSEL, (void*)CFPD_IncreSaveModifyDetector_V14::FindPreIncrementIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIncreSaveModifyDetectorSEL, FPDIncreSaveModifyDetectorClearSignDataSEL, (void*)CFPD_IncreSaveModifyDetector_V14::ClearSignData);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIncreSaveModifyDetectorSEL, FPDIncreSaveModifyDetectorClearDataSEL, (void*)CFPD_IncreSaveModifyDetector_V14::ClearData);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIncreSaveModifyDetectorSEL, FPDIncreSaveModifyDetectorUpdateVerifyFromCHECKRESULTSEL, (void*)CFPD_IncreSaveModifyDetector_V14::UpdateVerifyFromCHECKRESULT);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIncreSaveModifyDetectorSEL, FPDIncreSaveModifyDetectorGetModifyListForSignSEL, (void*)CFPD_IncreSaveModifyDetector_V14::GetModifyListForSign);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIncreSaveModifyDetectorSEL, FPDIncreSaveModifyDetectorAddModifyDataSEL, (void*)CFPD_IncreSaveModifyDetector_V14::AddModifyData);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIncreSaveModifyDetectorSEL, FPDIncreSaveModifyDetectorGetModifySignSEL, (void*)CFPD_IncreSaveModifyDetector_V14::GetModifySign);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIncreSaveModifyDetectorSEL, FPDIncreSaveModifyDetectorGetSignByIndexSEL, (void*)CFPD_IncreSaveModifyDetector_V14::GetSignByIndex);
	}
};

class CFPD_PermissionResult_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPermissionResultSEL, FPDPermissionResultNewSEL, (void*)CFPD_PermissionResult_V14::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPermissionResultSEL, FPDPermissionResultDestroySEL, (void*)CFPD_PermissionResult_V14::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPermissionResultSEL, FPDPermissionResultGetPermissionsKeyArraySEL, (void*)CFPD_PermissionResult_V14::GetPermissionsKeyArray);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPermissionResultSEL, FPDPermissionResultGetPermissionsValueByKeySEL, (void*)CFPD_PermissionResult_V14::GetPermissionsValueByKey);
	}
};

class CFPD_SignatureEdit_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureEditSEL, FPDSignatureEditNewSignatureEditSEL, (void*)CFPD_SignatureEdit_V14::NewSignatureEdit);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureEditSEL, FPDSignatureEditNewSignatureEdit1SEL, (void*)CFPD_SignatureEdit_V14::NewSignatureEdit1);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureEditSEL, FPDSignatureEditDeleteSignatureEditSEL, (void*)CFPD_SignatureEdit_V14::DeleteSignatureEdit);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureEditSEL, FPDSignatureEditLoadSignaturesSEL, (void*)CFPD_SignatureEdit_V14::LoadSignatures);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureEditSEL, FPDSignatureEditFixPageSignatureFieldsSEL, (void*)CFPD_SignatureEdit_V14::FixPageSignatureFields);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureEditSEL, FPDSignatureEditCountSignaturesSEL, (void*)CFPD_SignatureEdit_V14::CountSignatures);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureEditSEL, FPDSignatureEditGetSignatureSEL, (void*)CFPD_SignatureEdit_V14::GetSignature);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureEditSEL, FPDSignatureEditGetSignatureAtPosSEL, (void*)CFPD_SignatureEdit_V14::GetSignatureAtPos);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureEditSEL, FPDSignatureEditAddNewSignatureSEL, (void*)CFPD_SignatureEdit_V14::AddNewSignature);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureEditSEL, FPDSignatureEditUpdateSignatureSEL, (void*)CFPD_SignatureEdit_V14::UpdateSignature);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureEditSEL, FPDSignatureEditRemoveSignatureSEL, (void*)CFPD_SignatureEdit_V14::RemoveSignature);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureEditSEL, FPDSignatureEditRemoveSignaturesSEL, (void*)CFPD_SignatureEdit_V14::RemoveSignatures);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureEditSEL, FPDSignatureEditIsSignedSEL, (void*)CFPD_SignatureEdit_V14::IsSigned);
	}
};

class CFPD_Signature_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureSEL, FPDSignatureNewSignatureSEL, (void*)CFPD_Signature_V14::NewSignature);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureSEL, FPDSignatureNewSignature1SEL, (void*)CFPD_Signature_V14::NewSignature1);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureSEL, FPDSignatureDeleteSignatureSEL, (void*)CFPD_Signature_V14::DeleteSignature);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureSEL, FPDSignatureCreateSigVDictSEL, (void*)CFPD_Signature_V14::CreateSigVDict);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureSEL, FPDSignatureGetSignatureDictSEL, (void*)CFPD_Signature_V14::GetSignatureDict);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureSEL, FPDSignatureGetSignatureVDictSEL, (void*)CFPD_Signature_V14::GetSignatureVDict);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureSEL, FPDSignatureSetKeyValueSEL, (void*)CFPD_Signature_V14::SetKeyValue);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureSEL, FPDSignatureSetKeyValue1SEL, (void*)CFPD_Signature_V14::SetKeyValue1);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureSEL, FPDSignatureGetKeyValueSEL, (void*)CFPD_Signature_V14::GetKeyValue);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureSEL, FPDSignatureGetKeyValue1SEL, (void*)CFPD_Signature_V14::GetKeyValue1);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureSEL, FPDSignatureSetFlagsSEL, (void*)CFPD_Signature_V14::SetFlags);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureSEL, FPDSignatureGetFlagsSEL, (void*)CFPD_Signature_V14::GetFlags);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureSEL, FPDSignatureSetCertChainSEL, (void*)CFPD_Signature_V14::SetCertChain);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureSEL, FPDSignatureCountCertsSEL, (void*)CFPD_Signature_V14::CountCerts);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureSEL, FPDSignatureGetCertSEL, (void*)CFPD_Signature_V14::GetCert);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureSEL, FPDSignatureSetDataTimeSEL, (void*)CFPD_Signature_V14::SetDataTime);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureSEL, FPDSignatureGetDataTimeSEL, (void*)CFPD_Signature_V14::GetDataTime);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureSEL, FPDSignatureSetEstimateContentLengthSEL, (void*)CFPD_Signature_V14::SetEstimateContentLength);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureSEL, FPDSignatureGetEstimateContentLengthSEL, (void*)CFPD_Signature_V14::GetEstimateContentLength);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureSEL, FPDSignatureIsTimeStampSEL, (void*)CFPD_Signature_V14::IsTimeStamp);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureSEL, FPDSignatureResetAppearanceSEL, (void*)CFPD_Signature_V14::ResetAppearance);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureSEL, FPDSignatureGetAppearanceSEL, (void*)CFPD_Signature_V14::GetAppearance);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureSEL, FPDSignatureSetPermissionsSEL, (void*)CFPD_Signature_V14::SetPermissions);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureSEL, FPDSignatureGetPermissionsSEL, (void*)CFPD_Signature_V14::GetPermissions);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureSEL, FPDSignatureSetFormFieldActionSEL, (void*)CFPD_Signature_V14::SetFormFieldAction);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureSEL, FPDSignatureGetFormFieldActionSEL, (void*)CFPD_Signature_V14::GetFormFieldAction);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureSEL, FPDSignatureSetJavaScriptSEL, (void*)CFPD_Signature_V14::SetJavaScript);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureSEL, FPDSignatureSetSignerCertPathSEL, (void*)CFPD_Signature_V14::SetSignerCertPath);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureSEL, FPDSignatureGetSignerCertPathSEL, (void*)CFPD_Signature_V14::GetSignerCertPath);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureSEL, FPDSignatureSetSignerCertFileStreamSEL, (void*)CFPD_Signature_V14::SetSignerCertFileStream);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureSEL, FPDSignatureGetSignerCertFileStreamSEL, (void*)CFPD_Signature_V14::GetSignerCertFileStream);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureSEL, FPDSignatureSetCertIDSEL, (void*)CFPD_Signature_V14::SetCertID);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureSEL, FPDSignatureGetPrivateKeySEL, (void*)CFPD_Signature_V14::GetPrivateKey);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureSEL, FPDSignatureGetCertIDSEL, (void*)CFPD_Signature_V14::GetCertID);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureSEL, FPDSignatureGetCertInfoTypeSEL, (void*)CFPD_Signature_V14::GetCertInfoType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureSEL, FPDSignatureSetSignatureTypeSEL, (void*)CFPD_Signature_V14::SetSignatureType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureSEL, FPDSignatureGetSignatureTypeSEL, (void*)CFPD_Signature_V14::GetSignatureType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureSEL, FPDSignatureSetVerifyStateSEL, (void*)CFPD_Signature_V14::SetVerifyState);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureSEL, FPDSignatureGetVerifyStateSEL, (void*)CFPD_Signature_V14::GetVerifyState);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureSEL, FPDSignatureSetIncludeRevocationStatusSEL, (void*)CFPD_Signature_V14::SetIncludeRevocationStatus);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureSEL, FPDSignatureGetIncludeRevocationStatusSEL, (void*)CFPD_Signature_V14::GetIncludeRevocationStatus);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureSEL, FPDSignatureSetSMIDSEL, (void*)CFPD_Signature_V14::SetSMID);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureSEL, FPDSignatureGetSMIDSEL, (void*)CFPD_Signature_V14::GetSMID);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureSEL, FPDSignatureSetSealIDSEL, (void*)CFPD_Signature_V14::SetSealID);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureSEL, FPDSignatureGetSealIDSEL, (void*)CFPD_Signature_V14::GetSealID);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureSEL, FPDSignatureSetOnLineSEL, (void*)CFPD_Signature_V14::SetOnLine);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureSEL, FPDSignatureGetOnLineSEL, (void*)CFPD_Signature_V14::GetOnLine);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureSEL, FPDSignatureAddDSSVRISEL, (void*)CFPD_Signature_V14::AddDSSVRI);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureSEL, FPDSignatureAddDSSCertsSEL, (void*)CFPD_Signature_V14::AddDSSCerts);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureSEL, FPDSignatureAddDSSCRLsSEL, (void*)CFPD_Signature_V14::AddDSSCRLs);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureSEL, FPDSignatureAddDSSOCSPsSEL, (void*)CFPD_Signature_V14::AddDSSOCSPs);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureSEL, FPDSignatureIsHasFieldMDPSEL, (void*)CFPD_Signature_V14::IsHasFieldMDP);
	}
};

class CFPD_SignatureSign_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureSignSEL, FPDSignatureSignNewSEL, (void*)CFPD_SignatureSign_V14::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureSignSEL, FPDSignatureSignNew1SEL, (void*)CFPD_SignatureSign_V14::New1);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureSignSEL, FPDSignatureSignNew2SEL, (void*)CFPD_SignatureSign_V14::New2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureSignSEL, FPDSignatureSignDeleteSEL, (void*)CFPD_SignatureSign_V14::Delete);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureSignSEL, FPDSignatureSignStartSEL, (void*)CFPD_SignatureSign_V14::Start);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureSignSEL, FPDSignatureSignContinueSEL, (void*)CFPD_SignatureSign_V14::Continue);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureSignSEL, FPDSignatureSignGetPercentSEL, (void*)CFPD_SignatureSign_V14::GetPercent);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureSignSEL, FPDSignatureSignSetSignedFileSEL, (void*)CFPD_SignatureSign_V14::SetSignedFile);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureSignSEL, FPDSignatureSignSetParserCallbackSEL, (void*)CFPD_SignatureSign_V14::SetParserCallback);
	}
};

class CFPD_SignatureVerify_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureVerifySEL, FPDSignatureVerifyNewSEL, (void*)CFPD_SignatureVerify_V14::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureVerifySEL, FPDSignatureVerifyNew1SEL, (void*)CFPD_SignatureVerify_V14::New1);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureVerifySEL, FPDSignatureVerifyNew2SEL, (void*)CFPD_SignatureVerify_V14::New2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureVerifySEL, FPDSignatureVerifyNew3SEL, (void*)CFPD_SignatureVerify_V14::New3);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureVerifySEL, FPDSignatureVerifyDeleteSEL, (void*)CFPD_SignatureVerify_V14::Delete);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureVerifySEL, FPDSignatureVerifyStartSEL, (void*)CFPD_SignatureVerify_V14::Start);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureVerifySEL, FPDSignatureVerifyContinueSEL, (void*)CFPD_SignatureVerify_V14::Continue);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureVerifySEL, FPDSignatureVerifyGetVerifyResultSEL, (void*)CFPD_SignatureVerify_V14::GetVerifyResult);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureVerifySEL, FPDSignatureVerifyGetVerifySubResultSEL, (void*)CFPD_SignatureVerify_V14::GetVerifySubResult);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureVerifySEL, FPDSignatureVerifyGetPercentSEL, (void*)CFPD_SignatureVerify_V14::GetPercent);
	}
};

class CFPD_TimeStampServer_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTimeStampServerSEL, FPDTimeStampServerSendTimestampRequestSEL, (void*)CFPD_TimeStampServer_V14::SendTimestampRequest);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTimeStampServerSEL, FPDTimeStampServerGetTimestampSEL, (void*)CFPD_TimeStampServer_V14::GetTimestamp);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTimeStampServerSEL, FPDTimeStampServerGetServerNameSEL, (void*)CFPD_TimeStampServer_V14::GetServerName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTimeStampServerSEL, FPDTimeStampServerGetUserNameFSEL, (void*)CFPD_TimeStampServer_V14::GetUserNameF);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTimeStampServerSEL, FPDTimeStampServerGetServerURLSEL, (void*)CFPD_TimeStampServer_V14::GetServerURL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTimeStampServerSEL, FPDTimeStampServerGetPasswordSEL, (void*)CFPD_TimeStampServer_V14::GetPassword);
	}
};

class CFPD_TimeStampServerMgr_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTimeStampServerMgrSEL, FPDTimeStampServerMgrCreateTimeStampServerMgrSEL, (void*)CFPD_TimeStampServerMgr_V14::CreateTimeStampServerMgr);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTimeStampServerMgrSEL, FPDTimeStampServerMgrGetTimeStampServerMgrSEL, (void*)CFPD_TimeStampServerMgr_V14::GetTimeStampServerMgr);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTimeStampServerMgrSEL, FPDTimeStampServerMgrDestroySEL, (void*)CFPD_TimeStampServerMgr_V14::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTimeStampServerMgrSEL, FPDTimeStampServerMgrCreateNewServerSEL, (void*)CFPD_TimeStampServerMgr_V14::CreateNewServer);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTimeStampServerMgrSEL, FPDTimeStampServerMgrCountServersSEL, (void*)CFPD_TimeStampServerMgr_V14::CountServers);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTimeStampServerMgrSEL, FPDTimeStampServerMgrGetServerSEL, (void*)CFPD_TimeStampServerMgr_V14::GetServer);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTimeStampServerMgrSEL, FPDTimeStampServerMgrGetIndexSEL, (void*)CFPD_TimeStampServerMgr_V14::GetIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTimeStampServerMgrSEL, FPDTimeStampServerMgrGetDefaultServerSEL, (void*)CFPD_TimeStampServerMgr_V14::GetDefaultServer);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTimeStampServerMgrSEL, FPDTimeStampServerMgrSetDefaultServerSEL, (void*)CFPD_TimeStampServerMgr_V14::SetDefaultServer);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTimeStampServerMgrSEL, FPDTimeStampServerMgrRemoveServerSEL, (void*)CFPD_TimeStampServerMgr_V14::RemoveServer);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTimeStampServerMgrSEL, FPDTimeStampServerMgrSetServerNotifySEL, (void*)CFPD_TimeStampServerMgr_V14::SetServerNotify);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTimeStampServerMgrSEL, FPDTimeStampServerMgrGetServerNotifySEL, (void*)CFPD_TimeStampServerMgr_V14::GetServerNotify);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTimeStampServerMgrSEL, FPDTimeStampServerMgrSetSSLRequestServerNotifySEL, (void*)CFPD_TimeStampServerMgr_V14::SetSSLRequestServerNotify);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTimeStampServerMgrSEL, FPDTimeStampServerMgrGetSSLRequestServerNotifySEL, (void*)CFPD_TimeStampServerMgr_V14::GetSSLRequestServerNotify);
	}
};

class CFPD_SGBuffer_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSGBufferSEL, FPDSGBufferCreateBufferSEL, (void*)CFPD_SGBuffer_V14::CreateBuffer);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSGBufferSEL, FPDSGBufferCreateBuffer1SEL, (void*)CFPD_SGBuffer_V14::CreateBuffer1);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSGBufferSEL, FPDSGBufferDeleteBufferSEL, (void*)CFPD_SGBuffer_V14::DeleteBuffer);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSGBufferSEL, FPDSGBufferGetBufferSEL, (void*)CFPD_SGBuffer_V14::GetBuffer);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSGBufferSEL, FPDSGBufferGetSizeSEL, (void*)CFPD_SGBuffer_V14::GetSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSGBufferSEL, FPDSGBufferIsEmptySEL, (void*)CFPD_SGBuffer_V14::IsEmpty);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSGBufferSEL, FPDSGBufferIsEqualSEL, (void*)CFPD_SGBuffer_V14::IsEqual);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSGBufferSEL, FPDSGBufferResetSEL, (void*)CFPD_SGBuffer_V14::Reset);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSGBufferSEL, FPDSGBufferDetachBufferSEL, (void*)CFPD_SGBuffer_V14::DetachBuffer);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSGBufferSEL, FPDSGBufferReAllocSEL, (void*)CFPD_SGBuffer_V14::ReAlloc);
	}
};

class CFPD_CertVerifyCallBack_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCertVerifyCallBackSEL, FPDCertVerifyCallBackNewSEL, (void*)CFPD_CertVerifyCallBack_V14::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCertVerifyCallBackSEL, FPDCertVerifyCallBackDestroySEL, (void*)CFPD_CertVerifyCallBack_V14::Destroy);
	}
};

class CFPD_CheckDataTemplate_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCheckDataTemplateSEL, FPDCheckDataTemplateGetCheckDataTemplateSEL, (void*)CFPD_CheckDataTemplate_V14::GetCheckDataTemplate);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCheckDataTemplateSEL, FPDCheckDataTemplateGetCheckDataTemplate2SEL, (void*)CFPD_CheckDataTemplate_V14::GetCheckDataTemplate2);
	}
};

class CFPD_WinDefaultHandler_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDWinDefaultHandlerSEL, FPDWinDefaultHandlerCreateWinDefaultHandlerSEL, (void*)CFPD_WinDefaultHandler_V14::CreateWinDefaultHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDWinDefaultHandlerSEL, FPDWinDefaultHandlerDeleteWinDefaultHandlerSEL, (void*)CFPD_WinDefaultHandler_V14::DeleteWinDefaultHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDWinDefaultHandlerSEL, FPDWinDefaultHandlerGetCertificateInfoSEL, (void*)CFPD_WinDefaultHandler_V14::GetCertificateInfo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDWinDefaultHandlerSEL, FPDWinDefaultHandlerStartCalcDigestSEL, (void*)CFPD_WinDefaultHandler_V14::StartCalcDigest);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDWinDefaultHandlerSEL, FPDWinDefaultHandlerContinueCalcDigestSEL, (void*)CFPD_WinDefaultHandler_V14::ContinueCalcDigest);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDWinDefaultHandlerSEL, FPDWinDefaultHandlerStartSignSEL, (void*)CFPD_WinDefaultHandler_V14::StartSign);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDWinDefaultHandlerSEL, FPDWinDefaultHandlerIsNeedPadDataSEL, (void*)CFPD_WinDefaultHandler_V14::IsNeedPadData);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDWinDefaultHandlerSEL, FPDWinDefaultHandlerSetCertVerifyCallBackSEL, (void*)CFPD_WinDefaultHandler_V14::SetCertVerifyCallBack);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDWinDefaultHandlerSEL, FPDWinDefaultHandlerSetReovactionProgressCallBackSEL, (void*)CFPD_WinDefaultHandler_V14::SetReovactionProgressCallBack);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDWinDefaultHandlerSEL, FPDWinDefaultHandlerSetCRLDownloadHandlerSEL, (void*)CFPD_WinDefaultHandler_V14::SetCRLDownloadHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDWinDefaultHandlerSEL, FPDWinDefaultHandlerVerifySEL, (void*)CFPD_WinDefaultHandler_V14::Verify);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDWinDefaultHandlerSEL, FPDWinDefaultHandlerSetSigmedVDictObjNumSEL, (void*)CFPD_WinDefaultHandler_V14::SetSigmedVDictObjNum);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDWinDefaultHandlerSEL, FPDWinDefaultHandlerGetSignVDictObjNumSEL, (void*)CFPD_WinDefaultHandler_V14::GetSignVDictObjNum);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDWinDefaultHandlerSEL, FPDWinDefaultHandlerIsSignCancelSEL, (void*)CFPD_WinDefaultHandler_V14::IsSignCancel);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDWinDefaultHandlerSEL, FPDWinDefaultHandlerSetDocumentSEL, (void*)CFPD_WinDefaultHandler_V14::SetDocument);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDWinDefaultHandlerSEL, FPDWinDefaultHandlerGetSignedHashDataSEL, (void*)CFPD_WinDefaultHandler_V14::GetSignedHashData);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDWinDefaultHandlerSEL, FPDWinDefaultHandlerVerifyDigestSEL, (void*)CFPD_WinDefaultHandler_V14::VerifyDigest);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDWinDefaultHandlerSEL, FPDWinDefaultHandlerGetSignedTimeSEL, (void*)CFPD_WinDefaultHandler_V14::GetSignedTime);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDWinDefaultHandlerSEL, FPDWinDefaultHandlerGetTimeStampErrorSEL, (void*)CFPD_WinDefaultHandler_V14::GetTimeStampError);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDWinDefaultHandlerSEL, FPDWinDefaultHandlerGetReocationTypeSEL, (void*)CFPD_WinDefaultHandler_V14::GetReocationType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDWinDefaultHandlerSEL, FPDWinDefaultHandlerIsLTVSEL, (void*)CFPD_WinDefaultHandler_V14::IsLTV);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDWinDefaultHandlerSEL, FPDWinDefaultHandlerGetCadesLevelSEL, (void*)CFPD_WinDefaultHandler_V14::GetCadesLevel);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDWinDefaultHandlerSEL, FPDWinDefaultHandlerSetPDFSigForPoliciesDataSEL, (void*)CFPD_WinDefaultHandler_V14::SetPDFSigForPoliciesData);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDWinDefaultHandlerSEL, FPDWinDefaultHandlerGetSignatureHandlerSEL, (void*)CFPD_WinDefaultHandler_V14::GetSignatureHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDWinDefaultHandlerSEL, FPDWinDefaultHandlerContinueSignSEL, (void*)CFPD_WinDefaultHandler_V14::ContinueSign);
	}
};

class CFPD_CertPolicesData_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCertPolicesDataSEL, FPDCertPolicesDataNewSEL, (void*)CFPD_CertPolicesData_V14::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCertPolicesDataSEL, FPDCertPolicesDataDestroySEL, (void*)CFPD_CertPolicesData_V14::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCertPolicesDataSEL, FPDCertPolicesDataAddItemSEL, (void*)CFPD_CertPolicesData_V14::AddItem);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCertPolicesDataSEL, FPDCertPolicesDataGetKeysSEL, (void*)CFPD_CertPolicesData_V14::GetKeys);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCertPolicesDataSEL, FPDCertPolicesDataGetPoliciesDataByKeySEL, (void*)CFPD_CertPolicesData_V14::GetPoliciesDataByKey);
	}
};

class CFPD_SignatureHandler_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureHandlerSEL, FPDSignatureHandlerNewSEL, (void*)CFPD_SignatureHandler_V14::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureHandlerSEL, FPDSignatureHandlerDestroySEL, (void*)CFPD_SignatureHandler_V14::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureHandlerSEL, FPDSignatureHandlerGetWinDefaultHandlerSEL, (void*)CFPD_SignatureHandler_V14::GetWinDefaultHandler);
	}
};

class CFPD_SignatureHandlerMgr_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureHandlerMgrSEL, FPDSignatureHandlerMgrCreateSignatureHandlerMgrSEL, (void*)CFPD_SignatureHandlerMgr_V14::CreateSignatureHandlerMgr);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureHandlerMgrSEL, FPDSignatureHandlerMgrGetSignatureHandlerMgrSEL, (void*)CFPD_SignatureHandlerMgr_V14::GetSignatureHandlerMgr);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureHandlerMgrSEL, FPDSignatureHandlerMgrDestroySEL, (void*)CFPD_SignatureHandlerMgr_V14::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureHandlerMgrSEL, FPDSignatureHandlerMgrRegisterSignatureHandlerSEL, (void*)CFPD_SignatureHandlerMgr_V14::RegisterSignatureHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureHandlerMgrSEL, FPDSignatureHandlerMgrRegisterDefaultSignatureHandlerSEL, (void*)CFPD_SignatureHandlerMgr_V14::RegisterDefaultSignatureHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureHandlerMgrSEL, FPDSignatureHandlerMgrUnRegisterSignatureHandlerSEL, (void*)CFPD_SignatureHandlerMgr_V14::UnRegisterSignatureHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSignatureHandlerMgrSEL, FPDSignatureHandlerMgrGetSignatureHandlerSEL, (void*)CFPD_SignatureHandlerMgr_V14::GetSignatureHandler);
	}
};

class CFPD_Response_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDResponseSEL, FPDResponseCreateResonseSEL, (void*)CFPD_Response_V14::CreateResonse);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDResponseSEL, FPDResponseDeleteResonseSEL, (void*)CFPD_Response_V14::DeleteResonse);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDResponseSEL, FPDResponseGetResponseTypeSEL, (void*)CFPD_Response_V14::GetResponseType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDResponseSEL, FPDResponseFPD_ResponseDataSEL, (void*)CFPD_Response_V14::FPD_ResponseData);
	}
};

class CFPD_RevocationHandler_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRevocationHandlerSEL, FPDRevocationHandlerNewSEL, (void*)CFPD_RevocationHandler_V14::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRevocationHandlerSEL, FPDRevocationHandlerDestroySEL, (void*)CFPD_RevocationHandler_V14::Destroy);
	}
};

class CFPD_DownloadHandler_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDownloadHandlerSEL, FPDDownloadHandlerCreateDefaultRevocationHandlerSEL, (void*)CFPD_DownloadHandler_V14::CreateDefaultRevocationHandler);
	}
};

class CFPD_SGCLIENTDATA_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSGCLIENTDATASEL, FPDSGCLIENTDATANewSEL, (void*)CFPD_SGCLIENTDATA_V14::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSGCLIENTDATASEL, FPDSGCLIENTDATADeleteSEL, (void*)CFPD_SGCLIENTDATA_V14::Delete);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSGCLIENTDATASEL, FPDSGCLIENTDATASetCreateStoreSEL, (void*)CFPD_SGCLIENTDATA_V14::SetCreateStore);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSGCLIENTDATASEL, FPDSGCLIENTDATAGetCreateStoreSEL, (void*)CFPD_SGCLIENTDATA_V14::GetCreateStore);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSGCLIENTDATASEL, FPDSGCLIENTDATASetVerifyStoreSEL, (void*)CFPD_SGCLIENTDATA_V14::SetVerifyStore);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSGCLIENTDATASEL, FPDSGCLIENTDATAGetVerifyStoreSEL, (void*)CFPD_SGCLIENTDATA_V14::GetVerifyStore);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSGCLIENTDATASEL, FPDSGCLIENTDATAAddVerifyCertListSEL, (void*)CFPD_SGCLIENTDATA_V14::AddVerifyCertList);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSGCLIENTDATASEL, FPDSGCLIENTDATAGetVerifyCertListCountSEL, (void*)CFPD_SGCLIENTDATA_V14::GetVerifyCertListCount);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSGCLIENTDATASEL, FPDSGCLIENTDATAGetVerifyCertListByIndexSEL, (void*)CFPD_SGCLIENTDATA_V14::GetVerifyCertListByIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSGCLIENTDATASEL, FPDSGCLIENTDATASetChainListIndexSEL, (void*)CFPD_SGCLIENTDATA_V14::SetChainListIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSGCLIENTDATASEL, FPDSGCLIENTDATAGetChainListIndexSEL, (void*)CFPD_SGCLIENTDATA_V14::GetChainListIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSGCLIENTDATASEL, FPDSGCLIENTDATASettsverifyStoreSEL, (void*)CFPD_SGCLIENTDATA_V14::SettsverifyStore);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSGCLIENTDATASEL, FPDSGCLIENTDATAGettsverifyStoreSEL, (void*)CFPD_SGCLIENTDATA_V14::GettsverifyStore);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSGCLIENTDATASEL, FPDSGCLIENTDATAAddVerifyTimeStampCertListSEL, (void*)CFPD_SGCLIENTDATA_V14::AddVerifyTimeStampCertList);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSGCLIENTDATASEL, FPDSGCLIENTDATAGetVerifyTimeStampCertListCountSEL, (void*)CFPD_SGCLIENTDATA_V14::GetVerifyTimeStampCertListCount);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSGCLIENTDATASEL, FPDSGCLIENTDATAGetVerifytsTimeStampCertListByIndexSEL, (void*)CFPD_SGCLIENTDATA_V14::GetVerifytsTimeStampCertListByIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSGCLIENTDATASEL, FPDSGCLIENTDATASetCurTimeStampChainListIndexSEL, (void*)CFPD_SGCLIENTDATA_V14::SetCurTimeStampChainListIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSGCLIENTDATASEL, FPDSGCLIENTDATAGetCurTimeStampChainListIndexSEL, (void*)CFPD_SGCLIENTDATA_V14::GetCurTimeStampChainListIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSGCLIENTDATASEL, FPDSGCLIENTDATASetTrustStoreSEL, (void*)CFPD_SGCLIENTDATA_V14::SetTrustStore);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSGCLIENTDATASEL, FPDSGCLIENTDATAGetTrustStoreSEL, (void*)CFPD_SGCLIENTDATA_V14::GetTrustStore);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSGCLIENTDATASEL, FPDSGCLIENTDATASetHashAlgSEL, (void*)CFPD_SGCLIENTDATA_V14::SetHashAlg);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSGCLIENTDATASEL, FPDSGCLIENTDATAGetHashAlgSEL, (void*)CFPD_SGCLIENTDATA_V14::GetHashAlg);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSGCLIENTDATASEL, FPDSGCLIENTDATASetSignAlgSEL, (void*)CFPD_SGCLIENTDATA_V14::SetSignAlg);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSGCLIENTDATASEL, FPDSGCLIENTDATAGetSignAlgSEL, (void*)CFPD_SGCLIENTDATA_V14::GetSignAlg);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSGCLIENTDATASEL, FPDSGCLIENTDATASetRevocTimeoutURLsSEL, (void*)CFPD_SGCLIENTDATA_V14::SetRevocTimeoutURLs);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSGCLIENTDATASEL, FPDSGCLIENTDATAGetRevocTimeoutURLsSEL, (void*)CFPD_SGCLIENTDATA_V14::GetRevocTimeoutURLs);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSGCLIENTDATASEL, FPDSGCLIENTDATASetCRLPathSEL, (void*)CFPD_SGCLIENTDATA_V14::SetCRLPath);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSGCLIENTDATASEL, FPDSGCLIENTDATAGetCRLPathSEL, (void*)CFPD_SGCLIENTDATA_V14::GetCRLPath);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSGCLIENTDATASEL, FPDSGCLIENTDATASetFileStorePathSEL, (void*)CFPD_SGCLIENTDATA_V14::SetFileStorePath);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSGCLIENTDATASEL, FPDSGCLIENTDATAGetFileStorePathSEL, (void*)CFPD_SGCLIENTDATA_V14::GetFileStorePath);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSGCLIENTDATASEL, FPDSGCLIENTDATASetCertFilePathSEL, (void*)CFPD_SGCLIENTDATA_V14::SetCertFilePath);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSGCLIENTDATASEL, FPDSGCLIENTDATAGetCertFilePathSEL, (void*)CFPD_SGCLIENTDATA_V14::GetCertFilePath);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSGCLIENTDATASEL, FPDSGCLIENTDATASetCertFilePassSEL, (void*)CFPD_SGCLIENTDATA_V14::SetCertFilePass);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSGCLIENTDATASEL, FPDSGCLIENTDATAGetCertFilePassSEL, (void*)CFPD_SGCLIENTDATA_V14::GetCertFilePass);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSGCLIENTDATASEL, FPDSGCLIENTDATASetVERIFYDATASEL, (void*)CFPD_SGCLIENTDATA_V14::SetVERIFYDATA);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSGCLIENTDATASEL, FPDSGCLIENTDATAGetVERIFYDATASEL, (void*)CFPD_SGCLIENTDATA_V14::GetVERIFYDATA);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSGCLIENTDATASEL, FPDSGCLIENTDATAAddToRevocVerifySEL, (void*)CFPD_SGCLIENTDATA_V14::AddToRevocVerify);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSGCLIENTDATASEL, FPDSGCLIENTDATAGetRevocVerifyKeyIndexSEL, (void*)CFPD_SGCLIENTDATA_V14::GetRevocVerifyKeyIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSGCLIENTDATASEL, FPDSGCLIENTDATAGetRevocVerifyCountByKeyIndexSEL, (void*)CFPD_SGCLIENTDATA_V14::GetRevocVerifyCountByKeyIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSGCLIENTDATASEL, FPDSGCLIENTDATAGetRevocVerifyByIndexSEL, (void*)CFPD_SGCLIENTDATA_V14::GetRevocVerifyByIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSGCLIENTDATASEL, FPDSGCLIENTDATAAddToTimeStampRevocVerifySEL, (void*)CFPD_SGCLIENTDATA_V14::AddToTimeStampRevocVerify);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSGCLIENTDATASEL, FPDSGCLIENTDATAGetTimeStampRevocVerifyKeyIndexSEL, (void*)CFPD_SGCLIENTDATA_V14::GetTimeStampRevocVerifyKeyIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSGCLIENTDATASEL, FPDSGCLIENTDATAGetTimeStampRevocVerifyCountByKeyIndexSEL, (void*)CFPD_SGCLIENTDATA_V14::GetTimeStampRevocVerifyCountByKeyIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSGCLIENTDATASEL, FPDSGCLIENTDATAGetTimeStampRevocRevocVerifyByIndexSEL, (void*)CFPD_SGCLIENTDATA_V14::GetTimeStampRevocRevocVerifyByIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSGCLIENTDATASEL, FPDSGCLIENTDATAGetVerifytsTimeStampCertListByIndexAndArryIndexSEL, (void*)CFPD_SGCLIENTDATA_V14::GetVerifytsTimeStampCertListByIndexAndArryIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSGCLIENTDATASEL, FPDSGCLIENTDATAGetVerifyCertListByIndexAndArryIndexSEL, (void*)CFPD_SGCLIENTDATA_V14::GetVerifyCertListByIndexAndArryIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSGCLIENTDATASEL, FPDSGCLIENTDATASetIsEnableSealSEL, (void*)CFPD_SGCLIENTDATA_V14::SetIsEnableSeal);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSGCLIENTDATASEL, FPDSGCLIENTDATAGetSealInfoSEL, (void*)CFPD_SGCLIENTDATA_V14::GetSealInfo);
	}
};

class CFPD_MODIFYDATA_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDMODIFYDATASEL, FPDMODIFYDATACreateSEL, (void*)CFPD_MODIFYDATA_V14::Create);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDMODIFYDATASEL, FPDMODIFYDATADestroySEL, (void*)CFPD_MODIFYDATA_V14::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDMODIFYDATASEL, FPDMODIFYDATASetRectSEL, (void*)CFPD_MODIFYDATA_V14::SetRect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDMODIFYDATASEL, FPDMODIFYDATAGetRectSEL, (void*)CFPD_MODIFYDATA_V14::GetRect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDMODIFYDATASEL, FPDMODIFYDATASetObjectNumSEL, (void*)CFPD_MODIFYDATA_V14::SetObjectNum);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDMODIFYDATASEL, FPDMODIFYDATAGetObjectNumSEL, (void*)CFPD_MODIFYDATA_V14::GetObjectNum);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDMODIFYDATASEL, FPDMODIFYDATASetPageIndexSEL, (void*)CFPD_MODIFYDATA_V14::SetPageIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDMODIFYDATASEL, FPDMODIFYDATAGetPageIndexSEL, (void*)CFPD_MODIFYDATA_V14::GetPageIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDMODIFYDATASEL, FPDMODIFYDATASetTypeSEL, (void*)CFPD_MODIFYDATA_V14::SetType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDMODIFYDATASEL, FPDMODIFYDATAGetTypeSEL, (void*)CFPD_MODIFYDATA_V14::GetType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDMODIFYDATASEL, FPDMODIFYDATASetTNameSEL, (void*)CFPD_MODIFYDATA_V14::SetTName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDMODIFYDATASEL, FPDMODIFYDATAGetTNameSEL, (void*)CFPD_MODIFYDATA_V14::GetTName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDMODIFYDATASEL, FPDMODIFYDATASetNMSEL, (void*)CFPD_MODIFYDATA_V14::SetNM);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDMODIFYDATASEL, FPDMODIFYDATAGetNMSEL, (void*)CFPD_MODIFYDATA_V14::GetNM);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDMODIFYDATASEL, FPDMODIFYDATASetbNomodifySEL, (void*)CFPD_MODIFYDATA_V14::SetbNomodify);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDMODIFYDATASEL, FPDMODIFYDATAGetbNomodifySEL, (void*)CFPD_MODIFYDATA_V14::GetbNomodify);
	}
};

class CFPD_XFADocView_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDXFADocViewSEL, FPDXFADocViewGetDocSEL, (void*)CFPD_XFADocView_V14::GetDoc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDXFADocViewSEL, FPDXFADocViewStartLayoutSEL, (void*)CFPD_XFADocView_V14::StartLayout);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDXFADocViewSEL, FPDXFADocViewDoLayoutSEL, (void*)CFPD_XFADocView_V14::DoLayout);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDXFADocViewSEL, FPDXFADocViewStopLayoutSEL, (void*)CFPD_XFADocView_V14::StopLayout);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDXFADocViewSEL, FPDXFADocViewGetLayoutStatusSEL, (void*)CFPD_XFADocView_V14::GetLayoutStatus);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDXFADocViewSEL, FPDXFADocViewUpdateDocViewSEL, (void*)CFPD_XFADocView_V14::UpdateDocView);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDXFADocViewSEL, FPDXFADocViewCountPageViewsSEL, (void*)CFPD_XFADocView_V14::CountPageViews);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDXFADocViewSEL, FPDXFADocViewGetPageViewSEL, (void*)CFPD_XFADocView_V14::GetPageView);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDXFADocViewSEL, FPDXFADocViewGetWidgetByNameSEL, (void*)CFPD_XFADocView_V14::GetWidgetByName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDXFADocViewSEL, FPDXFADocViewGetWidgetAccByNameSEL, (void*)CFPD_XFADocView_V14::GetWidgetAccByName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDXFADocViewSEL, FPDXFADocViewResetWidgetDataSEL, (void*)CFPD_XFADocView_V14::ResetWidgetData);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDXFADocViewSEL, FPDXFADocViewProcessWidgetEventSEL, (void*)CFPD_XFADocView_V14::ProcessWidgetEvent);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDXFADocViewSEL, FPDXFADocViewGetWidgetHandlerSEL, (void*)CFPD_XFADocView_V14::GetWidgetHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDXFADocViewSEL, FPDXFADocViewCreateWidgetIteratorSEL, (void*)CFPD_XFADocView_V14::CreateWidgetIterator);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDXFADocViewSEL, FPDXFADocViewCreateWidgetAccIteratorSEL, (void*)CFPD_XFADocView_V14::CreateWidgetAccIterator);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDXFADocViewSEL, FPDXFADocViewGetFocusWidgetSEL, (void*)CFPD_XFADocView_V14::GetFocusWidget);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDXFADocViewSEL, FPDXFADocViewKillFocusSEL, (void*)CFPD_XFADocView_V14::KillFocus);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDXFADocViewSEL, FPDXFADocViewSetFocusSEL, (void*)CFPD_XFADocView_V14::SetFocus);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDXFADocViewSEL, FPDXFADocViewIsTableFormFirstPageSEL, (void*)CFPD_XFADocView_V14::IsTableFormFirstPage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDXFADocViewSEL, FPDXFADocViewGetChangedFieldFullNamesSEL, (void*)CFPD_XFADocView_V14::GetChangedFieldFullNames);
	}
};

class CFPD_IXFAPageView_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIXFAPageViewSEL, FPDIXFAPageViewGetDocViewSEL, (void*)CFPD_IXFAPageView_V14::GetDocView);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIXFAPageViewSEL, FPDIXFAPageViewGetPageViewIndexSEL, (void*)CFPD_IXFAPageView_V14::GetPageViewIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIXFAPageViewSEL, FPDIXFAPageViewGetPageViewRectSEL, (void*)CFPD_IXFAPageView_V14::GetPageViewRect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIXFAPageViewSEL, FPDIXFAPageViewGetDisplayMatrixSEL, (void*)CFPD_IXFAPageView_V14::GetDisplayMatrix);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIXFAPageViewSEL, FPDIXFAPageViewLoadPageViewSEL, (void*)CFPD_IXFAPageView_V14::LoadPageView);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIXFAPageViewSEL, FPDIXFAPageViewUnloadPageViewSEL, (void*)CFPD_IXFAPageView_V14::UnloadPageView);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIXFAPageViewSEL, FPDIXFAPageViewGetWidgetByPosSEL, (void*)CFPD_IXFAPageView_V14::GetWidgetByPos);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIXFAPageViewSEL, FPDIXFAPageViewCreateWidgetIteratorSEL, (void*)CFPD_IXFAPageView_V14::CreateWidgetIterator);
	}
};

class CFPD_CXFAWidgetAcc_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCXFAWidgetAccSEL, FPDCXFAWidgetAccGetNameSEL, (void*)CFPD_CXFAWidgetAcc_V14::GetName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCXFAWidgetAccSEL, FPDCXFAWidgetAccProcessValueChangedSEL, (void*)CFPD_CXFAWidgetAcc_V14::ProcessValueChanged);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCXFAWidgetAccSEL, FPDCXFAWidgetAccResetDataSEL, (void*)CFPD_CXFAWidgetAcc_V14::ResetData);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCXFAWidgetAccSEL, FPDCXFAWidgetAccSetImageEditSEL, (void*)CFPD_CXFAWidgetAcc_V14::SetImageEdit);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCXFAWidgetAccSEL, FPDCXFAWidgetAccGetExclGroupSEL, (void*)CFPD_CXFAWidgetAcc_V14::GetExclGroup);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCXFAWidgetAccSEL, FPDCXFAWidgetAccProcessEventSEL, (void*)CFPD_CXFAWidgetAcc_V14::ProcessEvent);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCXFAWidgetAccSEL, FPDCXFAWidgetAccGetManifestActionSEL, (void*)CFPD_CXFAWidgetAcc_V14::GetManifestAction);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCXFAWidgetAccSEL, FPDCXFAWidgetAccGetManifestCountReivesSEL, (void*)CFPD_CXFAWidgetAcc_V14::GetManifestCountReives);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCXFAWidgetAccSEL, FPDCXFAWidgetAccGetManifestRefContentSEL, (void*)CFPD_CXFAWidgetAcc_V14::GetManifestRefContent);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCXFAWidgetAccSEL, FPDCXFAWidgetAccGetUITypeSEL, (void*)CFPD_CXFAWidgetAcc_V14::GetUIType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCXFAWidgetAccSEL, FPDCXFAWidgetAccGetAccessSEL, (void*)CFPD_CXFAWidgetAcc_V14::GetAccess);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCXFAWidgetAccSEL, FPDCXFAWidgetAccSetAccessSEL, (void*)CFPD_CXFAWidgetAcc_V14::SetAccess);
	}
};

class CFPD_IXFAWidgetHandler_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIXFAWidgetHandlerSEL, FPDIXFAWidgetHandlerGetNameSEL, (void*)CFPD_IXFAWidgetHandler_V14::GetName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIXFAWidgetHandlerSEL, FPDIXFAWidgetHandlerGetDataAccSEL, (void*)CFPD_IXFAWidgetHandler_V14::GetDataAcc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIXFAWidgetHandlerSEL, FPDIXFAWidgetHandlerGetBBoxSEL, (void*)CFPD_IXFAWidgetHandler_V14::GetBBox);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIXFAWidgetHandlerSEL, FPDIXFAWidgetHandlerHasEventSEL, (void*)CFPD_IXFAWidgetHandler_V14::HasEvent);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIXFAWidgetHandlerSEL, FPDIXFAWidgetHandlerProcessEventSEL, (void*)CFPD_IXFAWidgetHandler_V14::ProcessEvent);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIXFAWidgetHandlerSEL, FPDIXFAWidgetHandlerGetStatusSEL, (void*)CFPD_IXFAWidgetHandler_V14::GetStatus);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIXFAWidgetHandlerSEL, FPDIXFAWidgetHandlerGetPageViewSEL, (void*)CFPD_IXFAWidgetHandler_V14::GetPageView);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIXFAWidgetHandlerSEL, FPDIXFAWidgetHandlerRenderWidgetSEL, (void*)CFPD_IXFAWidgetHandler_V14::RenderWidget);
	}
};

class CFPD_IXFAWidgetIterator_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIXFAWidgetIteratorSEL, FPDIXFAWidgetIteratorReleaseSEL, (void*)CFPD_IXFAWidgetIterator_V14::Release);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIXFAWidgetIteratorSEL, FPDIXFAWidgetIteratorResetSEL, (void*)CFPD_IXFAWidgetIterator_V14::Reset);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIXFAWidgetIteratorSEL, FPDIXFAWidgetIteratorMoveToFirstSEL, (void*)CFPD_IXFAWidgetIterator_V14::MoveToFirst);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIXFAWidgetIteratorSEL, FPDIXFAWidgetIteratorMoveToLastSEL, (void*)CFPD_IXFAWidgetIterator_V14::MoveToLast);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIXFAWidgetIteratorSEL, FPDIXFAWidgetIteratorMoveToNextSEL, (void*)CFPD_IXFAWidgetIterator_V14::MoveToNext);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIXFAWidgetIteratorSEL, FPDIXFAWidgetIteratorMoveToPreviousSEL, (void*)CFPD_IXFAWidgetIterator_V14::MoveToPrevious);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIXFAWidgetIteratorSEL, FPDIXFAWidgetIteratorGetCurrentWidgetSEL, (void*)CFPD_IXFAWidgetIterator_V14::GetCurrentWidget);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIXFAWidgetIteratorSEL, FPDIXFAWidgetIteratorSetCurrentWidgetSEL, (void*)CFPD_IXFAWidgetIterator_V14::SetCurrentWidget);
	}
};

class CFPD_IXFAWidgetAccIterator_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIXFAWidgetAccIteratorSEL, FPDIXFAWidgetAccIteratorReleaseSEL, (void*)CFPD_IXFAWidgetAccIterator_V14::Release);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIXFAWidgetAccIteratorSEL, FPDIXFAWidgetAccIteratorResetSEL, (void*)CFPD_IXFAWidgetAccIterator_V14::Reset);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIXFAWidgetAccIteratorSEL, FPDIXFAWidgetAccIteratorMoveToFirstSEL, (void*)CFPD_IXFAWidgetAccIterator_V14::MoveToFirst);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIXFAWidgetAccIteratorSEL, FPDIXFAWidgetAccIteratorMoveToLastSEL, (void*)CFPD_IXFAWidgetAccIterator_V14::MoveToLast);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIXFAWidgetAccIteratorSEL, FPDIXFAWidgetAccIteratorMoveToNextSEL, (void*)CFPD_IXFAWidgetAccIterator_V14::MoveToNext);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIXFAWidgetAccIteratorSEL, FPDIXFAWidgetAccIteratorMoveToPreviousSEL, (void*)CFPD_IXFAWidgetAccIterator_V14::MoveToPrevious);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIXFAWidgetAccIteratorSEL, FPDIXFAWidgetAccIteratorGetCurrentWidgetAccSEL, (void*)CFPD_IXFAWidgetAccIterator_V14::GetCurrentWidgetAcc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIXFAWidgetAccIteratorSEL, FPDIXFAWidgetAccIteratorSetCurrentWidgetAccSEL, (void*)CFPD_IXFAWidgetAccIterator_V14::SetCurrentWidgetAcc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIXFAWidgetAccIteratorSEL, FPDIXFAWidgetAccIteratorSkipTreeSEL, (void*)CFPD_IXFAWidgetAccIterator_V14::SkipTree);
	}
};

class CFPD_CXFAEventParam_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCXFAEventParamSEL, FPDCXFAEventParamCreateEventParamSEL, (void*)CFPD_CXFAEventParam_V14::CreateEventParam);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCXFAEventParamSEL, FPDCXFAEventParamSetEventTypeSEL, (void*)CFPD_CXFAEventParam_V14::SetEventType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCXFAEventParamSEL, FPDCXFAEventParamDeleteEventParamSEL, (void*)CFPD_CXFAEventParam_V14::DeleteEventParam);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCXFAEventParamSEL, FPDCXFAEventParamSetIsCancelActionSEL, (void*)CFPD_CXFAEventParam_V14::SetIsCancelAction);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCXFAEventParamSEL, FPDCXFAEventParamGetIsCancelActionSEL, (void*)CFPD_CXFAEventParam_V14::GetIsCancelAction);
	}
};

// fpd_docImpl.h end

// In file fpd_editImpl.h
// fpd_editImpl.h end

// In file fpd_epubImpl.h
// fpd_epubImpl.h end

// In file fpd_fontmgrImpl.h
// fpd_fontmgrImpl.h end

// In file fpd_fxxfaImpl.h
// fpd_fxxfaImpl.h end

// In file fpd_jsImpl.h
// fpd_jsImpl.h end

// In file fpd_lrImpl.h
// fpd_lrImpl.h end

// In file fpd_mathImpl.h
// fpd_mathImpl.h end

// In file fpd_objsImpl.h
// fpd_objsImpl.h end

// In file fpd_pageImpl.h
// fpd_pageImpl.h end

// In file fpd_pageobjImpl.h
// fpd_pageobjImpl.h end

// In file fpd_parserImpl.h
class CFPD_StandardCryptoHandler_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDStandardCryptoHandlerSEL, FPDStandardCryptoHandlerNewSEL, (void*)CFPD_StandardCryptoHandler_V14::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDStandardCryptoHandlerSEL, FPDStandardCryptoHandlerDestroySEL, (void*)CFPD_StandardCryptoHandler_V14::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDStandardCryptoHandlerSEL, FPDStandardCryptoHandlerInitSEL, (void*)CFPD_StandardCryptoHandler_V14::Init);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDStandardCryptoHandlerSEL, FPDStandardCryptoHandlerInitByDicSEL, (void*)CFPD_StandardCryptoHandler_V14::InitByDic);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDStandardCryptoHandlerSEL, FPDStandardCryptoHandlerDecryptGetSizeSEL, (void*)CFPD_StandardCryptoHandler_V14::DecryptGetSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDStandardCryptoHandlerSEL, FPDStandardCryptoHandlerDecryptStartSEL, (void*)CFPD_StandardCryptoHandler_V14::DecryptStart);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDStandardCryptoHandlerSEL, FPDStandardCryptoHandlerDecryptStreamSEL, (void*)CFPD_StandardCryptoHandler_V14::DecryptStream);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDStandardCryptoHandlerSEL, FPDStandardCryptoHandlerDecryptFinishSEL, (void*)CFPD_StandardCryptoHandler_V14::DecryptFinish);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDStandardCryptoHandlerSEL, FPDStandardCryptoHandlerEncryptGetSizeSEL, (void*)CFPD_StandardCryptoHandler_V14::EncryptGetSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDStandardCryptoHandlerSEL, FPDStandardCryptoHandlerEncryptContentSEL, (void*)CFPD_StandardCryptoHandler_V14::EncryptContent);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDStandardCryptoHandlerSEL, FPDStandardCryptoHandlerCloneSEL, (void*)CFPD_StandardCryptoHandler_V14::Clone);
	}
};

class CFPD_FipsStandardCryptoHandler_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFipsStandardCryptoHandlerSEL, FPDFipsStandardCryptoHandlerNewSEL, (void*)CFPD_FipsStandardCryptoHandler_V14::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFipsStandardCryptoHandlerSEL, FPDFipsStandardCryptoHandlerDestroySEL, (void*)CFPD_FipsStandardCryptoHandler_V14::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFipsStandardCryptoHandlerSEL, FPDFipsStandardCryptoHandlerInitSEL, (void*)CFPD_FipsStandardCryptoHandler_V14::Init);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFipsStandardCryptoHandlerSEL, FPDFipsStandardCryptoHandlerInit2SEL, (void*)CFPD_FipsStandardCryptoHandler_V14::Init2);
	}
};

class CFPD_SimpleParser_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSimpleParserSEL, FPDSimpleParserNewSEL, (void*)CFPD_SimpleParser_V14::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSimpleParserSEL, FPDSimpleParserNew2SEL, (void*)CFPD_SimpleParser_V14::New2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSimpleParserSEL, FPDSimpleParserDestroySEL, (void*)CFPD_SimpleParser_V14::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSimpleParserSEL, FPDSimpleParserGetWordSEL, (void*)CFPD_SimpleParser_V14::GetWord);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSimpleParserSEL, FPDSimpleParserSearchTokenSEL, (void*)CFPD_SimpleParser_V14::SearchToken);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSimpleParserSEL, FPDSimpleParserSkipWordSEL, (void*)CFPD_SimpleParser_V14::SkipWord);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSimpleParserSEL, FPDSimpleParserFindTagPairSEL, (void*)CFPD_SimpleParser_V14::FindTagPair);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSimpleParserSEL, FPDSimpleParserFindTagParamSEL, (void*)CFPD_SimpleParser_V14::FindTagParam);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSimpleParserSEL, FPDSimpleParserGetPosSEL, (void*)CFPD_SimpleParser_V14::GetPos);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSimpleParserSEL, FPDSimpleParserSetPosSEL, (void*)CFPD_SimpleParser_V14::SetPos);
	}
};

// fpd_parserImpl.h end

// In file fpd_psiImpl.h
// fpd_psiImpl.h end

// In file fpd_pwlImpl.h
// fpd_pwlImpl.h end

// In file fpd_renderImpl.h
class CFPD_WinBitmapDevice_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDWinBitmapDeviceSEL, FPDWinBitmapDeviceNewSEL, (void*)CFPD_WinBitmapDevice_V14::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDWinBitmapDeviceSEL, FPDWinBitmapDeviceDestroySEL, (void*)CFPD_WinBitmapDevice_V14::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDWinBitmapDeviceSEL, FPDWinBitmapDeviceGetDCSEL, (void*)CFPD_WinBitmapDevice_V14::GetDC);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDWinBitmapDeviceSEL, FPDWinBitmapDeviceCastToRenderDeviceSEL, (void*)CFPD_WinBitmapDevice_V14::CastToRenderDevice);
	}
};

class CFPD_CPWLImage_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLImageSEL, FPDCPWLImageNewSEL, (void*)CFPD_CPWLImage_V14::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLImageSEL, FPDCPWLImageDeleteSEL, (void*)CFPD_CPWLImage_V14::Delete);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLImageSEL, FPDCPWLImageGetImageAppStreamSEL, (void*)CFPD_CPWLImage_V14::GetImageAppStream);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLImageSEL, FPDCPWLImageGetScaleSEL, (void*)CFPD_CPWLImage_V14::GetScale);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLImageSEL, FPDCPWLImageGetImageOffsetSEL, (void*)CFPD_CPWLImage_V14::GetImageOffset);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLImageSEL, FPDCPWLImageGetPDFStreamSEL, (void*)CFPD_CPWLImage_V14::GetPDFStream);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLImageSEL, FPDCPWLImageSetPDFStreamSEL, (void*)CFPD_CPWLImage_V14::SetPDFStream);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLImageSEL, FPDCPWLImageGetImageSizeSEL, (void*)CFPD_CPWLImage_V14::GetImageSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLImageSEL, FPDCPWLImageGetImageMatrixSEL, (void*)CFPD_CPWLImage_V14::GetImageMatrix);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLImageSEL, FPDCPWLImageGetImageAliasSEL, (void*)CFPD_CPWLImage_V14::GetImageAlias);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLImageSEL, FPDCPWLImageSetImageAliasSEL, (void*)CFPD_CPWLImage_V14::SetImageAlias);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLImageSEL, FPDCPWLImageGetCPWLWndSEL, (void*)CFPD_CPWLImage_V14::GetCPWLWnd);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLImageSEL, FPDCPWLImageDrawThisAppearanceSEL, (void*)CFPD_CPWLImage_V14::DrawThisAppearance);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLImageSEL, FPDCPWLImageDrawChildAppearanceSEL, (void*)CFPD_CPWLImage_V14::DrawChildAppearance);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLImageSEL, FPDCPWLImageNew2SEL, (void*)CFPD_CPWLImage_V14::New2);
	}
};

class CFPD_CPWLLabel_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLLabelSEL, FPDCPWLLabelNewSEL, (void*)CFPD_CPWLLabel_V14::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLLabelSEL, FPDCPWLLabelDeleteSEL, (void*)CFPD_CPWLLabel_V14::Delete);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLLabelSEL, FPDCPWLLabelGetClassNamePWLSEL, (void*)CFPD_CPWLLabel_V14::GetClassNamePWL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLLabelSEL, FPDCPWLLabelSetFontSizeSEL, (void*)CFPD_CPWLLabel_V14::SetFontSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLLabelSEL, FPDCPWLLabelGetFontSizeSEL, (void*)CFPD_CPWLLabel_V14::GetFontSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLLabelSEL, FPDCPWLLabelSetDirectionRTLSEL, (void*)CFPD_CPWLLabel_V14::SetDirectionRTL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLLabelSEL, FPDCPWLLabelSetTextSEL, (void*)CFPD_CPWLLabel_V14::SetText);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLLabelSEL, FPDCPWLLabelGetTextSEL, (void*)CFPD_CPWLLabel_V14::GetText);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLLabelSEL, FPDCPWLLabelSetLimitCharSEL, (void*)CFPD_CPWLLabel_V14::SetLimitChar);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLLabelSEL, FPDCPWLLabelSetHorzScaleSEL, (void*)CFPD_CPWLLabel_V14::SetHorzScale);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLLabelSEL, FPDCPWLLabelSetCharSpaceSEL, (void*)CFPD_CPWLLabel_V14::SetCharSpace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLLabelSEL, FPDCPWLLabelGetContentRectSEL, (void*)CFPD_CPWLLabel_V14::GetContentRect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLLabelSEL, FPDCPWLLabelGetTotalWordsSEL, (void*)CFPD_CPWLLabel_V14::GetTotalWords);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLLabelSEL, FPDCPWLLabelGetTextAppearanceStreamSEL, (void*)CFPD_CPWLLabel_V14::GetTextAppearanceStream);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLLabelSEL, FPDCPWLLabelDrawPrintAppearanceSEL, (void*)CFPD_CPWLLabel_V14::DrawPrintAppearance);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLLabelSEL, FPDCPWLLabelGetEditSEL, (void*)CFPD_CPWLLabel_V14::GetEdit);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLLabelSEL, FPDCPWLLabelGetCPWLWndSEL, (void*)CFPD_CPWLLabel_V14::GetCPWLWnd);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLLabelSEL, FPDCPWLLabelOnCreatedSEL, (void*)CFPD_CPWLLabel_V14::OnCreated);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLLabelSEL, FPDCPWLLabelDrawThisAppearanceSEL, (void*)CFPD_CPWLLabel_V14::DrawThisAppearance);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLLabelSEL, FPDCPWLLabelGetThisAppearanceStreamSEL, (void*)CFPD_CPWLLabel_V14::GetThisAppearanceStream);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLLabelSEL, FPDCPWLLabelRePosChildWndSEL, (void*)CFPD_CPWLLabel_V14::RePosChildWnd);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLLabelSEL, FPDCPWLLabelSetParamByFlagSEL, (void*)CFPD_CPWLLabel_V14::SetParamByFlag);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLLabelSEL, FPDCPWLLabelNew2SEL, (void*)CFPD_CPWLLabel_V14::New2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLLabelSEL, FPDCPWLLabelSetRichTextByXMLSEL, (void*)CFPD_CPWLLabel_V14::SetRichTextByXML);
	}
};

class CFPD_CPWLTimerHandler_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLTimerHandlerSEL, FPDCPWLTimerHandlerNewSEL, (void*)CFPD_CPWLTimerHandler_V14::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLTimerHandlerSEL, FPDCPWLTimerHandlerDestroySEL, (void*)CFPD_CPWLTimerHandler_V14::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLTimerHandlerSEL, FPDCPWLTimerHandlerBeginTimerSEL, (void*)CFPD_CPWLTimerHandler_V14::BeginTimer);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLTimerHandlerSEL, FPDCPWLTimerHandlerEndTimerSEL, (void*)CFPD_CPWLTimerHandler_V14::EndTimer);
	}
};

class CFPD_CPWLFocusHandler_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLFocusHandlerSEL, FPDCPWLFocusHandlerNewSEL, (void*)CFPD_CPWLFocusHandler_V14::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLFocusHandlerSEL, FPDCPWLFocusHandlerDestroySEL, (void*)CFPD_CPWLFocusHandler_V14::Destroy);
	}
};

class CFPD_CPWLProviderHandler_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLProviderHandlerSEL, FPDCPWLProviderHandlerNewSEL, (void*)CFPD_CPWLProviderHandler_V14::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLProviderHandlerSEL, FPDCPWLProviderHandlerDestroySEL, (void*)CFPD_CPWLProviderHandler_V14::Destroy);
	}
};

class CFPD_CPWLWnd_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndNewSEL, (void*)CFPD_CPWLWnd_V14::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndDestroySEL, (void*)CFPD_CPWLWnd_V14::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndCreateChildItemPWLLabelSEL, (void*)CFPD_CPWLWnd_V14::CreateChildItemPWLLabel);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndCreateSEL, (void*)CFPD_CPWLWnd_V14::Create);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndGetClassNamePWLSEL, (void*)CFPD_CPWLWnd_V14::GetClassNamePWL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndMoveSEL, (void*)CFPD_CPWLWnd_V14::Move);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndInvalidateRectSEL, (void*)CFPD_CPWLWnd_V14::InvalidateRect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndGetAppearanceStreamSEL, (void*)CFPD_CPWLWnd_V14::GetAppearanceStream);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndDrawAppearanceSEL, (void*)CFPD_CPWLWnd_V14::DrawAppearance);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndOnKeyDownSEL, (void*)CFPD_CPWLWnd_V14::OnKeyDown);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndOnKeyUpSEL, (void*)CFPD_CPWLWnd_V14::OnKeyUp);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndOnCharSEL, (void*)CFPD_CPWLWnd_V14::OnChar);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndOnLButtonDblClkSEL, (void*)CFPD_CPWLWnd_V14::OnLButtonDblClk);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndOnLButtonDownSEL, (void*)CFPD_CPWLWnd_V14::OnLButtonDown);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndOnLButtonUpSEL, (void*)CFPD_CPWLWnd_V14::OnLButtonUp);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndOnMButtonDblClkSEL, (void*)CFPD_CPWLWnd_V14::OnMButtonDblClk);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndOnMButtonDownSEL, (void*)CFPD_CPWLWnd_V14::OnMButtonDown);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndOnMButtonUpSEL, (void*)CFPD_CPWLWnd_V14::OnMButtonUp);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndOnRButtonDblClkSEL, (void*)CFPD_CPWLWnd_V14::OnRButtonDblClk);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndOnRButtonDownSEL, (void*)CFPD_CPWLWnd_V14::OnRButtonDown);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndOnRButtonUpSEL, (void*)CFPD_CPWLWnd_V14::OnRButtonUp);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndOnMouseMoveSEL, (void*)CFPD_CPWLWnd_V14::OnMouseMove);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndOnMouseWheelSEL, (void*)CFPD_CPWLWnd_V14::OnMouseWheel);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndSetShowTextColorSEL, (void*)CFPD_CPWLWnd_V14::SetShowTextColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndSetShowBackColorSEL, (void*)CFPD_CPWLWnd_V14::SetShowBackColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndSetFocusSEL, (void*)CFPD_CPWLWnd_V14::SetFocus);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndKillFocusSEL, (void*)CFPD_CPWLWnd_V14::KillFocus);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndSetCaptureSEL, (void*)CFPD_CPWLWnd_V14::SetCapture);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndReleaseCaptureSEL, (void*)CFPD_CPWLWnd_V14::ReleaseCapture);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndOnNotifySEL, (void*)CFPD_CPWLWnd_V14::OnNotify);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndSetTextColorSEL, (void*)CFPD_CPWLWnd_V14::SetTextColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndSetTextStrokeColorSEL, (void*)CFPD_CPWLWnd_V14::SetTextStrokeColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndSetVisibleSEL, (void*)CFPD_CPWLWnd_V14::SetVisible);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndGetFocusRectSEL, (void*)CFPD_CPWLWnd_V14::GetFocusRect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndGetBackgroundColorSEL, (void*)CFPD_CPWLWnd_V14::GetBackgroundColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndGetBorderColorSEL, (void*)CFPD_CPWLWnd_V14::GetBorderColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndGetTextColorSEL, (void*)CFPD_CPWLWnd_V14::GetTextColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndGetTextStrokeColorSEL, (void*)CFPD_CPWLWnd_V14::GetTextStrokeColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndGetFontSizeSEL, (void*)CFPD_CPWLWnd_V14::GetFontSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndGetInnerBorderWidthSEL, (void*)CFPD_CPWLWnd_V14::GetInnerBorderWidth);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndGetBorderLeftTopColorSEL, (void*)CFPD_CPWLWnd_V14::GetBorderLeftTopColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndGetBorderRightBottomColorSEL, (void*)CFPD_CPWLWnd_V14::GetBorderRightBottomColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndIsModifiedSEL, (void*)CFPD_CPWLWnd_V14::IsModified);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndSetFontSizeSEL, (void*)CFPD_CPWLWnd_V14::SetFontSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndSetBackgroundColorSEL, (void*)CFPD_CPWLWnd_V14::SetBackgroundColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndSetBorderColorSEL, (void*)CFPD_CPWLWnd_V14::SetBorderColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndSetBorderWidthSEL, (void*)CFPD_CPWLWnd_V14::SetBorderWidth);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndSetClipRectSEL, (void*)CFPD_CPWLWnd_V14::SetClipRect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndSetBorderStyleSEL, (void*)CFPD_CPWLWnd_V14::SetBorderStyle);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndSetBorderDashSEL, (void*)CFPD_CPWLWnd_V14::SetBorderDash);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndGetOriginWindowRectSEL, (void*)CFPD_CPWLWnd_V14::GetOriginWindowRect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndGetWindowRectSEL, (void*)CFPD_CPWLWnd_V14::GetWindowRect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndGetClientRectSEL, (void*)CFPD_CPWLWnd_V14::GetClientRect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndGetCenterPointSEL, (void*)CFPD_CPWLWnd_V14::GetCenterPoint);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndGetClientCenterSquareSEL, (void*)CFPD_CPWLWnd_V14::GetClientCenterSquare);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndGetWindowCenterSquareSEL, (void*)CFPD_CPWLWnd_V14::GetWindowCenterSquare);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndGetBorderWidthSEL, (void*)CFPD_CPWLWnd_V14::GetBorderWidth);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndIsVisibleSEL, (void*)CFPD_CPWLWnd_V14::IsVisible);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndHasFlagSEL, (void*)CFPD_CPWLWnd_V14::HasFlag);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndAddFlagSEL, (void*)CFPD_CPWLWnd_V14::AddFlag);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndRemoveFlagSEL, (void*)CFPD_CPWLWnd_V14::RemoveFlag);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndIsUseFXFontDeAscentSEL, (void*)CFPD_CPWLWnd_V14::IsUseFXFontDeAscent);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndGetClipRectSEL, (void*)CFPD_CPWLWnd_V14::GetClipRect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndGetParentWindowSEL, (void*)CFPD_CPWLWnd_V14::GetParentWindow);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndGetBorderStyleSEL, (void*)CFPD_CPWLWnd_V14::GetBorderStyle);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndGetBorderDashSEL, (void*)CFPD_CPWLWnd_V14::GetBorderDash);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndGetAttachedDataSEL, (void*)CFPD_CPWLWnd_V14::GetAttachedData);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndWndHitTestSEL, (void*)CFPD_CPWLWnd_V14::WndHitTest);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndClientHitTestSEL, (void*)CFPD_CPWLWnd_V14::ClientHitTest);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndIsCaptureMouseSEL, (void*)CFPD_CPWLWnd_V14::IsCaptureMouse);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndGetFocusedSEL, (void*)CFPD_CPWLWnd_V14::GetFocused);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndIsFocusedSEL, (void*)CFPD_CPWLWnd_V14::IsFocused);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndIsReadOnlySEL, (void*)CFPD_CPWLWnd_V14::IsReadOnly);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndGetVScrollBarSEL, (void*)CFPD_CPWLWnd_V14::GetVScrollBar);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndGetFontMapSEL, (void*)CFPD_CPWLWnd_V14::GetFontMap);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndGetProviderSEL, (void*)CFPD_CPWLWnd_V14::GetProvider);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndGetSystemHandlerSEL, (void*)CFPD_CPWLWnd_V14::GetSystemHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndGetFocusHandlerSEL, (void*)CFPD_CPWLWnd_V14::GetFocusHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndGetTransparencySEL, (void*)CFPD_CPWLWnd_V14::GetTransparency);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndSetTransparencySEL, (void*)CFPD_CPWLWnd_V14::SetTransparency);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndGetChildToRootSEL, (void*)CFPD_CPWLWnd_V14::GetChildToRoot);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndGetChildMatrixSEL, (void*)CFPD_CPWLWnd_V14::GetChildMatrix);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndSetChildMatrixSEL, (void*)CFPD_CPWLWnd_V14::SetChildMatrix);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndGetWindowMatrixSEL, (void*)CFPD_CPWLWnd_V14::GetWindowMatrix);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndChildToParentSEL, (void*)CFPD_CPWLWnd_V14::ChildToParent);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndChildToParent2SEL, (void*)CFPD_CPWLWnd_V14::ChildToParent2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndParentToChildSEL, (void*)CFPD_CPWLWnd_V14::ParentToChild);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndParentToChild2SEL, (void*)CFPD_CPWLWnd_V14::ParentToChild2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndGetItemHeightSEL, (void*)CFPD_CPWLWnd_V14::GetItemHeight);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndGetItemLeftMarginSEL, (void*)CFPD_CPWLWnd_V14::GetItemLeftMargin);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndGetItemRightMarginSEL, (void*)CFPD_CPWLWnd_V14::GetItemRightMargin);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndEnableWindowSEL, (void*)CFPD_CPWLWnd_V14::EnableWindow);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndIsEnabledSEL, (void*)CFPD_CPWLWnd_V14::IsEnabled);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndSetCursorSEL, (void*)CFPD_CPWLWnd_V14::SetCursor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndEnableRefreshSEL, (void*)CFPD_CPWLWnd_V14::EnableRefresh);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndGetListTooltipSEL, (void*)CFPD_CPWLWnd_V14::GetListTooltip);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndSetLayoutSEL, (void*)CFPD_CPWLWnd_V14::SetLayout);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndSetNofifySEL, (void*)CFPD_CPWLWnd_V14::SetNofify);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndSetClientRectSEL, (void*)CFPD_CPWLWnd_V14::SetClientRect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndGetOwnerClientRectSEL, (void*)CFPD_CPWLWnd_V14::GetOwnerClientRect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndAdpatDPI_XSEL, (void*)CFPD_CPWLWnd_V14::AdpatDPI_X);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndAdpatDPI_YSEL, (void*)CFPD_CPWLWnd_V14::AdpatDPI_Y);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndAddChildSEL, (void*)CFPD_CPWLWnd_V14::AddChild);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndRemoveChildSEL, (void*)CFPD_CPWLWnd_V14::RemoveChild);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndDrawThisAppearanceSEL, (void*)CFPD_CPWLWnd_V14::DrawThisAppearance);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndCreateChildWndSEL, (void*)CFPD_CPWLWnd_V14::CreateChildWnd);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndRePosChildWndSEL, (void*)CFPD_CPWLWnd_V14::RePosChildWnd);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndGetAppearanceStream2SEL, (void*)CFPD_CPWLWnd_V14::GetAppearanceStream2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndNew2SEL, (void*)CFPD_CPWLWnd_V14::New2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndSetCaretToEndSEL, (void*)CFPD_CPWLWnd_V14::SetCaretToEnd);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndCreateNotifySEL, (void*)CFPD_CPWLWnd_V14::CreateNotify);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLWndSEL, FPDCPWLWndDeleteNotifySEL, (void*)CFPD_CPWLWnd_V14::DeleteNotify);
	}
};

class CFPD_CPWLUtils_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLUtilsSEL, FPDCPWLUtilsGetIconAppStreamSEL, (void*)CFPD_CPWLUtils_V14::GetIconAppStream);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLUtilsSEL, FPDCPWLUtilsDrawIconAppStreamSEL, (void*)CFPD_CPWLUtils_V14::DrawIconAppStream);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLUtilsSEL, FPDCPWLUtilsGetDBClickWordRangeSEL, (void*)CFPD_CPWLUtils_V14::GetDBClickWordRange);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLUtilsSEL, FPDCPWLUtilsGetRectFillAppStreamSEL, (void*)CFPD_CPWLUtils_V14::GetRectFillAppStream);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLUtilsSEL, FPDCPWLUtilsGetBorderAppStreamSEL, (void*)CFPD_CPWLUtils_V14::GetBorderAppStream);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLUtilsSEL, FPDCPWLUtilsGetColorAppStreamSEL, (void*)CFPD_CPWLUtils_V14::GetColorAppStream);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLUtilsSEL, FPDCPWLUtilsInflateRectSEL, (void*)CFPD_CPWLUtils_V14::InflateRect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLUtilsSEL, FPDCPWLUtilsDrawFillRectSEL, (void*)CFPD_CPWLUtils_V14::DrawFillRect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLUtilsSEL, FPDCPWLUtilsDrawFillRect2SEL, (void*)CFPD_CPWLUtils_V14::DrawFillRect2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLUtilsSEL, FPDCPWLUtilsGetEditAppStreamSEL, (void*)CFPD_CPWLUtils_V14::GetEditAppStream);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLUtilsSEL, FPDCPWLUtilsPWLColorToARGBSEL, (void*)CFPD_CPWLUtils_V14::PWLColorToARGB);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLUtilsSEL, FPDCPWLUtilsPWLColorToFXColorSEL, (void*)CFPD_CPWLUtils_V14::PWLColorToFXColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLUtilsSEL, FPDCPWLUtilsDeflateRectSEL, (void*)CFPD_CPWLUtils_V14::DeflateRect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLUtilsSEL, FPDCPWLUtilsDevideColorSEL, (void*)CFPD_CPWLUtils_V14::DevideColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLUtilsSEL, FPDCPWLUtilsGetCheckBoxAppStreamSEL, (void*)CFPD_CPWLUtils_V14::GetCheckBoxAppStream);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLUtilsSEL, FPDCPWLUtilsGetCircleBorderAppStreamSEL, (void*)CFPD_CPWLUtils_V14::GetCircleBorderAppStream);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLUtilsSEL, FPDCPWLUtilsGetCircleFillAppStreamSEL, (void*)CFPD_CPWLUtils_V14::GetCircleFillAppStream);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLUtilsSEL, FPDCPWLUtilsGetDropButtonAppStreamSEL, (void*)CFPD_CPWLUtils_V14::GetDropButtonAppStream);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLUtilsSEL, FPDCPWLUtilsGetPushButtonAppStreamSEL, (void*)CFPD_CPWLUtils_V14::GetPushButtonAppStream);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLUtilsSEL, FPDCPWLUtilsGetRadioButtonAppStreamSEL, (void*)CFPD_CPWLUtils_V14::GetRadioButtonAppStream);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLUtilsSEL, FPDCPWLUtilsSubstractColorSEL, (void*)CFPD_CPWLUtils_V14::SubstractColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLUtilsSEL, FPDCPWLUtilsGetCenterSquareSEL, (void*)CFPD_CPWLUtils_V14::GetCenterSquare);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLUtilsSEL, FPDCPWLUtilsDrawStrokeRectSEL, (void*)CFPD_CPWLUtils_V14::DrawStrokeRect);
	}
};

class CFPD_ColorF_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDColorFSEL, FPDColorFConvertColorTypeSEL, (void*)CFPD_ColorF_V14::ConvertColorType);
	}
};

// fpd_renderImpl.h end

// In file fpd_resourceImpl.h
class CFPD_OutputPreview_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOutputPreviewSEL, FPDOutputPreviewCreateSEL, (void*)CFPD_OutputPreview_V14::Create);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOutputPreviewSEL, FPDOutputPreviewDestroySEL, (void*)CFPD_OutputPreview_V14::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOutputPreviewSEL, FPDOutputPreviewSetSimulationProfileSEL, (void*)CFPD_OutputPreview_V14::SetSimulationProfile);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOutputPreviewSEL, FPDOutputPreviewHasPageOverprintSEL, (void*)CFPD_OutputPreview_V14::HasPageOverprint);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOutputPreviewSEL, FPDOutputPreviewSetShowSEL, (void*)CFPD_OutputPreview_V14::SetShow);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOutputPreviewSEL, FPDOutputPreviewSetPreviewSEL, (void*)CFPD_OutputPreview_V14::SetPreview);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOutputPreviewSEL, FPDOutputPreviewGetPlatesSEL, (void*)CFPD_OutputPreview_V14::GetPlates);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOutputPreviewSEL, FPDOutputPreviewSetCheckSEL, (void*)CFPD_OutputPreview_V14::SetCheck);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOutputPreviewSEL, FPDOutputPreviewGetCheckSEL, (void*)CFPD_OutputPreview_V14::GetCheck);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOutputPreviewSEL, FPDOutputPreviewGetFinalBitmapSEL, (void*)CFPD_OutputPreview_V14::GetFinalBitmap);
	}
};

class CFPD_ImageSetParam_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageSetParamSEL, FPDImageSetParamCreateSEL, (void*)CFPD_ImageSetParam_V14::Create);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageSetParamSEL, FPDImageSetParamDestroySEL, (void*)CFPD_ImageSetParam_V14::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageSetParamSEL, FPDImageSetParamSetColorSEL, (void*)CFPD_ImageSetParam_V14::SetColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageSetParamSEL, FPDImageSetParamGetColorSEL, (void*)CFPD_ImageSetParam_V14::GetColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageSetParamSEL, FPDImageSetParamSetQualitySEL, (void*)CFPD_ImageSetParam_V14::SetQuality);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageSetParamSEL, FPDImageSetParamGetQualitySEL, (void*)CFPD_ImageSetParam_V14::GetQuality);
	}
};

class CFPD_Type3FontDict_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDType3FontDictSEL, FPDType3FontDictCreateSEL, (void*)CFPD_Type3FontDict_V14::Create);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDType3FontDictSEL, FPDType3FontDictDestroySEL, (void*)CFPD_Type3FontDict_V14::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDType3FontDictSEL, FPDType3FontDictAddUnicodeSEL, (void*)CFPD_Type3FontDict_V14::AddUnicode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDType3FontDictSEL, FPDType3FontDictGenerateFontDictSEL, (void*)CFPD_Type3FontDict_V14::GenerateFontDict);
	}
};

// fpd_resourceImpl.h end

// In file fpd_serialImpl.h
class CFPD_StandardLinearization_V14_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDStandardLinearizationSEL, FPDStandardLinearizationGetCFPDLinearizedObjSEL, (void*)CFPD_StandardLinearization_V14::GetCFPDLinearizedObj);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDStandardLinearizationSEL, FPDStandardLinearizationGetLinearizedObjNumSEL, (void*)CFPD_StandardLinearization_V14::GetLinearizedObjNum);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDStandardLinearizationSEL, FPDStandardLinearizationLinearizeSEL, (void*)CFPD_StandardLinearization_V14::Linearize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDStandardLinearizationSEL, FPDStandardLinearizationNewSEL, (void*)CFPD_StandardLinearization_V14::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDStandardLinearizationSEL, FPDStandardLinearizationDeleteSEL, (void*)CFPD_StandardLinearization_V14::Delete);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDStandardLinearizationSEL, FPDStandardLinearizationCastToCreatorSEL, (void*)CFPD_StandardLinearization_V14::CastToCreator);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDStandardLinearizationSEL, FPDStandardLinearizationCreateSEL, (void*)CFPD_StandardLinearization_V14::Create);
	}
};

// fpd_serialImpl.h end

// In file fpd_textImpl.h
// fpd_textImpl.h end

// In file fpd_validateImpl.h
// fpd_validateImpl.h end

//----------_V15----------
// In file fs_basicImpl.h
// fs_basicImpl.h end

// In file fs_stringImpl.h
// fs_stringImpl.h end

// In file fdrm_descImpl.h
// fdrm_descImpl.h end

// In file fdrm_managerImpl.h
// fdrm_managerImpl.h end

// In file fdrm_pdfImpl.h
// fdrm_pdfImpl.h end

// In file fdrm_pkiImpl.h
// fdrm_pkiImpl.h end

// In file fhtml_impl.h
// fhtml_impl.h end

// In file fr_appImpl.h
// fr_appImpl.h end

// In file fr_barImpl.h
// fr_barImpl.h end

// In file fr_docImpl.h
// fr_docImpl.h end

// In file fr_fxnetappImpl.h
// fr_fxnetappImpl.h end

// In file fr_menuImpl.h
// fr_menuImpl.h end

// In file fr_sysImpl.h
// fr_sysImpl.h end

// In file fr_viewImpl.h
class CFR_FormTextFind_V15_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRFormTextFindSEL, FRFormTextFindCreateFormTextFindSEL, (void*)CFR_FormTextFind_V15::CreateFormTextFind);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRFormTextFindSEL, FRFormTextFindDeleteFormTextFindSEL, (void*)CFR_FormTextFind_V15::DeleteFormTextFind);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRFormTextFindSEL, FRFormTextFindFindFirstSEL, (void*)CFR_FormTextFind_V15::FindFirst);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRFormTextFindSEL, FRFormTextFindFindNextSEL, (void*)CFR_FormTextFind_V15::FindNext);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRFormTextFindSEL, FRFormTextFindFindPrevSEL, (void*)CFR_FormTextFind_V15::FindPrev);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRFormTextFindSEL, FRFormTextFindGetRectArraySEL, (void*)CFR_FormTextFind_V15::GetRectArray);
	}
};

// fr_viewImpl.h end

// In file middle_imagecompressImpl.h
// middle_imagecompressImpl.h end

// In file middle_optimizeImpl.h
class CFPD_Flatten_V15_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFlattenSEL, FPDFlattenCreateFlattenSEL, (void*)CFPD_Flatten_V15::CreateFlatten);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFlattenSEL, FPDFlattenDeleteFlattenSEL, (void*)CFPD_Flatten_V15::DeleteFlatten);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFlattenSEL, FPDFlattenFlattenPageSEL, (void*)CFPD_Flatten_V15::FlattenPage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFlattenSEL, FPDFlattenFlattenPage2SEL, (void*)CFPD_Flatten_V15::FlattenPage2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFlattenSEL, FPDFlattenSetFlattenProviderSEL, (void*)CFPD_Flatten_V15::SetFlattenProvider);
	}
};

// middle_optimizeImpl.h end

// In file middle_pdfImpl.h
// middle_pdfImpl.h end

// In file middle_portfolioImpl.h
// middle_portfolioImpl.h end

// In file middle_preflightImpl.h
// middle_preflightImpl.h end

// In file fofd_basicImpl.h
// fofd_basicImpl.h end

// In file fofd_docImpl.h
// fofd_docImpl.h end

// In file fofd_pageImpl.h
// fofd_pageImpl.h end

// In file fofd_renderImpl.h
// fofd_renderImpl.h end

// In file fofd_sigImpl.h
// fofd_sigImpl.h end

// In file fpd_3DImpl.h
class CFPD_3DFRMConfiguration_V15_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3DFRMConfigurationSEL, FPD3DFRMConfigurationGetNameSEL, (void*)CFPD_3DFRMConfiguration_V15::GetName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3DFRMConfigurationSEL, FPD3DFRMConfigurationGetContentTypeSEL, (void*)CFPD_3DFRMConfiguration_V15::GetContentType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3DFRMConfigurationSEL, FPD3DFRMConfigurationGetInstancesSEL, (void*)CFPD_3DFRMConfiguration_V15::GetInstances);
	}
};

class CFPD_3DFRMInstance_V15_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3DFRMInstanceSEL, FPD3DFRMInstanceAs3DInstanceSEL, (void*)CFPD_3DFRMInstance_V15::As3DInstance);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3DFRMInstanceSEL, FPD3DFRMInstanceGetContextSEL, (void*)CFPD_3DFRMInstance_V15::GetContext);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3DFRMInstanceSEL, FPD3DFRMInstanceGetAnnotDataSEL, (void*)CFPD_3DFRMInstance_V15::GetAnnotData);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3DFRMInstanceSEL, FPD3DFRMInstanceGetContentTypeSEL, (void*)CFPD_3DFRMInstance_V15::GetContentType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3DFRMInstanceSEL, FPD3DFRMInstanceGetAssetFileSpecSEL, (void*)CFPD_3DFRMInstance_V15::GetAssetFileSpec);
	}
};

class CFPD_3DInstance_V15_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3DInstanceSEL, FPD3DInstancePrepareActivateSEL, (void*)CFPD_3DInstance_V15::PrepareActivate);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3DInstanceSEL, FPD3DInstanceAllocAndActivateCanvasToplevelSEL, (void*)CFPD_3DInstance_V15::AllocAndActivateCanvasToplevel);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3DInstanceSEL, FPD3DInstanceAllocAndActivateCanvasEmbeddedSEL, (void*)CFPD_3DInstance_V15::AllocAndActivateCanvasEmbedded);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3DInstanceSEL, FPD3DInstanceActivateSEL, (void*)CFPD_3DInstance_V15::Activate);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3DInstanceSEL, FPD3DInstanceAllocCanvasToplevelSEL, (void*)CFPD_3DInstance_V15::AllocCanvasToplevel);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3DInstanceSEL, FPD3DInstanceAllocCanvasEmbeddedSEL, (void*)CFPD_3DInstance_V15::AllocCanvasEmbedded);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3DInstanceSEL, FPD3DInstanceReleaseCanvasSEL, (void*)CFPD_3DInstance_V15::ReleaseCanvas);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3DInstanceSEL, FPD3DInstanceDeactivateSEL, (void*)CFPD_3DInstance_V15::Deactivate);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3DInstanceSEL, FPD3DInstanceGetSceneSEL, (void*)CFPD_3DInstance_V15::GetScene);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3DInstanceSEL, FPD3DInstanceGetAssetSEL, (void*)CFPD_3DInstance_V15::GetAsset);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3DInstanceSEL, FPD3DInstanceGetToolSEL, (void*)CFPD_3DInstance_V15::GetTool);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3DInstanceSEL, FPD3DInstanceGetDefaultPresetViewSEL, (void*)CFPD_3DInstance_V15::GetDefaultPresetView);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3DInstanceSEL, FPD3DInstanceExecuteCustomMenuItemSEL, (void*)CFPD_3DInstance_V15::ExecuteCustomMenuItem);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3DInstanceSEL, FPD3DInstanceGetCustomMenuItemByIndexSEL, (void*)CFPD_3DInstance_V15::GetCustomMenuItemByIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3DInstanceSEL, FPD3DInstanceFindCustomMenuItemIndexByNameSEL, (void*)CFPD_3DInstance_V15::FindCustomMenuItemIndexByName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3DInstanceSEL, FPD3DInstanceCountCustomMenuItemsSEL, (void*)CFPD_3DInstance_V15::CountCustomMenuItems);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3DInstanceSEL, FPD3DInstanceGetCustomToolButtonDataByIndexSEL, (void*)CFPD_3DInstance_V15::GetCustomToolButtonDataByIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3DInstanceSEL, FPD3DInstanceFindCustomToolButtonIndexByNameSEL, (void*)CFPD_3DInstance_V15::FindCustomToolButtonIndexByName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3DInstanceSEL, FPD3DInstanceSetCustomToolButtonVisibleSEL, (void*)CFPD_3DInstance_V15::SetCustomToolButtonVisible);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3DInstanceSEL, FPD3DInstanceSetCustomToolButtonEnabledSEL, (void*)CFPD_3DInstance_V15::SetCustomToolButtonEnabled);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3DInstanceSEL, FPD3DInstanceCountCustomToolsSEL, (void*)CFPD_3DInstance_V15::CountCustomTools);
	}
};

class CFPD_3dAnnotDataRichMedia_V15_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3dAnnotDataRichMediaSEL, FPD3dAnnotDataRichMediaRetrieve3DPresetViewListSEL, (void*)CFPD_3dAnnotDataRichMedia_V15::Retrieve3DPresetViewList);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3dAnnotDataRichMediaSEL, FPD3dAnnotDataRichMediaUpdate3DPresetViewListSEL, (void*)CFPD_3dAnnotDataRichMedia_V15::Update3DPresetViewList);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3dAnnotDataRichMediaSEL, FPD3dAnnotDataRichMediaCreate3DPresetViewSEL, (void*)CFPD_3dAnnotDataRichMedia_V15::Create3DPresetView);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3dAnnotDataRichMediaSEL, FPD3dAnnotDataRichMediaFind3DPresetViewSEL, (void*)CFPD_3dAnnotDataRichMedia_V15::Find3DPresetView);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3dAnnotDataRichMediaSEL, FPD3dAnnotDataRichMediaGetArtworkDefault3DPresetViewSEL, (void*)CFPD_3dAnnotDataRichMedia_V15::GetArtworkDefault3DPresetView);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3dAnnotDataRichMediaSEL, FPD3dAnnotDataRichMediaLoadSettingsOptionsSEL, (void*)CFPD_3dAnnotDataRichMedia_V15::LoadSettingsOptions);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3dAnnotDataRichMediaSEL, FPD3dAnnotDataRichMediaGetActivationOptionsSEL, (void*)CFPD_3dAnnotDataRichMedia_V15::GetActivationOptions);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3dAnnotDataRichMediaSEL, FPD3dAnnotDataRichMediaGetDeactivationOptionsSEL, (void*)CFPD_3dAnnotDataRichMedia_V15::GetDeactivationOptions);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3dAnnotDataRichMediaSEL, FPD3dAnnotDataRichMediaGetActivationConfigurationSEL, (void*)CFPD_3dAnnotDataRichMedia_V15::GetActivationConfiguration);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3dAnnotDataRichMediaSEL, FPD3dAnnotDataRichMediaGetActivationPresetViewSEL, (void*)CFPD_3dAnnotDataRichMedia_V15::GetActivationPresetView);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3dAnnotDataRichMediaSEL, FPD3dAnnotDataRichMediaGetAnnotDictSEL, (void*)CFPD_3dAnnotDataRichMedia_V15::GetAnnotDict);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3dAnnotDataRichMediaSEL, FPD3dAnnotDataRichMediaGetPageDictSEL, (void*)CFPD_3dAnnotDataRichMedia_V15::GetPageDict);
	}
};

class CFPD_3deAnimationStyle_V15_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deAnimationStyleSEL, FPD3deAnimationStyleNewSEL, (void*)CFPD_3deAnimationStyle_V15::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deAnimationStyleSEL, FPD3deAnimationStyleDestorySEL, (void*)CFPD_3deAnimationStyle_V15::Destory);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deAnimationStyleSEL, FPD3deAnimationStyleNoAnimationSEL, (void*)CFPD_3deAnimationStyle_V15::NoAnimation);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deAnimationStyleSEL, FPD3deAnimationStyleLinearAnimationSEL, (void*)CFPD_3deAnimationStyle_V15::LinearAnimation);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deAnimationStyleSEL, FPD3deAnimationStyleOscillatingAnimationSEL, (void*)CFPD_3deAnimationStyle_V15::OscillatingAnimation);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deAnimationStyleSEL, FPD3deAnimationStyleSetTypeSEL, (void*)CFPD_3deAnimationStyle_V15::SetType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deAnimationStyleSEL, FPD3deAnimationStyleGetTypeSEL, (void*)CFPD_3deAnimationStyle_V15::GetType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deAnimationStyleSEL, FPD3deAnimationStyleSetPlayCountSEL, (void*)CFPD_3deAnimationStyle_V15::SetPlayCount);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deAnimationStyleSEL, FPD3deAnimationStyleGetPlayCountSEL, (void*)CFPD_3deAnimationStyle_V15::GetPlayCount);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deAnimationStyleSEL, FPD3deAnimationStyleSetTimeMultiplierSEL, (void*)CFPD_3deAnimationStyle_V15::SetTimeMultiplier);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deAnimationStyleSEL, FPD3deAnimationStyleGetTimeMultiplierSEL, (void*)CFPD_3deAnimationStyle_V15::GetTimeMultiplier);
	}
};

class CFPD_3DFRMWindowDimen_V15_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3DFRMWindowDimenSEL, FPD3DFRMWindowDimenNewSEL, (void*)CFPD_3DFRMWindowDimen_V15::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3DFRMWindowDimenSEL, FPD3DFRMWindowDimenDestorySEL, (void*)CFPD_3DFRMWindowDimen_V15::Destory);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3DFRMWindowDimenSEL, FPD3DFRMWindowDimenSetDefaultSEL, (void*)CFPD_3DFRMWindowDimen_V15::SetDefault);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3DFRMWindowDimenSEL, FPD3DFRMWindowDimenGetDefaultSEL, (void*)CFPD_3DFRMWindowDimen_V15::GetDefault);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3DFRMWindowDimenSEL, FPD3DFRMWindowDimenSetMaxSEL, (void*)CFPD_3DFRMWindowDimen_V15::SetMax);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3DFRMWindowDimenSEL, FPD3DFRMWindowDimenGetMaxSEL, (void*)CFPD_3DFRMWindowDimen_V15::GetMax);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3DFRMWindowDimenSEL, FPD3DFRMWindowDimenSetMinSEL, (void*)CFPD_3DFRMWindowDimen_V15::SetMin);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3DFRMWindowDimenSEL, FPD3DFRMWindowDimenGetMinSEL, (void*)CFPD_3DFRMWindowDimen_V15::GetMin);
	}
};

class CFPD_3DFRMWindowPos_V15_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3DFRMWindowPosSEL, FPD3DFRMWindowPosNewSEL, (void*)CFPD_3DFRMWindowPos_V15::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3DFRMWindowPosSEL, FPD3DFRMWindowPosDestorySEL, (void*)CFPD_3DFRMWindowPos_V15::Destory);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3DFRMWindowPosSEL, FPD3DFRMWindowPosSetHAlignSEL, (void*)CFPD_3DFRMWindowPos_V15::SetHAlign);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3DFRMWindowPosSEL, FPD3DFRMWindowPosGetHAlignSEL, (void*)CFPD_3DFRMWindowPos_V15::GetHAlign);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3DFRMWindowPosSEL, FPD3DFRMWindowPosSetVAlignSEL, (void*)CFPD_3DFRMWindowPos_V15::SetVAlign);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3DFRMWindowPosSEL, FPD3DFRMWindowPosGetVAlignSEL, (void*)CFPD_3DFRMWindowPos_V15::GetVAlign);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3DFRMWindowPosSEL, FPD3DFRMWindowPosSetHOffsetSEL, (void*)CFPD_3DFRMWindowPos_V15::SetHOffset);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3DFRMWindowPosSEL, FPD3DFRMWindowPosGetHOffsetSEL, (void*)CFPD_3DFRMWindowPos_V15::GetHOffset);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3DFRMWindowPosSEL, FPD3DFRMWindowPosSetVOffsetSEL, (void*)CFPD_3DFRMWindowPos_V15::SetVOffset);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3DFRMWindowPosSEL, FPD3DFRMWindowPosGetVOffsetSEL, (void*)CFPD_3DFRMWindowPos_V15::GetVOffset);
	}
};

class CFPD_3DFRMWindow_V15_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3DFRMWindowSEL, FPD3DFRMWindowNewSEL, (void*)CFPD_3DFRMWindow_V15::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3DFRMWindowSEL, FPD3DFRMWindowDestorySEL, (void*)CFPD_3DFRMWindow_V15::Destory);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3DFRMWindowSEL, FPD3DFRMWindowSetDimWidthSEL, (void*)CFPD_3DFRMWindow_V15::SetDimWidth);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3DFRMWindowSEL, FPD3DFRMWindowGetDimWidthSEL, (void*)CFPD_3DFRMWindow_V15::GetDimWidth);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3DFRMWindowSEL, FPD3DFRMWindowSetDimHeightSEL, (void*)CFPD_3DFRMWindow_V15::SetDimHeight);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3DFRMWindowSEL, FPD3DFRMWindowGetDimHeightSEL, (void*)CFPD_3DFRMWindow_V15::GetDimHeight);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3DFRMWindowSEL, FPD3DFRMWindowSetPosPositionSEL, (void*)CFPD_3DFRMWindow_V15::SetPosPosition);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3DFRMWindowSEL, FPD3DFRMWindowGetPosPositionSEL, (void*)CFPD_3DFRMWindow_V15::GetPosPosition);
	}
};

class CFPD_3DFRMPresentation_V15_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3DFRMPresentationSEL, FPD3DFRMPresentationNewSEL, (void*)CFPD_3DFRMPresentation_V15::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3DFRMPresentationSEL, FPD3DFRMPresentationDestorySEL, (void*)CFPD_3DFRMPresentation_V15::Destory);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3DFRMPresentationSEL, FPD3DFRMPresentationSetStyleSEL, (void*)CFPD_3DFRMPresentation_V15::SetStyle);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3DFRMPresentationSEL, FPD3DFRMPresentationGetStyleSEL, (void*)CFPD_3DFRMPresentation_V15::GetStyle);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3DFRMPresentationSEL, FPD3DFRMPresentationSetWindowSEL, (void*)CFPD_3DFRMPresentation_V15::SetWindow);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3DFRMPresentationSEL, FPD3DFRMPresentationGetWindowSEL, (void*)CFPD_3DFRMPresentation_V15::GetWindow);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3DFRMPresentationSEL, FPD3DFRMPresentationSetTransparentCanvasSEL, (void*)CFPD_3DFRMPresentation_V15::SetTransparentCanvas);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3DFRMPresentationSEL, FPD3DFRMPresentationGetTransparentCanvasSEL, (void*)CFPD_3DFRMPresentation_V15::GetTransparentCanvas);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3DFRMPresentationSEL, FPD3DFRMPresentationSetShowNavigationPanelSEL, (void*)CFPD_3DFRMPresentation_V15::SetShowNavigationPanel);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3DFRMPresentationSEL, FPD3DFRMPresentationGetShowNavigationPanelSEL, (void*)CFPD_3DFRMPresentation_V15::GetShowNavigationPanel);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3DFRMPresentationSEL, FPD3DFRMPresentationSetShowToolbarSEL, (void*)CFPD_3DFRMPresentation_V15::SetShowToolbar);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3DFRMPresentationSEL, FPD3DFRMPresentationGetShowToolbarSEL, (void*)CFPD_3DFRMPresentation_V15::GetShowToolbar);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3DFRMPresentationSEL, FPD3DFRMPresentationSetPassContextClickSEL, (void*)CFPD_3DFRMPresentation_V15::SetPassContextClick);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3DFRMPresentationSEL, FPD3DFRMPresentationGetPassContextClickSEL, (void*)CFPD_3DFRMPresentation_V15::GetPassContextClick);
	}
};

class CFPD_3DFRMActivation_V15_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3DFRMActivationSEL, FPD3DFRMActivationNewSEL, (void*)CFPD_3DFRMActivation_V15::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3DFRMActivationSEL, FPD3DFRMActivationDestorySEL, (void*)CFPD_3DFRMActivation_V15::Destory);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3DFRMActivationSEL, FPD3DFRMActivationSetConditionSEL, (void*)CFPD_3DFRMActivation_V15::SetCondition);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3DFRMActivationSEL, FPD3DFRMActivationGetConditionSEL, (void*)CFPD_3DFRMActivation_V15::GetCondition);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3DFRMActivationSEL, FPD3DFRMActivationSetAnimationSEL, (void*)CFPD_3DFRMActivation_V15::SetAnimation);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3DFRMActivationSEL, FPD3DFRMActivationGetAnimationSEL, (void*)CFPD_3DFRMActivation_V15::GetAnimation);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3DFRMActivationSEL, FPD3DFRMActivationSetPresentationSEL, (void*)CFPD_3DFRMActivation_V15::SetPresentation);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3DFRMActivationSEL, FPD3DFRMActivationGetPresentationSEL, (void*)CFPD_3DFRMActivation_V15::GetPresentation);
	}
};

class CFPD_3DFRMActivation2_V15_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3DFRMActivation2SEL, FPD3DFRMActivation2NewSEL, (void*)CFPD_3DFRMActivation2_V15::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3DFRMActivation2SEL, FPD3DFRMActivation2DestorySEL, (void*)CFPD_3DFRMActivation2_V15::Destory);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3DFRMActivation2SEL, FPD3DFRMActivation2SetViewSEL, (void*)CFPD_3DFRMActivation2_V15::SetView);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3DFRMActivation2SEL, FPD3DFRMActivation2GetViewSEL, (void*)CFPD_3DFRMActivation2_V15::GetView);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3DFRMActivation2SEL, FPD3DFRMActivation2SetConfigurationSEL, (void*)CFPD_3DFRMActivation2_V15::SetConfiguration);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3DFRMActivation2SEL, FPD3DFRMActivation2GetConfigurationSEL, (void*)CFPD_3DFRMActivation2_V15::GetConfiguration);
	}
};

class CFPD_3DFRMDeactivation_V15_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3DFRMDeactivationSEL, FPD3DFRMDeactivationNewSEL, (void*)CFPD_3DFRMDeactivation_V15::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3DFRMDeactivationSEL, FPD3DFRMDeactivationDestorySEL, (void*)CFPD_3DFRMDeactivation_V15::Destory);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3DFRMDeactivationSEL, FPD3DFRMDeactivationSetConditionSEL, (void*)CFPD_3DFRMDeactivation_V15::SetCondition);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3DFRMDeactivationSEL, FPD3DFRMDeactivationGetConditionSEL, (void*)CFPD_3DFRMDeactivation_V15::GetCondition);
	}
};

class CFPD_3dCustomMenuItemData_V15_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3dCustomMenuItemDataSEL, FPD3dCustomMenuItemDataNewSEL, (void*)CFPD_3dCustomMenuItemData_V15::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3dCustomMenuItemDataSEL, FPD3dCustomMenuItemDataDestorySEL, (void*)CFPD_3dCustomMenuItemData_V15::Destory);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3dCustomMenuItemDataSEL, FPD3dCustomMenuItemDataSetMenuItemNameSEL, (void*)CFPD_3dCustomMenuItemData_V15::SetMenuItemName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3dCustomMenuItemDataSEL, FPD3dCustomMenuItemDataGetMenuItemNameSEL, (void*)CFPD_3dCustomMenuItemData_V15::GetMenuItemName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3dCustomMenuItemDataSEL, FPD3dCustomMenuItemDataSetMenuLabelSEL, (void*)CFPD_3dCustomMenuItemData_V15::SetMenuLabel);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3dCustomMenuItemDataSEL, FPD3dCustomMenuItemDataGetMenuLabelSEL, (void*)CFPD_3dCustomMenuItemData_V15::GetMenuLabel);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3dCustomMenuItemDataSEL, FPD3dCustomMenuItemDataSetTypeSEL, (void*)CFPD_3dCustomMenuItemData_V15::SetType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3dCustomMenuItemDataSEL, FPD3dCustomMenuItemDataGetTypeSEL, (void*)CFPD_3dCustomMenuItemData_V15::GetType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3dCustomMenuItemDataSEL, FPD3dCustomMenuItemDataSetCheckedSEL, (void*)CFPD_3dCustomMenuItemData_V15::SetChecked);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3dCustomMenuItemDataSEL, FPD3dCustomMenuItemDataGetCheckedSEL, (void*)CFPD_3dCustomMenuItemData_V15::GetChecked);
	}
};

class CFPD_3deSpriteData_V15_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3deSpriteDataSEL, FPD3deSpriteDataAsMeasureSEL, (void*)CFPD_3deSpriteData_V15::AsMeasure);
	}
};

// fpd_3DImpl.h end

// In file fpd_barcodeImpl.h
// fpd_barcodeImpl.h end

// In file fpd_convertImpl.h
// fpd_convertImpl.h end

// In file fpd_docImpl.h
// fpd_docImpl.h end

// In file fpd_editImpl.h
// fpd_editImpl.h end

// In file fpd_epubImpl.h
// fpd_epubImpl.h end

// In file fpd_fontmgrImpl.h
// fpd_fontmgrImpl.h end

// In file fpd_fxxfaImpl.h
// fpd_fxxfaImpl.h end

// In file fpd_jsImpl.h
// fpd_jsImpl.h end

// In file fpd_lrImpl.h
// fpd_lrImpl.h end

// In file fpd_mathImpl.h
// fpd_mathImpl.h end

// In file fpd_objsImpl.h
// fpd_objsImpl.h end

// In file fpd_pageImpl.h
// fpd_pageImpl.h end

// In file fpd_pageobjImpl.h
// fpd_pageobjImpl.h end

// In file fpd_parserImpl.h
// fpd_parserImpl.h end

// In file fpd_psiImpl.h
// fpd_psiImpl.h end

// In file fpd_pwlImpl.h
// fpd_pwlImpl.h end

// In file fpd_renderImpl.h
class CFPD_SystemHanler_V15_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSystemHanlerSEL, FPDSystemHanlerCreateSystemHandlerSEL, (void*)CFPD_SystemHanler_V15::CreateSystemHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSystemHanlerSEL, FPDSystemHanlerDeleteSystemHandlerSEL, (void*)CFPD_SystemHanler_V15::DeleteSystemHandler);
	}
};

// fpd_renderImpl.h end

// In file fpd_resourceImpl.h
// fpd_resourceImpl.h end

// In file fpd_serialImpl.h
// fpd_serialImpl.h end

// In file fpd_textImpl.h
// fpd_textImpl.h end

// In file fpd_validateImpl.h
// fpd_validateImpl.h end

//----------_V16----------
// In file fs_basicImpl.h
class CFS_CORLOR_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSCORLORSEL, FSCORLORToArgbDecodeSEL, (void*)CFS_CORLOR_V16::ToArgbDecode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSCORLORSEL, FSCORLORToArgbDecode2SEL, (void*)CFS_CORLOR_V16::ToArgbDecode2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSCORLORSEL, FSCORLORToArgbEncodeSEL, (void*)CFS_CORLOR_V16::ToArgbEncode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSCORLORSEL, FSCORLORToArgbEncode2SEL, (void*)CFS_CORLOR_V16::ToArgbEncode2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSCORLORSEL, FSCORLORToRgbEncodeSEL, (void*)CFS_CORLOR_V16::ToRgbEncode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSCORLORSEL, FSCORLORGetGValueFromColorSEL, (void*)CFS_CORLOR_V16::GetGValueFromColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSCORLORSEL, FSCORLORGetRValueFromColorSEL, (void*)CFS_CORLOR_V16::GetRValueFromColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSCORLORSEL, FSCORLORGetBValueFromColorSEL, (void*)CFS_CORLOR_V16::GetBValueFromColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSCORLORSEL, FSCORLORAdobeCMYKtosRGBSEL, (void*)CFS_CORLOR_V16::AdobeCMYKtosRGB);
	}
};

class CFS_GLOG_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSGLOGSEL, FSGLOGLogMessageSEL, (void*)CFS_GLOG_V16::LogMessage);
	}
};

class CFS_CCodec_ModuleMgr_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSCCodecSEL, FSCCodecCreateSEL, (void*)CFS_CCodec_ModuleMgr_V16::Create);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSCCodecSEL, FSCCodecDestroyMgrSEL, (void*)CFS_CCodec_ModuleMgr_V16::DestroyMgr);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSCCodecSEL, FSCCodecPngEncodeSEL, (void*)CFS_CCodec_ModuleMgr_V16::PngEncode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSCCodecSEL, FSCCodecBmpEncodeSEL, (void*)CFS_CCodec_ModuleMgr_V16::BmpEncode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSCCodecSEL, FSCCodecTiffEncodeSEL, (void*)CFS_CCodec_ModuleMgr_V16::TiffEncode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSCCodecSEL, FSCCodecLoadWorkingIccProfileSEL, (void*)CFS_CCodec_ModuleMgr_V16::LoadWorkingIccProfile);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSCCodecSEL, FSCCodecCreateTransformSEL, (void*)CFS_CCodec_ModuleMgr_V16::CreateTransform);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSCCodecSEL, FSCCodecJpegEncodeSEL, (void*)CFS_CCodec_ModuleMgr_V16::JpegEncode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSCCodecSEL, FSCCodecJpegEncode2SEL, (void*)CFS_CCodec_ModuleMgr_V16::JpegEncode2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSCCodecSEL, FSCCodecPngEncode2SEL, (void*)CFS_CCodec_ModuleMgr_V16::PngEncode2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSCCodecSEL, FSCCodecTiffModuleSetICCProfileSEL, (void*)CFS_CCodec_ModuleMgr_V16::TiffModuleSetICCProfile);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSCCodecSEL, FSCCodecPngModuleSetICCProfileSEL, (void*)CFS_CCodec_ModuleMgr_V16::PngModuleSetICCProfile);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSCCodecSEL, FSCCodecCreateJpxEncoderSEL, (void*)CFS_CCodec_ModuleMgr_V16::CreateJpxEncoder);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSCCodecSEL, FSCCodecDeleteJpxEncoderSEL, (void*)CFS_CCodec_ModuleMgr_V16::DeleteJpxEncoder);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSCCodecSEL, FSCCodecJpxEncoderSetICCProfileSEL, (void*)CFS_CCodec_ModuleMgr_V16::JpxEncoderSetICCProfile);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSCCodecSEL, FSCCodecJpxEncoderSetLosslessSEL, (void*)CFS_CCodec_ModuleMgr_V16::JpxEncoderSetLossless);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSCCodecSEL, FSCCodecJpxEncoderSetColorSpaceSEL, (void*)CFS_CCodec_ModuleMgr_V16::JpxEncoderSetColorSpace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSCCodecSEL, FSCCodecJpxEncoderEncodeSEL, (void*)CFS_CCodec_ModuleMgr_V16::JpxEncoderEncode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSCCodecSEL, FSCCodecJpxEncoderEncode2SEL, (void*)CFS_CCodec_ModuleMgr_V16::JpxEncoderEncode2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSCCodecSEL, FSCCodecCreateProgressvieJpxEncoderSEL, (void*)CFS_CCodec_ModuleMgr_V16::CreateProgressvieJpxEncoder);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSCCodecSEL, FSCCodecDeleteProgressvieJpxEncoderSEL, (void*)CFS_CCodec_ModuleMgr_V16::DeleteProgressvieJpxEncoder);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSCCodecSEL, FSCCodecProgressiveJpxEncodeStartSEL, (void*)CFS_CCodec_ModuleMgr_V16::ProgressiveJpxEncodeStart);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSCCodecSEL, FSCCodecProgressiveJpxEncodeStart2SEL, (void*)CFS_CCodec_ModuleMgr_V16::ProgressiveJpxEncodeStart2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSCCodecSEL, FSCCodecProgressiveJpxEncodeContinueSEL, (void*)CFS_CCodec_ModuleMgr_V16::ProgressiveJpxEncodeContinue);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSCCodecSEL, FSCCodecGetWebpModuleSEL, (void*)CFS_CCodec_ModuleMgr_V16::GetWebpModule);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSCCodecSEL, FSCCodecWebpModuleCreateDecoderSEL, (void*)CFS_CCodec_ModuleMgr_V16::WebpModuleCreateDecoder);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSCCodecSEL, FSCCodecWebpModuleGetImageInfoSEL, (void*)CFS_CCodec_ModuleMgr_V16::WebpModuleGetImageInfo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSCCodecSEL, FSCCodecWebpModuleDecodeSEL, (void*)CFS_CCodec_ModuleMgr_V16::WebpModuleDecode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSCCodecSEL, FSCCodecWebpModuleDestroyDecoderSEL, (void*)CFS_CCodec_ModuleMgr_V16::WebpModuleDestroyDecoder);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSCCodecSEL, FSCCodecSetIccProfilesPathSEL, (void*)CFS_CCodec_ModuleMgr_V16::SetIccProfilesPath);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSCCodecSEL, FSCCodecIsSetIccProfilesPathSEL, (void*)CFS_CCodec_ModuleMgr_V16::IsSetIccProfilesPath);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSCCodecSEL, FSCCodecSetWorkingIccProfileSEL, (void*)CFS_CCodec_ModuleMgr_V16::SetWorkingIccProfile);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSCCodecSEL, FSCCodecLoadIccProfileSEL, (void*)CFS_CCodec_ModuleMgr_V16::LoadIccProfile);
	}
};

class CFS_SYSCommonMethod_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSSYSCommonMethodSEL, FSSYSCommonMethodSYS_wtoiSEL, (void*)CFS_SYSCommonMethod_V16::SYS_wtoi);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSSYSCommonMethodSEL, FSSYSCommonMethodSYS_atoiSEL, (void*)CFS_SYSCommonMethod_V16::SYS_atoi);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSSYSCommonMethodSEL, FSSYSCommonMethodClientToScreenPointSEL, (void*)CFS_SYSCommonMethod_V16::ClientToScreenPoint);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSSYSCommonMethodSEL, FSSYSCommonMethodScreenToClientPointSEL, (void*)CFS_SYSCommonMethod_V16::ScreenToClientPoint);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSSYSCommonMethodSEL, FSSYSCommonMethodGetDefaultScreenDpiSEL, (void*)CFS_SYSCommonMethod_V16::GetDefaultScreenDpi);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSSYSCommonMethodSEL, FSSYSCommonMethodUncompressSEL, (void*)CFS_SYSCommonMethod_V16::Uncompress);
	}
};

class CFS_DIBSource_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDIBSourceSEL, FSDIBSourceCastToBitmapSEL, (void*)CFS_DIBSource_V16::CastToBitmap);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDIBSourceSEL, FSDIBSourceDestroySEL, (void*)CFS_DIBSource_V16::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDIBSourceSEL, FSDIBSourceIsAlphaMaskSEL, (void*)CFS_DIBSource_V16::IsAlphaMask);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDIBSourceSEL, FSDIBSourceCloneConvertSEL, (void*)CFS_DIBSource_V16::CloneConvert);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDIBSourceSEL, FSDIBSourceCloneSEL, (void*)CFS_DIBSource_V16::Clone);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDIBSourceSEL, FSDIBSourceGetWidthSEL, (void*)CFS_DIBSource_V16::GetWidth);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDIBSourceSEL, FSDIBSourceGetHeightSEL, (void*)CFS_DIBSource_V16::GetHeight);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDIBSourceSEL, FSDIBSourceGetFormatSEL, (void*)CFS_DIBSource_V16::GetFormat);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDIBSourceSEL, FSDIBSourceGetPitchSEL, (void*)CFS_DIBSource_V16::GetPitch);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDIBSourceSEL, FSDIBSourceGetPaletteSEL, (void*)CFS_DIBSource_V16::GetPalette);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDIBSourceSEL, FSDIBSourceGetBufferSEL, (void*)CFS_DIBSource_V16::GetBuffer);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDIBSourceSEL, FSDIBSourceGetScanlineSEL, (void*)CFS_DIBSource_V16::GetScanline);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDIBSourceSEL, FSDIBSourceDownSampleScanlineSEL, (void*)CFS_DIBSource_V16::DownSampleScanline);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDIBSourceSEL, FSDIBSourceGetBPPSEL, (void*)CFS_DIBSource_V16::GetBPP);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDIBSourceSEL, FSDIBSourceHasAlphaSEL, (void*)CFS_DIBSource_V16::HasAlpha);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDIBSourceSEL, FSDIBSourceIsOpaqueImageSEL, (void*)CFS_DIBSource_V16::IsOpaqueImage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDIBSourceSEL, FSDIBSourceGetPaletteSizeSEL, (void*)CFS_DIBSource_V16::GetPaletteSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDIBSourceSEL, FSDIBSourceGetPaletteArgbSEL, (void*)CFS_DIBSource_V16::GetPaletteArgb);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDIBSourceSEL, FSDIBSourceSetPaletteArgbSEL, (void*)CFS_DIBSource_V16::SetPaletteArgb);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDIBSourceSEL, FSDIBSourceGetAlphaMaskSEL, (void*)CFS_DIBSource_V16::GetAlphaMask);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDIBSourceSEL, FSDIBSourceStretchToSEL, (void*)CFS_DIBSource_V16::StretchTo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDIBSourceSEL, FSDIBSourceTransformToSEL, (void*)CFS_DIBSource_V16::TransformTo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDIBSourceSEL, FSDIBSourceSwapXYSEL, (void*)CFS_DIBSource_V16::SwapXY);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDIBSourceSEL, FSDIBSourceFlipImageSEL, (void*)CFS_DIBSource_V16::FlipImage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDIBSourceSEL, FSDIBSourceGetBitmapAlphaMaskSEL, (void*)CFS_DIBSource_V16::GetBitmapAlphaMask);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDIBSourceSEL, FSDIBSourceGetColorKeySEL, (void*)CFS_DIBSource_V16::GetColorKey);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDIBSourceSEL, FSDIBSourceGetBitmapWithoutColorKeySEL, (void*)CFS_DIBSource_V16::GetBitmapWithoutColorKey);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDIBSourceSEL, FSDIBSourceIsCmykImageSEL, (void*)CFS_DIBSource_V16::IsCmykImage);
	}
};

class CFS_DIBAttribute_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDIBAttributeSEL, FSDIBAttributeCreateSEL, (void*)CFS_DIBAttribute_V16::Create);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDIBAttributeSEL, FSDIBAttributeDeleteSEL, (void*)CFS_DIBAttribute_V16::Delete);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDIBAttributeSEL, FSDIBAttributeSetXDPISEL, (void*)CFS_DIBAttribute_V16::SetXDPI);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDIBAttributeSEL, FSDIBAttributeGetXDPISEL, (void*)CFS_DIBAttribute_V16::GetXDPI);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDIBAttributeSEL, FSDIBAttributeSetYDPISEL, (void*)CFS_DIBAttribute_V16::SetYDPI);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDIBAttributeSEL, FSDIBAttributeGetYDPISEL, (void*)CFS_DIBAttribute_V16::GetYDPI);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDIBAttributeSEL, FSDIBAttributeGetDPIUnitSEL, (void*)CFS_DIBAttribute_V16::GetDPIUnit);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDIBAttributeSEL, FSDIBAttributeGetExifInfoSEL, (void*)CFS_DIBAttribute_V16::GetExifInfo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDIBAttributeSEL, FSDIBAttributeSetTiffFrameCompressTypeSEL, (void*)CFS_DIBAttribute_V16::SetTiffFrameCompressType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDIBAttributeSEL, FSDIBAttributeSetTiffFrameCompressJpegQualitySEL, (void*)CFS_DIBAttribute_V16::SetTiffFrameCompressJpegQuality);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSDIBAttributeSEL, FSDIBAttributeSetDPIUnitSEL, (void*)CFS_DIBAttribute_V16::SetDPIUnit);
	}
};

// fs_basicImpl.h end

// In file fs_stringImpl.h
// fs_stringImpl.h end

// In file fdrm_descImpl.h
// fdrm_descImpl.h end

// In file fdrm_managerImpl.h
// fdrm_managerImpl.h end

// In file fdrm_pdfImpl.h
// fdrm_pdfImpl.h end

// In file fdrm_pkiImpl.h
// fdrm_pkiImpl.h end

// In file fhtml_impl.h
// fhtml_impl.h end

// In file fr_appImpl.h
class CFR_UIMgr_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRUIMgrSEL, FRUIMgrSplitChildFrameColumnSEL, (void*)CFR_UIMgr_V16::SplitChildFrameColumn);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRUIMgrSEL, FRUIMgrSplitChildFrameRowSEL, (void*)CFR_UIMgr_V16::SplitChildFrameRow);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRUIMgrSEL, FRUIMgrDeleteSplitNewWndSEL, (void*)CFR_UIMgr_V16::DeleteSplitNewWnd);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRUIMgrSEL, FRUIMgrSetFloatyTransparencySEL, (void*)CFR_UIMgr_V16::SetFloatyTransparency);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRUIMgrSEL, FRUIMgrAddFloatyBarBtnSEL, (void*)CFR_UIMgr_V16::AddFloatyBarBtn);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRUIMgrSEL, FRUIMgrCreateRibbonFloatySEL, (void*)CFR_UIMgr_V16::CreateRibbonFloaty);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRUIMgrSEL, FRUIMgrInsertRibbonBtnsAfterFloatyCreateSEL, (void*)CFR_UIMgr_V16::InsertRibbonBtnsAfterFloatyCreate);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRUIMgrSEL, FRUIMgrRemoveFloatyRibbonBtnsSEL, (void*)CFR_UIMgr_V16::RemoveFloatyRibbonBtns);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRUIMgrSEL, FRUIMgrGetDocTabIconSEL, (void*)CFR_UIMgr_V16::GetDocTabIcon);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRUIMgrSEL, FRUIMgrGetPDFChildFrmSplitWndRectSEL, (void*)CFR_UIMgr_V16::GetPDFChildFrmSplitWndRect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRUIMgrSEL, FRUIMgrChangeUIRTLSEL, (void*)CFR_UIMgr_V16::ChangeUIRTL);
	}
};

class CFR_ContainerFrmMgrHandler_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRContainerFrmMgrHandlerSEL, FRContainerFrmMgrHandlerNewSEL, (void*)CFR_ContainerFrmMgrHandler_V16::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRContainerFrmMgrHandlerSEL, FRContainerFrmMgrHandlerDestroySEL, (void*)CFR_ContainerFrmMgrHandler_V16::Destroy);
	}
};

class CFR_ContainerFrmMgr_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRContainerFrmMgrSEL, FRContainerFrmMgrGetContainerFrmMgrSEL, (void*)CFR_ContainerFrmMgr_V16::GetContainerFrmMgr);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRContainerFrmMgrSEL, FRContainerFrmMgrCreateContainerFrameSEL, (void*)CFR_ContainerFrmMgr_V16::CreateContainerFrame);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRContainerFrmMgrSEL, FRContainerFrmMgrGetContainerFrameSEL, (void*)CFR_ContainerFrmMgr_V16::GetContainerFrame);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRContainerFrmMgrSEL, FRContainerFrmMgrOpenDocumentSEL, (void*)CFR_ContainerFrmMgr_V16::OpenDocument);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRContainerFrmMgrSEL, FRContainerFrmMgrRegisterContainerFrmEventHandlerSEL, (void*)CFR_ContainerFrmMgr_V16::RegisterContainerFrmEventHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRContainerFrmMgrSEL, FRContainerFrmMgrUnRegisterContainerFrmEventHandlerSEL, (void*)CFR_ContainerFrmMgr_V16::UnRegisterContainerFrmEventHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRContainerFrmMgrSEL, FRContainerFrmMgrOnContainerFrmCreateSEL, (void*)CFR_ContainerFrmMgr_V16::OnContainerFrmCreate);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRContainerFrmMgrSEL, FRContainerFrmMgrOnContainerFrmLoadFinishSEL, (void*)CFR_ContainerFrmMgr_V16::OnContainerFrmLoadFinish);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRContainerFrmMgrSEL, FRContainerFrmMgrOnContainerFrmDestorySEL, (void*)CFR_ContainerFrmMgr_V16::OnContainerFrmDestory);
	}
};

class CFR_PrintProvider_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPrintProviderSEL, FRPrintProviderGetPrintProviderSEL, (void*)CFR_PrintProvider_V16::GetPrintProvider);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPrintProviderSEL, FRPrintProviderGetPrintDocSEL, (void*)CFR_PrintProvider_V16::GetPrintDoc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPrintProviderSEL, FRPrintProviderGetDefaultPrinterNameSEL, (void*)CFR_PrintProvider_V16::GetDefaultPrinterName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPrintProviderSEL, FRPrintProviderIsSnapShotSEL, (void*)CFR_PrintProvider_V16::IsSnapShot);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPrintProviderSEL, FRPrintProviderGetDispModeSEL, (void*)CFR_PrintProvider_V16::GetDispMode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPrintProviderSEL, FRPrintProviderGetDefaultPrinterDevModeSEL, (void*)CFR_PrintProvider_V16::GetDefaultPrinterDevMode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPrintProviderSEL, FRPrintProviderSetDefaultPrinterDevModeSEL, (void*)CFR_PrintProvider_V16::SetDefaultPrinterDevMode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPrintProviderSEL, FRPrintProviderAnnotsSortByOrderSEL, (void*)CFR_PrintProvider_V16::AnnotsSortByOrder);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPrintProviderSEL, FRPrintProviderGetPrintParentHwndSEL, (void*)CFR_PrintProvider_V16::GetPrintParentHwnd);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPrintProviderSEL, FRPrintProviderReleasePrintProviderSEL, (void*)CFR_PrintProvider_V16::ReleasePrintProvider);
	}
};

class CFR_WndProvider_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRWndProviderSEL, FRWndProviderGetCurrentWndProvideSEL, (void*)CFR_WndProvider_V16::GetCurrentWndProvide);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRWndProviderSEL, FRWndProviderGetProviderNameSEL, (void*)CFR_WndProvider_V16::GetProviderName);
	}
};

class CFR_GlobalData_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRGlobalDataSEL, FRGlobalDataIsForbiddenActionChangeZoomSEL, (void*)CFR_GlobalData_V16::IsForbiddenActionChangeZoom);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRGlobalDataSEL, FRGlobalDataIsReplaceDocumentColorsSEL, (void*)CFR_GlobalData_V16::IsReplaceDocumentColors);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRGlobalDataSEL, FRGlobalDataIsOnlyChangeColorBlackTextSEL, (void*)CFR_GlobalData_V16::IsOnlyChangeColorBlackText);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRGlobalDataSEL, FRGlobalDataIsChangeColorTextOrBlackLineArtSEL, (void*)CFR_GlobalData_V16::IsChangeColorTextOrBlackLineArt);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRGlobalDataSEL, FRGlobalDataIsEnableAssistiveTechnologySupportSEL, (void*)CFR_GlobalData_V16::IsEnableAssistiveTechnologySupport);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRGlobalDataSEL, FRGlobalDataIsEmbedContentTextFontSEL, (void*)CFR_GlobalData_V16::IsEmbedContentTextFont);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRGlobalDataSEL, FRGlobalDataIsUseLogicalPageSEL, (void*)CFR_GlobalData_V16::IsUseLogicalPage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRGlobalDataSEL, FRGlobalDataGetEidtDirectionSEL, (void*)CFR_GlobalData_V16::GetEidtDirection);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRGlobalDataSEL, FRGlobalDataGetInitialOpenDirSEL, (void*)CFR_GlobalData_V16::GetInitialOpenDir);
	}
};

class CFR_HandlerDataType_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRHandlerDataTypeSEL, FRHandlerDataTypeCreateDataTypeSEL, (void*)CFR_HandlerDataType_V16::CreateDataType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRHandlerDataTypeSEL, FRHandlerDataTypeDeleteDataTypeSEL, (void*)CFR_HandlerDataType_V16::DeleteDataType);
	}
};

class CFR_MuCopyData_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMuCopyDataSEL, FRMuCopyDataCreateSEL, (void*)CFR_MuCopyData_V16::Create);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMuCopyDataSEL, FRMuCopyDataDestroySEL, (void*)CFR_MuCopyData_V16::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMuCopyDataSEL, FRMuCopyDataGetClientDataSEL, (void*)CFR_MuCopyData_V16::GetClientData);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMuCopyDataSEL, FRMuCopyDataGetRectArraySEL, (void*)CFR_MuCopyData_V16::GetRectArray);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMuCopyDataSEL, FRMuCopyDataGetRowCountSEL, (void*)CFR_MuCopyData_V16::GetRowCount);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMuCopyDataSEL, FRMuCopyDataSetClientDataSEL, (void*)CFR_MuCopyData_V16::SetClientData);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMuCopyDataSEL, FRMuCopyDataSetRectArraySEL, (void*)CFR_MuCopyData_V16::SetRectArray);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMuCopyDataSEL, FRMuCopyDataSetRowCountSEL, (void*)CFR_MuCopyData_V16::SetRowCount);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRMuCopyDataSEL, FRMuCopyDataCopyDataSEL, (void*)CFR_MuCopyData_V16::CopyData);
	}
};

// fr_appImpl.h end

// In file fr_barImpl.h
// fr_barImpl.h end

// In file fr_docImpl.h
class CFR_TextLinkInfo_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRTextLinkInfoSEL, FRTextLinkInfoCreateTextLinkInfoSEL, (void*)CFR_TextLinkInfo_V16::CreateTextLinkInfo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRTextLinkInfoSEL, FRTextLinkInfoDeleteTextLinkInfoSEL, (void*)CFR_TextLinkInfo_V16::DeleteTextLinkInfo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRTextLinkInfoSEL, FRTextLinkInfoGetPageIndexSEL, (void*)CFR_TextLinkInfo_V16::GetPageIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRTextLinkInfoSEL, FRTextLinkInfoGetLinkUrlSEL, (void*)CFR_TextLinkInfo_V16::GetLinkUrl);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRTextLinkInfoSEL, FRTextLinkInfoGetRectArraySEL, (void*)CFR_TextLinkInfo_V16::GetRectArray);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRTextLinkInfoSEL, FRTextLinkInfoGetModifyDateSEL, (void*)CFR_TextLinkInfo_V16::GetModifyDate);
	}
};

class CFR_TextLinkMgr_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRTextLinkMgrSEL, FRTextLinkMgrIsEmailAddressSEL, (void*)CFR_TextLinkMgr_V16::IsEmailAddress);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRTextLinkMgrSEL, FRTextLinkMgrGetLinkListSEL, (void*)CFR_TextLinkMgr_V16::GetLinkList);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRTextLinkMgrSEL, FRTextLinkMgrExecuteTextLinkSEL, (void*)CFR_TextLinkMgr_V16::ExecuteTextLink);
	}
};

class CFR_SelectedImageInfo_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRSelectedImageInfoSEL, FRSelectedImageInfoGetImagePDFRectSEL, (void*)CFR_SelectedImageInfo_V16::GetImagePDFRect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRSelectedImageInfoSEL, FRSelectedImageInfoGetParentFormSEL, (void*)CFR_SelectedImageInfo_V16::GetParentForm);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRSelectedImageInfoSEL, FRSelectedImageInfoGetObjSEL, (void*)CFR_SelectedImageInfo_V16::GetObj);
	}
};

class CFR_ContentObject_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRContentObjectSEL, FRContentObjectCreateContentObjectSEL, (void*)CFR_ContentObject_V16::CreateContentObject);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRContentObjectSEL, FRContentObjectDeleteContentObjectSEL, (void*)CFR_ContentObject_V16::DeleteContentObject);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRContentObjectSEL, FRContentObjectGetDocViewSEL, (void*)CFR_ContentObject_V16::GetDocView);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRContentObjectSEL, FRContentObjectGetPageIndexSEL, (void*)CFR_ContentObject_V16::GetPageIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRContentObjectSEL, FRContentObjectGetPosSEL, (void*)CFR_ContentObject_V16::GetPos);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRContentObjectSEL, FRContentObjectGetIsInFormXObjectSEL, (void*)CFR_ContentObject_V16::GetIsInFormXObject);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRContentObjectSEL, FRContentObjectGetFormLayerSEL, (void*)CFR_ContentObject_V16::GetFormLayer);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRContentObjectSEL, FRContentObjectGetObjSEL, (void*)CFR_ContentObject_V16::GetObj);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRContentObjectSEL, FRContentObjectGetObj2SEL, (void*)CFR_ContentObject_V16::GetObj2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRContentObjectSEL, FRContentObjectGetContainerSEL, (void*)CFR_ContentObject_V16::GetContainer);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRContentObjectSEL, FRContentObjectGetFormMatrixSEL, (void*)CFR_ContentObject_V16::GetFormMatrix);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRContentObjectSEL, FRContentObjectGetObjContainerSEL, (void*)CFR_ContentObject_V16::GetObjContainer);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRContentObjectSEL, FRContentObjectSetDocViewSEL, (void*)CFR_ContentObject_V16::SetDocView);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRContentObjectSEL, FRContentObjectSetPageIndexSEL, (void*)CFR_ContentObject_V16::SetPageIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRContentObjectSEL, FRContentObjectSetPosSEL, (void*)CFR_ContentObject_V16::SetPos);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRContentObjectSEL, FRContentObjectSetIsInFormXObjectSEL, (void*)CFR_ContentObject_V16::SetIsInFormXObject);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRContentObjectSEL, FRContentObjectSetFormLayerSEL, (void*)CFR_ContentObject_V16::SetFormLayer);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRContentObjectSEL, FRContentObjectSetTextRangeSEL, (void*)CFR_ContentObject_V16::SetTextRange);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRContentObjectSEL, FRContentObjectGetTextRangeSizeSEL, (void*)CFR_ContentObject_V16::GetTextRangeSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRContentObjectSEL, FRContentObjectGetTextRangeByIndexSEL, (void*)CFR_ContentObject_V16::GetTextRangeByIndex);
	}
};

// fr_docImpl.h end

// In file fr_fxnetappImpl.h
// fr_fxnetappImpl.h end

// In file fr_menuImpl.h
// fr_menuImpl.h end

// In file fr_sysImpl.h
// fr_sysImpl.h end

// In file fr_viewImpl.h
class CFR_PDFVerwerContentProviderEx_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPDFVerwerContentProviderExSEL, FRPDFVerwerContentProviderExCreatePDFVerwerContentProviderExSEL, (void*)CFR_PDFVerwerContentProviderEx_V16::CreatePDFVerwerContentProviderEx);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPDFVerwerContentProviderExSEL, FRPDFVerwerContentProviderExDeletePDFVerwerContentProviderExSEL, (void*)CFR_PDFVerwerContentProviderEx_V16::DeletePDFVerwerContentProviderEx);
	}
};

class CFR_PDFViewer_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPDFViewerSEL, FRPDFViewerCreatePDFViewerSEL, (void*)CFR_PDFViewer_V16::CreatePDFViewer);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPDFViewerSEL, FRPDFViewerGetPageCountSEL, (void*)CFR_PDFViewer_V16::GetPageCount);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPDFViewerSEL, FRPDFViewerGetPageSEL, (void*)CFR_PDFViewer_V16::GetPage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPDFViewerSEL, FRPDFViewerGetCurrentPageIndexSEL, (void*)CFR_PDFViewer_V16::GetCurrentPageIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPDFViewerSEL, FRPDFViewerGotoPageSEL, (void*)CFR_PDFViewer_V16::GotoPage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPDFViewerSEL, FRPDFViewerGotoPage2SEL, (void*)CFR_PDFViewer_V16::GotoPage2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPDFViewerSEL, FRPDFViewerGotoPage3SEL, (void*)CFR_PDFViewer_V16::GotoPage3);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPDFViewerSEL, FRPDFViewerGetZoomScaleSEL, (void*)CFR_PDFViewer_V16::GetZoomScale);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPDFViewerSEL, FRPDFViewerZoomtoPageSEL, (void*)CFR_PDFViewer_V16::ZoomtoPage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPDFViewerSEL, FRPDFViewerSetPageRotateSEL, (void*)CFR_PDFViewer_V16::SetPageRotate);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPDFViewerSEL, FRPDFViewerGetPageRotateSEL, (void*)CFR_PDFViewer_V16::GetPageRotate);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPDFViewerSEL, FRPDFViewerSetSizeSEL, (void*)CFR_PDFViewer_V16::SetSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPDFViewerSEL, FRPDFViewerGetSizeSEL, (void*)CFR_PDFViewer_V16::GetSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPDFViewerSEL, FRPDFViewerGetRenderDataSEL, (void*)CFR_PDFViewer_V16::GetRenderData);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPDFViewerSEL, FRPDFViewerSetDisplayAnnotSEL, (void*)CFR_PDFViewer_V16::SetDisplayAnnot);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPDFViewerSEL, FRPDFViewerGetCanvasWidthSEL, (void*)CFR_PDFViewer_V16::GetCanvasWidth);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPDFViewerSEL, FRPDFViewerGetCanvasHeightSEL, (void*)CFR_PDFViewer_V16::GetCanvasHeight);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPDFViewerSEL, FRPDFViewerGetScrollPosXSEL, (void*)CFR_PDFViewer_V16::GetScrollPosX);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPDFViewerSEL, FRPDFViewerGetScrollPosYSEL, (void*)CFR_PDFViewer_V16::GetScrollPosY);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPDFViewerSEL, FRPDFViewerScrollSEL, (void*)CFR_PDFViewer_V16::Scroll);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPDFViewerSEL, FRPDFViewerGetBrowserModeSEL, (void*)CFR_PDFViewer_V16::GetBrowserMode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPDFViewerSEL, FRPDFViewerScrollToPosXSEL, (void*)CFR_PDFViewer_V16::ScrollToPosX);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPDFViewerSEL, FRPDFViewerScrollToPosYSEL, (void*)CFR_PDFViewer_V16::ScrollToPosY);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPDFViewerSEL, FRPDFViewerContinueRenderingSEL, (void*)CFR_PDFViewer_V16::ContinueRendering);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPDFViewerSEL, FRPDFViewerAddRecordSEL, (void*)CFR_PDFViewer_V16::AddRecord);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPDFViewerSEL, FRPDFViewerSetViewEventHandlerSEL, (void*)CFR_PDFViewer_V16::SetViewEventHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPDFViewerSEL, FRPDFViewerDeletePDFViewerSEL, (void*)CFR_PDFViewer_V16::DeletePDFViewer);
	}
};

class CFR_PDFViewerPage_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPDFViewerPageSEL, FRPDFViewerPageGetPageRectSEL, (void*)CFR_PDFViewerPage_V16::GetPageRect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPDFViewerPageSEL, FRPDFViewerPageIsVisibleSEL, (void*)CFR_PDFViewerPage_V16::IsVisible);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPDFViewerPageSEL, FRPDFViewerPageGetPageIndexSEL, (void*)CFR_PDFViewerPage_V16::GetPageIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPDFViewerPageSEL, FRPDFViewerPageGetPageFullRectSEL, (void*)CFR_PDFViewerPage_V16::GetPageFullRect);
	}
};

// fr_viewImpl.h end

// In file middle_imagecompressImpl.h
class CFPD_GetBase_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDGetBaseSEL, FPDGetBaseNewImageGetHandlerSEL, (void*)CFPD_GetBase_V16::NewImageGetHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDGetBaseSEL, FPDGetBaseDestroyImageGetHandlerSEL, (void*)CFPD_GetBase_V16::DestroyImageGetHandler);
	}
};

class CFPD_PageImageCompress_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageImageCompressSEL, FPDPageImageCompressCreatePageImageCompressSEL, (void*)CFPD_PageImageCompress_V16::CreatePageImageCompress);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageImageCompressSEL, FPDPageImageCompressDeletePageImageCompressSEL, (void*)CFPD_PageImageCompress_V16::DeletePageImageCompress);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageImageCompressSEL, FPDPageImageCompressImageCompressForPageSEL, (void*)CFPD_PageImageCompress_V16::ImageCompressForPage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageImageCompressSEL, FPDPageImageCompressSetDPIAboveSEL, (void*)CFPD_PageImageCompress_V16::SetDPIAbove);
	}
};

class CFPD_ImageInfo_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageInfoSEL, FPDImageInfoCreateImageInfoSEL, (void*)CFPD_ImageInfo_V16::CreateImageInfo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageInfoSEL, FPDImageInfoDeleteImageInfoSEL, (void*)CFPD_ImageInfo_V16::DeleteImageInfo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageInfoSEL, FPDImageInfoGetBufferSEL, (void*)CFPD_ImageInfo_V16::GetBuffer);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageInfoSEL, FPDImageInfoSetBufferSEL, (void*)CFPD_ImageInfo_V16::SetBuffer);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageInfoSEL, FPDImageInfoGetBufSizeSEL, (void*)CFPD_ImageInfo_V16::GetBufSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageInfoSEL, FPDImageInfoSetBufSizeSEL, (void*)CFPD_ImageInfo_V16::SetBufSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageInfoSEL, FPDImageInfoGetWidthSEL, (void*)CFPD_ImageInfo_V16::GetWidth);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageInfoSEL, FPDImageInfoSetWidthSEL, (void*)CFPD_ImageInfo_V16::SetWidth);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageInfoSEL, FPDImageInfoGetHeightSEL, (void*)CFPD_ImageInfo_V16::GetHeight);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageInfoSEL, FPDImageInfoSetHeightSEL, (void*)CFPD_ImageInfo_V16::SetHeight);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageInfoSEL, FPDImageInfoGetBppSEL, (void*)CFPD_ImageInfo_V16::GetBpp);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageInfoSEL, FPDImageInfoSetBppSEL, (void*)CFPD_ImageInfo_V16::SetBpp);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageInfoSEL, FPDImageInfoGetCompressionflagSEL, (void*)CFPD_ImageInfo_V16::GetCompressionflag);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageInfoSEL, FPDImageInfoSetCompressionflagSEL, (void*)CFPD_ImageInfo_V16::SetCompressionflag);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageInfoSEL, FPDImageInfoGetMaskInfoSEL, (void*)CFPD_ImageInfo_V16::GetMaskInfo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageInfoSEL, FPDImageInfoSetMaskInfoSEL, (void*)CFPD_ImageInfo_V16::SetMaskInfo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageInfoSEL, FPDImageInfoGetGlobalBufferSEL, (void*)CFPD_ImageInfo_V16::GetGlobalBuffer);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageInfoSEL, FPDImageInfoSetGlobalBufferSEL, (void*)CFPD_ImageInfo_V16::SetGlobalBuffer);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageInfoSEL, FPDImageInfoGetGlobalBufferSizeSEL, (void*)CFPD_ImageInfo_V16::GetGlobalBufferSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageInfoSEL, FPDImageInfoSetGlobalBufferSizeSEL, (void*)CFPD_ImageInfo_V16::SetGlobalBufferSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageInfoSEL, FPDImageInfoGetColorSpaceSEL, (void*)CFPD_ImageInfo_V16::GetColorSpace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageInfoSEL, FPDImageInfoSetColorSpaceSEL, (void*)CFPD_ImageInfo_V16::SetColorSpace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageInfoSEL, FPDImageInfoGetEncodeingTypeSEL, (void*)CFPD_ImageInfo_V16::GetEncodeingType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageInfoSEL, FPDImageInfoSetEncodeingTypeSEL, (void*)CFPD_ImageInfo_V16::SetEncodeingType);
	}
};

class CFPD_ImageCompress_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageCompressSEL, FPDImageCompressCreateImageCompressSEL, (void*)CFPD_ImageCompress_V16::CreateImageCompress);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageCompressSEL, FPDImageCompressDeleteImageCompressSEL, (void*)CFPD_ImageCompress_V16::DeleteImageCompress);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageCompressSEL, FPDImageCompressCompressSEL, (void*)CFPD_ImageCompress_V16::Compress);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageCompressSEL, FPDImageCompressStretchSEL, (void*)CFPD_ImageCompress_V16::Stretch);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageCompressSEL, FPDImageCompressStretchDIBitmapWithGetSEL, (void*)CFPD_ImageCompress_V16::StretchDIBitmapWithGet);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageCompressSEL, FPDImageCompressGetImageInfoSEL, (void*)CFPD_ImageCompress_V16::GetImageInfo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageCompressSEL, FPDImageCompressGetImageInfoByIndexSEL, (void*)CFPD_ImageCompress_V16::GetImageInfoByIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageCompressSEL, FPDImageCompressGetImageInfoCountSEL, (void*)CFPD_ImageCompress_V16::GetImageInfoCount);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageCompressSEL, FPDImageCompressGetDIBitmapSEL, (void*)CFPD_ImageCompress_V16::GetDIBitmap);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageCompressSEL, FPDImageCompressGetSrcDIBitmapSEL, (void*)CFPD_ImageCompress_V16::GetSrcDIBitmap);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageCompressSEL, FPDImageCompressCanHighMrcSEL, (void*)CFPD_ImageCompress_V16::CanHighMrc);
	}
};

class CFPD_ImageToPDFDoc_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageToPDFDocSEL, FPDImageToPDFDocAddImageToPageSEL, (void*)CFPD_ImageToPDFDoc_V16::AddImageToPage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageToPDFDocSEL, FPDImageToPDFDocGenPDFImageSEL, (void*)CFPD_ImageToPDFDoc_V16::GenPDFImage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageToPDFDocSEL, FPDImageToPDFDocGenImageObjSEL, (void*)CFPD_ImageToPDFDoc_V16::GenImageObj);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageToPDFDocSEL, FPDImageToPDFDocGeneratePDFImageSEL, (void*)CFPD_ImageToPDFDoc_V16::GeneratePDFImage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageToPDFDocSEL, FPDImageToPDFDocDealMaskSEL, (void*)CFPD_ImageToPDFDoc_V16::DealMask);
	}
};

// middle_imagecompressImpl.h end

// In file middle_optimizeImpl.h
class CFPD_Cleanup_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCleanupSEL, FPDCleanupCreateCleanupSEL, (void*)CFPD_Cleanup_V16::CreateCleanup);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCleanupSEL, FPDCleanupDeleteCleanupSEL, (void*)CFPD_Cleanup_V16::DeleteCleanup);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCleanupSEL, FPDCleanupDisInvalidBookMarkSEL, (void*)CFPD_Cleanup_V16::DisInvalidBookMark);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCleanupSEL, FPDCleanupDisInvalidLinkSEL, (void*)CFPD_Cleanup_V16::DisInvalidLink);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCleanupSEL, FPDCleanupFlateEncodeStreamSEL, (void*)CFPD_Cleanup_V16::FlateEncodeStream);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCleanupSEL, FPDCleanupFlateInsteadOfLZWSEL, (void*)CFPD_Cleanup_V16::FlateInsteadOfLZW);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCleanupSEL, FPDCleanupGetObjsToDeleteSEL, (void*)CFPD_Cleanup_V16::GetObjsToDelete);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCleanupSEL, FPDCleanupDiscardUnreferencedNamedDestinationsSEL, (void*)CFPD_Cleanup_V16::DiscardUnreferencedNamedDestinations);
	}
};

class CFPD_DiscardObjs_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDiscardObjsSEL, FPDDiscardObjsCreateDiscardObjsSEL, (void*)CFPD_DiscardObjs_V16::CreateDiscardObjs);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDiscardObjsSEL, FPDDiscardObjsDeleteDiscardObjsSEL, (void*)CFPD_DiscardObjs_V16::DeleteDiscardObjs);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDiscardObjsSEL, FPDDiscardObjsDisDocFormSIRActionInfoSEL, (void*)CFPD_DiscardObjs_V16::DisDocFormSIRActionInfo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDiscardObjsSEL, FPDDiscardObjsDisFormSIRActionSEL, (void*)CFPD_DiscardObjs_V16::DisFormSIRAction);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDiscardObjsSEL, FPDDiscardObjsDisPageThumbnailsSEL, (void*)CFPD_DiscardObjs_V16::DisPageThumbnails);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDiscardObjsSEL, FPDDiscardObjsDisEmPrintSettingsSEL, (void*)CFPD_DiscardObjs_V16::DisEmPrintSettings);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDiscardObjsSEL, FPDDiscardObjsDisBookmarksSEL, (void*)CFPD_DiscardObjs_V16::DisBookmarks);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDiscardObjsSEL, FPDDiscardObjsDisJavaScriptActionSEL, (void*)CFPD_DiscardObjs_V16::DisJavaScriptAction);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDiscardObjsSEL, FPDDiscardObjsDiscardAlternateImagesSEL, (void*)CFPD_DiscardObjs_V16::DiscardAlternateImages);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDiscardObjsSEL, FPDDiscardObjsDiscardEmbeddedSearchIndexSEL, (void*)CFPD_DiscardObjs_V16::DiscardEmbeddedSearchIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDiscardObjsSEL, FPDDiscardObjsDiscardStrutureContentMarkSEL, (void*)CFPD_DiscardObjs_V16::DiscardStrutureContentMark);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDiscardObjsSEL, FPDDiscardObjsDiscardStructuralParentTreeSEL, (void*)CFPD_DiscardObjs_V16::DiscardStructuralParentTree);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDiscardObjsSEL, FPDDiscardObjsGetObjsToDeleteSEL, (void*)CFPD_DiscardObjs_V16::GetObjsToDelete);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDiscardObjsSEL, FPDDiscardObjsDetectAndMergeImageDebrisSEL, (void*)CFPD_DiscardObjs_V16::DetectAndMergeImageDebris);
	}
};

class CFPD_DiscardUserData_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDiscardUserDataSEL, FPDDiscardUserDataCreateDiscardUserDataSEL, (void*)CFPD_DiscardUserData_V16::CreateDiscardUserData);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDiscardUserDataSEL, FPDDiscardUserDataDeleteDiscardUserDataSEL, (void*)CFPD_DiscardUserData_V16::DeleteDiscardUserData);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDiscardUserDataSEL, FPDDiscardUserDataDisAllCommentsFormsAndMultimediaSEL, (void*)CFPD_DiscardUserData_V16::DisAllCommentsFormsAndMultimedia);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDiscardUserDataSEL, FPDDiscardUserDataDisExCrossRefSEL, (void*)CFPD_DiscardUserData_V16::DisExCrossRef);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDiscardUserDataSEL, FPDDiscardUserDataDisDocInfoAndMetaDataSEL, (void*)CFPD_DiscardUserData_V16::DisDocInfoAndMetaData);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDiscardUserDataSEL, FPDDiscardUserDataDisFileAttchmentsSEL, (void*)CFPD_DiscardUserData_V16::DisFileAttchments);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDiscardUserDataSEL, FPDDiscardUserDataDisPrivateDataOfOtherAppSEL, (void*)CFPD_DiscardUserData_V16::DisPrivateDataOfOtherApp);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDiscardUserDataSEL, FPDDiscardUserDataDiscardLayerSEL, (void*)CFPD_DiscardUserData_V16::DiscardLayer);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDiscardUserDataSEL, FPDDiscardUserDataGetObjsToDeleteSEL, (void*)CFPD_DiscardUserData_V16::GetObjsToDelete);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDiscardUserDataSEL, FPDDiscardUserDataHasFileAttatchSEL, (void*)CFPD_DiscardUserData_V16::HasFileAttatch);
	}
};

class CFPD_Optimizer_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOptimizerSEL, FPDOptimizerCreateSEL, (void*)CFPD_Optimizer_V16::Create);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOptimizerSEL, FPDOptimizerDeleteSEL, (void*)CFPD_Optimizer_V16::Delete);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOptimizerSEL, FPDOptimizerSetCallBackSEL, (void*)CFPD_Optimizer_V16::SetCallBack);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOptimizerSEL, FPDOptimizerSetOptimizerProviderSEL, (void*)CFPD_Optimizer_V16::SetOptimizerProvider);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOptimizerSEL, FPDOptimizerSetDeleteDataCallBackSEL, (void*)CFPD_Optimizer_V16::SetDeleteDataCallBack);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOptimizerSEL, FPDOptimizerStartOptimizerSEL, (void*)CFPD_Optimizer_V16::StartOptimizer);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOptimizerSEL, FPDOptimizerContinueOptimizerSEL, (void*)CFPD_Optimizer_V16::ContinueOptimizer);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOptimizerSEL, FPDOptimizerGetNeedDeleteObjNumSEL, (void*)CFPD_Optimizer_V16::GetNeedDeleteObjNum);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOptimizerSEL, FPDOptimizerSetOptimizerCompressTypeSEL, (void*)CFPD_Optimizer_V16::SetOptimizerCompressType);
	}
};

class CFPD_UnEmbeddedFont_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDUnEmbeddedFontSEL, FPDUnEmbeddedFontCreateUnEmbeddedFontSEL, (void*)CFPD_UnEmbeddedFont_V16::CreateUnEmbeddedFont);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDUnEmbeddedFontSEL, FPDUnEmbeddedFontDeleteUnEmbeddedFontSEL, (void*)CFPD_UnEmbeddedFont_V16::DeleteUnEmbeddedFont);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDUnEmbeddedFontSEL, FPDUnEmbeddedFontUnEmbeddedFontSEL, (void*)CFPD_UnEmbeddedFont_V16::UnEmbeddedFont);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDUnEmbeddedFontSEL, FPDUnEmbeddedFontGetAvailEmbeddedFontArySEL, (void*)CFPD_UnEmbeddedFont_V16::GetAvailEmbeddedFontAry);
	}
};

class CFPD_Sanitize_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSanitizeSEL, FPDSanitizeCreateSanitizeSEL, (void*)CFPD_Sanitize_V16::CreateSanitize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSanitizeSEL, FPDSanitizeDeleteSanitizeSEL, (void*)CFPD_Sanitize_V16::DeleteSanitize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSanitizeSEL, FPDSanitizeSetCallBackSEL, (void*)CFPD_Sanitize_V16::SetCallBack);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSanitizeSEL, FPDSanitizeOptimizeSEL, (void*)CFPD_Sanitize_V16::Optimize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSanitizeSEL, FPDSanitizeSetDeleteDataCallBackSEL, (void*)CFPD_Sanitize_V16::SetDeleteDataCallBack);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSanitizeSEL, FPDSanitizeDeleteHiddenDataSEL, (void*)CFPD_Sanitize_V16::DeleteHiddenData);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSanitizeSEL, FPDSanitizeSanitizeSEL, (void*)CFPD_Sanitize_V16::Sanitize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSanitizeSEL, FPDSanitizeSetSanitizeOptimizerFlagSEL, (void*)CFPD_Sanitize_V16::SetSanitizeOptimizerFlag);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSanitizeSEL, FPDSanitizeGetObjsToDeleteSEL, (void*)CFPD_Sanitize_V16::GetObjsToDelete);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSanitizeSEL, FPDSanitizeSetSanitizeProviderSEL, (void*)CFPD_Sanitize_V16::SetSanitizeProvider);
	}
};

class CFPD_OptimizerProvider_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOptimizerProviderSEL, FPDOptimizerProviderCreateSEL, (void*)CFPD_OptimizerProvider_V16::Create);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOptimizerProviderSEL, FPDOptimizerProviderDeleteSEL, (void*)CFPD_OptimizerProvider_V16::Delete);
	}
};

class CFPD_OptimizerOptions_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOptimizerOptionsSEL, FPDOptimizerOptionsCreateSEL, (void*)CFPD_OptimizerOptions_V16::Create);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOptimizerOptionsSEL, FPDOptimizerOptionsDeleteSEL, (void*)CFPD_OptimizerOptions_V16::Delete);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOptimizerOptionsSEL, FPDOptimizerOptionsSetIsOptImageSEL, (void*)CFPD_OptimizerOptions_V16::SetIsOptImage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOptimizerOptionsSEL, FPDOptimizerOptionsGetIsOptImageSEL, (void*)CFPD_OptimizerOptions_V16::GetIsOptImage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOptimizerOptionsSEL, FPDOptimizerOptionsSetcpParamSEL, (void*)CFPD_OptimizerOptions_V16::SetcpParam);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOptimizerOptionsSEL, FPDOptimizerOptionsGetcpParamSEL, (void*)CFPD_OptimizerOptions_V16::GetcpParam);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOptimizerOptionsSEL, FPDOptimizerOptionsSetmpParamSEL, (void*)CFPD_OptimizerOptions_V16::SetmpParam);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOptimizerOptionsSEL, FPDOptimizerOptionsGetmpParamSEL, (void*)CFPD_OptimizerOptions_V16::GetmpParam);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOptimizerOptionsSEL, FPDOptimizerOptionsSetColorDPIAboveSEL, (void*)CFPD_OptimizerOptions_V16::SetColorDPIAbove);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOptimizerOptionsSEL, FPDOptimizerOptionsGetColorDPIAboveSEL, (void*)CFPD_OptimizerOptions_V16::GetColorDPIAbove);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOptimizerOptionsSEL, FPDOptimizerOptionsSetMonoDPIAboveSEL, (void*)CFPD_OptimizerOptions_V16::SetMonoDPIAbove);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOptimizerOptionsSEL, FPDOptimizerOptionsGetMonoDPIAboveSEL, (void*)CFPD_OptimizerOptions_V16::GetMonoDPIAbove);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOptimizerOptionsSEL, FPDOptimizerOptionsSetUnEmbedFontNameArySEL, (void*)CFPD_OptimizerOptions_V16::SetUnEmbedFontNameAry);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOptimizerOptionsSEL, FPDOptimizerOptionsGetUnEmbedFontNameArySEL, (void*)CFPD_OptimizerOptions_V16::GetUnEmbedFontNameAry);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOptimizerOptionsSEL, FPDOptimizerOptionsSetEmbedAllSubFontsSEL, (void*)CFPD_OptimizerOptions_V16::SetEmbedAllSubFonts);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOptimizerOptionsSEL, FPDOptimizerOptionsGetEmbedAllSubFontsSEL, (void*)CFPD_OptimizerOptions_V16::GetEmbedAllSubFonts);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOptimizerOptionsSEL, FPDOptimizerOptionsSetOptimizerTransparencyFlattenerSEL, (void*)CFPD_OptimizerOptions_V16::SetOptimizerTransparencyFlattener);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOptimizerOptionsSEL, FPDOptimizerOptionsGetOptimizerTransparencyFlattenerSEL, (void*)CFPD_OptimizerOptions_V16::GetOptimizerTransparencyFlattener);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOptimizerOptionsSEL, FPDOptimizerOptionsSetOptimizerDisOptionsSEL, (void*)CFPD_OptimizerOptions_V16::SetOptimizerDisOptions);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOptimizerOptionsSEL, FPDOptimizerOptionsGetOptimizerDisOptionsSEL, (void*)CFPD_OptimizerOptions_V16::GetOptimizerDisOptions);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOptimizerOptionsSEL, FPDOptimizerOptionsSetOptimizerDisUserDataOptionSEL, (void*)CFPD_OptimizerOptions_V16::SetOptimizerDisUserDataOption);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOptimizerOptionsSEL, FPDOptimizerOptionsGetOptimizerDisUserDataOptionSEL, (void*)CFPD_OptimizerOptions_V16::GetOptimizerDisUserDataOption);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOptimizerOptionsSEL, FPDOptimizerOptionsSetOptimizerClearUpOptionsSEL, (void*)CFPD_OptimizerOptions_V16::SetOptimizerClearUpOptions);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOptimizerOptionsSEL, FPDOptimizerOptionsGetOptimizerClearUpOptionsSEL, (void*)CFPD_OptimizerOptions_V16::GetOptimizerClearUpOptions);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOptimizerOptionsSEL, FPDOptimizerOptionsSetFlattenOptionsSEL, (void*)CFPD_OptimizerOptions_V16::SetFlattenOptions);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOptimizerOptionsSEL, FPDOptimizerOptionsGetFlattenOptionsSEL, (void*)CFPD_OptimizerOptions_V16::GetFlattenOptions);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOptimizerOptionsSEL, FPDOptimizerOptionsSetIsGreaterThanContinueCompressSEL, (void*)CFPD_OptimizerOptions_V16::SetIsGreaterThanContinueCompress);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOptimizerOptionsSEL, FPDOptimizerOptionsGetIsGreaterThanContinueCompressSEL, (void*)CFPD_OptimizerOptions_V16::GetIsGreaterThanContinueCompress);
	}
};

class CFPD_SanitizeProvider_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSanitizeProviderSEL, FPDSanitizeProviderCreateSEL, (void*)CFPD_SanitizeProvider_V16::Create);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSanitizeProviderSEL, FPDSanitizeProviderDeleteSEL, (void*)CFPD_SanitizeProvider_V16::Delete);
	}
};

class CFPD_FlattenProvider_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFlattenProviderSEL, FPDFlattenProviderCreateSEL, (void*)CFPD_FlattenProvider_V16::Create);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFlattenProviderSEL, FPDFlattenProviderDeleteSEL, (void*)CFPD_FlattenProvider_V16::Delete);
	}
};

// middle_optimizeImpl.h end

// In file middle_pdfImpl.h
class CFPD_IExternalImageEditorHandler_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIExternalImageEditorHandlerSEL, FPDIExternalImageEditorHandlerNewSEL, (void*)CFPD_IExternalImageEditorHandler_V16::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDIExternalImageEditorHandlerSEL, FPDIExternalImageEditorHandlerDestroySEL, (void*)CFPD_IExternalImageEditorHandler_V16::Destroy);
	}
};

class CFPD_ImageObjectUtils_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDImageObjectUtilsSEL, FPDImageObjectUtilsEditImageWithSEL, (void*)CFPD_ImageObjectUtils_V16::EditImageWith);
	}
};

// middle_pdfImpl.h end

// In file middle_portfolioImpl.h
class CFPD_Portfolio_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPortfolioSEL, FPDPortfolioIsPortfolioPDFSEL, (void*)CFPD_Portfolio_V16::IsPortfolioPDF);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPortfolioSEL, FPDPortfolioConvertPortfolioPDFSEL, (void*)CFPD_Portfolio_V16::ConvertPortfolioPDF);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPortfolioSEL, FPDPortfolioCreatePortfolioPDFSEL, (void*)CFPD_Portfolio_V16::CreatePortfolioPDF);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPortfolioSEL, FPDPortfolioCreatePortfolioSEL, (void*)CFPD_Portfolio_V16::CreatePortfolio);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPortfolioSEL, FPDPortfolioReleasePortfolioSEL, (void*)CFPD_Portfolio_V16::ReleasePortfolio);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPortfolioSEL, FPDPortfolioAddFileSEL, (void*)CFPD_Portfolio_V16::AddFile);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPortfolioSEL, FPDPortfolioAddFile2SEL, (void*)CFPD_Portfolio_V16::AddFile2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPortfolioSEL, FPDPortfolioAddFile3SEL, (void*)CFPD_Portfolio_V16::AddFile3);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPortfolioSEL, FPDPortfolioAddFile4SEL, (void*)CFPD_Portfolio_V16::AddFile4);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPortfolioSEL, FPDPortfolioAddFile5SEL, (void*)CFPD_Portfolio_V16::AddFile5);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPortfolioSEL, FPDPortfolioAddFile6SEL, (void*)CFPD_Portfolio_V16::AddFile6);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPortfolioSEL, FPDPortfolioRemoveFileSEL, (void*)CFPD_Portfolio_V16::RemoveFile);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPortfolioSEL, FPDPortfolioCreateFolderSEL, (void*)CFPD_Portfolio_V16::CreateFolder);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPortfolioSEL, FPDPortfolioDeleteFolderSEL, (void*)CFPD_Portfolio_V16::DeleteFolder);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPortfolioSEL, FPDPortfolioDeleteFolder2SEL, (void*)CFPD_Portfolio_V16::DeleteFolder2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPortfolioSEL, FPDPortfolioModifyFolderModDateSEL, (void*)CFPD_Portfolio_V16::ModifyFolderModDate);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPortfolioSEL, FPDPortfolioModifyFileStreamSEL, (void*)CFPD_Portfolio_V16::ModifyFileStream);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPortfolioSEL, FPDPortfolioDragFileToFoderSEL, (void*)CFPD_Portfolio_V16::DragFileToFoder);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPortfolioSEL, FPDPortfolioDragFolderToFolderSEL, (void*)CFPD_Portfolio_V16::DragFolderToFolder);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPortfolioSEL, FPDPortfolioGetDocumentSEL, (void*)CFPD_Portfolio_V16::GetDocument);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPortfolioSEL, FPDPortfolioGetCollectionDictSEL, (void*)CFPD_Portfolio_V16::GetCollectionDict);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPortfolioSEL, FPDPortfolioGetSchemaDictSEL, (void*)CFPD_Portfolio_V16::GetSchemaDict);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPortfolioSEL, FPDPortfolioGetNamesDictSEL, (void*)CFPD_Portfolio_V16::GetNamesDict);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPortfolioSEL, FPDPortfolioGetEmbeddedFilesDictSEL, (void*)CFPD_Portfolio_V16::GetEmbeddedFilesDict);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPortfolioSEL, FPDPortfolioSetInitSortSEL, (void*)CFPD_Portfolio_V16::SetInitSort);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPortfolioSEL, FPDPortfolioGetInitSortCountSEL, (void*)CFPD_Portfolio_V16::GetInitSortCount);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPortfolioSEL, FPDPortfolioGetInitSortByIndexSEL, (void*)CFPD_Portfolio_V16::GetInitSortByIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPortfolioSEL, FPDPortfolioGetFilesSizeSEL, (void*)CFPD_Portfolio_V16::GetFilesSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPortfolioSEL, FPDPortfolioGetFilesByIndexSEL, (void*)CFPD_Portfolio_V16::GetFilesByIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPortfolioSEL, FPDPortfolioGetFoldersSizeSEL, (void*)CFPD_Portfolio_V16::GetFoldersSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPortfolioSEL, FPDPortfolioGetFoldersByIndexSEL, (void*)CFPD_Portfolio_V16::GetFoldersByIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPortfolioSEL, FPDPortfolioSortPtlFilesSEL, (void*)CFPD_Portfolio_V16::SortPtlFiles);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPortfolioSEL, FPDPortfolioGetFoldersDictSEL, (void*)CFPD_Portfolio_V16::GetFoldersDict);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPortfolioSEL, FPDPortfolioGetFolderDictSEL, (void*)CFPD_Portfolio_V16::GetFolderDict);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPortfolioSEL, FPDPortfolioGetFolderDict2SEL, (void*)CFPD_Portfolio_V16::GetFolderDict2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPortfolioSEL, FPDPortfolioGetFolderDict3SEL, (void*)CFPD_Portfolio_V16::GetFolderDict3);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPortfolioSEL, FPDPortfolioGetFolderIDSEL, (void*)CFPD_Portfolio_V16::GetFolderID);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPortfolioSEL, FPDPortfolioGetFolderFilesSizeSEL, (void*)CFPD_Portfolio_V16::GetFolderFilesSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPortfolioSEL, FPDPortfolioGetReorderNameSEL, (void*)CFPD_Portfolio_V16::GetReorderName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPortfolioSEL, FPDPortfolioSetSchemaInfoSEL, (void*)CFPD_Portfolio_V16::SetSchemaInfo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPortfolioSEL, FPDPortfolioGetSchemaInfoSEL, (void*)CFPD_Portfolio_V16::GetSchemaInfo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPortfolioSEL, FPDPortfolioAddSchemaEleSEL, (void*)CFPD_Portfolio_V16::AddSchemaEle);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPortfolioSEL, FPDPortfolioDeleteSchemaEleSEL, (void*)CFPD_Portfolio_V16::DeleteSchemaEle);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPortfolioSEL, FPDPortfolioSetFileCISEL, (void*)CFPD_Portfolio_V16::SetFileCI);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPortfolioSEL, FPDPortfolioSetFileCI2SEL, (void*)CFPD_Portfolio_V16::SetFileCI2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPortfolioSEL, FPDPortfolioSetFileCI3SEL, (void*)CFPD_Portfolio_V16::SetFileCI3);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPortfolioSEL, FPDPortfolioSetFileCI4SEL, (void*)CFPD_Portfolio_V16::SetFileCI4);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPortfolioSEL, FPDPortfolioGetFileCIIntSEL, (void*)CFPD_Portfolio_V16::GetFileCIInt);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPortfolioSEL, FPDPortfolioGetFileCIFloatSEL, (void*)CFPD_Portfolio_V16::GetFileCIFloat);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPortfolioSEL, FPDPortfolioGetFileCITextSEL, (void*)CFPD_Portfolio_V16::GetFileCIText);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPortfolioSEL, FPDPortfolioSetInitFileSEL, (void*)CFPD_Portfolio_V16::SetInitFile);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPortfolioSEL, FPDPortfolioGetInitFileSEL, (void*)CFPD_Portfolio_V16::GetInitFile);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPortfolioSEL, FPDPortfolioSetInitViewModeSEL, (void*)CFPD_Portfolio_V16::SetInitViewMode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPortfolioSEL, FPDPortfolioGetInitViewModeSEL, (void*)CFPD_Portfolio_V16::GetInitViewMode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPortfolioSEL, FPDPortfolioSetSplitSEL, (void*)CFPD_Portfolio_V16::SetSplit);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPortfolioSEL, FPDPortfolioGetSplitSEL, (void*)CFPD_Portfolio_V16::GetSplit);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPortfolioSEL, FPDPortfolioModifyFileStream2SEL, (void*)CFPD_Portfolio_V16::ModifyFileStream2);
	}
};

class CFPD_SCHEMA_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSCHEMASEL, FPDSCHEMACreateSchemaSEL, (void*)CFPD_SCHEMA_V16::CreateSchema);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSCHEMASEL, FPDSCHEMADestroySchemaSEL, (void*)CFPD_SCHEMA_V16::DestroySchema);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSCHEMASEL, FPDSCHEMASetSCHMEA_DATASEL, (void*)CFPD_SCHEMA_V16::SetSCHMEA_DATA);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSCHEMASEL, FPDSCHEMAGetSCHMEA_DATASEL, (void*)CFPD_SCHEMA_V16::GetSCHMEA_DATA);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSCHEMASEL, FPDSCHEMASetSCHEMA_DICTSEL, (void*)CFPD_SCHEMA_V16::SetSCHEMA_DICT);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSCHEMASEL, FPDSCHEMAGetSCHEMA_DICTSEL, (void*)CFPD_SCHEMA_V16::GetSCHEMA_DICT);
	}
};

class CFPD_CONFIGADD_FILE_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCONFIGADDSEL, FPDCONFIGADDCreateConfigSEL, (void*)CFPD_CONFIGADD_FILE_V16::CreateConfig);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCONFIGADDSEL, FPDCONFIGADDDestroyConfigSEL, (void*)CFPD_CONFIGADD_FILE_V16::DestroyConfig);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCONFIGADDSEL, FPDCONFIGADDSetFileNameSEL, (void*)CFPD_CONFIGADD_FILE_V16::SetFileName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCONFIGADDSEL, FPDCONFIGADDGetFileNameSEL, (void*)CFPD_CONFIGADD_FILE_V16::GetFileName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCONFIGADDSEL, FPDCONFIGADDGetIsOverWriteSEL, (void*)CFPD_CONFIGADD_FILE_V16::GetIsOverWrite);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCONFIGADDSEL, FPDCONFIGADDSetIsOverWriteSEL, (void*)CFPD_CONFIGADD_FILE_V16::SetIsOverWrite);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCONFIGADDSEL, FPDCONFIGADDGetParentFolderSEL, (void*)CFPD_CONFIGADD_FILE_V16::GetParentFolder);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCONFIGADDSEL, FPDCONFIGADDSetParentFolderSEL, (void*)CFPD_CONFIGADD_FILE_V16::SetParentFolder);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCONFIGADDSEL, FPDCONFIGADDSetProgressSEL, (void*)CFPD_CONFIGADD_FILE_V16::SetProgress);
	}
};

// middle_portfolioImpl.h end

// In file middle_preflightImpl.h
class CFPD_PreflightResult_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightResultSEL, FPDPreflightResultExportResultSEL, (void*)CFPD_PreflightResult_V16::ExportResult);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightResultSEL, FPDPreflightResultGetPreflightUIResultSEL, (void*)CFPD_PreflightResult_V16::GetPreflightUIResult);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightResultSEL, FPDPreflightResultGetKeySEL, (void*)CFPD_PreflightResult_V16::GetKey);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightResultSEL, FPDPreflightResultGetPageRangeSEL, (void*)CFPD_PreflightResult_V16::GetPageRange);
	}
};

class CFPD_PreflightEngine_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightEngineSEL, FPDPreflightEngineGetPreflightEngineSEL, (void*)CFPD_PreflightEngine_V16::GetPreflightEngine);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightEngineSEL, FPDPreflightEngineReleasetPreflightEngineSEL, (void*)CFPD_PreflightEngine_V16::ReleasetPreflightEngine);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightEngineSEL, FPDPreflightEngineGetOutputIntentSEL, (void*)CFPD_PreflightEngine_V16::GetOutputIntent);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightEngineSEL, FPDPreflightEngineInitEngineSEL, (void*)CFPD_PreflightEngine_V16::InitEngine);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightEngineSEL, FPDPreflightEngineSetLibrarySEL, (void*)CFPD_PreflightEngine_V16::SetLibrary);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightEngineSEL, FPDPreflightEngineGetCurLibrarySEL, (void*)CFPD_PreflightEngine_V16::GetCurLibrary);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightEngineSEL, FPDPreflightEngineSetLanguageSEL, (void*)CFPD_PreflightEngine_V16::SetLanguage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightEngineSEL, FPDPreflightEngineCreateResultSEL, (void*)CFPD_PreflightEngine_V16::CreateResult);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightEngineSEL, FPDPreflightEngineReleaseResultSEL, (void*)CFPD_PreflightEngine_V16::ReleaseResult);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightEngineSEL, FPDPreflightEngineSetFavoriteSEL, (void*)CFPD_PreflightEngine_V16::SetFavorite);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightEngineSEL, FPDPreflightEngineIsFavoriteSEL, (void*)CFPD_PreflightEngine_V16::IsFavorite);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightEngineSEL, FPDPreflightEngineHaveFavoriteSEL, (void*)CFPD_PreflightEngine_V16::HaveFavorite);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightEngineSEL, FPDPreflightEngineSaveConfigSEL, (void*)CFPD_PreflightEngine_V16::SaveConfig);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightEngineSEL, FPDPreflightEngineGetProfileCurOutPutIntentSEL, (void*)CFPD_PreflightEngine_V16::GetProfileCurOutPutIntent);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightEngineSEL, FPDPreflightEngineConvertPDFASEL, (void*)CFPD_PreflightEngine_V16::ConvertPDFA);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightEngineSEL, FPDPreflightEngineConvertPDFXSEL, (void*)CFPD_PreflightEngine_V16::ConvertPDFX);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightEngineSEL, FPDPreflightEngineConvertPDFESEL, (void*)CFPD_PreflightEngine_V16::ConvertPDFE);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightEngineSEL, FPDPreflightEngineConvertDocVersionSEL, (void*)CFPD_PreflightEngine_V16::ConvertDocVersion);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightEngineSEL, FPDPreflightEngineCheckSEL, (void*)CFPD_PreflightEngine_V16::Check);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightEngineSEL, FPDPreflightEngineFixupSEL, (void*)CFPD_PreflightEngine_V16::Fixup);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightEngineSEL, FPDPreflightEngineExecuteProfileSEL, (void*)CFPD_PreflightEngine_V16::ExecuteProfile);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightEngineSEL, FPDPreflightEngineGetRuleKeyArraySEL, (void*)CFPD_PreflightEngine_V16::GetRuleKeyArray);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightEngineSEL, FPDPreflightEngineGetRuleValueArrayByKeySEL, (void*)CFPD_PreflightEngine_V16::GetRuleValueArrayByKey);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightEngineSEL, FPDPreflightEngineGetFixupKeyArraySEL, (void*)CFPD_PreflightEngine_V16::GetFixupKeyArray);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightEngineSEL, FPDPreflightEngineGetFixupValueArrayByKeySEL, (void*)CFPD_PreflightEngine_V16::GetFixupValueArrayByKey);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightEngineSEL, FPDPreflightEngineGetProfileKeyArraySEL, (void*)CFPD_PreflightEngine_V16::GetProfileKeyArray);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightEngineSEL, FPDPreflightEngineGetProfileValueArrayByKeySEL, (void*)CFPD_PreflightEngine_V16::GetProfileValueArrayByKey);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightEngineSEL, FPDPreflightEngineGetMostUseKeyArraySEL, (void*)CFPD_PreflightEngine_V16::GetMostUseKeyArray);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightEngineSEL, FPDPreflightEngineGetMostUseValueArrayByKeySEL, (void*)CFPD_PreflightEngine_V16::GetMostUseValueArrayByKey);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightEngineSEL, FPDPreflightEngineGetMostFreqUseKeyArraySEL, (void*)CFPD_PreflightEngine_V16::GetMostFreqUseKeyArray);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightEngineSEL, FPDPreflightEngineGetMostFreqUseValueMapByKeySEL, (void*)CFPD_PreflightEngine_V16::GetMostFreqUseValueMapByKey);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightEngineSEL, FPDPreflightEngineGetIncludeVariablesKeyArraySEL, (void*)CFPD_PreflightEngine_V16::GetIncludeVariablesKeyArray);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightEngineSEL, FPDPreflightEngineGetIncludeVariablesValueArrayByKeySEL, (void*)CFPD_PreflightEngine_V16::GetIncludeVariablesValueArrayByKey);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightEngineSEL, FPDPreflightEngineGenerateLibrarySEL, (void*)CFPD_PreflightEngine_V16::GenerateLibrary);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightEngineSEL, FPDPreflightEngineGenerateHeaderSEL, (void*)CFPD_PreflightEngine_V16::GenerateHeader);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightEngineSEL, FPDPreflightEngineGetNameCommentSEL, (void*)CFPD_PreflightEngine_V16::GetNameComment);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightEngineSEL, FPDPreflightEngineGetAProfileExSEL, (void*)CFPD_PreflightEngine_V16::GetAProfileEx);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightEngineSEL, FPDPreflightEngineGetXProfileExSEL, (void*)CFPD_PreflightEngine_V16::GetXProfileEx);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightEngineSEL, FPDPreflightEngineGetNameCommentExSEL, (void*)CFPD_PreflightEngine_V16::GetNameCommentEx);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightEngineSEL, FPDPreflightEngineGetAProfileSEL, (void*)CFPD_PreflightEngine_V16::GetAProfile);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightEngineSEL, FPDPreflightEngineGetXProfileSEL, (void*)CFPD_PreflightEngine_V16::GetXProfile);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightEngineSEL, FPDPreflightEngineGetNameAndKeySEL, (void*)CFPD_PreflightEngine_V16::GetNameAndKey);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightEngineSEL, FPDPreflightEngineGetKeyFromNameOrKeySEL, (void*)CFPD_PreflightEngine_V16::GetKeyFromNameOrKey);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightEngineSEL, FPDPreflightEngineIsProfileCanDoFixSEL, (void*)CFPD_PreflightEngine_V16::IsProfileCanDoFix);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightEngineSEL, FPDPreflightEngineGetErrorMsgSEL, (void*)CFPD_PreflightEngine_V16::GetErrorMsg);
	}
};

class CFPD_PreflightPlateNameElement_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightPlateNameElementSEL, FPDPreflightPlateNameElementNewSEL, (void*)CFPD_PreflightPlateNameElement_V16::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightPlateNameElementSEL, FPDPreflightPlateNameElementDestorySEL, (void*)CFPD_PreflightPlateNameElement_V16::Destory);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightPlateNameElementSEL, FPDPreflightPlateNameElementGetPalteNamesSEL, (void*)CFPD_PreflightPlateNameElement_V16::GetPalteNames);
	}
};

class CFPD_PreflightICCProfileElement_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightICCProfileElementSEL, FPDPreflightICCProfileElementNewSEL, (void*)CFPD_PreflightICCProfileElement_V16::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightICCProfileElementSEL, FPDPreflightICCProfileElementDestorySEL, (void*)CFPD_PreflightICCProfileElement_V16::Destory);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightICCProfileElementSEL, FPDPreflightICCProfileElementGetICCProfileInfoSEL, (void*)CFPD_PreflightICCProfileElement_V16::GetICCProfileInfo);
	}
};

class CFPD_PreflightColorspaceElement_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightColorspaceElementSEL, FPDPreflightColorspaceElementNewSEL, (void*)CFPD_PreflightColorspaceElement_V16::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightColorspaceElementSEL, FPDPreflightColorspaceElementDestorySEL, (void*)CFPD_PreflightColorspaceElement_V16::Destory);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightColorspaceElementSEL, FPDPreflightColorspaceElementGetColorspaceInfoSEL, (void*)CFPD_PreflightColorspaceElement_V16::GetColorspaceInfo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightColorspaceElementSEL, FPDPreflightColorspaceElementType2StringSEL, (void*)CFPD_PreflightColorspaceElement_V16::Type2String);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightColorspaceElementSEL, FPDPreflightColorspaceElementString2TypeSEL, (void*)CFPD_PreflightColorspaceElement_V16::String2Type);
	}
};

class CFPD_PreflightImageInfo_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightImageInfoSEL, FPDPreflightImageInfoNewSEL, (void*)CFPD_PreflightImageInfo_V16::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightImageInfoSEL, FPDPreflightImageInfoDestorySEL, (void*)CFPD_PreflightImageInfo_V16::Destory);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightImageInfoSEL, FPDPreflightImageInfoGetWidthSEL, (void*)CFPD_PreflightImageInfo_V16::GetWidth);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightImageInfoSEL, FPDPreflightImageInfoGetHeightSEL, (void*)CFPD_PreflightImageInfo_V16::GetHeight);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightImageInfoSEL, FPDPreflightImageInfoGetBPCSEL, (void*)CFPD_PreflightImageInfo_V16::GetBPC);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightImageInfoSEL, FPDPreflightImageInfoIsMaskSEL, (void*)CFPD_PreflightImageInfo_V16::IsMask);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightImageInfoSEL, FPDPreflightImageInfoGetFilterSEL, (void*)CFPD_PreflightImageInfo_V16::GetFilter);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightImageInfoSEL, FPDPreflightImageInfoGetColorSpaceSEL, (void*)CFPD_PreflightImageInfo_V16::GetColorSpace);
	}
};

class CFPD_PreflightFontElement_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightFontElementSEL, FPDPreflightFontElementNewSEL, (void*)CFPD_PreflightFontElement_V16::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightFontElementSEL, FPDPreflightFontElementDestorySEL, (void*)CFPD_PreflightFontElement_V16::Destory);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightFontElementSEL, FPDPreflightFontElementGetFontInfoSEL, (void*)CFPD_PreflightFontElement_V16::GetFontInfo);
	}
};

class CFPD_PreflightShadeElement_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightShadeElementSEL, FPDPreflightShadeElementNewSEL, (void*)CFPD_PreflightShadeElement_V16::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightShadeElementSEL, FPDPreflightShadeElementDestorySEL, (void*)CFPD_PreflightShadeElement_V16::Destory);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightShadeElementSEL, FPDPreflightShadeElementGetShadeInfoSEL, (void*)CFPD_PreflightShadeElement_V16::GetShadeInfo);
	}
};

class CFPD_PreflightFormXObjetElement_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightFormXObjetElementSEL, FPDPreflightFormXObjetElementNewSEL, (void*)CFPD_PreflightFormXObjetElement_V16::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightFormXObjetElementSEL, FPDPreflightFormXObjetElementDestorySEL, (void*)CFPD_PreflightFormXObjetElement_V16::Destory);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightFormXObjetElementSEL, FPDPreflightFormXObjetElementGetFormXObjectInfoSEL, (void*)CFPD_PreflightFormXObjetElement_V16::GetFormXObjectInfo);
	}
};

class CFPD_PreflightReportElement_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightReportElementSEL, FPDPreflightReportElementNewSEL, (void*)CFPD_PreflightReportElement_V16::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightReportElementSEL, FPDPreflightReportElementDestorySEL, (void*)CFPD_PreflightReportElement_V16::Destory);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightReportElementSEL, FPDPreflightReportElementCountElementsSEL, (void*)CFPD_PreflightReportElement_V16::CountElements);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightReportElementSEL, FPDPreflightReportElementGetElementContentSEL, (void*)CFPD_PreflightReportElement_V16::GetElementContent);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightReportElementSEL, FPDPreflightReportElementGetElementTagSEL, (void*)CFPD_PreflightReportElement_V16::GetElementTag);
	}
};

class CFPD_PreflightPageElement_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightPageElementSEL, FPDPreflightPageElementNewSEL, (void*)CFPD_PreflightPageElement_V16::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightPageElementSEL, FPDPreflightPageElementDestorySEL, (void*)CFPD_PreflightPageElement_V16::Destory);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightPageElementSEL, FPDPreflightPageElementGetPageInfoSEL, (void*)CFPD_PreflightPageElement_V16::GetPageInfo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightPageElementSEL, FPDPreflightPageElementGetUserunitSEL, (void*)CFPD_PreflightPageElement_V16::GetUserunit);
	}
};

class CFPD_PreflightAnnotElement_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightAnnotElementSEL, FPDPreflightAnnotElementNewSEL, (void*)CFPD_PreflightAnnotElement_V16::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightAnnotElementSEL, FPDPreflightAnnotElementDestorySEL, (void*)CFPD_PreflightAnnotElement_V16::Destory);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightAnnotElementSEL, FPDPreflightAnnotElementGetAnnotInfoSEL, (void*)CFPD_PreflightAnnotElement_V16::GetAnnotInfo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightAnnotElementSEL, FPDPreflightAnnotElementGetTypeSEL, (void*)CFPD_PreflightAnnotElement_V16::GetType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightAnnotElementSEL, FPDPreflightAnnotElementString2TypeSEL, (void*)CFPD_PreflightAnnotElement_V16::String2Type);
	}
};

class CFPD_PreflightResourceElment_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightResourceElmentSEL, FPDPreflightResourceElmentNewSEL, (void*)CFPD_PreflightResourceElment_V16::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightResourceElmentSEL, FPDPreflightResourceElmentDestorySEL, (void*)CFPD_PreflightResourceElment_V16::Destory);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightResourceElmentSEL, FPDPreflightResourceElmentGetResourceItemSEL, (void*)CFPD_PreflightResourceElment_V16::GetResourceItem);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightResourceElmentSEL, FPDPreflightResourceElmentGetCSSEL, (void*)CFPD_PreflightResourceElment_V16::GetCS);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightResourceElmentSEL, FPDPreflightResourceElmentGetFontSEL, (void*)CFPD_PreflightResourceElment_V16::GetFont);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightResourceElmentSEL, FPDPreflightResourceElmentGetFormXObjSEL, (void*)CFPD_PreflightResourceElment_V16::GetFormXObj);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightResourceElmentSEL, FPDPreflightResourceElmentGetPageSEL, (void*)CFPD_PreflightResourceElment_V16::GetPage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightResourceElmentSEL, FPDPreflightResourceElmentGetShadeSEL, (void*)CFPD_PreflightResourceElment_V16::GetShade);
	}
};

class CFPD_PreflightDocumentElement_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightDocumentElementSEL, FPDPreflightDocumentElementNewSEL, (void*)CFPD_PreflightDocumentElement_V16::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightDocumentElementSEL, FPDPreflightDocumentElementDestorySEL, (void*)CFPD_PreflightDocumentElement_V16::Destory);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightDocumentElementSEL, FPDPreflightDocumentElementGetDocInfoSEL, (void*)CFPD_PreflightDocumentElement_V16::GetDocInfo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightDocumentElementSEL, FPDPreflightDocumentElementGetColorspacesSEL, (void*)CFPD_PreflightDocumentElement_V16::GetColorspaces);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightDocumentElementSEL, FPDPreflightDocumentElementGetImagesSEL, (void*)CFPD_PreflightDocumentElement_V16::GetImages);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightDocumentElementSEL, FPDPreflightDocumentElementGetFontsSEL, (void*)CFPD_PreflightDocumentElement_V16::GetFonts);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightDocumentElementSEL, FPDPreflightDocumentElementGetSmoothShadesSEL, (void*)CFPD_PreflightDocumentElement_V16::GetSmoothShades);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightDocumentElementSEL, FPDPreflightDocumentElementGetPatternsSEL, (void*)CFPD_PreflightDocumentElement_V16::GetPatterns);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightDocumentElementSEL, FPDPreflightDocumentElementGetOuputIntentSEL, (void*)CFPD_PreflightDocumentElement_V16::GetOuputIntent);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightDocumentElementSEL, FPDPreflightDocumentElementGetLayerSEL, (void*)CFPD_PreflightDocumentElement_V16::GetLayer);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightDocumentElementSEL, FPDPreflightDocumentElementGetEmbeddedFileSEL, (void*)CFPD_PreflightDocumentElement_V16::GetEmbeddedFile);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightDocumentElementSEL, FPDPreflightDocumentElementGetFormXObjectSEL, (void*)CFPD_PreflightDocumentElement_V16::GetFormXObject);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightDocumentElementSEL, FPDPreflightDocumentElementGetPageSEL, (void*)CFPD_PreflightDocumentElement_V16::GetPage);
	}
};

class CFPD_PreflightResultItem_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightResultItemSEL, FPDPreflightResultItemGetNameSEL, (void*)CFPD_PreflightResultItem_V16::GetName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightResultItemSEL, FPDPreflightResultItemGetCommentSEL, (void*)CFPD_PreflightResultItem_V16::GetComment);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightResultItemSEL, FPDPreflightResultItemGetDoneStatusSEL, (void*)CFPD_PreflightResultItem_V16::GetDoneStatus);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightResultItemSEL, FPDPreflightResultItemGetDicKeySEL, (void*)CFPD_PreflightResultItem_V16::GetDicKey);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightResultItemSEL, FPDPreflightResultItemString2TypeSEL, (void*)CFPD_PreflightResultItem_V16::String2Type);
	}
};

class CFPD_PreflightFixupItem_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightFixupItemSEL, FPDPreflightFixupItemNewSEL, (void*)CFPD_PreflightFixupItem_V16::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightFixupItemSEL, FPDPreflightFixupItemDestorySEL, (void*)CFPD_PreflightFixupItem_V16::Destory);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightFixupItemSEL, FPDPreflightFixupItemGetNameSEL, (void*)CFPD_PreflightFixupItem_V16::GetName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightFixupItemSEL, FPDPreflightFixupItemGetCommentSEL, (void*)CFPD_PreflightFixupItem_V16::GetComment);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightFixupItemSEL, FPDPreflightFixupItemGetDoneStatusSEL, (void*)CFPD_PreflightFixupItem_V16::GetDoneStatus);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightFixupItemSEL, FPDPreflightFixupItemGetDicKeySEL, (void*)CFPD_PreflightFixupItem_V16::GetDicKey);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightFixupItemSEL, FPDPreflightFixupItemGetCountFailedSEL, (void*)CFPD_PreflightFixupItem_V16::GetCountFailed);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightFixupItemSEL, FPDPreflightFixupItemGetCountsucceededSEL, (void*)CFPD_PreflightFixupItem_V16::GetCountsucceeded);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightFixupItemSEL, FPDPreflightFixupItemGetDetailsSEL, (void*)CFPD_PreflightFixupItem_V16::GetDetails);
	}
};

class CFPD_PreflightGeneralState_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightGeneralStateSEL, FPDPreflightGeneralStateNewSEL, (void*)CFPD_PreflightGeneralState_V16::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightGeneralStateSEL, FPDPreflightGeneralStateDestorySEL, (void*)CFPD_PreflightGeneralState_V16::Destory);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightGeneralStateSEL, FPDPreflightGeneralStateGetFillColorSpaceSEL, (void*)CFPD_PreflightGeneralState_V16::GetFillColorSpace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightGeneralStateSEL, FPDPreflightGeneralStateGetFillColorantValueSEL, (void*)CFPD_PreflightGeneralState_V16::GetFillColorantValue);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightGeneralStateSEL, FPDPreflightGeneralStateGetStrokeColorSpaceSEL, (void*)CFPD_PreflightGeneralState_V16::GetStrokeColorSpace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightGeneralStateSEL, FPDPreflightGeneralStateGetStrokeColorantValueSEL, (void*)CFPD_PreflightGeneralState_V16::GetStrokeColorantValue);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightGeneralStateSEL, FPDPreflightGeneralStateGetRenderIntentSEL, (void*)CFPD_PreflightGeneralState_V16::GetRenderIntent);
	}
};

class CFPD_PreflightTextState_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightTextStateSEL, FPDPreflightTextStateNewSEL, (void*)CFPD_PreflightTextState_V16::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightTextStateSEL, FPDPreflightTextStateDestorySEL, (void*)CFPD_PreflightTextState_V16::Destory);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightTextStateSEL, FPDPreflightTextStateGetFontSizeSEL, (void*)CFPD_PreflightTextState_V16::GetFontSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightTextStateSEL, FPDPreflightTextStateGetFontInfoSEL, (void*)CFPD_PreflightTextState_V16::GetFontInfo);
	}
};

class CFPD_PreflightGstate_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightGstateSEL, FPDPreflightGstateNewSEL, (void*)CFPD_PreflightGstate_V16::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightGstateSEL, FPDPreflightGstateDestorySEL, (void*)CFPD_PreflightGstate_V16::Destory);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightGstateSEL, FPDPreflightGstateGetLineWidthSEL, (void*)CFPD_PreflightGstate_V16::GetLineWidth);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightGstateSEL, FPDPreflightGstateGetMiterLimitSEL, (void*)CFPD_PreflightGstate_V16::GetMiterLimit);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightGstateSEL, FPDPreflightGstateIsStrokeSEL, (void*)CFPD_PreflightGstate_V16::IsStroke);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightGstateSEL, FPDPreflightGstateGetFlatnessToleranceSEL, (void*)CFPD_PreflightGstate_V16::GetFlatnessTolerance);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightGstateSEL, FPDPreflightGstateGetSmoothnessToleranceSEL, (void*)CFPD_PreflightGstate_V16::GetSmoothnessTolerance);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightGstateSEL, FPDPreflightGstateGetOverprintModeSEL, (void*)CFPD_PreflightGstate_V16::GetOverprintMode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightGstateSEL, FPDPreflightGstateIsOverprintForStrokeSEL, (void*)CFPD_PreflightGstate_V16::IsOverprintForStroke);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightGstateSEL, FPDPreflightGstateIsOverprintForFillSEL, (void*)CFPD_PreflightGstate_V16::IsOverprintForFill);
	}
};

class CFPD_PreflightImageState_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightImageStateSEL, FPDPreflightImageStateNewSEL, (void*)CFPD_PreflightImageState_V16::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightImageStateSEL, FPDPreflightImageStateDestorySEL, (void*)CFPD_PreflightImageState_V16::Destory);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightImageStateSEL, FPDPreflightImageStateGetVResolutionSEL, (void*)CFPD_PreflightImageState_V16::GetVResolution);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightImageStateSEL, FPDPreflightImageStateGetHResolutionSEL, (void*)CFPD_PreflightImageState_V16::GetHResolution);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightImageStateSEL, FPDPreflightImageStateGetImageInfoSEL, (void*)CFPD_PreflightImageState_V16::GetImageInfo);
	}
};

class CFPD_PreflightTriggers_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightTriggersSEL, FPDPreflightTriggersNewSEL, (void*)CFPD_PreflightTriggers_V16::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightTriggersSEL, FPDPreflightTriggersDestorySEL, (void*)CFPD_PreflightTriggers_V16::Destory);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightTriggersSEL, FPDPreflightTriggersCountElementSEL, (void*)CFPD_PreflightTriggers_V16::CountElement);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightTriggersSEL, FPDPreflightTriggersGetElementSEL, (void*)CFPD_PreflightTriggers_V16::GetElement);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightTriggersSEL, FPDPreflightTriggersGetRuleDicKeySEL, (void*)CFPD_PreflightTriggers_V16::GetRuleDicKey);
	}
};

class CFPD_PreflightFormxobjState_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightFormxobjStateSEL, FPDPreflightFormxobjStateNewSEL, (void*)CFPD_PreflightFormxobjState_V16::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightFormxobjStateSEL, FPDPreflightFormxobjStateDestorySEL, (void*)CFPD_PreflightFormxobjState_V16::Destory);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightFormxobjStateSEL, FPDPreflightFormxobjStateGetFormXObjectElementSEL, (void*)CFPD_PreflightFormxobjState_V16::GetFormXObjectElement);
	}
};

class CFPD_PreflightShadeState_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightShadeStateSEL, FPDPreflightShadeStateNewSEL, (void*)CFPD_PreflightShadeState_V16::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightShadeStateSEL, FPDPreflightShadeStateDestorySEL, (void*)CFPD_PreflightShadeState_V16::Destory);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightShadeStateSEL, FPDPreflightShadeStateGetShadeElementSEL, (void*)CFPD_PreflightShadeState_V16::GetShadeElement);
	}
};

class CFPD_PreflightInkState_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightInkStateSEL, FPDPreflightInkStateNewSEL, (void*)CFPD_PreflightInkState_V16::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightInkStateSEL, FPDPreflightInkStateDestorySEL, (void*)CFPD_PreflightInkState_V16::Destory);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightInkStateSEL, FPDPreflightInkStateGetPlatenameElementSEL, (void*)CFPD_PreflightInkState_V16::GetPlatenameElement);
	}
};

class CFPD_PreflightHitItem_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightHitItemSEL, FPDPreflightHitItemNewSEL, (void*)CFPD_PreflightHitItem_V16::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightHitItemSEL, FPDPreflightHitItemDestorySEL, (void*)CFPD_PreflightHitItem_V16::Destory);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightHitItemSEL, FPDPreflightHitItemGetTriggersSEL, (void*)CFPD_PreflightHitItem_V16::GetTriggers);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightHitItemSEL, FPDPreflightHitItemGetGStateSEL, (void*)CFPD_PreflightHitItem_V16::GetGState);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightHitItemSEL, FPDPreflightHitItemGetTextStateSEL, (void*)CFPD_PreflightHitItem_V16::GetTextState);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightHitItemSEL, FPDPreflightHitItemGetImageStateSEL, (void*)CFPD_PreflightHitItem_V16::GetImageState);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightHitItemSEL, FPDPreflightHitItemGetFormxobjStateSEL, (void*)CFPD_PreflightHitItem_V16::GetFormxobjState);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightHitItemSEL, FPDPreflightHitItemGetShadeStateSEL, (void*)CFPD_PreflightHitItem_V16::GetShadeState);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightHitItemSEL, FPDPreflightHitItemGetHitTypeSEL, (void*)CFPD_PreflightHitItem_V16::GetHitType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightHitItemSEL, FPDPreflightHitItemGetPageIndexSEL, (void*)CFPD_PreflightHitItem_V16::GetPageIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightHitItemSEL, FPDPreflightHitItemGetPageElementSEL, (void*)CFPD_PreflightHitItem_V16::GetPageElement);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightHitItemSEL, FPDPreflightHitItemGetPosXSEL, (void*)CFPD_PreflightHitItem_V16::GetPosX);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightHitItemSEL, FPDPreflightHitItemGetPosYSEL, (void*)CFPD_PreflightHitItem_V16::GetPosY);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightHitItemSEL, FPDPreflightHitItemGetSizeXSEL, (void*)CFPD_PreflightHitItem_V16::GetSizeX);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightHitItemSEL, FPDPreflightHitItemGetSizeYSEL, (void*)CFPD_PreflightHitItem_V16::GetSizeY);
	}
};

class CFPD_PreflightHitsElement_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightHitsElementSEL, FPDPreflightHitsElementNewSEL, (void*)CFPD_PreflightHitsElement_V16::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightHitsElementSEL, FPDPreflightHitsElementDestorySEL, (void*)CFPD_PreflightHitsElement_V16::Destory);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightHitsElementSEL, FPDPreflightHitsElementGetElementSEL, (void*)CFPD_PreflightHitsElement_V16::GetElement);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightHitsElementSEL, FPDPreflightHitsElementGetNameSEL, (void*)CFPD_PreflightHitsElement_V16::GetName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightHitsElementSEL, FPDPreflightHitsElementGetCommentSEL, (void*)CFPD_PreflightHitsElement_V16::GetComment);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightHitsElementSEL, FPDPreflightHitsElementGetDoneStatusSEL, (void*)CFPD_PreflightHitsElement_V16::GetDoneStatus);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightHitsElementSEL, FPDPreflightHitsElementGetDicKeySEL, (void*)CFPD_PreflightHitsElement_V16::GetDicKey);
	}
};

class CFPD_PreflightHitssetElement_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightHitssetElementSEL, FPDPreflightHitssetElementNewSEL, (void*)CFPD_PreflightHitssetElement_V16::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightHitssetElementSEL, FPDPreflightHitssetElementDestorySEL, (void*)CFPD_PreflightHitssetElement_V16::Destory);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightHitssetElementSEL, FPDPreflightHitssetElementCountElementsSEL, (void*)CFPD_PreflightHitssetElement_V16::CountElements);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightHitssetElementSEL, FPDPreflightHitssetElementGetElementContentSEL, (void*)CFPD_PreflightHitssetElement_V16::GetElementContent);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightHitssetElementSEL, FPDPreflightHitssetElementGetElementSEL, (void*)CFPD_PreflightHitssetElement_V16::GetElement);
	}
};

class CFPD_PreflightFixupElement_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightFixupElementSEL, FPDPreflightFixupElementNewSEL, (void*)CFPD_PreflightFixupElement_V16::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightFixupElementSEL, FPDPreflightFixupElementDestorySEL, (void*)CFPD_PreflightFixupElement_V16::Destory);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightFixupElementSEL, FPDPreflightFixupElementCountElementsSEL, (void*)CFPD_PreflightFixupElement_V16::CountElements);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightFixupElementSEL, FPDPreflightFixupElementGetElementContentSEL, (void*)CFPD_PreflightFixupElement_V16::GetElementContent);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightFixupElementSEL, FPDPreflightFixupElementGetElementSEL, (void*)CFPD_PreflightFixupElement_V16::GetElement);
	}
};

class CFPD_PreflightResultElement_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightResultElementSEL, FPDPreflightResultElementNewSEL, (void*)CFPD_PreflightResultElement_V16::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightResultElementSEL, FPDPreflightResultElementDestorySEL, (void*)CFPD_PreflightResultElement_V16::Destory);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightResultElementSEL, FPDPreflightResultElementGetHitsElementSEL, (void*)CFPD_PreflightResultElement_V16::GetHitsElement);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightResultElementSEL, FPDPreflightResultElementGetFixupElementSEL, (void*)CFPD_PreflightResultElement_V16::GetFixupElement);
	}
};

class CFPD_PreflightInfoElement_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightInfoElementSEL, FPDPreflightInfoElementNewSEL, (void*)CFPD_PreflightInfoElement_V16::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightInfoElementSEL, FPDPreflightInfoElementDestorySEL, (void*)CFPD_PreflightInfoElement_V16::Destory);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightInfoElementSEL, FPDPreflightInfoElementGetPreflightInfoSEL, (void*)CFPD_PreflightInfoElement_V16::GetPreflightInfo);
	}
};

class CFPD_PreflightUIResult_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightUIResultSEL, FPDPreflightUIResultGetDocumentElementSEL, (void*)CFPD_PreflightUIResult_V16::GetDocumentElement);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightUIResultSEL, FPDPreflightUIResultGetPreflightInfoElementSEL, (void*)CFPD_PreflightUIResult_V16::GetPreflightInfoElement);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightUIResultSEL, FPDPreflightUIResultGetResultElementSEL, (void*)CFPD_PreflightUIResult_V16::GetResultElement);
	}
};

class CFPD_PreflightStructProgressCBFunPara_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructProgressCBFunParaSEL, FPDPreflightStructProgressCBFunParaNewSEL, (void*)CFPD_PreflightStructProgressCBFunPara_V16::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructProgressCBFunParaSEL, FPDPreflightStructProgressCBFunParaDestorySEL, (void*)CFPD_PreflightStructProgressCBFunPara_V16::Destory);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructProgressCBFunParaSEL, FPDPreflightStructProgressCBFunParaSetMaxSEL, (void*)CFPD_PreflightStructProgressCBFunPara_V16::SetMax);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructProgressCBFunParaSEL, FPDPreflightStructProgressCBFunParaGetMaxSEL, (void*)CFPD_PreflightStructProgressCBFunPara_V16::GetMax);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructProgressCBFunParaSEL, FPDPreflightStructProgressCBFunParaSetCurrentSEL, (void*)CFPD_PreflightStructProgressCBFunPara_V16::SetCurrent);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructProgressCBFunParaSEL, FPDPreflightStructProgressCBFunParaGetCurrentSEL, (void*)CFPD_PreflightStructProgressCBFunPara_V16::GetCurrent);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructProgressCBFunParaSEL, FPDPreflightStructProgressCBFunParaSetPartSEL, (void*)CFPD_PreflightStructProgressCBFunPara_V16::SetPart);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructProgressCBFunParaSEL, FPDPreflightStructProgressCBFunParaGetPartSEL, (void*)CFPD_PreflightStructProgressCBFunPara_V16::GetPart);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructProgressCBFunParaSEL, FPDPreflightStructProgressCBFunParaSetIDStrSEL, (void*)CFPD_PreflightStructProgressCBFunPara_V16::SetIDStr);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructProgressCBFunParaSEL, FPDPreflightStructProgressCBFunParaGetIDStrSEL, (void*)CFPD_PreflightStructProgressCBFunPara_V16::GetIDStr);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructProgressCBFunParaSEL, FPDPreflightStructProgressCBFunParaSetStateSEL, (void*)CFPD_PreflightStructProgressCBFunPara_V16::SetState);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructProgressCBFunParaSEL, FPDPreflightStructProgressCBFunParaGetStateSEL, (void*)CFPD_PreflightStructProgressCBFunPara_V16::GetState);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructProgressCBFunParaSEL, FPDPreflightStructProgressCBFunParaSetPageSEL, (void*)CFPD_PreflightStructProgressCBFunPara_V16::SetPage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructProgressCBFunParaSEL, FPDPreflightStructProgressCBFunParaGetPageSEL, (void*)CFPD_PreflightStructProgressCBFunPara_V16::GetPage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructProgressCBFunParaSEL, FPDPreflightStructProgressCBFunParaSetUserDataSEL, (void*)CFPD_PreflightStructProgressCBFunPara_V16::SetUserData);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructProgressCBFunParaSEL, FPDPreflightStructProgressCBFunParaGetUserDataSEL, (void*)CFPD_PreflightStructProgressCBFunPara_V16::GetUserData);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructProgressCBFunParaSEL, FPDPreflightStructProgressCBFunParaSetRuleTriggerPairSEL, (void*)CFPD_PreflightStructProgressCBFunPara_V16::SetRuleTriggerPair);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructProgressCBFunParaSEL, FPDPreflightStructProgressCBFunParaGetRuleTriggerPairSEL, (void*)CFPD_PreflightStructProgressCBFunPara_V16::GetRuleTriggerPair);
	}
};

class CFPD_PreflightStructConvertData_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructConvertDataSEL, FPDPreflightStructConvertDataNewSEL, (void*)CFPD_PreflightStructConvertData_V16::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructConvertDataSEL, FPDPreflightStructConvertDataDestorySEL, (void*)CFPD_PreflightStructConvertData_V16::Destory);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructConvertDataSEL, FPDPreflightStructConvertDataSetProfileDickeySEL, (void*)CFPD_PreflightStructConvertData_V16::SetProfileDickey);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructConvertDataSEL, FPDPreflightStructConvertDataGetProfileDickeySEL, (void*)CFPD_PreflightStructConvertData_V16::GetProfileDickey);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructConvertDataSEL, FPDPreflightStructConvertDataSetICCpathSEL, (void*)CFPD_PreflightStructConvertData_V16::SetICCpath);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructConvertDataSEL, FPDPreflightStructConvertDataGetICCpathSEL, (void*)CFPD_PreflightStructConvertData_V16::GetICCpath);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructConvertDataSEL, FPDPreflightStructConvertDataSetApplyFixSEL, (void*)CFPD_PreflightStructConvertData_V16::SetApplyFix);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructConvertDataSEL, FPDPreflightStructConvertDataGetApplyFixSEL, (void*)CFPD_PreflightStructConvertData_V16::GetApplyFix);
	}
};

class CFPD_PreflightStructConvertPDFXData_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructConvertPDFXDataSEL, FPDPreflightStructConvertPDFXDataNewSEL, (void*)CFPD_PreflightStructConvertPDFXData_V16::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructConvertPDFXDataSEL, FPDPreflightStructConvertPDFXDataDestorySEL, (void*)CFPD_PreflightStructConvertPDFXData_V16::Destory);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructConvertPDFXDataSEL, FPDPreflightStructConvertPDFXDataSetVersionSEL, (void*)CFPD_PreflightStructConvertPDFXData_V16::SetVersion);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructConvertPDFXDataSEL, FPDPreflightStructConvertPDFXDataGetVersionSEL, (void*)CFPD_PreflightStructConvertPDFXData_V16::GetVersion);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructConvertPDFXDataSEL, FPDPreflightStructConvertPDFXDataSetConvertDataSEL, (void*)CFPD_PreflightStructConvertPDFXData_V16::SetConvertData);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructConvertPDFXDataSEL, FPDPreflightStructConvertPDFXDataGetConvertDataSEL, (void*)CFPD_PreflightStructConvertPDFXData_V16::GetConvertData);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructConvertPDFXDataSEL, FPDPreflightStructConvertPDFXDataSetFxaXRGB2DestMaskSEL, (void*)CFPD_PreflightStructConvertPDFXData_V16::SetFxaXRGB2DestMask);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructConvertPDFXDataSEL, FPDPreflightStructConvertPDFXDataGetFxaXRGB2DestMaskSEL, (void*)CFPD_PreflightStructConvertPDFXData_V16::GetFxaXRGB2DestMask);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructConvertPDFXDataSEL, FPDPreflightStructConvertPDFXDataSetFxaXDecCMYKMaskSEL, (void*)CFPD_PreflightStructConvertPDFXData_V16::SetFxaXDecCMYKMask);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructConvertPDFXDataSEL, FPDPreflightStructConvertPDFXDataGetFxaXDecCMYKMaskSEL, (void*)CFPD_PreflightStructConvertPDFXData_V16::GetFxaXDecCMYKMask);
	}
};

class CFPD_PreflightStructConvertPDFAData_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructConvertPDFADataSEL, FPDPreflightStructConvertPDFADataNewSEL, (void*)CFPD_PreflightStructConvertPDFAData_V16::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructConvertPDFADataSEL, FPDPreflightStructConvertPDFADataDestorySEL, (void*)CFPD_PreflightStructConvertPDFAData_V16::Destory);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructConvertPDFADataSEL, FPDPreflightStructConvertPDFADataSetVersionSEL, (void*)CFPD_PreflightStructConvertPDFAData_V16::SetVersion);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructConvertPDFADataSEL, FPDPreflightStructConvertPDFADataGetVersionSEL, (void*)CFPD_PreflightStructConvertPDFAData_V16::GetVersion);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructConvertPDFADataSEL, FPDPreflightStructConvertPDFADataSetConvertDataSEL, (void*)CFPD_PreflightStructConvertPDFAData_V16::SetConvertData);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructConvertPDFADataSEL, FPDPreflightStructConvertPDFADataGetConvertDataSEL, (void*)CFPD_PreflightStructConvertPDFAData_V16::GetConvertData);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructConvertPDFADataSEL, FPDPreflightStructConvertPDFADataSetForceconvResolutionSEL, (void*)CFPD_PreflightStructConvertPDFAData_V16::SetForceconvResolution);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructConvertPDFADataSEL, FPDPreflightStructConvertPDFADataGetForceconvResolutionSEL, (void*)CFPD_PreflightStructConvertPDFAData_V16::GetForceconvResolution);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructConvertPDFADataSEL, FPDPreflightStructConvertPDFADataSetFlagsSEL, (void*)CFPD_PreflightStructConvertPDFAData_V16::SetFlags);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructConvertPDFADataSEL, FPDPreflightStructConvertPDFADataGetFlagsSEL, (void*)CFPD_PreflightStructConvertPDFAData_V16::GetFlags);
	}
};

class CFPD_PreflightStructParameter_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructParameterSEL, FPDPreflightStructParameterNewSEL, (void*)CFPD_PreflightStructParameter_V16::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructParameterSEL, FPDPreflightStructParameterDestorySEL, (void*)CFPD_PreflightStructParameter_V16::Destory);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructParameterSEL, FPDPreflightStructParameterSetPdfFileSEL, (void*)CFPD_PreflightStructParameter_V16::SetPdfFile);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructParameterSEL, FPDPreflightStructParameterGetPdfFileSEL, (void*)CFPD_PreflightStructParameter_V16::GetPdfFile);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructParameterSEL, FPDPreflightStructParameterSetOutputFileSEL, (void*)CFPD_PreflightStructParameter_V16::SetOutputFile);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructParameterSEL, FPDPreflightStructParameterGetOutputFileSEL, (void*)CFPD_PreflightStructParameter_V16::GetOutputFile);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructParameterSEL, FPDPreflightStructParameterSetBeginPageIdxSEL, (void*)CFPD_PreflightStructParameter_V16::SetBeginPageIdx);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructParameterSEL, FPDPreflightStructParameterGetBeginPageIdxSEL, (void*)CFPD_PreflightStructParameter_V16::GetBeginPageIdx);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructParameterSEL, FPDPreflightStructParameterSetEndPageIdxSEL, (void*)CFPD_PreflightStructParameter_V16::SetEndPageIdx);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructParameterSEL, FPDPreflightStructParameterGetEndPageIdxSEL, (void*)CFPD_PreflightStructParameter_V16::GetEndPageIdx);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructParameterSEL, FPDPreflightStructParameterSetDicKeySEL, (void*)CFPD_PreflightStructParameter_V16::SetDicKey);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructParameterSEL, FPDPreflightStructParameterGetDicKeySEL, (void*)CFPD_PreflightStructParameter_V16::GetDicKey);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructParameterSEL, FPDPreflightStructParameterSetResultSEL, (void*)CFPD_PreflightStructParameter_V16::SetResult);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructParameterSEL, FPDPreflightStructParameterGetResultSEL, (void*)CFPD_PreflightStructParameter_V16::GetResult);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructParameterSEL, FPDPreflightStructParameterSetProgressDataSEL, (void*)CFPD_PreflightStructParameter_V16::SetProgressData);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructParameterSEL, FPDPreflightStructParameterGetProgressDataSEL, (void*)CFPD_PreflightStructParameter_V16::GetProgressData);
	}
};

class CFPD_PreflightStructInfo_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructInfoSEL, FPDPreflightStructInfoNewSEL, (void*)CFPD_PreflightStructInfo_V16::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructInfoSEL, FPDPreflightStructInfoDestorySEL, (void*)CFPD_PreflightStructInfo_V16::Destory);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructInfoSEL, FPDPreflightStructInfoSetProductNameSEL, (void*)CFPD_PreflightStructInfo_V16::SetProductName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructInfoSEL, FPDPreflightStructInfoGetProductNameSEL, (void*)CFPD_PreflightStructInfo_V16::GetProductName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructInfoSEL, FPDPreflightStructInfoSetProductVersionSEL, (void*)CFPD_PreflightStructInfo_V16::SetProductVersion);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructInfoSEL, FPDPreflightStructInfoGetProductVersionSEL, (void*)CFPD_PreflightStructInfo_V16::GetProductVersion);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructInfoSEL, FPDPreflightStructInfoSetDateSEL, (void*)CFPD_PreflightStructInfo_V16::SetDate);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructInfoSEL, FPDPreflightStructInfoGetDateSEL, (void*)CFPD_PreflightStructInfo_V16::GetDate);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructInfoSEL, FPDPreflightStructInfoSetUserNameSEL, (void*)CFPD_PreflightStructInfo_V16::SetUserName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructInfoSEL, FPDPreflightStructInfoGetUserNameSEL, (void*)CFPD_PreflightStructInfo_V16::GetUserName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructInfoSEL, FPDPreflightStructInfoSetComputerNameSEL, (void*)CFPD_PreflightStructInfo_V16::SetComputerName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructInfoSEL, FPDPreflightStructInfoGetComputerNameSEL, (void*)CFPD_PreflightStructInfo_V16::GetComputerName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructInfoSEL, FPDPreflightStructInfoSetOSSEL, (void*)CFPD_PreflightStructInfo_V16::SetOS);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructInfoSEL, FPDPreflightStructInfoGetOSSEL, (void*)CFPD_PreflightStructInfo_V16::GetOS);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructInfoSEL, FPDPreflightStructInfoSetDurationSEL, (void*)CFPD_PreflightStructInfo_V16::SetDuration);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructInfoSEL, FPDPreflightStructInfoGetDurationSEL, (void*)CFPD_PreflightStructInfo_V16::GetDuration);
	}
};

class CFPD_PreflightStructPlateName_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructPlateNameSEL, FPDPreflightStructPlateNameNewSEL, (void*)CFPD_PreflightStructPlateName_V16::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructPlateNameSEL, FPDPreflightStructPlateNameDestorySEL, (void*)CFPD_PreflightStructPlateName_V16::Destory);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructPlateNameSEL, FPDPreflightStructPlateNameSetNameSEL, (void*)CFPD_PreflightStructPlateName_V16::SetName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructPlateNameSEL, FPDPreflightStructPlateNameGetNameSEL, (void*)CFPD_PreflightStructPlateName_V16::GetName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructPlateNameSEL, FPDPreflightStructPlateNameSetInkcovPtctSEL, (void*)CFPD_PreflightStructPlateName_V16::SetInkcovPtct);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructPlateNameSEL, FPDPreflightStructPlateNameGetInkcovPtctSEL, (void*)CFPD_PreflightStructPlateName_V16::GetInkcovPtct);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructPlateNameSEL, FPDPreflightStructPlateNameSetInkcovCm2SEL, (void*)CFPD_PreflightStructPlateName_V16::SetInkcovCm2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructPlateNameSEL, FPDPreflightStructPlateNameGetInkcovCm2SEL, (void*)CFPD_PreflightStructPlateName_V16::GetInkcovCm2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructPlateNameSEL, FPDPreflightStructPlateNameSetInkcovInch2SEL, (void*)CFPD_PreflightStructPlateName_V16::SetInkcovInch2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructPlateNameSEL, FPDPreflightStructPlateNameGetInkcovInch2SEL, (void*)CFPD_PreflightStructPlateName_V16::GetInkcovInch2);
	}
};

class CFPD_PreflightStructPlateNames_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructPlateNamesSEL, FPDPreflightStructPlateNamesNewSEL, (void*)CFPD_PreflightStructPlateNames_V16::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructPlateNamesSEL, FPDPreflightStructPlateNamesDestorySEL, (void*)CFPD_PreflightStructPlateNames_V16::Destory);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructPlateNamesSEL, FPDPreflightStructPlateNamesSetInkcovResulutionPPISEL, (void*)CFPD_PreflightStructPlateNames_V16::SetInkcovResulutionPPI);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructPlateNamesSEL, FPDPreflightStructPlateNamesGetInkcovResulutionPPISEL, (void*)CFPD_PreflightStructPlateNames_V16::GetInkcovResulutionPPI);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructPlateNamesSEL, FPDPreflightStructPlateNamesSetInkcovPageBoxSEL, (void*)CFPD_PreflightStructPlateNames_V16::SetInkcovPageBox);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructPlateNamesSEL, FPDPreflightStructPlateNamesGetInkcovPageBoxSEL, (void*)CFPD_PreflightStructPlateNames_V16::GetInkcovPageBox);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructPlateNamesSEL, FPDPreflightStructPlateNamesSetPlateNamesSEL, (void*)CFPD_PreflightStructPlateNames_V16::SetPlateNames);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructPlateNamesSEL, FPDPreflightStructPlateNamesGetPlateNamesSEL, (void*)CFPD_PreflightStructPlateNames_V16::GetPlateNames);
	}
};

class CFPD_PreflightStructDocumentInfo_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructDocumentInfoSEL, FPDPreflightStructDocumentInfoNewSEL, (void*)CFPD_PreflightStructDocumentInfo_V16::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructDocumentInfoSEL, FPDPreflightStructDocumentInfoDestorySEL, (void*)CFPD_PreflightStructDocumentInfo_V16::Destory);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructDocumentInfoSEL, FPDPreflightStructDocumentInfoSetFileNameSEL, (void*)CFPD_PreflightStructDocumentInfo_V16::SetFileName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructDocumentInfoSEL, FPDPreflightStructDocumentInfoGetFileNameSEL, (void*)CFPD_PreflightStructDocumentInfo_V16::GetFileName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructDocumentInfoSEL, FPDPreflightStructDocumentInfoSetPathSEL, (void*)CFPD_PreflightStructDocumentInfo_V16::SetPath);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructDocumentInfoSEL, FPDPreflightStructDocumentInfoGetPathSEL, (void*)CFPD_PreflightStructDocumentInfo_V16::GetPath);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructDocumentInfoSEL, FPDPreflightStructDocumentInfoSetPDFVersionSEL, (void*)CFPD_PreflightStructDocumentInfo_V16::SetPDFVersion);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructDocumentInfoSEL, FPDPreflightStructDocumentInfoGetPDFVersionSEL, (void*)CFPD_PreflightStructDocumentInfo_V16::GetPDFVersion);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructDocumentInfoSEL, FPDPreflightStructDocumentInfoSetFileSizeSEL, (void*)CFPD_PreflightStructDocumentInfo_V16::SetFileSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructDocumentInfoSEL, FPDPreflightStructDocumentInfoGetFileSizeSEL, (void*)CFPD_PreflightStructDocumentInfo_V16::GetFileSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructDocumentInfoSEL, FPDPreflightStructDocumentInfoSetTitleSEL, (void*)CFPD_PreflightStructDocumentInfo_V16::SetTitle);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructDocumentInfoSEL, FPDPreflightStructDocumentInfoGetTitleSEL, (void*)CFPD_PreflightStructDocumentInfo_V16::GetTitle);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructDocumentInfoSEL, FPDPreflightStructDocumentInfoSetAuthorSEL, (void*)CFPD_PreflightStructDocumentInfo_V16::SetAuthor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructDocumentInfoSEL, FPDPreflightStructDocumentInfoGetAuthorSEL, (void*)CFPD_PreflightStructDocumentInfo_V16::GetAuthor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructDocumentInfoSEL, FPDPreflightStructDocumentInfoSetCreatorSEL, (void*)CFPD_PreflightStructDocumentInfo_V16::SetCreator);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructDocumentInfoSEL, FPDPreflightStructDocumentInfoGetCreatorSEL, (void*)CFPD_PreflightStructDocumentInfo_V16::GetCreator);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructDocumentInfoSEL, FPDPreflightStructDocumentInfoSetProducerSEL, (void*)CFPD_PreflightStructDocumentInfo_V16::SetProducer);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructDocumentInfoSEL, FPDPreflightStructDocumentInfoGetProducerSEL, (void*)CFPD_PreflightStructDocumentInfo_V16::GetProducer);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructDocumentInfoSEL, FPDPreflightStructDocumentInfoSetCreatedTimeSEL, (void*)CFPD_PreflightStructDocumentInfo_V16::SetCreatedTime);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructDocumentInfoSEL, FPDPreflightStructDocumentInfoGetCreatedTimeSEL, (void*)CFPD_PreflightStructDocumentInfo_V16::GetCreatedTime);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructDocumentInfoSEL, FPDPreflightStructDocumentInfoSetCreatedTimeZoneSEL, (void*)CFPD_PreflightStructDocumentInfo_V16::SetCreatedTimeZone);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructDocumentInfoSEL, FPDPreflightStructDocumentInfoGetCreatedTimeZoneSEL, (void*)CFPD_PreflightStructDocumentInfo_V16::GetCreatedTimeZone);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructDocumentInfoSEL, FPDPreflightStructDocumentInfoSetModifiedTimeSEL, (void*)CFPD_PreflightStructDocumentInfo_V16::SetModifiedTime);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructDocumentInfoSEL, FPDPreflightStructDocumentInfoGetModifiedTimeSEL, (void*)CFPD_PreflightStructDocumentInfo_V16::GetModifiedTime);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructDocumentInfoSEL, FPDPreflightStructDocumentInfoSetModifiedTimeZoneSEL, (void*)CFPD_PreflightStructDocumentInfo_V16::SetModifiedTimeZone);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructDocumentInfoSEL, FPDPreflightStructDocumentInfoGetModifiedTimeZoneSEL, (void*)CFPD_PreflightStructDocumentInfo_V16::GetModifiedTimeZone);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructDocumentInfoSEL, FPDPreflightStructDocumentInfoSetKeywordsSEL, (void*)CFPD_PreflightStructDocumentInfo_V16::SetKeywords);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructDocumentInfoSEL, FPDPreflightStructDocumentInfoGetKeywordsSEL, (void*)CFPD_PreflightStructDocumentInfo_V16::GetKeywords);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructDocumentInfoSEL, FPDPreflightStructDocumentInfoSetSubjectSEL, (void*)CFPD_PreflightStructDocumentInfo_V16::SetSubject);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructDocumentInfoSEL, FPDPreflightStructDocumentInfoGetSubjectSEL, (void*)CFPD_PreflightStructDocumentInfo_V16::GetSubject);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructDocumentInfoSEL, FPDPreflightStructDocumentInfoSetTrappingSEL, (void*)CFPD_PreflightStructDocumentInfo_V16::SetTrapping);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructDocumentInfoSEL, FPDPreflightStructDocumentInfoGetTrappingSEL, (void*)CFPD_PreflightStructDocumentInfo_V16::GetTrapping);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructDocumentInfoSEL, FPDPreflightStructDocumentInfoSetPDFXVersionSEL, (void*)CFPD_PreflightStructDocumentInfo_V16::SetPDFXVersion);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructDocumentInfoSEL, FPDPreflightStructDocumentInfoGetPDFXVersionSEL, (void*)CFPD_PreflightStructDocumentInfo_V16::GetPDFXVersion);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructDocumentInfoSEL, FPDPreflightStructDocumentInfoSetPDFXConformanceSEL, (void*)CFPD_PreflightStructDocumentInfo_V16::SetPDFXConformance);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructDocumentInfoSEL, FPDPreflightStructDocumentInfoGetPDFXConformanceSEL, (void*)CFPD_PreflightStructDocumentInfo_V16::GetPDFXConformance);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructDocumentInfoSEL, FPDPreflightStructDocumentInfoSetPlateNamesSEL, (void*)CFPD_PreflightStructDocumentInfo_V16::SetPlateNames);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructDocumentInfoSEL, FPDPreflightStructDocumentInfoGetPlateNamesSEL, (void*)CFPD_PreflightStructDocumentInfo_V16::GetPlateNames);
	}
};

class CFPD_PreflightStructProfileIlluminant_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructProfileIlluminantSEL, FPDPreflightStructProfileIlluminantNewSEL, (void*)CFPD_PreflightStructProfileIlluminant_V16::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructProfileIlluminantSEL, FPDPreflightStructProfileIlluminantDestorySEL, (void*)CFPD_PreflightStructProfileIlluminant_V16::Destory);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructProfileIlluminantSEL, FPDPreflightStructProfileIlluminantSetIlluminantXSEL, (void*)CFPD_PreflightStructProfileIlluminant_V16::SetIlluminantX);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructProfileIlluminantSEL, FPDPreflightStructProfileIlluminantGetIlluminantXSEL, (void*)CFPD_PreflightStructProfileIlluminant_V16::GetIlluminantX);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructProfileIlluminantSEL, FPDPreflightStructProfileIlluminantSetIlluminantYSEL, (void*)CFPD_PreflightStructProfileIlluminant_V16::SetIlluminantY);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructProfileIlluminantSEL, FPDPreflightStructProfileIlluminantGetIlluminantYSEL, (void*)CFPD_PreflightStructProfileIlluminant_V16::GetIlluminantY);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructProfileIlluminantSEL, FPDPreflightStructProfileIlluminantSetIlluminantZSEL, (void*)CFPD_PreflightStructProfileIlluminant_V16::SetIlluminantZ);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructProfileIlluminantSEL, FPDPreflightStructProfileIlluminantGetIlluminantZSEL, (void*)CFPD_PreflightStructProfileIlluminant_V16::GetIlluminantZ);
	}
};

class CFPD_PreflightStructProfileIDHash_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructProfileIDHashSEL, FPDPreflightStructProfileIDHashNewSEL, (void*)CFPD_PreflightStructProfileIDHash_V16::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructProfileIDHashSEL, FPDPreflightStructProfileIDHashDestorySEL, (void*)CFPD_PreflightStructProfileIDHash_V16::Destory);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructProfileIDHashSEL, FPDPreflightStructProfileIDHashSetISOSEL, (void*)CFPD_PreflightStructProfileIDHash_V16::SetISO);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructProfileIDHashSEL, FPDPreflightStructProfileIDHashGetISOSEL, (void*)CFPD_PreflightStructProfileIDHash_V16::GetISO);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructProfileIDHashSEL, FPDPreflightStructProfileIDHashSetIDSEL, (void*)CFPD_PreflightStructProfileIDHash_V16::SetID);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructProfileIDHashSEL, FPDPreflightStructProfileIDHashGetIDSEL, (void*)CFPD_PreflightStructProfileIDHash_V16::GetID);
	}
};

class CFPD_PreflightStructICCProfile_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructICCProfileSEL, FPDPreflightStructICCProfileNewSEL, (void*)CFPD_PreflightStructICCProfile_V16::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructICCProfileSEL, FPDPreflightStructICCProfileDestorySEL, (void*)CFPD_PreflightStructICCProfile_V16::Destory);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructICCProfileSEL, FPDPreflightStructICCProfileSetProfileVersionNumberSEL, (void*)CFPD_PreflightStructICCProfile_V16::SetProfileVersionNumber);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructICCProfileSEL, FPDPreflightStructICCProfileGetProfileVersionNumberSEL, (void*)CFPD_PreflightStructICCProfile_V16::GetProfileVersionNumber);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructICCProfileSEL, FPDPreflightStructICCProfileSetColorManagmentModuleSEL, (void*)CFPD_PreflightStructICCProfile_V16::SetColorManagmentModule);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructICCProfileSEL, FPDPreflightStructICCProfileGetColorManagmentModuleSEL, (void*)CFPD_PreflightStructICCProfile_V16::GetColorManagmentModule);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructICCProfileSEL, FPDPreflightStructICCProfileSetDeviceClassSignatureSEL, (void*)CFPD_PreflightStructICCProfile_V16::SetDeviceClassSignature);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructICCProfileSEL, FPDPreflightStructICCProfileGetDeviceClassSignatureSEL, (void*)CFPD_PreflightStructICCProfile_V16::GetDeviceClassSignature);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructICCProfileSEL, FPDPreflightStructICCProfileSetColorspaceOfDataSEL, (void*)CFPD_PreflightStructICCProfile_V16::SetColorspaceOfData);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructICCProfileSEL, FPDPreflightStructICCProfileGetColorspaceOfDataSEL, (void*)CFPD_PreflightStructICCProfile_V16::GetColorspaceOfData);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructICCProfileSEL, FPDPreflightStructICCProfileSetProfileConnectionSpaceSEL, (void*)CFPD_PreflightStructICCProfile_V16::SetProfileConnectionSpace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructICCProfileSEL, FPDPreflightStructICCProfileGetProfileConnectionSpaceSEL, (void*)CFPD_PreflightStructICCProfile_V16::GetProfileConnectionSpace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructICCProfileSEL, FPDPreflightStructICCProfileSetMagicNumberSEL, (void*)CFPD_PreflightStructICCProfile_V16::SetMagicNumber);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructICCProfileSEL, FPDPreflightStructICCProfileGetMagicNumberSEL, (void*)CFPD_PreflightStructICCProfile_V16::GetMagicNumber);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructICCProfileSEL, FPDPreflightStructICCProfileSetPrimaryPlatformSEL, (void*)CFPD_PreflightStructICCProfile_V16::SetPrimaryPlatform);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructICCProfileSEL, FPDPreflightStructICCProfileGetPrimaryPlatformSEL, (void*)CFPD_PreflightStructICCProfile_V16::GetPrimaryPlatform);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructICCProfileSEL, FPDPreflightStructICCProfileSetDeviceManufacturerSEL, (void*)CFPD_PreflightStructICCProfile_V16::SetDeviceManufacturer);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructICCProfileSEL, FPDPreflightStructICCProfileGetDeviceManufacturerSEL, (void*)CFPD_PreflightStructICCProfile_V16::GetDeviceManufacturer);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructICCProfileSEL, FPDPreflightStructICCProfileSetDeviceModelSEL, (void*)CFPD_PreflightStructICCProfile_V16::SetDeviceModel);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructICCProfileSEL, FPDPreflightStructICCProfileGetDeviceModelSEL, (void*)CFPD_PreflightStructICCProfile_V16::GetDeviceModel);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructICCProfileSEL, FPDPreflightStructICCProfileSetProfileCreatorSEL, (void*)CFPD_PreflightStructICCProfile_V16::SetProfileCreator);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructICCProfileSEL, FPDPreflightStructICCProfileGetProfileCreatorSEL, (void*)CFPD_PreflightStructICCProfile_V16::GetProfileCreator);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructICCProfileSEL, FPDPreflightStructICCProfileSetCreationDateSEL, (void*)CFPD_PreflightStructICCProfile_V16::SetCreationDate);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructICCProfileSEL, FPDPreflightStructICCProfileGetCreationDateSEL, (void*)CFPD_PreflightStructICCProfile_V16::GetCreationDate);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructICCProfileSEL, FPDPreflightStructICCProfileSetDefaultRenderingIntentSEL, (void*)CFPD_PreflightStructICCProfile_V16::SetDefaultRenderingIntent);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructICCProfileSEL, FPDPreflightStructICCProfileGetDefaultRenderingIntentSEL, (void*)CFPD_PreflightStructICCProfile_V16::GetDefaultRenderingIntent);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructICCProfileSEL, FPDPreflightStructICCProfileSetProfileIlluminantSEL, (void*)CFPD_PreflightStructICCProfile_V16::SetProfileIlluminant);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructICCProfileSEL, FPDPreflightStructICCProfileGetProfileIlluminantSEL, (void*)CFPD_PreflightStructICCProfile_V16::GetProfileIlluminant);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructICCProfileSEL, FPDPreflightStructICCProfileSetCopyrightSEL, (void*)CFPD_PreflightStructICCProfile_V16::SetCopyright);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructICCProfileSEL, FPDPreflightStructICCProfileGetCopyrightSEL, (void*)CFPD_PreflightStructICCProfile_V16::GetCopyright);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructICCProfileSEL, FPDPreflightStructICCProfileSetPostscriptProductNameSEL, (void*)CFPD_PreflightStructICCProfile_V16::SetPostscriptProductName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructICCProfileSEL, FPDPreflightStructICCProfileGetPostscriptProductNameSEL, (void*)CFPD_PreflightStructICCProfile_V16::GetPostscriptProductName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructICCProfileSEL, FPDPreflightStructICCProfileSetColorInformationProvidingAPcsSEL, (void*)CFPD_PreflightStructICCProfile_V16::SetColorInformationProvidingAPcs);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructICCProfileSEL, FPDPreflightStructICCProfileGetColorInformationProvidingAPcsSEL, (void*)CFPD_PreflightStructICCProfile_V16::GetColorInformationProvidingAPcs);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructICCProfileSEL, FPDPreflightStructICCProfileSetProfileDescriptionSEL, (void*)CFPD_PreflightStructICCProfile_V16::SetProfileDescription);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructICCProfileSEL, FPDPreflightStructICCProfileGetProfileDescriptionSEL, (void*)CFPD_PreflightStructICCProfile_V16::GetProfileDescription);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructICCProfileSEL, FPDPreflightStructICCProfileSetProfileIDHashSEL, (void*)CFPD_PreflightStructICCProfile_V16::SetProfileIDHash);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructICCProfileSEL, FPDPreflightStructICCProfileGetProfileIDHashSEL, (void*)CFPD_PreflightStructICCProfile_V16::GetProfileIDHash);
	}
};

class CFPD_PreflightStructAlternateColorants_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructAlternateColorantsSEL, FPDPreflightStructAlternateColorantsNewSEL, (void*)CFPD_PreflightStructAlternateColorants_V16::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructAlternateColorantsSEL, FPDPreflightStructAlternateColorantsDestorySEL, (void*)CFPD_PreflightStructAlternateColorants_V16::Destory);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructAlternateColorantsSEL, FPDPreflightStructAlternateColorantsSetNameSEL, (void*)CFPD_PreflightStructAlternateColorants_V16::SetName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructAlternateColorantsSEL, FPDPreflightStructAlternateColorantsGetNameSEL, (void*)CFPD_PreflightStructAlternateColorants_V16::GetName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructAlternateColorantsSEL, FPDPreflightStructAlternateColorantsSetAltColorspaceElementSEL, (void*)CFPD_PreflightStructAlternateColorants_V16::SetAltColorspaceElement);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructAlternateColorantsSEL, FPDPreflightStructAlternateColorantsGetAltColorspaceElementSEL, (void*)CFPD_PreflightStructAlternateColorants_V16::GetAltColorspaceElement);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructAlternateColorantsSEL, FPDPreflightStructAlternateColorantsSetAltValueSEL, (void*)CFPD_PreflightStructAlternateColorants_V16::SetAltValue);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructAlternateColorantsSEL, FPDPreflightStructAlternateColorantsGetAltValueSEL, (void*)CFPD_PreflightStructAlternateColorants_V16::GetAltValue);
	}
};

class CFPD_PreflightStructColorspace_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructColorspaceSEL, FPDPreflightStructColorspaceNewSEL, (void*)CFPD_PreflightStructColorspace_V16::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructColorspaceSEL, FPDPreflightStructColorspaceDestorySEL, (void*)CFPD_PreflightStructColorspace_V16::Destory);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructColorspaceSEL, FPDPreflightStructColorspaceSetIDSEL, (void*)CFPD_PreflightStructColorspace_V16::SetID);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructColorspaceSEL, FPDPreflightStructColorspaceGetIDSEL, (void*)CFPD_PreflightStructColorspace_V16::GetID);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructColorspaceSEL, FPDPreflightStructColorspaceSetTypeSEL, (void*)CFPD_PreflightStructColorspace_V16::SetType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructColorspaceSEL, FPDPreflightStructColorspaceGetTypeSEL, (void*)CFPD_PreflightStructColorspace_V16::GetType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructColorspaceSEL, FPDPreflightStructColorspaceSetChannelsSEL, (void*)CFPD_PreflightStructColorspace_V16::SetChannels);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructColorspaceSEL, FPDPreflightStructColorspaceGetChannelsSEL, (void*)CFPD_PreflightStructColorspace_V16::GetChannels);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructColorspaceSEL, FPDPreflightStructColorspaceSetBaseColorspaceSEL, (void*)CFPD_PreflightStructColorspace_V16::SetBaseColorspace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructColorspaceSEL, FPDPreflightStructColorspaceGetBaseColorspaceSEL, (void*)CFPD_PreflightStructColorspace_V16::GetBaseColorspace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructColorspaceSEL, FPDPreflightStructColorspaceSetNameSEL, (void*)CFPD_PreflightStructColorspace_V16::SetName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructColorspaceSEL, FPDPreflightStructColorspaceGetNameSEL, (void*)CFPD_PreflightStructColorspace_V16::GetName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructColorspaceSEL, FPDPreflightStructColorspaceSetIccProfileSEL, (void*)CFPD_PreflightStructColorspace_V16::SetIccProfile);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructColorspaceSEL, FPDPreflightStructColorspaceGetIccProfileSEL, (void*)CFPD_PreflightStructColorspace_V16::GetIccProfile);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructColorspaceSEL, FPDPreflightStructColorspaceSetAltColorspaceElementSEL, (void*)CFPD_PreflightStructColorspace_V16::SetAltColorspaceElement);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructColorspaceSEL, FPDPreflightStructColorspaceGetAltColorspaceElementSEL, (void*)CFPD_PreflightStructColorspace_V16::GetAltColorspaceElement);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructColorspaceSEL, FPDPreflightStructColorspaceSetAltColorspacetypeSEL, (void*)CFPD_PreflightStructColorspace_V16::SetAltColorspacetype);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructColorspaceSEL, FPDPreflightStructColorspaceGetAltColorspacetypeSEL, (void*)CFPD_PreflightStructColorspace_V16::GetAltColorspacetype);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructColorspaceSEL, FPDPreflightStructColorspaceSetAltValueSEL, (void*)CFPD_PreflightStructColorspace_V16::SetAltValue);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructColorspaceSEL, FPDPreflightStructColorspaceGetAltValueSEL, (void*)CFPD_PreflightStructColorspace_V16::GetAltValue);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructColorspaceSEL, FPDPreflightStructColorspaceSetAlternateColorantsSEL, (void*)CFPD_PreflightStructColorspace_V16::SetAlternateColorants);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructColorspaceSEL, FPDPreflightStructColorspaceGetAlternateColorantsSEL, (void*)CFPD_PreflightStructColorspace_V16::GetAlternateColorants);
	}
};

class CFPD_PreflightStructFont_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructFontSEL, FPDPreflightStructFontNewSEL, (void*)CFPD_PreflightStructFont_V16::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructFontSEL, FPDPreflightStructFontDestorySEL, (void*)CFPD_PreflightStructFont_V16::Destory);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructFontSEL, FPDPreflightStructFontSetIDSEL, (void*)CFPD_PreflightStructFont_V16::SetID);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructFontSEL, FPDPreflightStructFontGetIDSEL, (void*)CFPD_PreflightStructFont_V16::GetID);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructFontSEL, FPDPreflightStructFontSetTypeSEL, (void*)CFPD_PreflightStructFont_V16::SetType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructFontSEL, FPDPreflightStructFontGetTypeSEL, (void*)CFPD_PreflightStructFont_V16::GetType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructFontSEL, FPDPreflightStructFontSetEmbededSEL, (void*)CFPD_PreflightStructFont_V16::SetEmbeded);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructFontSEL, FPDPreflightStructFontGetEmbededSEL, (void*)CFPD_PreflightStructFont_V16::GetEmbeded);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructFontSEL, FPDPreflightStructFontSetSubSetSEL, (void*)CFPD_PreflightStructFont_V16::SetSubSet);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructFontSEL, FPDPreflightStructFontGetSubSetSEL, (void*)CFPD_PreflightStructFont_V16::GetSubSet);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructFontSEL, FPDPreflightStructFontSetHasUnicodeCmapSEL, (void*)CFPD_PreflightStructFont_V16::SetHasUnicodeCmap);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructFontSEL, FPDPreflightStructFontGetHasUnicodeCmapSEL, (void*)CFPD_PreflightStructFont_V16::GetHasUnicodeCmap);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructFontSEL, FPDPreflightStructFontSetNameSEL, (void*)CFPD_PreflightStructFont_V16::SetName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructFontSEL, FPDPreflightStructFontGetNameSEL, (void*)CFPD_PreflightStructFont_V16::GetName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructFontSEL, FPDPreflightStructFontSetEncodingSEL, (void*)CFPD_PreflightStructFont_V16::SetEncoding);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructFontSEL, FPDPreflightStructFontGetEncodingSEL, (void*)CFPD_PreflightStructFont_V16::GetEncoding);
	}
};

class CFPD_PreflightStructOutputIntent_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructOutputIntentSEL, FPDPreflightStructOutputIntentNewSEL, (void*)CFPD_PreflightStructOutputIntent_V16::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructOutputIntentSEL, FPDPreflightStructOutputIntentDestorySEL, (void*)CFPD_PreflightStructOutputIntent_V16::Destory);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructOutputIntentSEL, FPDPreflightStructOutputIntentSetIDSEL, (void*)CFPD_PreflightStructOutputIntent_V16::SetID);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructOutputIntentSEL, FPDPreflightStructOutputIntentGetIDSEL, (void*)CFPD_PreflightStructOutputIntent_V16::GetID);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructOutputIntentSEL, FPDPreflightStructOutputIntentSetOutputConditionIdentifierSEL, (void*)CFPD_PreflightStructOutputIntent_V16::SetOutputConditionIdentifier);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructOutputIntentSEL, FPDPreflightStructOutputIntentGetOutputConditionIdentifierSEL, (void*)CFPD_PreflightStructOutputIntent_V16::GetOutputConditionIdentifier);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructOutputIntentSEL, FPDPreflightStructOutputIntentSetSubtypeSEL, (void*)CFPD_PreflightStructOutputIntent_V16::SetSubtype);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructOutputIntentSEL, FPDPreflightStructOutputIntentGetSubtypeSEL, (void*)CFPD_PreflightStructOutputIntent_V16::GetSubtype);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructOutputIntentSEL, FPDPreflightStructOutputIntentSetRegistryNameSEL, (void*)CFPD_PreflightStructOutputIntent_V16::SetRegistryName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructOutputIntentSEL, FPDPreflightStructOutputIntentGetRegistryNameSEL, (void*)CFPD_PreflightStructOutputIntent_V16::GetRegistryName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructOutputIntentSEL, FPDPreflightStructOutputIntentSetOutputConditionSEL, (void*)CFPD_PreflightStructOutputIntent_V16::SetOutputCondition);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructOutputIntentSEL, FPDPreflightStructOutputIntentGetOutputConditionSEL, (void*)CFPD_PreflightStructOutputIntent_V16::GetOutputCondition);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructOutputIntentSEL, FPDPreflightStructOutputIntentSetInfoSEL, (void*)CFPD_PreflightStructOutputIntent_V16::SetInfo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructOutputIntentSEL, FPDPreflightStructOutputIntentGetInfoSEL, (void*)CFPD_PreflightStructOutputIntent_V16::GetInfo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructOutputIntentSEL, FPDPreflightStructOutputIntentSetPreflightHashSEL, (void*)CFPD_PreflightStructOutputIntent_V16::SetPreflightHash);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructOutputIntentSEL, FPDPreflightStructOutputIntentGetPreflightHashSEL, (void*)CFPD_PreflightStructOutputIntent_V16::GetPreflightHash);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructOutputIntentSEL, FPDPreflightStructOutputIntentSetOutputProfilenameSEL, (void*)CFPD_PreflightStructOutputIntent_V16::SetOutputProfilename);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructOutputIntentSEL, FPDPreflightStructOutputIntentGetOutputProfilenameSEL, (void*)CFPD_PreflightStructOutputIntent_V16::GetOutputProfilename);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructOutputIntentSEL, FPDPreflightStructOutputIntentSetIccprofileSEL, (void*)CFPD_PreflightStructOutputIntent_V16::SetIccprofile);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructOutputIntentSEL, FPDPreflightStructOutputIntentGetIccprofileSEL, (void*)CFPD_PreflightStructOutputIntent_V16::GetIccprofile);
	}
};

class CFPD_PreflightStructLayer_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructLayerSEL, FPDPreflightStructLayerNewSEL, (void*)CFPD_PreflightStructLayer_V16::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructLayerSEL, FPDPreflightStructLayerDestorySEL, (void*)CFPD_PreflightStructLayer_V16::Destory);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructLayerSEL, FPDPreflightStructLayerSetIDSEL, (void*)CFPD_PreflightStructLayer_V16::SetID);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructLayerSEL, FPDPreflightStructLayerGetIDSEL, (void*)CFPD_PreflightStructLayer_V16::GetID);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructLayerSEL, FPDPreflightStructLayerSetTypeSEL, (void*)CFPD_PreflightStructLayer_V16::SetType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructLayerSEL, FPDPreflightStructLayerGetTypeSEL, (void*)CFPD_PreflightStructLayer_V16::GetType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructLayerSEL, FPDPreflightStructLayerSetNameSEL, (void*)CFPD_PreflightStructLayer_V16::SetName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructLayerSEL, FPDPreflightStructLayerGetNameSEL, (void*)CFPD_PreflightStructLayer_V16::GetName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructLayerSEL, FPDPreflightStructLayerSetIntentSEL, (void*)CFPD_PreflightStructLayer_V16::SetIntent);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructLayerSEL, FPDPreflightStructLayerGetIntentSEL, (void*)CFPD_PreflightStructLayer_V16::GetIntent);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructLayerSEL, FPDPreflightStructLayerSetDefaultStateSEL, (void*)CFPD_PreflightStructLayer_V16::SetDefaultState);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructLayerSEL, FPDPreflightStructLayerGetDefaultStateSEL, (void*)CFPD_PreflightStructLayer_V16::GetDefaultState);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructLayerSEL, FPDPreflightStructLayerSetGTSProcStepsGroupSEL, (void*)CFPD_PreflightStructLayer_V16::SetGTSProcStepsGroup);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructLayerSEL, FPDPreflightStructLayerGetGTSProcStepsGroupSEL, (void*)CFPD_PreflightStructLayer_V16::GetGTSProcStepsGroup);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructLayerSEL, FPDPreflightStructLayerSetGTSProcStepsTypeSEL, (void*)CFPD_PreflightStructLayer_V16::SetGTSProcStepsType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructLayerSEL, FPDPreflightStructLayerGetGTSProcStepsTypeSEL, (void*)CFPD_PreflightStructLayer_V16::GetGTSProcStepsType);
	}
};

class CFPD_PreflightStructEmbeddedFile_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructEmbeddedFileSEL, FPDPreflightStructEmbeddedFileNewSEL, (void*)CFPD_PreflightStructEmbeddedFile_V16::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructEmbeddedFileSEL, FPDPreflightStructEmbeddedFileDestorySEL, (void*)CFPD_PreflightStructEmbeddedFile_V16::Destory);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructEmbeddedFileSEL, FPDPreflightStructEmbeddedFileSetIDSEL, (void*)CFPD_PreflightStructEmbeddedFile_V16::SetID);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructEmbeddedFileSEL, FPDPreflightStructEmbeddedFileGetIDSEL, (void*)CFPD_PreflightStructEmbeddedFile_V16::GetID);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructEmbeddedFileSEL, FPDPreflightStructEmbeddedFileSetFilenameSEL, (void*)CFPD_PreflightStructEmbeddedFile_V16::SetFilename);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructEmbeddedFileSEL, FPDPreflightStructEmbeddedFileGetFilenameSEL, (void*)CFPD_PreflightStructEmbeddedFile_V16::GetFilename);
	}
};

class CFPD_PreflightStructFormXObject_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructFormXObjectSEL, FPDPreflightStructFormXObjectNewSEL, (void*)CFPD_PreflightStructFormXObject_V16::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructFormXObjectSEL, FPDPreflightStructFormXObjectDestorySEL, (void*)CFPD_PreflightStructFormXObject_V16::Destory);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructFormXObjectSEL, FPDPreflightStructFormXObjectSetIDSEL, (void*)CFPD_PreflightStructFormXObject_V16::SetID);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructFormXObjectSEL, FPDPreflightStructFormXObjectGetIDSEL, (void*)CFPD_PreflightStructFormXObject_V16::GetID);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructFormXObjectSEL, FPDPreflightStructFormXObjectSetBoundingBoxPTSEL, (void*)CFPD_PreflightStructFormXObject_V16::SetBoundingBoxPT);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructFormXObjectSEL, FPDPreflightStructFormXObjectGetBoundingBoxPTSEL, (void*)CFPD_PreflightStructFormXObject_V16::GetBoundingBoxPT);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructFormXObjectSEL, FPDPreflightStructFormXObjectSetTransformationMatrixSEL, (void*)CFPD_PreflightStructFormXObject_V16::SetTransformationMatrix);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructFormXObjectSEL, FPDPreflightStructFormXObjectGetTransformationMatrixSEL, (void*)CFPD_PreflightStructFormXObject_V16::GetTransformationMatrix);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructFormXObjectSEL, FPDPreflightStructFormXObjectSetExtUniqueIDSEL, (void*)CFPD_PreflightStructFormXObject_V16::SetExtUniqueID);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructFormXObjectSEL, FPDPreflightStructFormXObjectGetExtUniqueIDSEL, (void*)CFPD_PreflightStructFormXObject_V16::GetExtUniqueID);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructFormXObjectSEL, FPDPreflightStructFormXObjectSetFormPInfoSEL, (void*)CFPD_PreflightStructFormXObject_V16::SetFormPInfo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructFormXObjectSEL, FPDPreflightStructFormXObjectGetFormPInfoSEL, (void*)CFPD_PreflightStructFormXObject_V16::GetFormPInfo);
	}
};

class CFPD_PreflightStructShade_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructShadeSEL, FPDPreflightStructShadeNewSEL, (void*)CFPD_PreflightStructShade_V16::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructShadeSEL, FPDPreflightStructShadeDestorySEL, (void*)CFPD_PreflightStructShade_V16::Destory);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructShadeSEL, FPDPreflightStructShadeSetIDSEL, (void*)CFPD_PreflightStructShade_V16::SetID);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructShadeSEL, FPDPreflightStructShadeGetIDSEL, (void*)CFPD_PreflightStructShade_V16::GetID);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructShadeSEL, FPDPreflightStructShadeSetTypeSEL, (void*)CFPD_PreflightStructShade_V16::SetType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructShadeSEL, FPDPreflightStructShadeGetTypeSEL, (void*)CFPD_PreflightStructShade_V16::GetType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructShadeSEL, FPDPreflightStructShadeSetPreventAliasingArtifactsSEL, (void*)CFPD_PreflightStructShade_V16::SetPreventAliasingArtifacts);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructShadeSEL, FPDPreflightStructShadeGetPreventAliasingArtifactsSEL, (void*)CFPD_PreflightStructShade_V16::GetPreventAliasingArtifacts);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructShadeSEL, FPDPreflightStructShadeSetColorspaceSEL, (void*)CFPD_PreflightStructShade_V16::SetColorspace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructShadeSEL, FPDPreflightStructShadeGetColorspaceSEL, (void*)CFPD_PreflightStructShade_V16::GetColorspace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructShadeSEL, FPDPreflightStructShadeSetBitsPerCoordinateSEL, (void*)CFPD_PreflightStructShade_V16::SetBitsPerCoordinate);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructShadeSEL, FPDPreflightStructShadeGetBitsPerCoordinateSEL, (void*)CFPD_PreflightStructShade_V16::GetBitsPerCoordinate);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructShadeSEL, FPDPreflightStructShadeSetBitsPerComponentSEL, (void*)CFPD_PreflightStructShade_V16::SetBitsPerComponent);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructShadeSEL, FPDPreflightStructShadeGetBitsPerComponentSEL, (void*)CFPD_PreflightStructShade_V16::GetBitsPerComponent);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructShadeSEL, FPDPreflightStructShadeSetBitsPerFlagSEL, (void*)CFPD_PreflightStructShade_V16::SetBitsPerFlag);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructShadeSEL, FPDPreflightStructShadeGetBitsPerFlagSEL, (void*)CFPD_PreflightStructShade_V16::GetBitsPerFlag);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructShadeSEL, FPDPreflightStructShadeSetVerticesPerRowSEL, (void*)CFPD_PreflightStructShade_V16::SetVerticesPerRow);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructShadeSEL, FPDPreflightStructShadeGetVerticesPerRowSEL, (void*)CFPD_PreflightStructShade_V16::GetVerticesPerRow);
	}
};

class CFPD_PreflightStructPattern_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructPatternSEL, FPDPreflightStructPatternNewSEL, (void*)CFPD_PreflightStructPattern_V16::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructPatternSEL, FPDPreflightStructPatternDestorySEL, (void*)CFPD_PreflightStructPattern_V16::Destory);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructPatternSEL, FPDPreflightStructPatternSetTypeSEL, (void*)CFPD_PreflightStructPattern_V16::SetType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructPatternSEL, FPDPreflightStructPatternGetTypeSEL, (void*)CFPD_PreflightStructPattern_V16::GetType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructPatternSEL, FPDPreflightStructPatternSetIDSEL, (void*)CFPD_PreflightStructPattern_V16::SetID);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructPatternSEL, FPDPreflightStructPatternGetIDSEL, (void*)CFPD_PreflightStructPattern_V16::GetID);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructPatternSEL, FPDPreflightStructPatternSetShadeElementSEL, (void*)CFPD_PreflightStructPattern_V16::SetShadeElement);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructPatternSEL, FPDPreflightStructPatternGetShadeElementSEL, (void*)CFPD_PreflightStructPattern_V16::GetShadeElement);
	}
};

class CFPD_PreflightStructAnnot_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructAnnotSEL, FPDPreflightStructAnnotNewSEL, (void*)CFPD_PreflightStructAnnot_V16::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructAnnotSEL, FPDPreflightStructAnnotDestorySEL, (void*)CFPD_PreflightStructAnnot_V16::Destory);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructAnnotSEL, FPDPreflightStructAnnotSetIDSEL, (void*)CFPD_PreflightStructAnnot_V16::SetID);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructAnnotSEL, FPDPreflightStructAnnotGetIDSEL, (void*)CFPD_PreflightStructAnnot_V16::GetID);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructAnnotSEL, FPDPreflightStructAnnotSetTypeSEL, (void*)CFPD_PreflightStructAnnot_V16::SetType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructAnnotSEL, FPDPreflightStructAnnotGetTypeSEL, (void*)CFPD_PreflightStructAnnot_V16::GetType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructAnnotSEL, FPDPreflightStructAnnotSetNameSEL, (void*)CFPD_PreflightStructAnnot_V16::SetName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructAnnotSEL, FPDPreflightStructAnnotGetNameSEL, (void*)CFPD_PreflightStructAnnot_V16::GetName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructAnnotSEL, FPDPreflightStructAnnotSetStateSEL, (void*)CFPD_PreflightStructAnnot_V16::SetState);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructAnnotSEL, FPDPreflightStructAnnotGetStateSEL, (void*)CFPD_PreflightStructAnnot_V16::GetState);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructAnnotSEL, FPDPreflightStructAnnotSetTitleSEL, (void*)CFPD_PreflightStructAnnot_V16::SetTitle);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructAnnotSEL, FPDPreflightStructAnnotGetTitleSEL, (void*)CFPD_PreflightStructAnnot_V16::GetTitle);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructAnnotSEL, FPDPreflightStructAnnotSetSubjectSEL, (void*)CFPD_PreflightStructAnnot_V16::SetSubject);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructAnnotSEL, FPDPreflightStructAnnotGetSubjectSEL, (void*)CFPD_PreflightStructAnnot_V16::GetSubject);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructAnnotSEL, FPDPreflightStructAnnotSetIntentSEL, (void*)CFPD_PreflightStructAnnot_V16::SetIntent);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructAnnotSEL, FPDPreflightStructAnnotGetIntentSEL, (void*)CFPD_PreflightStructAnnot_V16::GetIntent);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructAnnotSEL, FPDPreflightStructAnnotSetFlagsSEL, (void*)CFPD_PreflightStructAnnot_V16::SetFlags);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructAnnotSEL, FPDPreflightStructAnnotGetFlagsSEL, (void*)CFPD_PreflightStructAnnot_V16::GetFlags);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructAnnotSEL, FPDPreflightStructAnnotSetFilepathSEL, (void*)CFPD_PreflightStructAnnot_V16::SetFilepath);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructAnnotSEL, FPDPreflightStructAnnotGetFilepathSEL, (void*)CFPD_PreflightStructAnnot_V16::GetFilepath);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructAnnotSEL, FPDPreflightStructAnnotSetPageElementSEL, (void*)CFPD_PreflightStructAnnot_V16::SetPageElement);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructAnnotSEL, FPDPreflightStructAnnotGetPageElementSEL, (void*)CFPD_PreflightStructAnnot_V16::GetPageElement);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructAnnotSEL, FPDPreflightStructAnnotSetRectSEL, (void*)CFPD_PreflightStructAnnot_V16::SetRect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructAnnotSEL, FPDPreflightStructAnnotGetRectSEL, (void*)CFPD_PreflightStructAnnot_V16::GetRect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructAnnotSEL, FPDPreflightStructAnnotSetContentSEL, (void*)CFPD_PreflightStructAnnot_V16::SetContent);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructAnnotSEL, FPDPreflightStructAnnotGetContentSEL, (void*)CFPD_PreflightStructAnnot_V16::GetContent);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructAnnotSEL, FPDPreflightStructAnnotSetCreationdateSEL, (void*)CFPD_PreflightStructAnnot_V16::SetCreationdate);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructAnnotSEL, FPDPreflightStructAnnotGetCreationdateSEL, (void*)CFPD_PreflightStructAnnot_V16::GetCreationdate);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructAnnotSEL, FPDPreflightStructAnnotSetModificationdateSEL, (void*)CFPD_PreflightStructAnnot_V16::SetModificationdate);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructAnnotSEL, FPDPreflightStructAnnotGetModificationdateSEL, (void*)CFPD_PreflightStructAnnot_V16::GetModificationdate);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructAnnotSEL, FPDPreflightStructAnnotSetActionTypeSEL, (void*)CFPD_PreflightStructAnnot_V16::SetActionType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructAnnotSEL, FPDPreflightStructAnnotGetActionTypeSEL, (void*)CFPD_PreflightStructAnnot_V16::GetActionType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructAnnotSEL, FPDPreflightStructAnnotSetOptionalcontentidsSEL, (void*)CFPD_PreflightStructAnnot_V16::SetOptionalcontentids);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructAnnotSEL, FPDPreflightStructAnnotGetOptionalcontentidsSEL, (void*)CFPD_PreflightStructAnnot_V16::GetOptionalcontentids);
	}
};

class CFPD_PreflightStructPage_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructPageSEL, FPDPreflightStructPageNewSEL, (void*)CFPD_PreflightStructPage_V16::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructPageSEL, FPDPreflightStructPageDestorySEL, (void*)CFPD_PreflightStructPage_V16::Destory);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructPageSEL, FPDPreflightStructPageSetIDSEL, (void*)CFPD_PreflightStructPage_V16::SetID);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructPageSEL, FPDPreflightStructPageGetIDSEL, (void*)CFPD_PreflightStructPage_V16::GetID);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructPageSEL, FPDPreflightStructPageSetNRSEL, (void*)CFPD_PreflightStructPage_V16::SetNR);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructPageSEL, FPDPreflightStructPageGetNRSEL, (void*)CFPD_PreflightStructPage_V16::GetNR);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructPageSEL, FPDPreflightStructPageSetPagelabelSEL, (void*)CFPD_PreflightStructPage_V16::SetPagelabel);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructPageSEL, FPDPreflightStructPageGetPagelabelSEL, (void*)CFPD_PreflightStructPage_V16::GetPagelabel);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructPageSEL, FPDPreflightStructPageSetMediaboxSEL, (void*)CFPD_PreflightStructPage_V16::SetMediabox);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructPageSEL, FPDPreflightStructPageGetMediaboxSEL, (void*)CFPD_PreflightStructPage_V16::GetMediabox);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructPageSEL, FPDPreflightStructPageSetCropboxSEL, (void*)CFPD_PreflightStructPage_V16::SetCropbox);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructPageSEL, FPDPreflightStructPageGetCropboxSEL, (void*)CFPD_PreflightStructPage_V16::GetCropbox);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructPageSEL, FPDPreflightStructPageSetTrimboxSEL, (void*)CFPD_PreflightStructPage_V16::SetTrimbox);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructPageSEL, FPDPreflightStructPageGetTrimboxSEL, (void*)CFPD_PreflightStructPage_V16::GetTrimbox);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructPageSEL, FPDPreflightStructPageSetBleedboxSEL, (void*)CFPD_PreflightStructPage_V16::SetBleedbox);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructPageSEL, FPDPreflightStructPageGetBleedboxSEL, (void*)CFPD_PreflightStructPage_V16::GetBleedbox);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructPageSEL, FPDPreflightStructPageSetArtboxSEL, (void*)CFPD_PreflightStructPage_V16::SetArtbox);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructPageSEL, FPDPreflightStructPageGetArtboxSEL, (void*)CFPD_PreflightStructPage_V16::GetArtbox);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructPageSEL, FPDPreflightStructPageSetRotateSEL, (void*)CFPD_PreflightStructPage_V16::SetRotate);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructPageSEL, FPDPreflightStructPageGetRotateSEL, (void*)CFPD_PreflightStructPage_V16::GetRotate);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructPageSEL, FPDPreflightStructPageSetUserunitSEL, (void*)CFPD_PreflightStructPage_V16::SetUserunit);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructPageSEL, FPDPreflightStructPageGetUserunitSEL, (void*)CFPD_PreflightStructPage_V16::GetUserunit);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructPageSEL, FPDPreflightStructPageSetPlatesSEL, (void*)CFPD_PreflightStructPage_V16::SetPlates);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructPageSEL, FPDPreflightStructPageGetPlatesSEL, (void*)CFPD_PreflightStructPage_V16::GetPlates);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructPageSEL, FPDPreflightStructPageSetPlatesElementSEL, (void*)CFPD_PreflightStructPage_V16::SetPlatesElement);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructPageSEL, FPDPreflightStructPageGetPlatesElementSEL, (void*)CFPD_PreflightStructPage_V16::GetPlatesElement);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructPageSEL, FPDPreflightStructPageSetAnnotsSEL, (void*)CFPD_PreflightStructPage_V16::SetAnnots);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructPageSEL, FPDPreflightStructPageGetAnnotsSEL, (void*)CFPD_PreflightStructPage_V16::GetAnnots);
	}
};

class CFPD_PreflightStructTriggerItem_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructTriggerItemSEL, FPDPreflightStructTriggerItemNewSEL, (void*)CFPD_PreflightStructTriggerItem_V16::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructTriggerItemSEL, FPDPreflightStructTriggerItemDestorySEL, (void*)CFPD_PreflightStructTriggerItem_V16::Destory);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructTriggerItemSEL, FPDPreflightStructTriggerItemSetConditonKeySEL, (void*)CFPD_PreflightStructTriggerItem_V16::SetConditonKey);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructTriggerItemSEL, FPDPreflightStructTriggerItemGetConditonKeySEL, (void*)CFPD_PreflightStructTriggerItem_V16::GetConditonKey);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructTriggerItemSEL, FPDPreflightStructTriggerItemSetConditionResultSEL, (void*)CFPD_PreflightStructTriggerItem_V16::SetConditionResult);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPreflightStructTriggerItemSEL, FPDPreflightStructTriggerItemGetConditionResultSEL, (void*)CFPD_PreflightStructTriggerItem_V16::GetConditionResult);
	}
};

// middle_preflightImpl.h end

// In file fofd_basicImpl.h
// fofd_basicImpl.h end

// In file fofd_docImpl.h
// fofd_docImpl.h end

// In file fofd_pageImpl.h
// fofd_pageImpl.h end

// In file fofd_renderImpl.h
// fofd_renderImpl.h end

// In file fofd_sigImpl.h
// fofd_sigImpl.h end

// In file fpd_3DImpl.h
class CFPD_3DBuiltin_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3DBuiltinSEL, FPD3DBuiltinCreateTempFileInfoSEL, (void*)CFPD_3DBuiltin_V16::CreateTempFileInfo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3DBuiltinSEL, FPD3DBuiltinDeleteTempFileInfoSEL, (void*)CFPD_3DBuiltin_V16::DeleteTempFileInfo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3DBuiltinSEL, FPD3DBuiltinGetFilePathSEL, (void*)CFPD_3DBuiltin_V16::GetFilePath);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3DBuiltinSEL, FPD3DBuiltinSetFilePathSEL, (void*)CFPD_3DBuiltin_V16::SetFilePath);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3DBuiltinSEL, FPD3DBuiltinGetReservedSEL, (void*)CFPD_3DBuiltin_V16::GetReserved);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3DBuiltinSEL, FPD3DBuiltinSetReservedSEL, (void*)CFPD_3DBuiltin_V16::SetReserved);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3DBuiltinSEL, FPD3DBuiltinU3DLoaderSEL, (void*)CFPD_3DBuiltin_V16::U3DLoader);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3DBuiltinSEL, FPD3DBuiltinPRCLoaderSEL, (void*)CFPD_3DBuiltin_V16::PRCLoader);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3DBuiltinSEL, FPD3DBuiltinU3DorPRCLoaderSEL, (void*)CFPD_3DBuiltin_V16::U3DorPRCLoader);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3DBuiltinSEL, FPD3DBuiltinSetTempFileGenerationRuleSEL, (void*)CFPD_3DBuiltin_V16::SetTempFileGenerationRule);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3DBuiltinSEL, FPD3DBuiltinSetTempFileCallbackSEL, (void*)CFPD_3DBuiltin_V16::SetTempFileCallback);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3DBuiltinSEL, FPD3DBuiltinReleaseTempFileCallbackSEL, (void*)CFPD_3DBuiltin_V16::ReleaseTempFileCallback);
	}
};

// fpd_3DImpl.h end

// In file fpd_barcodeImpl.h
// fpd_barcodeImpl.h end

// In file fpd_convertImpl.h
class CFPD_ConvertTaggedPDFHandler_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDConvertTaggedPDFHandlerSEL, FPDConvertTaggedPDFHandlerNewHandlerSEL, (void*)CFPD_ConvertTaggedPDFHandler_V16::NewHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDConvertTaggedPDFHandlerSEL, FPDConvertTaggedPDFHandlerDestroyHandlerSEL, (void*)CFPD_ConvertTaggedPDFHandler_V16::DestroyHandler);
	}
};

class CFPD_DestructObject_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDestructObjectSEL, FPDDestructObjectFormRecognitionCreateSEL, (void*)CFPD_DestructObject_V16::FormRecognitionCreate);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDestructObjectSEL, FPDDestructObjectRecognitionCreateFromSEL, (void*)CFPD_DestructObject_V16::RecognitionCreateFrom);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDestructObjectSEL, FPDDestructObjectFormRecognitionCreate2SEL, (void*)CFPD_DestructObject_V16::FormRecognitionCreate2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDestructObjectSEL, FPDDestructObjectCreateFormRecHandlerSEL, (void*)CFPD_DestructObject_V16::CreateFormRecHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDestructObjectSEL, FPDDestructObjectDeleteFormRecHandlerSEL, (void*)CFPD_DestructObject_V16::DeleteFormRecHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDestructObjectSEL, FPDDestructObjectCreateFormRecOptionSEL, (void*)CFPD_DestructObject_V16::CreateFormRecOption);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDestructObjectSEL, FPDDestructObjectDeleteFormRecOptionSEL, (void*)CFPD_DestructObject_V16::DeleteFormRecOption);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDestructObjectSEL, FPDDestructObjectGetRecCallbackSEL, (void*)CFPD_DestructObject_V16::GetRecCallback);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDestructObjectSEL, FPDDestructObjectSetRecCallbackSEL, (void*)CFPD_DestructObject_V16::SetRecCallback);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDestructObjectSEL, FPDDestructObjectGetOutputPathSEL, (void*)CFPD_DestructObject_V16::GetOutputPath);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDestructObjectSEL, FPDDestructObjectSetOutputPathSEL, (void*)CFPD_DestructObject_V16::SetOutputPath);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDestructObjectSEL, FPDDestructObjectGetFileStreamSEL, (void*)CFPD_DestructObject_V16::GetFileStream);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDestructObjectSEL, FPDDestructObjectSetFileStreamSEL, (void*)CFPD_DestructObject_V16::SetFileStream);
	}
};

class CFPD_ConverterOptions_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDConverterOptionsSEL, FPDConverterOptionsNewConverterOptionsSEL, (void*)CFPD_ConverterOptions_V16::NewConverterOptions);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDConverterOptionsSEL, FPDConverterOptionsDestroyConverterOptionsSEL, (void*)CFPD_ConverterOptions_V16::DestroyConverterOptions);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDConverterOptionsSEL, FPDConverterOptionsGetImageDPPSEL, (void*)CFPD_ConverterOptions_V16::GetImageDPP);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDConverterOptionsSEL, FPDConverterOptionsSetImageDPPSEL, (void*)CFPD_ConverterOptions_V16::SetImageDPP);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDConverterOptionsSEL, FPDConverterOptionsGetStopWhenTimeoutSEL, (void*)CFPD_ConverterOptions_V16::GetStopWhenTimeout);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDConverterOptionsSEL, FPDConverterOptionsSetStopWhenTimeoutSEL, (void*)CFPD_ConverterOptions_V16::SetStopWhenTimeout);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDConverterOptionsSEL, FPDConverterOptionsGetOCContextSEL, (void*)CFPD_ConverterOptions_V16::GetOCContext);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDConverterOptionsSEL, FPDConverterOptionsSetOCContextSEL, (void*)CFPD_ConverterOptions_V16::SetOCContext);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDConverterOptionsSEL, FPDConverterOptionsGetLRVersionSEL, (void*)CFPD_ConverterOptions_V16::GetLRVersion);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDConverterOptionsSEL, FPDConverterOptionsSetLRVersionSEL, (void*)CFPD_ConverterOptions_V16::SetLRVersion);
	}
};

class CFPD_ConverterHandler_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDConverterHandlerSEL, FPDConverterHandlerNewConvertHandlerSEL, (void*)CFPD_ConverterHandler_V16::NewConvertHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDConverterHandlerSEL, FPDConverterHandlerDestroyConvertHandlerSEL, (void*)CFPD_ConverterHandler_V16::DestroyConvertHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDConverterHandlerSEL, FPDConverterHandlerNeedToPauseNowSEL, (void*)CFPD_ConverterHandler_V16::NeedToPauseNow);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDConverterHandlerSEL, FPDConverterHandlerPreparePageSEL, (void*)CFPD_ConverterHandler_V16::PreparePage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDConverterHandlerSEL, FPDConverterHandlerConfigureAnalysisOptionsSEL, (void*)CFPD_ConverterHandler_V16::ConfigureAnalysisOptions);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDConverterHandlerSEL, FPDConverterHandlerUpdateProgressSEL, (void*)CFPD_ConverterHandler_V16::UpdateProgress);
	}
};

class CFPD_Converter_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDConverterSEL, FPDConverterCreateSEL, (void*)CFPD_Converter_V16::Create);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDConverterSEL, FPDConverterDestroyConverterSEL, (void*)CFPD_Converter_V16::DestroyConverter);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDConverterSEL, FPDConverterStartSEL, (void*)CFPD_Converter_V16::Start);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDConverterSEL, FPDConverterStart2SEL, (void*)CFPD_Converter_V16::Start2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDConverterSEL, FPDConverterStart3SEL, (void*)CFPD_Converter_V16::Start3);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDConverterSEL, FPDConverterContinueSEL, (void*)CFPD_Converter_V16::Continue);
	}
};

// fpd_convertImpl.h end

// In file fpd_docImpl.h
class CFPD_StructTree_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDStructTreeSEL, FPDStructTreeLoadDocSEL, (void*)CFPD_StructTree_V16::LoadDoc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDStructTreeSEL, FPDStructTreeCountKidsSEL, (void*)CFPD_StructTree_V16::CountKids);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDStructTreeSEL, FPDStructTreeGetKidSEL, (void*)CFPD_StructTree_V16::GetKid);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDStructTreeSEL, FPDStructTreeGetMCRSEL, (void*)CFPD_StructTree_V16::GetMCR);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDStructTreeSEL, FPDStructTreeGetMCR2SEL, (void*)CFPD_StructTree_V16::GetMCR2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDStructTreeSEL, FPDStructTreeGetOBJRSEL, (void*)CFPD_StructTree_V16::GetOBJR);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDStructTreeSEL, FPDStructTreeGetOBJR2SEL, (void*)CFPD_StructTree_V16::GetOBJR2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDStructTreeSEL, FPDStructTreeGetOBJR3SEL, (void*)CFPD_StructTree_V16::GetOBJR3);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDStructTreeSEL, FPDStructTreeGetOBJR4SEL, (void*)CFPD_StructTree_V16::GetOBJR4);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDStructTreeSEL, FPDStructTreeDetachFromTreeSEL, (void*)CFPD_StructTree_V16::DetachFromTree);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDStructTreeSEL, FPDStructTreeReleaseStructTreeSEL, (void*)CFPD_StructTree_V16::ReleaseStructTree);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDStructTreeSEL, FPDStructTreeGetRootDictSEL, (void*)CFPD_StructTree_V16::GetRootDict);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDStructTreeSEL, FPDStructTreeGetStructElementSEL, (void*)CFPD_StructTree_V16::GetStructElement);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDStructTreeSEL, FPDStructTreeCreateStructElementSEL, (void*)CFPD_StructTree_V16::CreateStructElement);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDStructTreeSEL, FPDStructTreeIsConnectedWithRootSEL, (void*)CFPD_StructTree_V16::IsConnectedWithRoot);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDStructTreeSEL, FPDStructTreeAttachAsTreeKidSEL, (void*)CFPD_StructTree_V16::AttachAsTreeKid);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDStructTreeSEL, FPDStructTreeAttachAsElementKidSEL, (void*)CFPD_StructTree_V16::AttachAsElementKid);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDStructTreeSEL, FPDStructTreeGetDocumentSEL, (void*)CFPD_StructTree_V16::GetDocument);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDStructTreeSEL, FPDStructTreeGetMCRWithMCIDSEL, (void*)CFPD_StructTree_V16::GetMCRWithMCID);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDStructTreeSEL, FPDStructTreeGetMCRWithMCID2SEL, (void*)CFPD_StructTree_V16::GetMCRWithMCID2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDStructTreeSEL, FPDStructTreeTraverseForPageSEL, (void*)CFPD_StructTree_V16::TraverseForPage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDStructTreeSEL, FPDStructTreeGetElementByIDSEL, (void*)CFPD_StructTree_V16::GetElementByID);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDStructTreeSEL, FPDStructTreeGetDefaultStructNamespaceSEL, (void*)CFPD_StructTree_V16::GetDefaultStructNamespace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDStructTreeSEL, FPDStructTreeLoadDoc2SEL, (void*)CFPD_StructTree_V16::LoadDoc2);
	}
};

class CFPD_StructElement_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDStructElementSEL, FPDStructElementGetTypeSEL, (void*)CFPD_StructElement_V16::GetType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDStructElementSEL, FPDStructElementGetMappedRoleSEL, (void*)CFPD_StructElement_V16::GetMappedRole);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDStructElementSEL, FPDStructElementCountKidsSEL, (void*)CFPD_StructElement_V16::CountKids);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDStructElementSEL, FPDStructElementGetKidSEL, (void*)CFPD_StructElement_V16::GetKid);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDStructElementSEL, FPDStructElementGetRoleSEL, (void*)CFPD_StructElement_V16::GetRole);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDStructElementSEL, FPDStructElementGetInfoSEL, (void*)CFPD_StructElement_V16::GetInfo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDStructElementSEL, FPDStructElementGetIDSEL, (void*)CFPD_StructElement_V16::GetID);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDStructElementSEL, FPDStructElementSetInfoSEL, (void*)CFPD_StructElement_V16::SetInfo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDStructElementSEL, FPDStructElementSetRoleSEL, (void*)CFPD_StructElement_V16::SetRole);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDStructElementSEL, FPDStructElementSetIDSEL, (void*)CFPD_StructElement_V16::SetID);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDStructElementSEL, FPDStructElementHasInfoSEL, (void*)CFPD_StructElement_V16::HasInfo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDStructElementSEL, FPDStructElementGetInfoRawSEL, (void*)CFPD_StructElement_V16::GetInfoRaw);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDStructElementSEL, FPDStructElementGetAttrSEL, (void*)CFPD_StructElement_V16::GetAttr);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDStructElementSEL, FPDStructElementSetAttrSEL, (void*)CFPD_StructElement_V16::SetAttr);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDStructElementSEL, FPDStructElementGetNSSEL, (void*)CFPD_StructElement_V16::GetNS);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDStructElementSEL, FPDStructElementSetNSSEL, (void*)CFPD_StructElement_V16::SetNS);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDStructElementSEL, FPDStructElementGetMappedRoleAndNSSEL, (void*)CFPD_StructElement_V16::GetMappedRoleAndNS);
	}
};

class CFPD_StructTreeEntity_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDStructTreeEntitySEL, FPDStructTreeEntityAsStructElemSEL, (void*)CFPD_StructTreeEntity_V16::AsStructElem);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDStructTreeEntitySEL, FPDStructTreeEntityGetPageSEL, (void*)CFPD_StructTreeEntity_V16::GetPage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDStructTreeEntitySEL, FPDStructTreeEntityGetTypeSEL, (void*)CFPD_StructTreeEntity_V16::GetType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDStructTreeEntitySEL, FPDStructTreeEntityAsMCRSEL, (void*)CFPD_StructTreeEntity_V16::AsMCR);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDStructTreeEntitySEL, FPDStructTreeEntityAsOBJRSEL, (void*)CFPD_StructTreeEntity_V16::AsOBJR);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDStructTreeEntitySEL, FPDStructTreeEntityGetObjectFSEL, (void*)CFPD_StructTreeEntity_V16::GetObjectF);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDStructTreeEntitySEL, FPDStructTreeEntityCastFromStructElementSEL, (void*)CFPD_StructTreeEntity_V16::CastFromStructElement);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDStructTreeEntitySEL, FPDStructTreeEntityCastFromMarkContentSEL, (void*)CFPD_StructTreeEntity_V16::CastFromMarkContent);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDStructTreeEntitySEL, FPDStructTreeEntityCastFromObjectRefSEL, (void*)CFPD_StructTreeEntity_V16::CastFromObjectRef);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDStructTreeEntitySEL, FPDStructTreeEntityGetParentSEL, (void*)CFPD_StructTreeEntity_V16::GetParent);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDStructTreeEntitySEL, FPDStructTreeEntityGetTreeSEL, (void*)CFPD_StructTreeEntity_V16::GetTree);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDStructTreeEntitySEL, FPDStructTreeEntityCastToStructElementSEL, (void*)CFPD_StructTreeEntity_V16::CastToStructElement);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDStructTreeEntitySEL, FPDStructTreeEntitySetPageSEL, (void*)CFPD_StructTreeEntity_V16::SetPage);
	}
};

class CFPD_MarkContentReference_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDMarkContentReferenceSEL, FPDMarkContentReferenceGetTypeSEL, (void*)CFPD_MarkContentReference_V16::GetType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDMarkContentReferenceSEL, FPDMarkContentReferenceGetContentStreamSEL, (void*)CFPD_MarkContentReference_V16::GetContentStream);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDMarkContentReferenceSEL, FPDMarkContentReferenceGetOwnerSEL, (void*)CFPD_MarkContentReference_V16::GetOwner);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDMarkContentReferenceSEL, FPDMarkContentReferenceGetMCIDSEL, (void*)CFPD_MarkContentReference_V16::GetMCID);
	}
};

class CFPD_ObjectReference_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDObjectReferenceSEL, FPDObjectReferenceGetTypeSEL, (void*)CFPD_ObjectReference_V16::GetType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDObjectReferenceSEL, FPDObjectReferenceGetTargetSEL, (void*)CFPD_ObjectReference_V16::GetTarget);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDObjectReferenceSEL, FPDObjectReferenceGetTargetTypeSEL, (void*)CFPD_ObjectReference_V16::GetTargetType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDObjectReferenceSEL, FPDObjectReferenceGetTargetImageDictSEL, (void*)CFPD_ObjectReference_V16::GetTargetImageDict);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDObjectReferenceSEL, FPDObjectReferenceGetTargetFormDictSEL, (void*)CFPD_ObjectReference_V16::GetTargetFormDict);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDObjectReferenceSEL, FPDObjectReferenceGetTargetAnnotDictSEL, (void*)CFPD_ObjectReference_V16::GetTargetAnnotDict);
	}
};

class CFPD_MarkInfo_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDMarkInfoSEL, FPDMarkInfoCreateMarkInfoSEL, (void*)CFPD_MarkInfo_V16::CreateMarkInfo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDMarkInfoSEL, FPDMarkInfoDeleteMarkInfoSEL, (void*)CFPD_MarkInfo_V16::DeleteMarkInfo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDMarkInfoSEL, FPDMarkInfoGetMarkedSEL, (void*)CFPD_MarkInfo_V16::GetMarked);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDMarkInfoSEL, FPDMarkInfoGetUserPropertiesSEL, (void*)CFPD_MarkInfo_V16::GetUserProperties);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDMarkInfoSEL, FPDMarkInfoGetSuspectsSEL, (void*)CFPD_MarkInfo_V16::GetSuspects);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDMarkInfoSEL, FPDMarkInfoSetMarkedSEL, (void*)CFPD_MarkInfo_V16::SetMarked);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDMarkInfoSEL, FPDMarkInfoSetUserPropertiesSEL, (void*)CFPD_MarkInfo_V16::SetUserProperties);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDMarkInfoSEL, FPDMarkInfoSetSuspectsSEL, (void*)CFPD_MarkInfo_V16::SetSuspects);
	}
};

class CFPD_PageTemplate_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageTemplateSEL, FPDPageTemplateCreatePageTemplateSEL, (void*)CFPD_PageTemplate_V16::CreatePageTemplate);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageTemplateSEL, FPDPageTemplateDestroyFPDPageTemplateSEL, (void*)CFPD_PageTemplate_V16::DestroyFPDPageTemplate);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageTemplateSEL, FPDPageTemplateLoadTemplateDatasSEL, (void*)CFPD_PageTemplate_V16::LoadTemplateDatas);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageTemplateSEL, FPDPageTemplateGetTemplateCountSEL, (void*)CFPD_PageTemplate_V16::GetTemplateCount);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageTemplateSEL, FPDPageTemplateGetTemplateNameSEL, (void*)CFPD_PageTemplate_V16::GetTemplateName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageTemplateSEL, FPDPageTemplateAddTemplateSEL, (void*)CFPD_PageTemplate_V16::AddTemplate);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageTemplateSEL, FPDPageTemplateCheckExistForTempNameSEL, (void*)CFPD_PageTemplate_V16::CheckExistForTempName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageTemplateSEL, FPDPageTemplateCheckExistForDictSEL, (void*)CFPD_PageTemplate_V16::CheckExistForDict);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageTemplateSEL, FPDPageTemplateRenameTemplateSEL, (void*)CFPD_PageTemplate_V16::RenameTemplate);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageTemplateSEL, FPDPageTemplateDeleteTemplateSEL, (void*)CFPD_PageTemplate_V16::DeleteTemplate);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageTemplateSEL, FPDPageTemplateGetTemplateVisibleSEL, (void*)CFPD_PageTemplate_V16::GetTemplateVisible);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageTemplateSEL, FPDPageTemplateSetTemplateVisibleSEL, (void*)CFPD_PageTemplate_V16::SetTemplateVisible);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageTemplateSEL, FPDPageTemplateGetPageIndexSEL, (void*)CFPD_PageTemplate_V16::GetPageIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPageTemplateSEL, FPDPageTemplateGetTemplateObjectSEL, (void*)CFPD_PageTemplate_V16::GetTemplateObject);
	}
};

class CFPD_EmbedFontSubset_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEmbedFontSubsetSEL, FPDEmbedFontSubsetCreateSEL, (void*)CFPD_EmbedFontSubset_V16::Create);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEmbedFontSubsetSEL, FPDEmbedFontSubsetDeleteSEL, (void*)CFPD_EmbedFontSubset_V16::Delete);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEmbedFontSubsetSEL, FPDEmbedFontSubsetStartSEL, (void*)CFPD_EmbedFontSubset_V16::Start);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEmbedFontSubsetSEL, FPDEmbedFontSubsetContinueSEL, (void*)CFPD_EmbedFontSubset_V16::Continue);
	}
};

class CFPD_Engine_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEngineSEL, FPDEngineCreateNofifySEL, (void*)CFPD_Engine_V16::CreateNofify);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEngineSEL, FPDEngineReleaseNofifySEL, (void*)CFPD_Engine_V16::ReleaseNofify);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEngineSEL, FPDEngineGetEngineSEL, (void*)CFPD_Engine_V16::GetEngine);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEngineSEL, FPDEngineSetDeriverSEL, (void*)CFPD_Engine_V16::SetDeriver);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEngineSEL, FPDEngineClearSEL, (void*)CFPD_Engine_V16::Clear);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEngineSEL, FPDEngineGetX509CertSEL, (void*)CFPD_Engine_V16::GetX509Cert);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEngineSEL, FPDEngineGetTokenInfoSizeSEL, (void*)CFPD_Engine_V16::GetTokenInfoSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEngineSEL, FPDEngineGetTokenInfoByIndexSEL, (void*)CFPD_Engine_V16::GetTokenInfoByIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEngineSEL, FPDEngineGetlibInfoSEL, (void*)CFPD_Engine_V16::GetlibInfo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEngineSEL, FPDEngineLoginSEL, (void*)CFPD_Engine_V16::Login);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEngineSEL, FPDEngineLogoutSEL, (void*)CFPD_Engine_V16::Logout);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEngineSEL, FPDEngineReleaseCertSEL, (void*)CFPD_Engine_V16::ReleaseCert);
	}
};

class CFPD_FlattenOptions_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFlattenOptionsSEL, FPDFlattenOptionsCreateSEL, (void*)CFPD_FlattenOptions_V16::Create);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFlattenOptionsSEL, FPDFlattenOptionsDeleteSEL, (void*)CFPD_FlattenOptions_V16::Delete);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFlattenOptionsSEL, FPDFlattenOptionsGetRasterVectorBalanceSEL, (void*)CFPD_FlattenOptions_V16::GetRasterVectorBalance);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFlattenOptionsSEL, FPDFlattenOptionsSetRasterVectorBalanceSEL, (void*)CFPD_FlattenOptions_V16::SetRasterVectorBalance);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFlattenOptionsSEL, FPDFlattenOptionsGetLineArtAndTextResolutionSEL, (void*)CFPD_FlattenOptions_V16::GetLineArtAndTextResolution);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFlattenOptionsSEL, FPDFlattenOptionsSetLineArtAndTextResolutionSEL, (void*)CFPD_FlattenOptions_V16::SetLineArtAndTextResolution);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFlattenOptionsSEL, FPDFlattenOptionsGetGradientAndMeshResolutionSEL, (void*)CFPD_FlattenOptions_V16::GetGradientAndMeshResolution);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFlattenOptionsSEL, FPDFlattenOptionsSetGradientAndMeshResolutionSEL, (void*)CFPD_FlattenOptions_V16::SetGradientAndMeshResolution);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFlattenOptionsSEL, FPDFlattenOptionsGetIsConvertTextToOutlineSEL, (void*)CFPD_FlattenOptions_V16::GetIsConvertTextToOutline);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFlattenOptionsSEL, FPDFlattenOptionsSetIsConvertTextToOutlineSEL, (void*)CFPD_FlattenOptions_V16::SetIsConvertTextToOutline);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFlattenOptionsSEL, FPDFlattenOptionsGetIsConvertStrokeToOutlineSEL, (void*)CFPD_FlattenOptions_V16::GetIsConvertStrokeToOutline);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFlattenOptionsSEL, FPDFlattenOptionsSetIsConvertStrokeToOutlineSEL, (void*)CFPD_FlattenOptions_V16::SetIsConvertStrokeToOutline);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFlattenOptionsSEL, FPDFlattenOptionsGetIsClipComplexRegionsSEL, (void*)CFPD_FlattenOptions_V16::GetIsClipComplexRegions);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFlattenOptionsSEL, FPDFlattenOptionsSetIsClipComplexRegionsSEL, (void*)CFPD_FlattenOptions_V16::SetIsClipComplexRegions);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFlattenOptionsSEL, FPDFlattenOptionsGetIsPreserveOverprintSEL, (void*)CFPD_FlattenOptions_V16::GetIsPreserveOverprint);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFlattenOptionsSEL, FPDFlattenOptionsSetIsPreserveOverprintSEL, (void*)CFPD_FlattenOptions_V16::SetIsPreserveOverprint);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFlattenOptionsSEL, FPDFlattenOptionsGetIccProfileSEL, (void*)CFPD_FlattenOptions_V16::GetIccProfile);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFlattenOptionsSEL, FPDFlattenOptionsSetIccProfileSEL, (void*)CFPD_FlattenOptions_V16::SetIccProfile);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFlattenOptionsSEL, FPDFlattenOptionsGetMonochromeSEL, (void*)CFPD_FlattenOptions_V16::GetMonochrome);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFlattenOptionsSEL, FPDFlattenOptionsSetMonochromeSEL, (void*)CFPD_FlattenOptions_V16::SetMonochrome);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFlattenOptionsSEL, FPDFlattenOptionsGetGrayscaleSEL, (void*)CFPD_FlattenOptions_V16::GetGrayscale);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFlattenOptionsSEL, FPDFlattenOptionsSetGrayscaleSEL, (void*)CFPD_FlattenOptions_V16::SetGrayscale);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFlattenOptionsSEL, FPDFlattenOptionsGetColorSEL, (void*)CFPD_FlattenOptions_V16::GetColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFlattenOptionsSEL, FPDFlattenOptionsSetColorSEL, (void*)CFPD_FlattenOptions_V16::SetColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFlattenOptionsSEL, FPDFlattenOptionsGetQualitySEL, (void*)CFPD_FlattenOptions_V16::GetQuality);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFlattenOptionsSEL, FPDFlattenOptionsSetQualitySEL, (void*)CFPD_FlattenOptions_V16::SetQuality);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFlattenOptionsSEL, FPDFlattenOptionsGetDPISEL, (void*)CFPD_FlattenOptions_V16::GetDPI);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFlattenOptionsSEL, FPDFlattenOptionsSetDPISEL, (void*)CFPD_FlattenOptions_V16::SetDPI);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFlattenOptionsSEL, FPDFlattenOptionsGetBackColorSEL, (void*)CFPD_FlattenOptions_V16::GetBackColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFlattenOptionsSEL, FPDFlattenOptionsSetBackColorSEL, (void*)CFPD_FlattenOptions_V16::SetBackColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFlattenOptionsSEL, FPDFlattenOptionsGetRenderFlagsSEL, (void*)CFPD_FlattenOptions_V16::GetRenderFlags);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFlattenOptionsSEL, FPDFlattenOptionsSetRenderFlagsSEL, (void*)CFPD_FlattenOptions_V16::SetRenderFlags);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFlattenOptionsSEL, FPDFlattenOptionsSetOCContextSEL, (void*)CFPD_FlattenOptions_V16::SetOCContext);
	}
};

class CFPD_OCSPCache_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOCSPCacheSEL, FPDOCSPCacheDisableAutoCacheSEL, (void*)CFPD_OCSPCache_V16::DisableAutoCache);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOCSPCacheSEL, FPDOCSPCacheDiscardExpiredCacheSEL, (void*)CFPD_OCSPCache_V16::DiscardExpiredCache);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOCSPCacheSEL, FPDOCSPCacheClearAllCacheSEL, (void*)CFPD_OCSPCache_V16::ClearAllCache);
	}
};

class CFPD_TimeStampServerNotify_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTimeStampServerNotifySEL, FPDTimeStampServerNotifyCreateSEL, (void*)CFPD_TimeStampServerNotify_V16::Create);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTimeStampServerNotifySEL, FPDTimeStampServerNotifyDestroySEL, (void*)CFPD_TimeStampServerNotify_V16::Destroy);
	}
};

// fpd_docImpl.h end

// In file fpd_editImpl.h
class CFPD_WordRange_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDWordRangeSEL, FPDWordRangeNewSEL, (void*)CFPD_WordRange_V16::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDWordRangeSEL, FPDWordRangeDestroySEL, (void*)CFPD_WordRange_V16::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDWordRangeSEL, FPDWordRangeSetDefaultSEL, (void*)CFPD_WordRange_V16::SetDefault);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDWordRangeSEL, FPDWordRangeSetSEL, (void*)CFPD_WordRange_V16::Set);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDWordRangeSEL, FPDWordRangeSetBeginPosSEL, (void*)CFPD_WordRange_V16::SetBeginPos);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDWordRangeSEL, FPDWordRangeSetEndPosSEL, (void*)CFPD_WordRange_V16::SetEndPos);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDWordRangeSEL, FPDWordRangeIsExistSEL, (void*)CFPD_WordRange_V16::IsExist);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDWordRangeSEL, FPDWordRangeEqualSEL, (void*)CFPD_WordRange_V16::Equal);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDWordRangeSEL, FPDWordRangeSwapWordPlaceSEL, (void*)CFPD_WordRange_V16::SwapWordPlace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDWordRangeSEL, FPDWordRangeGetBeginPosSEL, (void*)CFPD_WordRange_V16::GetBeginPos);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDWordRangeSEL, FPDWordRangeGetEndPosSEL, (void*)CFPD_WordRange_V16::GetEndPos);
	}
};

class CFPD_WordProps_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDWordPropsSEL, FPDWordPropsNewSEL, (void*)CFPD_WordProps_V16::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDWordPropsSEL, FPDWordPropsNewIISEL, (void*)CFPD_WordProps_V16::NewII);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDWordPropsSEL, FPDWordPropsDestroySEL, (void*)CFPD_WordProps_V16::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDWordPropsSEL, FPDWordPropsSetFontIndexSEL, (void*)CFPD_WordProps_V16::SetFontIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDWordPropsSEL, FPDWordPropsGetFontIndexSEL, (void*)CFPD_WordProps_V16::GetFontIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDWordPropsSEL, FPDWordPropsSetFontSizeSEL, (void*)CFPD_WordProps_V16::SetFontSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDWordPropsSEL, FPDWordPropsGetFontSizeSEL, (void*)CFPD_WordProps_V16::GetFontSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDWordPropsSEL, FPDWordPropsSetWordColorSEL, (void*)CFPD_WordProps_V16::SetWordColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDWordPropsSEL, FPDWordPropsGetWordColorSEL, (void*)CFPD_WordProps_V16::GetWordColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDWordPropsSEL, FPDWordPropsSetStrokeColorSEL, (void*)CFPD_WordProps_V16::SetStrokeColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDWordPropsSEL, FPDWordPropsGetStrokeColorSEL, (void*)CFPD_WordProps_V16::GetStrokeColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDWordPropsSEL, FPDWordPropsSetScriptTypeSEL, (void*)CFPD_WordProps_V16::SetScriptType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDWordPropsSEL, FPDWordPropsGetScriptTypeSEL, (void*)CFPD_WordProps_V16::GetScriptType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDWordPropsSEL, FPDWordPropsSetWordStyleSEL, (void*)CFPD_WordProps_V16::SetWordStyle);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDWordPropsSEL, FPDWordPropsGetWordStyleSEL, (void*)CFPD_WordProps_V16::GetWordStyle);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDWordPropsSEL, FPDWordPropsSetCharSpaceSEL, (void*)CFPD_WordProps_V16::SetCharSpace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDWordPropsSEL, FPDWordPropsGetCharSpaceSEL, (void*)CFPD_WordProps_V16::GetCharSpace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDWordPropsSEL, FPDWordPropsSetHorzScaleSEL, (void*)CFPD_WordProps_V16::SetHorzScale);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDWordPropsSEL, FPDWordPropsGetHorzScaleSEL, (void*)CFPD_WordProps_V16::GetHorzScale);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDWordPropsSEL, FPDWordPropsSetXOffsetSEL, (void*)CFPD_WordProps_V16::SetXOffset);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDWordPropsSEL, FPDWordPropsGetXOffsetSEL, (void*)CFPD_WordProps_V16::GetXOffset);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDWordPropsSEL, FPDWordPropsSetYOffsetSEL, (void*)CFPD_WordProps_V16::SetYOffset);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDWordPropsSEL, FPDWordPropsGetYOffsetSEL, (void*)CFPD_WordProps_V16::GetYOffset);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDWordPropsSEL, FPDWordPropsSetRenderingModeSEL, (void*)CFPD_WordProps_V16::SetRenderingMode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDWordPropsSEL, FPDWordPropsGetRenderingModeSEL, (void*)CFPD_WordProps_V16::GetRenderingMode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDWordPropsSEL, FPDWordPropsSetClientDataSEL, (void*)CFPD_WordProps_V16::SetClientData);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDWordPropsSEL, FPDWordPropsGetClientDataSEL, (void*)CFPD_WordProps_V16::GetClientData);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDWordPropsSEL, FPDWordPropsSetLineWidthSEL, (void*)CFPD_WordProps_V16::SetLineWidth);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDWordPropsSEL, FPDWordPropsGetLineWidthSEL, (void*)CFPD_WordProps_V16::GetLineWidth);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDWordPropsSEL, FPDWordPropsSetWordSpaceSEL, (void*)CFPD_WordProps_V16::SetWordSpace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDWordPropsSEL, FPDWordPropsGetWordSpaceSEL, (void*)CFPD_WordProps_V16::GetWordSpace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDWordPropsSEL, FPDWordPropsSetCharCodeSEL, (void*)CFPD_WordProps_V16::SetCharCode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDWordPropsSEL, FPDWordPropsGetCharCodeSEL, (void*)CFPD_WordProps_V16::GetCharCode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDWordPropsSEL, FPDWordPropsSetAlphaSEL, (void*)CFPD_WordProps_V16::SetAlpha);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDWordPropsSEL, FPDWordPropsGetAlphaSEL, (void*)CFPD_WordProps_V16::GetAlpha);
	}
};

class CFPD_Edit_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditNewSEL, (void*)CFPD_Edit_V16::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditDelSEL, (void*)CFPD_Edit_V16::Del);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditSetFontMapSEL, (void*)CFPD_Edit_V16::SetFontMap);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditSetVTProviderSEL, (void*)CFPD_Edit_V16::SetVTProvider);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditSetNotifySEL, (void*)CFPD_Edit_V16::SetNotify);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditSetOprNotifySEL, (void*)CFPD_Edit_V16::SetOprNotify);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditGetIteratorSEL, (void*)CFPD_Edit_V16::GetIterator);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditGetVariableTextSEL, (void*)CFPD_Edit_V16::GetVariableText);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditGetFontMapSEL, (void*)CFPD_Edit_V16::GetFontMap);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditInitializeSEL, (void*)CFPD_Edit_V16::Initialize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditSetPlateRectSEL, (void*)CFPD_Edit_V16::SetPlateRect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditSetScrollPosSEL, (void*)CFPD_Edit_V16::SetScrollPos);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditIsVerticalWritingSEL, (void*)CFPD_Edit_V16::IsVerticalWriting);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditSetAlignmentHSEL, (void*)CFPD_Edit_V16::SetAlignmentH);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditSetAlignmentVSEL, (void*)CFPD_Edit_V16::SetAlignmentV);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditSetPasswordCharSEL, (void*)CFPD_Edit_V16::SetPasswordChar);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditSetLimitCharSEL, (void*)CFPD_Edit_V16::SetLimitChar);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditSetCharArraySEL, (void*)CFPD_Edit_V16::SetCharArray);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditSetCharSpaceSEL, (void*)CFPD_Edit_V16::SetCharSpace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditSetWordSpaceSEL, (void*)CFPD_Edit_V16::SetWordSpace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditSetHorzScaleSEL, (void*)CFPD_Edit_V16::SetHorzScale);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditSetLineLeadingSEL, (void*)CFPD_Edit_V16::SetLineLeading);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditSetMultiLineSEL, (void*)CFPD_Edit_V16::SetMultiLine);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditSetAutoReturnSEL, (void*)CFPD_Edit_V16::SetAutoReturn);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditSetAutoFontSizeSEL, (void*)CFPD_Edit_V16::SetAutoFontSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditSetAutoScrollSEL, (void*)CFPD_Edit_V16::SetAutoScroll);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditSetFontSizeSEL, (void*)CFPD_Edit_V16::SetFontSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditSetTextOverflowSEL, (void*)CFPD_Edit_V16::SetTextOverflow);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditSetDirectionRTLSEL, (void*)CFPD_Edit_V16::SetDirectionRTL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditIsRichTextSEL, (void*)CFPD_Edit_V16::IsRichText);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditSetRichTextSEL, (void*)CFPD_Edit_V16::SetRichText);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditSetRichTextFontSEL, (void*)CFPD_Edit_V16::SetRichTextFont);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditSetRichTextIsBoldSEL, (void*)CFPD_Edit_V16::SetRichTextIsBold);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditSetRichTextIsItalicSEL, (void*)CFPD_Edit_V16::SetRichTextIsItalic);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditSetRichFontSizeSEL, (void*)CFPD_Edit_V16::SetRichFontSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditSetRichTextColorSEL, (void*)CFPD_Edit_V16::SetRichTextColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditSetRichTextStrokeColorSEL, (void*)CFPD_Edit_V16::SetRichTextStrokeColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditSetRichRenderingModeSEL, (void*)CFPD_Edit_V16::SetRichRenderingMode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditSetRichTextScriptSEL, (void*)CFPD_Edit_V16::SetRichTextScript);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditSetRichTextUnderlineSEL, (void*)CFPD_Edit_V16::SetRichTextUnderline);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditSetRichTextCrossoutSEL, (void*)CFPD_Edit_V16::SetRichTextCrossout);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditSetRichTextCharSpaceSEL, (void*)CFPD_Edit_V16::SetRichTextCharSpace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditSetRichTextWordSpaceSEL, (void*)CFPD_Edit_V16::SetRichTextWordSpace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditSetRichTextHorzScaleSEL, (void*)CFPD_Edit_V16::SetRichTextHorzScale);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditSetRichTextLineLeadingSEL, (void*)CFPD_Edit_V16::SetRichTextLineLeading);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditSetRichTextLineIndentSEL, (void*)CFPD_Edit_V16::SetRichTextLineIndent);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditSetRichTextAlignmentSEL, (void*)CFPD_Edit_V16::SetRichTextAlignment);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditSetRichTextSoftReturnSEL, (void*)CFPD_Edit_V16::SetRichTextSoftReturn);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditSetSelSEL, (void*)CFPD_Edit_V16::SetSel);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditGetSelSEL, (void*)CFPD_Edit_V16::GetSel);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditSelectAllSEL, (void*)CFPD_Edit_V16::SelectAll);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditSelectNoneSEL, (void*)CFPD_Edit_V16::SelectNone);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditGetCaretSEL, (void*)CFPD_Edit_V16::GetCaret);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditGetCaretWordPlaceSEL, (void*)CFPD_Edit_V16::GetCaretWordPlace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditGetSelTextSEL, (void*)CFPD_Edit_V16::GetSelText);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditGetTextSEL, (void*)CFPD_Edit_V16::GetText);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditGetRichTextXMLSEL, (void*)CFPD_Edit_V16::GetRichTextXML);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditIsSelectedSEL, (void*)CFPD_Edit_V16::IsSelected);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditGetScrollPosSEL, (void*)CFPD_Edit_V16::GetScrollPos);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditGetPlateRectSEL, (void*)CFPD_Edit_V16::GetPlateRect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditGetContentRectSEL, (void*)CFPD_Edit_V16::GetContentRect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditGetVisibleWordRangeSEL, (void*)CFPD_Edit_V16::GetVisibleWordRange);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditGetWholeWordRangeSEL, (void*)CFPD_Edit_V16::GetWholeWordRange);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditGetSelectWordRangeSEL, (void*)CFPD_Edit_V16::GetSelectWordRange);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditOnMouseDownSEL, (void*)CFPD_Edit_V16::OnMouseDown);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditOnMouseMoveSEL, (void*)CFPD_Edit_V16::OnMouseMove);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditOnVK_UPSEL, (void*)CFPD_Edit_V16::OnVK_UP);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditOnVK_DOWNSEL, (void*)CFPD_Edit_V16::OnVK_DOWN);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditOnVK_LEFTSEL, (void*)CFPD_Edit_V16::OnVK_LEFT);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditOnVK_RIGHTSEL, (void*)CFPD_Edit_V16::OnVK_RIGHT);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditOnVK_HOMESEL, (void*)CFPD_Edit_V16::OnVK_HOME);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditOnVK_ENDSEL, (void*)CFPD_Edit_V16::OnVK_END);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditSetTextSEL, (void*)CFPD_Edit_V16::SetText);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditSetRichTextByXMLSEL, (void*)CFPD_Edit_V16::SetRichTextByXML);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditInsertWordSEL, (void*)CFPD_Edit_V16::InsertWord);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditInsertReturnSEL, (void*)CFPD_Edit_V16::InsertReturn);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditInsertTextSEL, (void*)CFPD_Edit_V16::InsertText);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditBackspaceSEL, (void*)CFPD_Edit_V16::Backspace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditDeleteSEL, (void*)CFPD_Edit_V16::Delete);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditClearSEL, (void*)CFPD_Edit_V16::Clear);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditRedoSEL, (void*)CFPD_Edit_V16::Redo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditUndoSEL, (void*)CFPD_Edit_V16::Undo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditSetCaretSEL, (void*)CFPD_Edit_V16::SetCaret);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditPaintSEL, (void*)CFPD_Edit_V16::Paint);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditEnableRefreshSEL, (void*)CFPD_Edit_V16::EnableRefresh);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditRefreshWordRangeSEL, (void*)CFPD_Edit_V16::RefreshWordRange);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditEnableUndoSEL, (void*)CFPD_Edit_V16::EnableUndo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditEnableNotifySEL, (void*)CFPD_Edit_V16::EnableNotify);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditEnableOprNotifySEL, (void*)CFPD_Edit_V16::EnableOprNotify);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditWordPlaceToWordIndexSEL, (void*)CFPD_Edit_V16::WordPlaceToWordIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditWordIndexToWordPlaceSEL, (void*)CFPD_Edit_V16::WordIndexToWordPlace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditGetLineBeginPlaceSEL, (void*)CFPD_Edit_V16::GetLineBeginPlace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditGetLineEndPlaceSEL, (void*)CFPD_Edit_V16::GetLineEndPlace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditGetSectionBeginPlaceSEL, (void*)CFPD_Edit_V16::GetSectionBeginPlace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditGetSectionEndPlaceSEL, (void*)CFPD_Edit_V16::GetSectionEndPlace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditSearchWordPlaceSEL, (void*)CFPD_Edit_V16::SearchWordPlace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditGetFontSizeSEL, (void*)CFPD_Edit_V16::GetFontSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditGetPasswordCharSEL, (void*)CFPD_Edit_V16::GetPasswordChar);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditGetCharArraySEL, (void*)CFPD_Edit_V16::GetCharArray);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditGetHorzScaleSEL, (void*)CFPD_Edit_V16::GetHorzScale);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditGetCharSpaceSEL, (void*)CFPD_Edit_V16::GetCharSpace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditGetRangeTextSEL, (void*)CFPD_Edit_V16::GetRangeText);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditIsTextFullSEL, (void*)CFPD_Edit_V16::IsTextFull);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditCanUndoSEL, (void*)CFPD_Edit_V16::CanUndo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditCanRedoSEL, (void*)CFPD_Edit_V16::CanRedo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditResetUndoSEL, (void*)CFPD_Edit_V16::ResetUndo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditIsModifiedSEL, (void*)CFPD_Edit_V16::IsModified);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditGetTotalWordsSEL, (void*)CFPD_Edit_V16::GetTotalWords);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditAddUndoItemSEL, (void*)CFPD_Edit_V16::AddUndoItem);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditBeginGroupUndoSEL, (void*)CFPD_Edit_V16::BeginGroupUndo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditEndGroupUndoSEL, (void*)CFPD_Edit_V16::EndGroupUndo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditSaveLineOffsetSEL, (void*)CFPD_Edit_V16::SaveLineOffset);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditGetEditAppearanceStreamSEL, (void*)CFPD_Edit_V16::GetEditAppearanceStream);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditGetRichEditAppearanceStreamSEL, (void*)CFPD_Edit_V16::GetRichEditAppearanceStream);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditGetSelectAppearanceStreamSEL, (void*)CFPD_Edit_V16::GetSelectAppearanceStream);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditDrawEditSEL, (void*)CFPD_Edit_V16::DrawEdit);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditDrawUnderlineSEL, (void*)CFPD_Edit_V16::DrawUnderline);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditDrawRichEditSEL, (void*)CFPD_Edit_V16::DrawRichEdit);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditGeneratePageObjectsSEL, (void*)CFPD_Edit_V16::GeneratePageObjects);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditGenerateRichPageObjectsSEL, (void*)CFPD_Edit_V16::GenerateRichPageObjects);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditGenerateUnderlineObjectsSEL, (void*)CFPD_Edit_V16::GenerateUnderlineObjects);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditGetRichTextPlainTextSEL, (void*)CFPD_Edit_V16::GetRichTextPlainText);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditSetText2SEL, (void*)CFPD_Edit_V16::SetText2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditIsPunctuationSEL, (void*)CFPD_Edit_V16::IsPunctuation);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditEnableArtificialBoldSEL, (void*)CFPD_Edit_V16::EnableArtificialBold);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditSetFillModeSEL, (void*)CFPD_Edit_V16::SetFillMode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditBeginOperBulletSEL, (void*)CFPD_Edit_V16::BeginOperBullet);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditEndOperBulletSEL, (void*)CFPD_Edit_V16::EndOperBullet);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditGetBulletSEL, (void*)CFPD_Edit_V16::GetBullet);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditGetBulletWordIteratorSEL, (void*)CFPD_Edit_V16::GetBulletWordIterator);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditSetLineLeadingRatioSEL, (void*)CFPD_Edit_V16::SetLineLeadingRatio);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditGetRichTextXML2SEL, (void*)CFPD_Edit_V16::GetRichTextXML2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditDeleteTextListSEL, (void*)CFPD_Edit_V16::DeleteTextList);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditModifyNumberedListSEL, (void*)CFPD_Edit_V16::ModifyNumberedList);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditSEL, FPDEditModifyBulletedListSEL, (void*)CFPD_Edit_V16::ModifyBulletedList);
	}
};

class CFPD_EditFontMap_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditFontMapSEL, FPDEditFontMapGetFontStyleSEL, (void*)CFPD_EditFontMap_V16::GetFontStyle);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditFontMapSEL, FPDEditFontMapIsExternalEmbedFontSEL, (void*)CFPD_EditFontMap_V16::IsExternalEmbedFont);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditFontMapSEL, FPDEditFontMapIsEmbeddedSEL, (void*)CFPD_EditFontMap_V16::IsEmbedded);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditFontMapSEL, FPDEditFontMapGetFontIndexByUnicode3SEL, (void*)CFPD_EditFontMap_V16::GetFontIndexByUnicode3);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditFontMapSEL, FPDEditFontMapGetFontIndex3SEL, (void*)CFPD_EditFontMap_V16::GetFontIndex3);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditFontMapSEL, FPDEditFontMapAddFXFont2SEL, (void*)CFPD_EditFontMap_V16::AddFXFont2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditFontMapSEL, FPDEditFontMapAddPDFFont2SEL, (void*)CFPD_EditFontMap_V16::AddPDFFont2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditFontMapSEL, FPDEditFontMapLoadAllFontByDictSEL, (void*)CFPD_EditFontMap_V16::LoadAllFontByDict);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditFontMapSEL, FPDEditFontMapCreateSEL, (void*)CFPD_EditFontMap_V16::Create);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditFontMapSEL, FPDEditFontMapDestroySEL, (void*)CFPD_EditFontMap_V16::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditFontMapSEL, FPDEditFontMapGetFontNameSEL, (void*)CFPD_EditFontMap_V16::GetFontName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditFontMapSEL, FPDEditFontMapGetFXFontSEL, (void*)CFPD_EditFontMap_V16::GetFXFont);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditFontMapSEL, FPDEditFontMapGetCharsetSEL, (void*)CFPD_EditFontMap_V16::GetCharset);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditFontMapSEL, FPDEditFontMapInitializeSEL, (void*)CFPD_EditFontMap_V16::Initialize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditFontMapSEL, FPDEditFontMapGetPDFFontSEL, (void*)CFPD_EditFontMap_V16::GetPDFFont);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditFontMapSEL, FPDEditFontMapGetRealNameFromTagNameSEL, (void*)CFPD_EditFontMap_V16::GetRealNameFromTagName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditFontMapSEL, FPDEditFontMapGetSysDefaultFontNameSEL, (void*)CFPD_EditFontMap_V16::GetSysDefaultFontName);
	}
};

class CFPD_VTWord_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVTWordSEL, FPDVTWordNewSEL, (void*)CFPD_VTWord_V16::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVTWordSEL, FPDVTWordDestroySEL, (void*)CFPD_VTWord_V16::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVTWordSEL, FPDVTWordSetWordSEL, (void*)CFPD_VTWord_V16::SetWord);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVTWordSEL, FPDVTWordGetWordSEL, (void*)CFPD_VTWord_V16::GetWord);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVTWordSEL, FPDVTWordSetWordDisplaySEL, (void*)CFPD_VTWord_V16::SetWordDisplay);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVTWordSEL, FPDVTWordGetWordDisplaySEL, (void*)CFPD_VTWord_V16::GetWordDisplay);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVTWordSEL, FPDVTWordSetBidiOrderSEL, (void*)CFPD_VTWord_V16::SetBidiOrder);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVTWordSEL, FPDVTWordGetBidiOrderSEL, (void*)CFPD_VTWord_V16::GetBidiOrder);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVTWordSEL, FPDVTWordSetCharsetSEL, (void*)CFPD_VTWord_V16::SetCharset);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVTWordSEL, FPDVTWordGetCharsetSEL, (void*)CFPD_VTWord_V16::GetCharset);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVTWordSEL, FPDVTWordSetWordPlaceSEL, (void*)CFPD_VTWord_V16::SetWordPlace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVTWordSEL, FPDVTWordGetWordPlaceSEL, (void*)CFPD_VTWord_V16::GetWordPlace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVTWordSEL, FPDVTWordSetWordPointSEL, (void*)CFPD_VTWord_V16::SetWordPoint);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVTWordSEL, FPDVTWordGetWordPointSEL, (void*)CFPD_VTWord_V16::GetWordPoint);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVTWordSEL, FPDVTWordSetAscentSEL, (void*)CFPD_VTWord_V16::SetAscent);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVTWordSEL, FPDVTWordGetAscentSEL, (void*)CFPD_VTWord_V16::GetAscent);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVTWordSEL, FPDVTWordSetDescentSEL, (void*)CFPD_VTWord_V16::SetDescent);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVTWordSEL, FPDVTWordGetDescentSEL, (void*)CFPD_VTWord_V16::GetDescent);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVTWordSEL, FPDVTWordSetWidthSEL, (void*)CFPD_VTWord_V16::SetWidth);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVTWordSEL, FPDVTWordGetWidthSEL, (void*)CFPD_VTWord_V16::GetWidth);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVTWordSEL, FPDVTWordSetFontIndexSEL, (void*)CFPD_VTWord_V16::SetFontIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVTWordSEL, FPDVTWordGetFontIndexSEL, (void*)CFPD_VTWord_V16::GetFontIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVTWordSEL, FPDVTWordSetFontSizeSEL, (void*)CFPD_VTWord_V16::SetFontSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVTWordSEL, FPDVTWordGetFontSizeSEL, (void*)CFPD_VTWord_V16::GetFontSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVTWordSEL, FPDVTWordSetWordPropsSEL, (void*)CFPD_VTWord_V16::SetWordProps);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVTWordSEL, FPDVTWordGetWordPropsSEL, (void*)CFPD_VTWord_V16::GetWordProps);
	}
};

// fpd_editImpl.h end

// In file fpd_epubImpl.h
// fpd_epubImpl.h end

// In file fpd_fontmgrImpl.h
// fpd_fontmgrImpl.h end

// In file fpd_fxxfaImpl.h
class CFPD_XFARenderOptions_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDXFARenderOptionsSEL, FPDXFARenderOptionsCreateXFARenderOptionsSEL, (void*)CFPD_XFARenderOptions_V16::CreateXFARenderOptions);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDXFARenderOptionsSEL, FPDXFARenderOptionsDeleteXFARenderOptionsSEL, (void*)CFPD_XFARenderOptions_V16::DeleteXFARenderOptions);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDXFARenderOptionsSEL, FPDXFARenderOptionsGetIsPrintSEL, (void*)CFPD_XFARenderOptions_V16::GetIsPrint);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDXFARenderOptionsSEL, FPDXFARenderOptionsSetIsPrintSEL, (void*)CFPD_XFARenderOptions_V16::SetIsPrint);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDXFARenderOptionsSEL, FPDXFARenderOptionsGetIsHighlightSEL, (void*)CFPD_XFARenderOptions_V16::GetIsHighlight);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDXFARenderOptionsSEL, FPDXFARenderOptionsSetIsHighlightSEL, (void*)CFPD_XFARenderOptions_V16::SetIsHighlight);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDXFARenderOptionsSEL, FPDXFARenderOptionsGetIsConverPdfSEL, (void*)CFPD_XFARenderOptions_V16::GetIsConverPdf);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDXFARenderOptionsSEL, FPDXFARenderOptionsSetIsConverPdfSEL, (void*)CFPD_XFARenderOptions_V16::SetIsConverPdf);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDXFARenderOptionsSEL, FPDXFARenderOptionsGetColorModeSEL, (void*)CFPD_XFARenderOptions_V16::GetColorMode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDXFARenderOptionsSEL, FPDXFARenderOptionsSetColorModeSEL, (void*)CFPD_XFARenderOptions_V16::SetColorMode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDXFARenderOptionsSEL, FPDXFARenderOptionsGetDocTextColorSEL, (void*)CFPD_XFARenderOptions_V16::GetDocTextColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDXFARenderOptionsSEL, FPDXFARenderOptionsSetDocTextColorSEL, (void*)CFPD_XFARenderOptions_V16::SetDocTextColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDXFARenderOptionsSEL, FPDXFARenderOptionsSetCustomColorModeSEL, (void*)CFPD_XFARenderOptions_V16::SetCustomColorMode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDXFARenderOptionsSEL, FPDXFARenderOptionsTranslateColorSEL, (void*)CFPD_XFARenderOptions_V16::TranslateColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDXFARenderOptionsSEL, FPDXFARenderOptionsGetCustomColorModeSEL, (void*)CFPD_XFARenderOptions_V16::GetCustomColorMode);
	}
};

class CFPD_XFARenderContext_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDXFARenderContextSEL, FPDXFARenderContextCreateSEL, (void*)CFPD_XFARenderContext_V16::Create);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDXFARenderContextSEL, FPDXFARenderContextReleaseSEL, (void*)CFPD_XFARenderContext_V16::Release);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDXFARenderContextSEL, FPDXFARenderContextStartRenderSEL, (void*)CFPD_XFARenderContext_V16::StartRender);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDXFARenderContextSEL, FPDXFARenderContextDoRenderSEL, (void*)CFPD_XFARenderContext_V16::DoRender);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDXFARenderContextSEL, FPDXFARenderContextStopRenderSEL, (void*)CFPD_XFARenderContext_V16::StopRender);
	}
};

class CFPD_XFAConverter_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDXFAConverterSEL, FPDXFAConverterCreateSEL, (void*)CFPD_XFAConverter_V16::Create);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDXFAConverterSEL, FPDXFAConverterReleaseSEL, (void*)CFPD_XFAConverter_V16::Release);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDXFAConverterSEL, FPDXFAConverterStartConvertSEL, (void*)CFPD_XFAConverter_V16::StartConvert);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDXFAConverterSEL, FPDXFAConverterStartConvert2SEL, (void*)CFPD_XFAConverter_V16::StartConvert2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDXFAConverterSEL, FPDXFAConverterStartConvert3SEL, (void*)CFPD_XFAConverter_V16::StartConvert3);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDXFAConverterSEL, FPDXFAConverterStartConvert4SEL, (void*)CFPD_XFAConverter_V16::StartConvert4);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDXFAConverterSEL, FPDXFAConverterDoConvertSEL, (void*)CFPD_XFAConverter_V16::DoConvert);
	}
};

// fpd_fxxfaImpl.h end

// In file fpd_jsImpl.h
// fpd_jsImpl.h end

// In file fpd_lrImpl.h
class CFPD_LRContext_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLRContextSEL, FPDLRContextCreatePageContextSEL, (void*)CFPD_LRContext_V16::CreatePageContext);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLRContextSEL, FPDLRContextContinueSEL, (void*)CFPD_LRContext_V16::Continue);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLRContextSEL, FPDLRContextReleaseSEL, (void*)CFPD_LRContext_V16::Release);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLRContextSEL, FPDLRContextGetRootElementSEL, (void*)CFPD_LRContext_V16::GetRootElement);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLRContextSEL, FPDLRContextReleaseStructureTreeSEL, (void*)CFPD_LRContext_V16::ReleaseStructureTree);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLRContextSEL, FPDLRContextStartSEL, (void*)CFPD_LRContext_V16::Start);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLRContextSEL, FPDLRContextReleaseStructureTree2SEL, (void*)CFPD_LRContext_V16::ReleaseStructureTree2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLRContextSEL, FPDLRContextAnalysisOptionsSEL, (void*)CFPD_LRContext_V16::AnalysisOptions);
	}
};

class CFPD_LRStructureElementRef_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLRStructureElementRefSEL, FPDLRStructureElementRefCreateSEL, (void*)CFPD_LRStructureElementRef_V16::Create);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLRStructureElementRefSEL, FPDLRStructureElementRefDestroySEL, (void*)CFPD_LRStructureElementRef_V16::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLRStructureElementRefSEL, FPDLRStructureElementRefGetChildrenSEL, (void*)CFPD_LRStructureElementRef_V16::GetChildren);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLRStructureElementRefSEL, FPDLRStructureElementRefGetStdStructureTypeSEL, (void*)CFPD_LRStructureElementRef_V16::GetStdStructureType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLRStructureElementRefSEL, FPDLRStructureElementRefIsNullSEL, (void*)CFPD_LRStructureElementRef_V16::IsNull);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLRStructureElementRefSEL, FPDLRStructureElementRefGetStdAttrValueFloatSEL, (void*)CFPD_LRStructureElementRef_V16::GetStdAttrValueFloat);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLRStructureElementRefSEL, FPDLRStructureElementRefGetElementTypeSEL, (void*)CFPD_LRStructureElementRef_V16::GetElementType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLRStructureElementRefSEL, FPDLRStructureElementRefGetParentElementSEL, (void*)CFPD_LRStructureElementRef_V16::GetParentElement);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLRStructureElementRefSEL, FPDLRStructureElementRefAsStructureElementSEL, (void*)CFPD_LRStructureElementRef_V16::AsStructureElement);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLRStructureElementRefSEL, FPDLRStructureElementRefGetBBoxSEL, (void*)CFPD_LRStructureElementRef_V16::GetBBox);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLRStructureElementRefSEL, FPDLRStructureElementRefIsEqualSEL, (void*)CFPD_LRStructureElementRef_V16::IsEqual);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLRStructureElementRefSEL, FPDLRStructureElementRefGetStdAttrTypeSEL, (void*)CFPD_LRStructureElementRef_V16::GetStdAttrType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLRStructureElementRefSEL, FPDLRStructureElementRefGetStdAttrValueEnumSEL, (void*)CFPD_LRStructureElementRef_V16::GetStdAttrValueEnum);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLRStructureElementRefSEL, FPDLRStructureElementRefGetStdAttrValueInt32SEL, (void*)CFPD_LRStructureElementRef_V16::GetStdAttrValueInt32);
	}
};

class CFPD_LRElementListRef_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLRElementListRefSEL, FPDLRElementListRefCreateSEL, (void*)CFPD_LRElementListRef_V16::Create);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLRElementListRefSEL, FPDLRElementListRefDestroySEL, (void*)CFPD_LRElementListRef_V16::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLRElementListRefSEL, FPDLRElementListRefGetSizeSEL, (void*)CFPD_LRElementListRef_V16::GetSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLRElementListRefSEL, FPDLRElementListRefGetAtSEL, (void*)CFPD_LRElementListRef_V16::GetAt);
	}
};

class CFPD_LRElementRef_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLRElementRefSEL, FPDLRElementRefCreateSEL, (void*)CFPD_LRElementRef_V16::Create);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLRElementRefSEL, FPDLRElementRefDestroySEL, (void*)CFPD_LRElementRef_V16::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLRElementRefSEL, FPDLRElementRefAsStructureElementSEL, (void*)CFPD_LRElementRef_V16::AsStructureElement);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLRElementRefSEL, FPDLRElementRefGetElementTypeSEL, (void*)CFPD_LRElementRef_V16::GetElementType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLRElementRefSEL, FPDLRElementRefAsContentElementSEL, (void*)CFPD_LRElementRef_V16::AsContentElement);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLRElementRefSEL, FPDLRElementRefLR_ISCONTENTTYPESEL, (void*)CFPD_LRElementRef_V16::LR_ISCONTENTTYPE);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLRElementRefSEL, FPDLRElementRefLR_IS_PAGEOBJTYPESEL, (void*)CFPD_LRElementRef_V16::LR_IS_PAGEOBJTYPE);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLRElementRefSEL, FPDLRElementRefLR_IS_STRUCTURETYPESEL, (void*)CFPD_LRElementRef_V16::LR_IS_STRUCTURETYPE);
	}
};

class CFPD_LRContentElementRef_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLRContentElementRefSEL, FPDLRContentElementRefCreateSEL, (void*)CFPD_LRContentElementRef_V16::Create);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLRContentElementRefSEL, FPDLRContentElementRefDestroySEL, (void*)CFPD_LRContentElementRef_V16::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLRContentElementRefSEL, FPDLRContentElementRefGetPageObjectElementSEL, (void*)CFPD_LRContentElementRef_V16::GetPageObjectElement);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLRContentElementRefSEL, FPDLRContentElementRefGetPageObjectRangeSEL, (void*)CFPD_LRContentElementRef_V16::GetPageObjectRange);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLRContentElementRefSEL, FPDLRContentElementRefGetBBoxSEL, (void*)CFPD_LRContentElementRef_V16::GetBBox);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLRContentElementRefSEL, FPDLRContentElementRefGetElementTypeSEL, (void*)CFPD_LRContentElementRef_V16::GetElementType);
	}
};

class CFPD_LRPageObjectElementRef_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLRPageObjectElementRefSEL, FPDLRPageObjectElementRefCreateSEL, (void*)CFPD_LRPageObjectElementRef_V16::Create);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLRPageObjectElementRefSEL, FPDLRPageObjectElementRefDestroySEL, (void*)CFPD_LRPageObjectElementRef_V16::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLRPageObjectElementRefSEL, FPDLRPageObjectElementRefGetBBoxSEL, (void*)CFPD_LRPageObjectElementRef_V16::GetBBox);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLRPageObjectElementRefSEL, FPDLRPageObjectElementRefGetDictSEL, (void*)CFPD_LRPageObjectElementRef_V16::GetDict);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLRPageObjectElementRefSEL, FPDLRPageObjectElementRefGetPageObjectSEL, (void*)CFPD_LRPageObjectElementRef_V16::GetPageObject);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLRPageObjectElementRefSEL, FPDLRPageObjectElementRefGetElementTypeSEL, (void*)CFPD_LRPageObjectElementRef_V16::GetElementType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLRPageObjectElementRefSEL, FPDLRPageObjectElementRefGetParentPageObjectSEL, (void*)CFPD_LRPageObjectElementRef_V16::GetParentPageObject);
	}
};

class CFPD_LRParseOptions_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLRParseOptionsSEL, FPDLRParseOptionsCreateSEL, (void*)CFPD_LRParseOptions_V16::Create);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLRParseOptionsSEL, FPDLRParseOptionsDeleteSEL, (void*)CFPD_LRParseOptions_V16::Delete);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLRParseOptionsSEL, FPDLRParseOptionsGetRecognizeDivisionSEL, (void*)CFPD_LRParseOptions_V16::GetRecognizeDivision);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLRParseOptionsSEL, FPDLRParseOptionsSetRecognizeDivisionSEL, (void*)CFPD_LRParseOptions_V16::SetRecognizeDivision);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLRParseOptionsSEL, FPDLRParseOptionsGetLRVersionSEL, (void*)CFPD_LRParseOptions_V16::GetLRVersion);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLRParseOptionsSEL, FPDLRParseOptionsSetLRVersionSEL, (void*)CFPD_LRParseOptions_V16::SetLRVersion);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLRParseOptionsSEL, FPDLRParseOptionsGetProfileSEL, (void*)CFPD_LRParseOptions_V16::GetProfile);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLRParseOptionsSEL, FPDLRParseOptionsSetProfileSEL, (void*)CFPD_LRParseOptions_V16::SetProfile);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLRParseOptionsSEL, FPDLRParseOptionsGetUsePageMatrixSEL, (void*)CFPD_LRParseOptions_V16::GetUsePageMatrix);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLRParseOptionsSEL, FPDLRParseOptionsSetUsePageMatrixSEL, (void*)CFPD_LRParseOptions_V16::SetUsePageMatrix);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLRParseOptionsSEL, FPDLRParseOptionsGetOCContextSEL, (void*)CFPD_LRParseOptions_V16::GetOCContext);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLRParseOptionsSEL, FPDLRParseOptionsSetOCContextSEL, (void*)CFPD_LRParseOptions_V16::SetOCContext);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLRParseOptionsSEL, FPDLRParseOptionsGetSelectionRectSEL, (void*)CFPD_LRParseOptions_V16::GetSelectionRect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLRParseOptionsSEL, FPDLRParseOptionsSetSelectionRectSEL, (void*)CFPD_LRParseOptions_V16::SetSelectionRect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLRParseOptionsSEL, FPDLRParseOptionsGetRecognizeFontConservativelySEL, (void*)CFPD_LRParseOptions_V16::GetRecognizeFontConservatively);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLRParseOptionsSEL, FPDLRParseOptionsSetRecognizeFontConservativelySEL, (void*)CFPD_LRParseOptions_V16::SetRecognizeFontConservatively);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLRParseOptionsSEL, FPDLRParseOptionsGetEnableLayoutAnalyzeSEL, (void*)CFPD_LRParseOptions_V16::GetEnableLayoutAnalyze);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLRParseOptionsSEL, FPDLRParseOptionsSetEnableLayoutAnalyzeSEL, (void*)CFPD_LRParseOptions_V16::SetEnableLayoutAnalyze);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLRParseOptionsSEL, FPDLRParseOptionsGetEnableTableContainsFloatSEL, (void*)CFPD_LRParseOptions_V16::GetEnableTableContainsFloat);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLRParseOptionsSEL, FPDLRParseOptionsSetEnableTableContainsFloatSEL, (void*)CFPD_LRParseOptions_V16::SetEnableTableContainsFloat);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLRParseOptionsSEL, FPDLRParseOptionsGetKeepContainerConsistencySEL, (void*)CFPD_LRParseOptions_V16::GetKeepContainerConsistency);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLRParseOptionsSEL, FPDLRParseOptionsSetKeepContainerConsistencySEL, (void*)CFPD_LRParseOptions_V16::SetKeepContainerConsistency);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLRParseOptionsSEL, FPDLRParseOptionsGetNNCfgNameSEL, (void*)CFPD_LRParseOptions_V16::GetNNCfgName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLRParseOptionsSEL, FPDLRParseOptionsSetNNCfgNameSEL, (void*)CFPD_LRParseOptions_V16::SetNNCfgName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLRParseOptionsSEL, FPDLRParseOptionsGetNNWeightsNameSEL, (void*)CFPD_LRParseOptions_V16::GetNNWeightsName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLRParseOptionsSEL, FPDLRParseOptionsSetNNWeightsNameSEL, (void*)CFPD_LRParseOptions_V16::SetNNWeightsName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLRParseOptionsSEL, FPDLRParseOptionsGetNNConfidenceLevelSEL, (void*)CFPD_LRParseOptions_V16::GetNNConfidenceLevel);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLRParseOptionsSEL, FPDLRParseOptionsSetNNConfidenceLevelSEL, (void*)CFPD_LRParseOptions_V16::SetNNConfidenceLevel);
	}
};

// fpd_lrImpl.h end

// In file fpd_mathImpl.h
class CFPD_LongImageEncoder_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLongImageEncoderSEL, FPDLongImageEncoderCreateLongImageEncoderSEL, (void*)CFPD_LongImageEncoder_V16::CreateLongImageEncoder);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLongImageEncoderSEL, FPDLongImageEncoderDeleteLongImageEncoderSEL, (void*)CFPD_LongImageEncoder_V16::DeleteLongImageEncoder);
	}
};

class CFPD_LongImage_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLongImageSEL, FPDLongImageCreateLongImageSEL, (void*)CFPD_LongImage_V16::CreateLongImage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLongImageSEL, FPDLongImageDeleteLongImageSEL, (void*)CFPD_LongImage_V16::DeleteLongImage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLongImageSEL, FPDLongImageAddPageSEL, (void*)CFPD_LongImage_V16::AddPage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLongImageSEL, FPDLongImageAddPage2SEL, (void*)CFPD_LongImage_V16::AddPage2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLongImageSEL, FPDLongImageOutputSEL, (void*)CFPD_LongImage_V16::Output);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLongImageSEL, FPDLongImageOutput2SEL, (void*)CFPD_LongImage_V16::Output2);
	}
};

// fpd_mathImpl.h end

// In file fpd_objsImpl.h
// fpd_objsImpl.h end

// In file fpd_pageImpl.h
class CFPD_GraphicObjects_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDGraphicObjectsSEL, FPDGraphicObjectsCastToFPDPageSEL, (void*)CFPD_GraphicObjects_V16::CastToFPDPage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDGraphicObjectsSEL, FPDGraphicObjectsCastToFPDFormSEL, (void*)CFPD_GraphicObjects_V16::CastToFPDForm);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDGraphicObjectsSEL, FPDGraphicObjectsGetTypeSEL, (void*)CFPD_GraphicObjects_V16::GetType);
	}
};

class CFPD_PDFObjectExtracter_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPDFObjectExtracterSEL, FPDPDFObjectExtracterCreateSEL, (void*)CFPD_PDFObjectExtracter_V16::Create);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPDFObjectExtracterSEL, FPDPDFObjectExtracterDestroySEL, (void*)CFPD_PDFObjectExtracter_V16::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPDFObjectExtracterSEL, FPDPDFObjectExtracterCreateNewPageFromOrigalSEL, (void*)CFPD_PDFObjectExtracter_V16::CreateNewPageFromOrigal);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPDFObjectExtracterSEL, FPDPDFObjectExtracterAddGraphicsObjectSEL, (void*)CFPD_PDFObjectExtracter_V16::AddGraphicsObject);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPDFObjectExtracterSEL, FPDPDFObjectExtracterCloseNewPageSEL, (void*)CFPD_PDFObjectExtracter_V16::CloseNewPage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPDFObjectExtracterSEL, FPDPDFObjectExtracterUpdateStructTreeSEL, (void*)CFPD_PDFObjectExtracter_V16::UpdateStructTree);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPDFObjectExtracterSEL, FPDPDFObjectExtracterGetExtracterPDFDocSEL, (void*)CFPD_PDFObjectExtracter_V16::GetExtracterPDFDoc);
	}
};

// fpd_pageImpl.h end

// In file fpd_pageobjImpl.h
class CFPD_ContentMarkItemRef_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDContentMarkItemRefSEL, FPDContentMarkItemRefGetContentMarkItemObjectSEL, (void*)CFPD_ContentMarkItemRef_V16::GetContentMarkItemObject);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDContentMarkItemRefSEL, FPDContentMarkItemRefNewSEL, (void*)CFPD_ContentMarkItemRef_V16::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDContentMarkItemRefSEL, FPDContentMarkItemRefGetModifySEL, (void*)CFPD_ContentMarkItemRef_V16::GetModify);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDContentMarkItemRefSEL, FPDContentMarkItemRefCreateSEL, (void*)CFPD_ContentMarkItemRef_V16::Create);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDContentMarkItemRefSEL, FPDContentMarkItemRefDeleteSEL, (void*)CFPD_ContentMarkItemRef_V16::Delete);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDContentMarkItemRefSEL, FPDContentMarkItemRefCopySEL, (void*)CFPD_ContentMarkItemRef_V16::Copy);
	}
};

// fpd_pageobjImpl.h end

// In file fpd_parserImpl.h
class CFPD_NumberTree_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDNumberTreeSEL, FPDNumberTreeCreteNumberTreeSEL, (void*)CFPD_NumberTree_V16::CreteNumberTree);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDNumberTreeSEL, FPDNumberTreeDeleteNumberTreeSEL, (void*)CFPD_NumberTree_V16::DeleteNumberTree);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDNumberTreeSEL, FPDNumberTreeLookupValueSEL, (void*)CFPD_NumberTree_V16::LookupValue);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDNumberTreeSEL, FPDNumberTreeSetValueSEL, (void*)CFPD_NumberTree_V16::SetValue);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDNumberTreeSEL, FPDNumberTreeRemoveSEL, (void*)CFPD_NumberTree_V16::Remove);
	}
};

class CFPD_SizeAnalysis_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSizeAnalysisSEL, FPDSizeAnalysisGetObjectSizeSEL, (void*)CFPD_SizeAnalysis_V16::GetObjectSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSizeAnalysisSEL, FPDSizeAnalysisGetContentSizeSEL, (void*)CFPD_SizeAnalysis_V16::GetContentSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSizeAnalysisSEL, FPDSizeAnalysisGetXRefSizeSEL, (void*)CFPD_SizeAnalysis_V16::GetXRefSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSizeAnalysisSEL, FPDSizeAnalysisClearSEL, (void*)CFPD_SizeAnalysis_V16::Clear);
	}
};

// fpd_parserImpl.h end

// In file fpd_psiImpl.h
// fpd_psiImpl.h end

// In file fpd_pwlImpl.h
// fpd_pwlImpl.h end

// In file fpd_renderImpl.h
class CFPD_Graphics_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDGraphicsSEL, FPDGraphicsCreateGraphicsSEL, (void*)CFPD_Graphics_V16::CreateGraphics);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDGraphicsSEL, FPDGraphicsDeleteGraphicsSEL, (void*)CFPD_Graphics_V16::DeleteGraphics);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDGraphicsSEL, FPDGraphicsCreateSEL, (void*)CFPD_Graphics_V16::Create);
	}
};

// fpd_renderImpl.h end

// In file fpd_resourceImpl.h
// fpd_resourceImpl.h end

// In file fpd_serialImpl.h
// fpd_serialImpl.h end

// In file fpd_textImpl.h
// fpd_textImpl.h end

// In file fpd_validateImpl.h
class CFPD_ProgressHandler_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDProgressHandlerSEL, FPDProgressHandlerNewValidatorHandlerSEL, (void*)CFPD_ProgressHandler_V16::NewValidatorHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDProgressHandlerSEL, FPDProgressHandlerDestroyValidatorHandlerSEL, (void*)CFPD_ProgressHandler_V16::DestroyValidatorHandler);
	}
};

class CFPD_RuleSet_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRuleSetSEL, FPDRuleSetCreateAccessiblityRuleSetSEL, (void*)CFPD_RuleSet_V16::CreateAccessiblityRuleSet);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRuleSetSEL, FPDRuleSetDestroyAccessiblityRuleSetSEL, (void*)CFPD_RuleSet_V16::DestroyAccessiblityRuleSet);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRuleSetSEL, FPDRuleSetEnableAllRulesSEL, (void*)CFPD_RuleSet_V16::EnableAllRules);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRuleSetSEL, FPDRuleSetEnableRuleSEL, (void*)CFPD_RuleSet_V16::EnableRule);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRuleSetSEL, FPDRuleSetCreateSEL, (void*)CFPD_RuleSet_V16::Create);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRuleSetSEL, FPDRuleSetCreatePDFUARuleSetSEL, (void*)CFPD_RuleSet_V16::CreatePDFUARuleSet);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDRuleSetSEL, FPDRuleSetCreatePDFUAFixRuleSetSEL, (void*)CFPD_RuleSet_V16::CreatePDFUAFixRuleSet);
	}
};

class CFPD_ValidatorFeedbackItem_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDValidatorFeedbackItemSEL, FPDValidatorFeedbackItemCreateValidatorFeedbackItemSEL, (void*)CFPD_ValidatorFeedbackItem_V16::CreateValidatorFeedbackItem);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDValidatorFeedbackItemSEL, FPDValidatorFeedbackItemDestroyValidatorFeedbackItemSEL, (void*)CFPD_ValidatorFeedbackItem_V16::DestroyValidatorFeedbackItem);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDValidatorFeedbackItemSEL, FPDValidatorFeedbackItemGetFeedbackItemClassSEL, (void*)CFPD_ValidatorFeedbackItem_V16::GetFeedbackItemClass);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDValidatorFeedbackItemSEL, FPDValidatorFeedbackItemSetFeedbackItemClassSEL, (void*)CFPD_ValidatorFeedbackItem_V16::SetFeedbackItemClass);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDValidatorFeedbackItemSEL, FPDValidatorFeedbackItemGetFeedbackItemTypeSEL, (void*)CFPD_ValidatorFeedbackItem_V16::GetFeedbackItemType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDValidatorFeedbackItemSEL, FPDValidatorFeedbackItemSetFeedbackItemTypeSEL, (void*)CFPD_ValidatorFeedbackItem_V16::SetFeedbackItemType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDValidatorFeedbackItemSEL, FPDValidatorFeedbackItemGetRuleIDSEL, (void*)CFPD_ValidatorFeedbackItem_V16::GetRuleID);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDValidatorFeedbackItemSEL, FPDValidatorFeedbackItemSetRuleIDSEL, (void*)CFPD_ValidatorFeedbackItem_V16::SetRuleID);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDValidatorFeedbackItemSEL, FPDValidatorFeedbackItemGetDocumentSEL, (void*)CFPD_ValidatorFeedbackItem_V16::GetDocument);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDValidatorFeedbackItemSEL, FPDValidatorFeedbackItemSetDocumentSEL, (void*)CFPD_ValidatorFeedbackItem_V16::SetDocument);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDValidatorFeedbackItemSEL, FPDValidatorFeedbackItemCastToFontSEL, (void*)CFPD_ValidatorFeedbackItem_V16::CastToFont);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDValidatorFeedbackItemSEL, FPDValidatorFeedbackItemCastToAnnotSEL, (void*)CFPD_ValidatorFeedbackItem_V16::CastToAnnot);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDValidatorFeedbackItemSEL, FPDValidatorFeedbackItemCastToPageSEL, (void*)CFPD_ValidatorFeedbackItem_V16::CastToPage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDValidatorFeedbackItemSEL, FPDValidatorFeedbackItemCastToPageContentSEL, (void*)CFPD_ValidatorFeedbackItem_V16::CastToPageContent);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDValidatorFeedbackItemSEL, FPDValidatorFeedbackItemCastToStructElemSEL, (void*)CFPD_ValidatorFeedbackItem_V16::CastToStructElem);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDValidatorFeedbackItemSEL, FPDValidatorFeedbackItemCastToFieldSEL, (void*)CFPD_ValidatorFeedbackItem_V16::CastToField);
	}
};

class CFPD_ValidatorFeedbackItemFont_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDValidatorFeedbackItemFontSEL, FPDValidatorFeedbackItemFontCreateValidatorFeedbackItemFontSEL, (void*)CFPD_ValidatorFeedbackItemFont_V16::CreateValidatorFeedbackItemFont);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDValidatorFeedbackItemFontSEL, FPDValidatorFeedbackItemFontDestroyValidatorFeedbackItemFontSEL, (void*)CFPD_ValidatorFeedbackItemFont_V16::DestroyValidatorFeedbackItemFont);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDValidatorFeedbackItemFontSEL, FPDValidatorFeedbackItemFontGetFontSEL, (void*)CFPD_ValidatorFeedbackItemFont_V16::GetFont);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDValidatorFeedbackItemFontSEL, FPDValidatorFeedbackItemFontSetFontSEL, (void*)CFPD_ValidatorFeedbackItemFont_V16::SetFont);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDValidatorFeedbackItemFontSEL, FPDValidatorFeedbackItemFontCastToValidatorFeedbackItemSEL, (void*)CFPD_ValidatorFeedbackItemFont_V16::CastToValidatorFeedbackItem);
	}
};

class CFPD_ValidatorFeedbackItemAnnot_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDValidatorFeedbackItemAnnotSEL, FPDValidatorFeedbackItemAnnotCreateValidatorFeedbackItemAnnotSEL, (void*)CFPD_ValidatorFeedbackItemAnnot_V16::CreateValidatorFeedbackItemAnnot);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDValidatorFeedbackItemAnnotSEL, FPDValidatorFeedbackItemAnnotDestroyValidatorFeedbackItemAnnotSEL, (void*)CFPD_ValidatorFeedbackItemAnnot_V16::DestroyValidatorFeedbackItemAnnot);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDValidatorFeedbackItemAnnotSEL, FPDValidatorFeedbackItemAnnotGetAnnotDictSEL, (void*)CFPD_ValidatorFeedbackItemAnnot_V16::GetAnnotDict);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDValidatorFeedbackItemAnnotSEL, FPDValidatorFeedbackItemAnnotSetAnnotDictSEL, (void*)CFPD_ValidatorFeedbackItemAnnot_V16::SetAnnotDict);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDValidatorFeedbackItemAnnotSEL, FPDValidatorFeedbackItemAnnotCastToValidatorFeedbackItemSEL, (void*)CFPD_ValidatorFeedbackItemAnnot_V16::CastToValidatorFeedbackItem);
	}
};

class CFPD_ValidatorFeedbackItemPage_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDValidatorFeedbackItemPageSEL, FPDValidatorFeedbackItemPageCreateValidatorFeedbackItemPageSEL, (void*)CFPD_ValidatorFeedbackItemPage_V16::CreateValidatorFeedbackItemPage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDValidatorFeedbackItemPageSEL, FPDValidatorFeedbackItemPageDestroyValidatorFeedbackItemPageSEL, (void*)CFPD_ValidatorFeedbackItemPage_V16::DestroyValidatorFeedbackItemPage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDValidatorFeedbackItemPageSEL, FPDValidatorFeedbackItemPageGetPageDictSEL, (void*)CFPD_ValidatorFeedbackItemPage_V16::GetPageDict);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDValidatorFeedbackItemPageSEL, FPDValidatorFeedbackItemPageSetPageDictSEL, (void*)CFPD_ValidatorFeedbackItemPage_V16::SetPageDict);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDValidatorFeedbackItemPageSEL, FPDValidatorFeedbackItemPageGetPageIndexSEL, (void*)CFPD_ValidatorFeedbackItemPage_V16::GetPageIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDValidatorFeedbackItemPageSEL, FPDValidatorFeedbackItemPageSetPageIndexSEL, (void*)CFPD_ValidatorFeedbackItemPage_V16::SetPageIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDValidatorFeedbackItemPageSEL, FPDValidatorFeedbackItemPageCastToValidatorFeedbackItemSEL, (void*)CFPD_ValidatorFeedbackItemPage_V16::CastToValidatorFeedbackItem);
	}
};

class CFPD_ValidatorFeedbackItemPageContent_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDValidatorFeedbackItemPageContentSEL, FPDValidatorFeedbackItemPageContentCreateValidatorFeedbackItemPageContentSEL, (void*)CFPD_ValidatorFeedbackItemPageContent_V16::CreateValidatorFeedbackItemPageContent);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDValidatorFeedbackItemPageContentSEL, FPDValidatorFeedbackItemPageContentDestroyValidatorFeedbackItemPageSEL, (void*)CFPD_ValidatorFeedbackItemPageContent_V16::DestroyValidatorFeedbackItemPage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDValidatorFeedbackItemPageContentSEL, FPDValidatorFeedbackItemPageContentGetPageDictSEL, (void*)CFPD_ValidatorFeedbackItemPageContent_V16::GetPageDict);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDValidatorFeedbackItemPageContentSEL, FPDValidatorFeedbackItemPageContentSetPageDictSEL, (void*)CFPD_ValidatorFeedbackItemPageContent_V16::SetPageDict);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDValidatorFeedbackItemPageContentSEL, FPDValidatorFeedbackItemPageContentGetPageIndexSEL, (void*)CFPD_ValidatorFeedbackItemPageContent_V16::GetPageIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDValidatorFeedbackItemPageContentSEL, FPDValidatorFeedbackItemPageContentSetPageIndexSEL, (void*)CFPD_ValidatorFeedbackItemPageContent_V16::SetPageIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDValidatorFeedbackItemPageContentSEL, FPDValidatorFeedbackItemPageContentGetContentIndexsSEL, (void*)CFPD_ValidatorFeedbackItemPageContent_V16::GetContentIndexs);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDValidatorFeedbackItemPageContentSEL, FPDValidatorFeedbackItemPageContentSetContentIndexsSEL, (void*)CFPD_ValidatorFeedbackItemPageContent_V16::SetContentIndexs);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDValidatorFeedbackItemPageContentSEL, FPDValidatorFeedbackItemPageContentGetPageContentRectSEL, (void*)CFPD_ValidatorFeedbackItemPageContent_V16::GetPageContentRect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDValidatorFeedbackItemPageContentSEL, FPDValidatorFeedbackItemPageContentSetPageContentRectSEL, (void*)CFPD_ValidatorFeedbackItemPageContent_V16::SetPageContentRect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDValidatorFeedbackItemPageContentSEL, FPDValidatorFeedbackItemPageContentCastToValidatorFeedbackItemSEL, (void*)CFPD_ValidatorFeedbackItemPageContent_V16::CastToValidatorFeedbackItem);
	}
};

class CFPD_ValidatorFeedbackItemStructElem_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDValidatorFeedbackItemStructElemSEL, FPDValidatorFeedbackItemStructElemCreateValidatorFeedbackItemStructElemSEL, (void*)CFPD_ValidatorFeedbackItemStructElem_V16::CreateValidatorFeedbackItemStructElem);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDValidatorFeedbackItemStructElemSEL, FPDValidatorFeedbackItemStructElemDestroyValidatorFeedbackItemStructElemSEL, (void*)CFPD_ValidatorFeedbackItemStructElem_V16::DestroyValidatorFeedbackItemStructElem);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDValidatorFeedbackItemStructElemSEL, FPDValidatorFeedbackItemStructElemGetStructElementSEL, (void*)CFPD_ValidatorFeedbackItemStructElem_V16::GetStructElement);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDValidatorFeedbackItemStructElemSEL, FPDValidatorFeedbackItemStructElemSetStructElementSEL, (void*)CFPD_ValidatorFeedbackItemStructElem_V16::SetStructElement);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDValidatorFeedbackItemStructElemSEL, FPDValidatorFeedbackItemStructElemCastToValidatorFeedbackItemSEL, (void*)CFPD_ValidatorFeedbackItemStructElem_V16::CastToValidatorFeedbackItem);
	}
};

class CFPD_ValidatorFeedbackItemField_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDValidatorFeedbackItemFieldSEL, FPDValidatorFeedbackItemFieldCreateValidatorFeedbackItemFieldSEL, (void*)CFPD_ValidatorFeedbackItemField_V16::CreateValidatorFeedbackItemField);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDValidatorFeedbackItemFieldSEL, FPDValidatorFeedbackItemFieldDestroyValidatorFeedbackItemFieldSEL, (void*)CFPD_ValidatorFeedbackItemField_V16::DestroyValidatorFeedbackItemField);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDValidatorFeedbackItemFieldSEL, FPDValidatorFeedbackItemFieldGetFieldDictSEL, (void*)CFPD_ValidatorFeedbackItemField_V16::GetFieldDict);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDValidatorFeedbackItemFieldSEL, FPDValidatorFeedbackItemFieldSetFieldDictSEL, (void*)CFPD_ValidatorFeedbackItemField_V16::SetFieldDict);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDValidatorFeedbackItemFieldSEL, FPDValidatorFeedbackItemFieldCastToValidatorFeedbackItemSEL, (void*)CFPD_ValidatorFeedbackItemField_V16::CastToValidatorFeedbackItem);
	}
};

class CFPD_Validator_V16_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDValidatorSEL, FPDValidatorCreateSEL, (void*)CFPD_Validator_V16::Create);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDValidatorSEL, FPDValidatorDestroyValidatorSEL, (void*)CFPD_Validator_V16::DestroyValidator);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDValidatorSEL, FPDValidatorEnableAllPagesSEL, (void*)CFPD_Validator_V16::EnableAllPages);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDValidatorSEL, FPDValidatorEnablePageSEL, (void*)CFPD_Validator_V16::EnablePage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDValidatorSEL, FPDValidatorStartSEL, (void*)CFPD_Validator_V16::Start);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDValidatorSEL, FPDValidatorContinueSEL, (void*)CFPD_Validator_V16::Continue);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDValidatorSEL, FPDValidatorNextFeedbackItemSEL, (void*)CFPD_Validator_V16::NextFeedbackItem);
	}
};

// fpd_validateImpl.h end

//----------_V17----------
// In file fs_basicImpl.h
class CFS_Rect_V17_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSRectSEL, FSRectWidthSEL, (void*)CFS_Rect_V17::Width);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSRectSEL, FSRectHeightSEL, (void*)CFS_Rect_V17::Height);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSRectSEL, FSRectIsEmptySEL, (void*)CFS_Rect_V17::IsEmpty);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSRectSEL, FSRectNormalizeSEL, (void*)CFS_Rect_V17::Normalize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSRectSEL, FSRectIntersectSEL, (void*)CFS_Rect_V17::Intersect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSRectSEL, FSRectIntersect2SEL, (void*)CFS_Rect_V17::Intersect2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSRectSEL, FSRectUnionSEL, (void*)CFS_Rect_V17::Union);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSRectSEL, FSRectIsEqualRectSEL, (void*)CFS_Rect_V17::IsEqualRect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSRectSEL, FSRectIsNotEqualRectSEL, (void*)CFS_Rect_V17::IsNotEqualRect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSRectSEL, FSRectOffsetSEL, (void*)CFS_Rect_V17::Offset);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSRectSEL, FSRectContainsSEL, (void*)CFS_Rect_V17::Contains);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSRectSEL, FSRectContains2SEL, (void*)CFS_Rect_V17::Contains2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSRectSEL, FSRectValidSEL, (void*)CFS_Rect_V17::Valid);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSRectSEL, FSRectInflateSEL, (void*)CFS_Rect_V17::Inflate);
	}
};

class CFS_MemoryMgr_V17_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSMemoryMgrSEL, FSMemoryMgrAllocSEL, (void*)CFS_MemoryMgr_V17::Alloc);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSMemoryMgrSEL, FSMemoryMgrFreeSEL, (void*)CFS_MemoryMgr_V17::Free);
	}
};

// fs_basicImpl.h end

// In file fs_stringImpl.h
class CFS_UnicodeMgr_V17_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSUnicodeMgrSEL, FSUnicodeMgrGetUnicodeGeneralCategorySEL, (void*)CFS_UnicodeMgr_V17::GetUnicodeGeneralCategory);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSUnicodeMgrSEL, FSUnicodeMgrEastAsianWidthSEL, (void*)CFS_UnicodeMgr_V17::EastAsianWidth);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSUnicodeMgrSEL, FSUnicodeMgrNFKDSEL, (void*)CFS_UnicodeMgr_V17::NFKD);
	}
};

// fs_stringImpl.h end

// In file fdrm_descImpl.h
// fdrm_descImpl.h end

// In file fdrm_managerImpl.h
// fdrm_managerImpl.h end

// In file fdrm_pdfImpl.h
// fdrm_pdfImpl.h end

// In file fdrm_pkiImpl.h
// fdrm_pkiImpl.h end

// In file fhtml_impl.h
// fhtml_impl.h end

// In file fr_appImpl.h
class CFR_PrintMgr_V17_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPrintMgrSEL, FRPrintMgrCreateSEL, (void*)CFR_PrintMgr_V17::Create);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPrintMgrSEL, FRPrintMgrDeleteSEL, (void*)CFR_PrintMgr_V17::Delete);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPrintMgrSEL, FRPrintMgrSetPrintRangeSEL, (void*)CFR_PrintMgr_V17::SetPrintRange);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPrintMgrSEL, FRPrintMgrGetPrintRangeSEL, (void*)CFR_PrintMgr_V17::GetPrintRange);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPrintMgrSEL, FRPrintMgrSetPrintSubsetSEL, (void*)CFR_PrintMgr_V17::SetPrintSubset);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPrintMgrSEL, FRPrintMgrGetPrintSubsetSEL, (void*)CFR_PrintMgr_V17::GetPrintSubset);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPrintMgrSEL, FRPrintMgrSetPrintRotateSEL, (void*)CFR_PrintMgr_V17::SetPrintRotate);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPrintMgrSEL, FRPrintMgrGetPrintRotateSEL, (void*)CFR_PrintMgr_V17::GetPrintRotate);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPrintMgrSEL, FRPrintMgrSetPrintScaleSEL, (void*)CFR_PrintMgr_V17::SetPrintScale);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPrintMgrSEL, FRPrintMgrGetPrintScaleSEL, (void*)CFR_PrintMgr_V17::GetPrintScale);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPrintMgrSEL, FRPrintMgrSetPrintArrangeSEL, (void*)CFR_PrintMgr_V17::SetPrintArrange);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPrintMgrSEL, FRPrintMgrGetPrintArrangeSEL, (void*)CFR_PrintMgr_V17::GetPrintArrange);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPrintMgrSEL, FRPrintMgrSetPrintCopiesSEL, (void*)CFR_PrintMgr_V17::SetPrintCopies);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPrintMgrSEL, FRPrintMgrGetPrintCopiesSEL, (void*)CFR_PrintMgr_V17::GetPrintCopies);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPrintMgrSEL, FRPrintMgrSetPrintAutoCenterSEL, (void*)CFR_PrintMgr_V17::SetPrintAutoCenter);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPrintMgrSEL, FRPrintMgrGetPrintAutoCenterSEL, (void*)CFR_PrintMgr_V17::GetPrintAutoCenter);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPrintMgrSEL, FRPrintMgrSetPrintAutoRotateSEL, (void*)CFR_PrintMgr_V17::SetPrintAutoRotate);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPrintMgrSEL, FRPrintMgrGetPrintAutoRotateSEL, (void*)CFR_PrintMgr_V17::GetPrintAutoRotate);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPrintMgrSEL, FRPrintMgrSetPrintGraySEL, (void*)CFR_PrintMgr_V17::SetPrintGray);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPrintMgrSEL, FRPrintMgrGetPrintGraySEL, (void*)CFR_PrintMgr_V17::GetPrintGray);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPrintMgrSEL, FRPrintMgrSetPrintCollateSEL, (void*)CFR_PrintMgr_V17::SetPrintCollate);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPrintMgrSEL, FRPrintMgrGetPrintCollateSEL, (void*)CFR_PrintMgr_V17::GetPrintCollate);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPrintMgrSEL, FRPrintMgrSetPrintPageOrderSEL, (void*)CFR_PrintMgr_V17::SetPrintPageOrder);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPrintMgrSEL, FRPrintMgrSetPrintPageBorderSEL, (void*)CFR_PrintMgr_V17::SetPrintPageBorder);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPrintMgrSEL, FRPrintMgrGetPrintPageBorderSEL, (void*)CFR_PrintMgr_V17::GetPrintPageBorder);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPrintMgrSEL, FRPrintMgrSetPrintPrintWhatSEL, (void*)CFR_PrintMgr_V17::SetPrintPrintWhat);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPrintMgrSEL, FRPrintMgrSetPrintOrientationSEL, (void*)CFR_PrintMgr_V17::SetPrintOrientation);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPrintMgrSEL, FRPrintMgrSetPrintPagesPerSheetSEL, (void*)CFR_PrintMgr_V17::SetPrintPagesPerSheet);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPrintMgrSEL, FRPrintMgrGetPrintPagesPerSheetSEL, (void*)CFR_PrintMgr_V17::GetPrintPagesPerSheet);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPrintMgrSEL, FRPrintMgrSetPrintPaperSizeByPageSEL, (void*)CFR_PrintMgr_V17::SetPrintPaperSizeByPage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPrintMgrSEL, FRPrintMgrSetPrintReverseSEL, (void*)CFR_PrintMgr_V17::SetPrintReverse);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPrintMgrSEL, FRPrintMgrGetPrintReverseSEL, (void*)CFR_PrintMgr_V17::GetPrintReverse);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPrintMgrSEL, FRPrintMgrSetPrintMarginsSEL, (void*)CFR_PrintMgr_V17::SetPrintMargins);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPrintMgrSEL, FRPrintMgrSetPrintAsImageSEL, (void*)CFR_PrintMgr_V17::SetPrintAsImage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPrintMgrSEL, FRPrintMgrSetSimulateOverprintingSEL, (void*)CFR_PrintMgr_V17::SetSimulateOverprinting);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPrintMgrSEL, FRPrintMgrSetPrintIgnoreAdvancedSettingSEL, (void*)CFR_PrintMgr_V17::SetPrintIgnoreAdvancedSetting);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPrintMgrSEL, FRPrintMgrSetProgressDisplaySEL, (void*)CFR_PrintMgr_V17::SetProgressDisplay);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPrintMgrSEL, FRPrintMgrSetPaperSizeSEL, (void*)CFR_PrintMgr_V17::SetPaperSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPrintMgrSEL, FRPrintMgrSetPrintPageArraySEL, (void*)CFR_PrintMgr_V17::SetPrintPageArray);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPrintMgrSEL, FRPrintMgrGetPrintPageArraySEL, (void*)CFR_PrintMgr_V17::GetPrintPageArray);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPrintMgrSEL, FRPrintMgrGetDefaultPrintSEL, (void*)CFR_PrintMgr_V17::GetDefaultPrint);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPrintMgrSEL, FRPrintMgrSetDefaultPrintSEL, (void*)CFR_PrintMgr_V17::SetDefaultPrint);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPrintMgrSEL, FRPrintMgrSetPrintOutputFileNameSEL, (void*)CFR_PrintMgr_V17::SetPrintOutputFileName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPrintMgrSEL, FRPrintMgrDoModalSEL, (void*)CFR_PrintMgr_V17::DoModal);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPrintMgrSEL, FRPrintMgrSetPrintDevModeSEL, (void*)CFR_PrintMgr_V17::SetPrintDevMode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPrintMgrSEL, FRPrintMgrSetPrintPreviewSEL, (void*)CFR_PrintMgr_V17::SetPrintPreview);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPrintMgrSEL, FRPrintMgrEnablePrintAnnotSEL, (void*)CFR_PrintMgr_V17::EnablePrintAnnot);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPrintMgrSEL, FRPrintMgrSetRangeModeSEL, (void*)CFR_PrintMgr_V17::SetRangeMode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPrintMgrSEL, FRPrintMgrGetRangeModeSEL, (void*)CFR_PrintMgr_V17::GetRangeMode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPrintMgrSEL, FRPrintMgrSetPrintBookletBindingSEL, (void*)CFR_PrintMgr_V17::SetPrintBookletBinding);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPrintMgrSEL, FRPrintMgrSetPrintBookletSubSetSEL, (void*)CFR_PrintMgr_V17::SetPrintBookletSubSet);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPrintMgrSEL, FRPrintMgrSetPrintCutMarksSEL, (void*)CFR_PrintMgr_V17::SetPrintCutMarks);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPrintMgrSEL, FRPrintMgrSetPrintLabelsSEL, (void*)CFR_PrintMgr_V17::SetPrintLabels);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPrintMgrSEL, FRPrintMgrSetPrintPageScaleTypeSEL, (void*)CFR_PrintMgr_V17::SetPrintPageScaleType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPrintMgrSEL, FRPrintMgrEnumPrinterNameSEL, (void*)CFR_PrintMgr_V17::EnumPrinterName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPrintMgrSEL, FRPrintMgrSetPrintDuplexTypeSEL, (void*)CFR_PrintMgr_V17::SetPrintDuplexType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPrintMgrSEL, FRPrintMgrSetPrintOverlapSEL, (void*)CFR_PrintMgr_V17::SetPrintOverlap);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPrintMgrSEL, FRPrintMgrSetPrintHandlingTypeSEL, (void*)CFR_PrintMgr_V17::SetPrintHandlingType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPrintMgrSEL, FRPrintMgrGetPrintHandlingTypeSEL, (void*)CFR_PrintMgr_V17::GetPrintHandlingType);
	}
};

class CFR_EncryptedDocMgr_V17_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FREncryptedDocMgrSEL, FREncryptedDocMgrToDecFileSEL, (void*)CFR_EncryptedDocMgr_V17::ToDecFile);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FREncryptedDocMgrSEL, FREncryptedDocMgrToDelDecFileSEL, (void*)CFR_EncryptedDocMgr_V17::ToDelDecFile);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FREncryptedDocMgrSEL, FREncryptedDocMgrToEncFileSEL, (void*)CFR_EncryptedDocMgr_V17::ToEncFile);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FREncryptedDocMgrSEL, FREncryptedDocMgrToDelEncFileSEL, (void*)CFR_EncryptedDocMgr_V17::ToDelEncFile);
	}
};

class CFR_PDFBitmapMgr_V17_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPDFBitmapMgrSEL, FRPDFBitmapMgrCreateSEL, (void*)CFR_PDFBitmapMgr_V17::Create);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPDFBitmapMgrSEL, FRPDFBitmapMgrGetByNameSEL, (void*)CFR_PDFBitmapMgr_V17::GetByName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPDFBitmapMgrSEL, FRPDFBitmapMgrGetBitmapSEL, (void*)CFR_PDFBitmapMgr_V17::GetBitmap);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPDFBitmapMgrSEL, FRPDFBitmapMgrGetFXBitmapSEL, (void*)CFR_PDFBitmapMgr_V17::GetFXBitmap);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPDFBitmapMgrSEL, FRPDFBitmapMgrDrawSEL, (void*)CFR_PDFBitmapMgr_V17::Draw);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPDFBitmapMgrSEL, FRPDFBitmapMgrFillRoundedRectangleSEL, (void*)CFR_PDFBitmapMgr_V17::FillRoundedRectangle);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPDFBitmapMgrSEL, FRPDFBitmapMgrDrawRoundedRectangleSEL, (void*)CFR_PDFBitmapMgr_V17::DrawRoundedRectangle);
	}
};

// fr_appImpl.h end

// In file fr_barImpl.h
class CFR_RibbonHandler_V17_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonHandlerSEL, FRRibbonHandlerCreateSEL, (void*)CFR_RibbonHandler_V17::Create);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRRibbonHandlerSEL, FRRibbonHandlerDeleteSEL, (void*)CFR_RibbonHandler_V17::Delete);
	}
};

class CFR_CustomContro_V17_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCustomControSEL, FRCustomControShowColorPaletteSEL, (void*)CFR_CustomContro_V17::ShowColorPalette);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCustomControSEL, FRCustomControShowColorPalette2SEL, (void*)CFR_CustomContro_V17::ShowColorPalette2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCustomControSEL, FRCustomControGetCustomColorsSEL, (void*)CFR_CustomContro_V17::GetCustomColors);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCustomControSEL, FRCustomControGetCustomColors2SEL, (void*)CFR_CustomContro_V17::GetCustomColors2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCustomControSEL, FRCustomControHideColorPaletteSEL, (void*)CFR_CustomContro_V17::HideColorPalette);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCustomControSEL, FRCustomControIsColorPaletteShowSEL, (void*)CFR_CustomContro_V17::IsColorPaletteShow);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCustomControSEL, FRCustomControShowColorDialogSEL, (void*)CFR_CustomContro_V17::ShowColorDialog);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRCustomControSEL, FRCustomControSetTransparentSEL, (void*)CFR_CustomContro_V17::SetTransparent);
	}
};

class CFR_FloatBarManager_V17_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRFloatBarManagerSEL, FRFloatBarManagerCreateFloatyBarSEL, (void*)CFR_FloatBarManager_V17::CreateFloatyBar);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRFloatBarManagerSEL, FRFloatBarManagerDestoryRibbonFloatySEL, (void*)CFR_FloatBarManager_V17::DestoryRibbonFloaty);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRFloatBarManagerSEL, FRFloatBarManagerSetFloatyTransparencySEL, (void*)CFR_FloatBarManager_V17::SetFloatyTransparency);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRFloatBarManagerSEL, FRFloatBarManagerGetFloatyWndSEL, (void*)CFR_FloatBarManager_V17::GetFloatyWnd);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRFloatBarManagerSEL, FRFloatBarManagerShowArrangeFloatyBarSEL, (void*)CFR_FloatBarManager_V17::ShowArrangeFloatyBar);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRFloatBarManagerSEL, FRFloatBarManagerHideArrangeFloatyBarSEL, (void*)CFR_FloatBarManager_V17::HideArrangeFloatyBar);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRFloatBarManagerSEL, FRFloatBarManagerGetButtonPosSEL, (void*)CFR_FloatBarManager_V17::GetButtonPos);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRFloatBarManagerSEL, FRFloatBarManagerSetReferenceRectsSEL, (void*)CFR_FloatBarManager_V17::SetReferenceRects);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRFloatBarManagerSEL, FRFloatBarManagerSetMarkButtonSEL, (void*)CFR_FloatBarManager_V17::SetMarkButton);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRFloatBarManagerSEL, FRFloatBarManagerSetTransparentSEL, (void*)CFR_FloatBarManager_V17::SetTransparent);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRFloatBarManagerSEL, FRFloatBarManagerIsTransparentSEL, (void*)CFR_FloatBarManager_V17::IsTransparent);
	}
};

// fr_barImpl.h end

// In file fr_docImpl.h
class CFR_Accessible_V17_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAccessibleSEL, FRAccessibleNewSEL, (void*)CFR_Accessible_V17::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAccessibleSEL, FRAccessibleDeleteSEL, (void*)CFR_Accessible_V17::Delete);
	}
};

class CFR_PageObserver_V17_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPageObserverSEL, FRPageObserverCreatePageObserverSEL, (void*)CFR_PageObserver_V17::CreatePageObserver);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPageObserverSEL, FRPageObserverDestroyPageObserverSEL, (void*)CFR_PageObserver_V17::DestroyPageObserver);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPageObserverSEL, FRPageObserverIsValidSEL, (void*)CFR_PageObserver_V17::IsValid);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRPageObserverSEL, FRPageObserverGetPageObjSEL, (void*)CFR_PageObserver_V17::GetPageObj);
	}
};

class CFR_AnnotHandler_V17_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAnnotHandlerSEL, FRAnnotHandlerGetAnnotHandlerByTypeSEL, (void*)CFR_AnnotHandler_V17::GetAnnotHandlerByType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAnnotHandlerSEL, FRAnnotHandlerGetAnnotHandlerByAnnotSEL, (void*)CFR_AnnotHandler_V17::GetAnnotHandlerByAnnot);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAnnotHandlerSEL, FRAnnotHandlerIsPermissionAllowedSEL, (void*)CFR_AnnotHandler_V17::IsPermissionAllowed);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAnnotHandlerSEL, FRAnnotHandlerGetPropertyBoxTitleSEL, (void*)CFR_AnnotHandler_V17::GetPropertyBoxTitle);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAnnotHandlerSEL, FRAnnotHandlerGetTypeSEL, (void*)CFR_AnnotHandler_V17::GetType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAnnotHandlerSEL, FRAnnotHandlerGetNameSEL, (void*)CFR_AnnotHandler_V17::GetName);
	}
};

class CFR_WidgetAnnotHandler_V17_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRWidgetAnnotHandlerSEL, FRWidgetAnnotHandlerCreateSEL, (void*)CFR_WidgetAnnotHandler_V17::Create);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRWidgetAnnotHandlerSEL, FRWidgetAnnotHandlerDeleteSEL, (void*)CFR_WidgetAnnotHandler_V17::Delete);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRWidgetAnnotHandlerSEL, FRWidgetAnnotHandlerOnGetCustomHightColorSEL, (void*)CFR_WidgetAnnotHandler_V17::OnGetCustomHightColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRWidgetAnnotHandlerSEL, FRWidgetAnnotHandlerOnIsShowQuickAccProperySEL, (void*)CFR_WidgetAnnotHandler_V17::OnIsShowQuickAccPropery);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRWidgetAnnotHandlerSEL, FRWidgetAnnotHandlerOnGetSignatureAuditTrailSEL, (void*)CFR_WidgetAnnotHandler_V17::OnGetSignatureAuditTrail);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRWidgetAnnotHandlerSEL, FRWidgetAnnotHandlerOnGetSignatureHashInfoSEL, (void*)CFR_WidgetAnnotHandler_V17::OnGetSignatureHashInfo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRWidgetAnnotHandlerSEL, FRWidgetAnnotHandlerOnIsShowSignaturePanelMenuSEL, (void*)CFR_WidgetAnnotHandler_V17::OnIsShowSignaturePanelMenu);
	}
};

class CFR_AnnotOperateHandler_V17_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAnnotOperateHandlerSEL, FRAnnotOperateHandlerCreateSEL, (void*)CFR_AnnotOperateHandler_V17::Create);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAnnotOperateHandlerSEL, FRAnnotOperateHandlerDeleteSEL, (void*)CFR_AnnotOperateHandler_V17::Delete);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAnnotOperateHandlerSEL, FRAnnotOperateHandlerOnMouseMsgSEL, (void*)CFR_AnnotOperateHandler_V17::OnMouseMsg);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAnnotOperateHandlerSEL, FRAnnotOperateHandlerOnCanMoveSEL, (void*)CFR_AnnotOperateHandler_V17::OnCanMove);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAnnotOperateHandlerSEL, FRAnnotOperateHandlerOnCanAnswerSEL, (void*)CFR_AnnotOperateHandler_V17::OnCanAnswer);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAnnotOperateHandlerSEL, FRAnnotOperateHandlerCanCopySEL, (void*)CFR_AnnotOperateHandler_V17::CanCopy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRAnnotOperateHandlerSEL, FRAnnotOperateHandlerOnLockSEL, (void*)CFR_AnnotOperateHandler_V17::OnLock);
	}
};

class CFR_BaseAnnot_V17_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRBaseAnnotSEL, FRBaseAnnotSetAnnotMsgHookSEL, (void*)CFR_BaseAnnot_V17::SetAnnotMsgHook);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRBaseAnnotSEL, FRBaseAnnotGetAnnotMsgHookHandlerSEL, (void*)CFR_BaseAnnot_V17::GetAnnotMsgHookHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRBaseAnnotSEL, FRBaseAnnotRemoveAnnotMsgHookSEL, (void*)CFR_BaseAnnot_V17::RemoveAnnotMsgHook);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRBaseAnnotSEL, FRBaseAnnotGetAnnotMsgHookCountSEL, (void*)CFR_BaseAnnot_V17::GetAnnotMsgHookCount);
	}
};

class CFR_SaveAsNotify_V17_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRSaveAsNotifySEL, FRSaveAsNotifyNewSEL, (void*)CFR_SaveAsNotify_V17::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRSaveAsNotifySEL, FRSaveAsNotifyDeleteSEL, (void*)CFR_SaveAsNotify_V17::Delete);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRSaveAsNotifySEL, FRSaveAsNotifyIsSaveAsSaveToSEL, (void*)CFR_SaveAsNotify_V17::IsSaveAsSaveTo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRSaveAsNotifySEL, FRSaveAsNotifyGetSaveToDefaultNameSEL, (void*)CFR_SaveAsNotify_V17::GetSaveToDefaultName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRSaveAsNotifySEL, FRSaveAsNotifyIsNeedShowSaveDlgSEL, (void*)CFR_SaveAsNotify_V17::IsNeedShowSaveDlg);
	}
};

// fr_docImpl.h end

// In file fr_fxnetappImpl.h
// fr_fxnetappImpl.h end

// In file fr_menuImpl.h
// fr_menuImpl.h end

// In file fr_sysImpl.h
// fr_sysImpl.h end

// In file fr_viewImpl.h
// fr_viewImpl.h end

// In file middle_imagecompressImpl.h
// middle_imagecompressImpl.h end

// In file middle_optimizeImpl.h
// middle_optimizeImpl.h end

// In file middle_pdfImpl.h
class CFPD_ITipTouchup_V17_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITipTouchupSEL, FPDITipTouchupNewSEL, (void*)CFPD_ITipTouchup_V17::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITipTouchupSEL, FPDITipTouchupDestroySEL, (void*)CFPD_ITipTouchup_V17::Destroy);
	}
};

// middle_pdfImpl.h end

// In file middle_portfolioImpl.h
// middle_portfolioImpl.h end

// In file middle_preflightImpl.h
// middle_preflightImpl.h end

// In file fofd_basicImpl.h
// fofd_basicImpl.h end

// In file fofd_docImpl.h
// fofd_docImpl.h end

// In file fofd_pageImpl.h
// fofd_pageImpl.h end

// In file fofd_renderImpl.h
// fofd_renderImpl.h end

// In file fofd_sigImpl.h
// fofd_sigImpl.h end

// In file fpd_3DImpl.h
class CFPD_3DMatrix4x4_V17_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3DMatrix4x4SEL, FPD3DMatrix4x4NewSEL, (void*)CFPD_3DMatrix4x4_V17::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3DMatrix4x4SEL, FPD3DMatrix4x4DeleteSEL, (void*)CFPD_3DMatrix4x4_V17::Delete);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3DMatrix4x4SEL, FPD3DMatrix4x4GetCoeffsSEL, (void*)CFPD_3DMatrix4x4_V17::GetCoeffs);
	}
};

class CFPD_3dCustomToolButtonData_V17_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3dCustomToolButtonDataSEL, FPD3dCustomToolButtonDataNewSEL, (void*)CFPD_3dCustomToolButtonData_V17::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3dCustomToolButtonDataSEL, FPD3dCustomToolButtonDataDestorySEL, (void*)CFPD_3dCustomToolButtonData_V17::Destory);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3dCustomToolButtonDataSEL, FPD3dCustomToolButtonDataSetNameSEL, (void*)CFPD_3dCustomToolButtonData_V17::SetName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3dCustomToolButtonDataSEL, FPD3dCustomToolButtonDataGetNameSEL, (void*)CFPD_3dCustomToolButtonData_V17::GetName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3dCustomToolButtonDataSEL, FPD3dCustomToolButtonDataSetLabelSEL, (void*)CFPD_3dCustomToolButtonData_V17::SetLabel);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3dCustomToolButtonDataSEL, FPD3dCustomToolButtonDataGetLabelSEL, (void*)CFPD_3dCustomToolButtonData_V17::GetLabel);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3dCustomToolButtonDataSEL, FPD3dCustomToolButtonDataSetTypeSEL, (void*)CFPD_3dCustomToolButtonData_V17::SetType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3dCustomToolButtonDataSEL, FPD3dCustomToolButtonDataGetTypeSEL, (void*)CFPD_3dCustomToolButtonData_V17::GetType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3dCustomToolButtonDataSEL, FPD3dCustomToolButtonDataSetRemovedStateSEL, (void*)CFPD_3dCustomToolButtonData_V17::SetRemovedState);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3dCustomToolButtonDataSEL, FPD3dCustomToolButtonDataGetRemovedStateSEL, (void*)CFPD_3dCustomToolButtonData_V17::GetRemovedState);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3dCustomToolButtonDataSEL, FPD3dCustomToolButtonDataSetEnabledStateSEL, (void*)CFPD_3dCustomToolButtonData_V17::SetEnabledState);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPD3dCustomToolButtonDataSEL, FPD3dCustomToolButtonDataGetEnabledStateSEL, (void*)CFPD_3dCustomToolButtonData_V17::GetEnabledState);
	}
};

// fpd_3DImpl.h end

// In file fpd_barcodeImpl.h
class CFPD_CBCCodeBase_V17_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCBCCodeBaseSEL, FPDCBCCodeBaseGetTypeSEL, (void*)CFPD_CBCCodeBase_V17::GetType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCBCCodeBaseSEL, FPDCBCCodeBaseSetWidthSEL, (void*)CFPD_CBCCodeBase_V17::SetWidth);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCBCCodeBaseSEL, FPDCBCCodeBaseEncodeSEL, (void*)CFPD_CBCCodeBase_V17::Encode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCBCCodeBaseSEL, FPDCBCCodeBaseRenderDeviceSEL, (void*)CFPD_CBCCodeBase_V17::RenderDevice);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCBCCodeBaseSEL, FPDCBCCodeBaseRenderBitmapSEL, (void*)CFPD_CBCCodeBase_V17::RenderBitmap);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCBCCodeBaseSEL, FPDCBCCodeBaseDecodeSEL, (void*)CFPD_CBCCodeBase_V17::Decode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCBCCodeBaseSEL, FPDCBCCodeBaseDecode2SEL, (void*)CFPD_CBCCodeBase_V17::Decode2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCBCCodeBaseSEL, FPDCBCCodeBaseSetCharEncodingSEL, (void*)CFPD_CBCCodeBase_V17::SetCharEncoding);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCBCCodeBaseSEL, FPDCBCCodeBaseSetModuleHeightSEL, (void*)CFPD_CBCCodeBase_V17::SetModuleHeight);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCBCCodeBaseSEL, FPDCBCCodeBaseSetModuleWidthSEL, (void*)CFPD_CBCCodeBase_V17::SetModuleWidth);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCBCCodeBaseSEL, FPDCBCCodeBaseSetHeightSEL, (void*)CFPD_CBCCodeBase_V17::SetHeight);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCBCCodeBaseSEL, FPDCBCCodeBaseSetBackgroundColorSEL, (void*)CFPD_CBCCodeBase_V17::SetBackgroundColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCBCCodeBaseSEL, FPDCBCCodeBaseSetBarcodeColorSEL, (void*)CFPD_CBCCodeBase_V17::SetBarcodeColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCBCCodeBaseSEL, FPDCBCCodeBaseCreateSEL, (void*)CFPD_CBCCodeBase_V17::Create);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCBCCodeBaseSEL, FPDCBCCodeBaseDeleteSEL, (void*)CFPD_CBCCodeBase_V17::Delete);
	}
};

class CFPD_CBCDataMatrix_V17_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
	}
};

class CFPD_CBCPDF417I_V17_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCBCPDF417ISEL, FPDCBCPDF417ISetIsXFABarcodeSEL, (void*)CFPD_CBCPDF417I_V17::SetIsXFABarcode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCBCPDF417ISEL, FPDCBCPDF417ISetErrorCorrectionLevelSEL, (void*)CFPD_CBCPDF417I_V17::SetErrorCorrectionLevel);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCBCPDF417ISEL, FPDCBCPDF417ISetTruncatedSEL, (void*)CFPD_CBCPDF417I_V17::SetTruncated);
	}
};

class CFPD_CBCQRCode_V17_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCBCQRCodeSEL, FPDCBCQRCodeSetVersionSEL, (void*)CFPD_CBCQRCode_V17::SetVersion);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCBCQRCodeSEL, FPDCBCQRCodeSetErrorCorrectionLevelSEL, (void*)CFPD_CBCQRCode_V17::SetErrorCorrectionLevel);
	}
};

// fpd_barcodeImpl.h end

// In file fpd_convertImpl.h
// fpd_convertImpl.h end

// In file fpd_docImpl.h
class CFPD_DateTime_V17_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDateTimeSEL, FPDDateTimeCreateSEL, (void*)CFPD_DateTime_V17::Create);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDateTimeSEL, FPDDateTimeCreate2SEL, (void*)CFPD_DateTime_V17::Create2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDateTimeSEL, FPDDateTimeCreate3SEL, (void*)CFPD_DateTime_V17::Create3);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDateTimeSEL, FPDDateTimeDestroySEL, (void*)CFPD_DateTime_V17::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDateTimeSEL, FPDDateTimeParserPDFDateTimeStringSEL, (void*)CFPD_DateTime_V17::ParserPDFDateTimeString);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDateTimeSEL, FPDDateTimeParserPDFXMPDateTimeStringSEL, (void*)CFPD_DateTime_V17::ParserPDFXMPDateTimeString);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDateTimeSEL, FPDDateTimeToPDFDateTimeStringSEL, (void*)CFPD_DateTime_V17::ToPDFDateTimeString);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDateTimeSEL, FPDDateTimeToXMPDateTimeStringSEL, (void*)CFPD_DateTime_V17::ToXMPDateTimeString);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDateTimeSEL, FPDDateTimeSetCurrentSystemDateTimeSEL, (void*)CFPD_DateTime_V17::SetCurrentSystemDateTime);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDateTimeSEL, FPDDateTimeGetCRTDateTimeZoneSEL, (void*)CFPD_DateTime_V17::GetCRTDateTimeZone);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDDateTimeSEL, FPDDateTimeGetCurrentSystemTimeSEL, (void*)CFPD_DateTime_V17::GetCurrentSystemTime);
	}
};

class CFPD_OrganizeParam_V17_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOrganizeParamSEL, FPDOrganizeParamCreateSEL, (void*)CFPD_OrganizeParam_V17::Create);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOrganizeParamSEL, FPDOrganizeParamDestroySEL, (void*)CFPD_OrganizeParam_V17::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOrganizeParamSEL, FPDOrganizeParamGetInterFormSEL, (void*)CFPD_OrganizeParam_V17::GetInterForm);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOrganizeParamSEL, FPDOrganizeParamSetInterFormSEL, (void*)CFPD_OrganizeParam_V17::SetInterForm);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOrganizeParamSEL, FPDOrganizeParamGetStructTreeSEL, (void*)CFPD_OrganizeParam_V17::GetStructTree);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOrganizeParamSEL, FPDOrganizeParamSetStructTreeSEL, (void*)CFPD_OrganizeParam_V17::SetStructTree);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOrganizeParamSEL, FPDOrganizeParamGetOtherInterFormSEL, (void*)CFPD_OrganizeParam_V17::GetOtherInterForm);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOrganizeParamSEL, FPDOrganizeParamSetOtherInterFormSEL, (void*)CFPD_OrganizeParam_V17::SetOtherInterForm);
	}
};

class CFPD_Organizer_V17_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOrganizerSEL, FPDOrganizerCreateSEL, (void*)CFPD_Organizer_V17::Create);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOrganizerSEL, FPDOrganizerDestroySEL, (void*)CFPD_Organizer_V17::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOrganizerSEL, FPDOrganizerSetOrganizeParamSEL, (void*)CFPD_Organizer_V17::SetOrganizeParam);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOrganizerSEL, FPDOrganizerInsertDocumentAtPosSEL, (void*)CFPD_Organizer_V17::InsertDocumentAtPos);
	}
};

class CFPD_FormExportHandler_V17_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormExportHandlerSEL, FPDFormExportHandlerCreateSEL, (void*)CFPD_FormExportHandler_V17::Create);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFormExportHandlerSEL, FPDFormExportHandlerDeleteSEL, (void*)CFPD_FormExportHandler_V17::Delete);
	}
};

class CFPD_EngineLIBINFO_V17_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEngineLIBINFOSEL, FPDEngineLIBINFOCreateSEL, (void*)CFPD_EngineLIBINFO_V17::Create);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEngineLIBINFOSEL, FPDEngineLIBINFODeleteSEL, (void*)CFPD_EngineLIBINFO_V17::Delete);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEngineLIBINFOSEL, FPDEngineLIBINFOGetCrypVersionSEL, (void*)CFPD_EngineLIBINFO_V17::GetCrypVersion);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEngineLIBINFOSEL, FPDEngineLIBINFOSetCrypVersionSEL, (void*)CFPD_EngineLIBINFO_V17::SetCrypVersion);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEngineLIBINFOSEL, FPDEngineLIBINFOGetManuIDSEL, (void*)CFPD_EngineLIBINFO_V17::GetManuID);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEngineLIBINFOSEL, FPDEngineLIBINFOSetManuIDSEL, (void*)CFPD_EngineLIBINFO_V17::SetManuID);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEngineLIBINFOSEL, FPDEngineLIBINFOGetLibDesSEL, (void*)CFPD_EngineLIBINFO_V17::GetLibDes);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEngineLIBINFOSEL, FPDEngineLIBINFOSetLibDesSEL, (void*)CFPD_EngineLIBINFO_V17::SetLibDes);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEngineLIBINFOSEL, FPDEngineLIBINFOGetLibVersionSEL, (void*)CFPD_EngineLIBINFO_V17::GetLibVersion);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEngineLIBINFOSEL, FPDEngineLIBINFOSetLibVersionSEL, (void*)CFPD_EngineLIBINFO_V17::SetLibVersion);
	}
};

class CFPD_EngineTokenINFO_V17_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEngineTokenINFOSEL, FPDEngineTokenINFOCreateSEL, (void*)CFPD_EngineTokenINFO_V17::Create);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEngineTokenINFOSEL, FPDEngineTokenINFODeleteSEL, (void*)CFPD_EngineTokenINFO_V17::Delete);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEngineTokenINFOSEL, FPDEngineTokenINFOGetTokenSEL, (void*)CFPD_EngineTokenINFO_V17::GetToken);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEngineTokenINFOSEL, FPDEngineTokenINFOSetTokenSEL, (void*)CFPD_EngineTokenINFO_V17::SetToken);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEngineTokenINFOSEL, FPDEngineTokenINFOGetTokenLabelSEL, (void*)CFPD_EngineTokenINFO_V17::GetTokenLabel);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEngineTokenINFOSEL, FPDEngineTokenINFOSetTokenLabelSEL, (void*)CFPD_EngineTokenINFO_V17::SetTokenLabel);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEngineTokenINFOSEL, FPDEngineTokenINFOGetManuIDSEL, (void*)CFPD_EngineTokenINFO_V17::GetManuID);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEngineTokenINFOSEL, FPDEngineTokenINFOSetManuIDSEL, (void*)CFPD_EngineTokenINFO_V17::SetManuID);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEngineTokenINFOSEL, FPDEngineTokenINFOGetModelSEL, (void*)CFPD_EngineTokenINFO_V17::GetModel);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEngineTokenINFOSEL, FPDEngineTokenINFOSetModelSEL, (void*)CFPD_EngineTokenINFO_V17::SetModel);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEngineTokenINFOSEL, FPDEngineTokenINFOGetSerialNumberSEL, (void*)CFPD_EngineTokenINFO_V17::GetSerialNumber);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEngineTokenINFOSEL, FPDEngineTokenINFOSetSerialNumberSEL, (void*)CFPD_EngineTokenINFO_V17::SetSerialNumber);
	}
};

class CFPD_Extracter_V17_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDExtracterSEL, FPDExtracterCreateSEL, (void*)CFPD_Extracter_V17::Create);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDExtracterSEL, FPDExtracterLoadDocumentSEL, (void*)CFPD_Extracter_V17::LoadDocument);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDExtracterSEL, FPDExtracterLoadDocument2SEL, (void*)CFPD_Extracter_V17::LoadDocument2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDExtracterSEL, FPDExtracterStartSEL, (void*)CFPD_Extracter_V17::Start);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDExtracterSEL, FPDExtracterContinueSEL, (void*)CFPD_Extracter_V17::Continue);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDExtracterSEL, FPDExtracterDeleteSEL, (void*)CFPD_Extracter_V17::Delete);
	}
};

// fpd_docImpl.h end

// In file fpd_editImpl.h
class CFPD_PWLCREATEPARAM_V17_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPWLCREATEPARAMSEL, FPDPWLCREATEPARAMPWLWndCreationParamNewSEL, (void*)CFPD_PWLCREATEPARAM_V17::PWLWndCreationParamNew);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPWLCREATEPARAMSEL, FPDPWLCREATEPARAMPWLWndCreationParamSetFontMapSEL, (void*)CFPD_PWLCREATEPARAM_V17::PWLWndCreationParamSetFontMap);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPWLCREATEPARAMSEL, FPDPWLCREATEPARAMPWLWndCreationParamSetFontIndexSEL, (void*)CFPD_PWLCREATEPARAM_V17::PWLWndCreationParamSetFontIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPWLCREATEPARAMSEL, FPDPWLCREATEPARAMPWLWndCreationParamSetFlagSEL, (void*)CFPD_PWLCREATEPARAM_V17::PWLWndCreationParamSetFlag);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPWLCREATEPARAMSEL, FPDPWLCREATEPARAMPWLWndCreationParamSetFontSizeSEL, (void*)CFPD_PWLCREATEPARAM_V17::PWLWndCreationParamSetFontSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPWLCREATEPARAMSEL, FPDPWLCREATEPARAMPWLWndCreationParamSetTextColorSEL, (void*)CFPD_PWLCREATEPARAM_V17::PWLWndCreationParamSetTextColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPWLCREATEPARAMSEL, FPDPWLCREATEPARAMPWLWndCreationParamSetTextColorIISEL, (void*)CFPD_PWLCREATEPARAM_V17::PWLWndCreationParamSetTextColorII);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPWLCREATEPARAMSEL, FPDPWLCREATEPARAMPWLWndCreationParamSetRectSEL, (void*)CFPD_PWLCREATEPARAM_V17::PWLWndCreationParamSetRect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPWLCREATEPARAMSEL, FPDPWLCREATEPARAMPWLWndCreationParamDestroySEL, (void*)CFPD_PWLCREATEPARAM_V17::PWLWndCreationParamDestroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPWLCREATEPARAMSEL, FPDPWLCREATEPARAMPWLWndCreationParamSetSystemHandlerSEL, (void*)CFPD_PWLCREATEPARAM_V17::PWLWndCreationParamSetSystemHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPWLCREATEPARAMSEL, FPDPWLCREATEPARAMPWLWndCreationParamSetProviderSEL, (void*)CFPD_PWLCREATEPARAM_V17::PWLWndCreationParamSetProvider);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPWLCREATEPARAMSEL, FPDPWLCREATEPARAMPWLWndCreationParamSetFocusHandlerSEL, (void*)CFPD_PWLCREATEPARAM_V17::PWLWndCreationParamSetFocusHandler);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPWLCREATEPARAMSEL, FPDPWLCREATEPARAMPWLWndCreationParamSetBackgroundColorSEL, (void*)CFPD_PWLCREATEPARAM_V17::PWLWndCreationParamSetBackgroundColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPWLCREATEPARAMSEL, FPDPWLCREATEPARAMPWLWndCreationParamSetAttachedWndSEL, (void*)CFPD_PWLCREATEPARAM_V17::PWLWndCreationParamSetAttachedWnd);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPWLCREATEPARAMSEL, FPDPWLCREATEPARAMPWLWndCreationParamSetSpellCheckSEL, (void*)CFPD_PWLCREATEPARAM_V17::PWLWndCreationParamSetSpellCheck);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPWLCREATEPARAMSEL, FPDPWLCREATEPARAMPWLWndCreationParamSetBorderStyleSEL, (void*)CFPD_PWLCREATEPARAM_V17::PWLWndCreationParamSetBorderStyle);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPWLCREATEPARAMSEL, FPDPWLCREATEPARAMPWLWndCreationParamSetBorderWidthSEL, (void*)CFPD_PWLCREATEPARAM_V17::PWLWndCreationParamSetBorderWidth);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPWLCREATEPARAMSEL, FPDPWLCREATEPARAMPWLWndCreationParamSetBorderColorSEL, (void*)CFPD_PWLCREATEPARAM_V17::PWLWndCreationParamSetBorderColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPWLCREATEPARAMSEL, FPDPWLCREATEPARAMPWLWndCreationParamSetTextStrokeColorSEL, (void*)CFPD_PWLCREATEPARAM_V17::PWLWndCreationParamSetTextStrokeColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPWLCREATEPARAMSEL, FPDPWLCREATEPARAMPWLWndCreationParamSetTransparencySEL, (void*)CFPD_PWLCREATEPARAM_V17::PWLWndCreationParamSetTransparency);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPWLCREATEPARAMSEL, FPDPWLCREATEPARAMPWLWndCreationParamSetUseFXFontDeAscentSEL, (void*)CFPD_PWLCREATEPARAM_V17::PWLWndCreationParamSetUseFXFontDeAscent);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPWLCREATEPARAMSEL, FPDPWLCREATEPARAMPWLWndCreationParamSetDashSEL, (void*)CFPD_PWLCREATEPARAM_V17::PWLWndCreationParamSetDash);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPWLCREATEPARAMSEL, FPDPWLCREATEPARAMPWLWndCreationParamSetAttachedDataSEL, (void*)CFPD_PWLCREATEPARAM_V17::PWLWndCreationParamSetAttachedData);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPWLCREATEPARAMSEL, FPDPWLCREATEPARAMPWLWndCreationParamSetParentWndSEL, (void*)CFPD_PWLCREATEPARAM_V17::PWLWndCreationParamSetParentWnd);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPWLCREATEPARAMSEL, FPDPWLCREATEPARAMPWLWndCreationParamSetCursorTypeSEL, (void*)CFPD_PWLCREATEPARAM_V17::PWLWndCreationParamSetCursorType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPWLCREATEPARAMSEL, FPDPWLCREATEPARAMPWLWndCreationParamSetMtChildSEL, (void*)CFPD_PWLCREATEPARAM_V17::PWLWndCreationParamSetMtChild);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPWLCREATEPARAMSEL, FPDPWLCREATEPARAMPWLWndCreationParamSetShowFontSizeDPISEL, (void*)CFPD_PWLCREATEPARAM_V17::PWLWndCreationParamSetShowFontSizeDPI);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPWLCREATEPARAMSEL, FPDPWLCREATEPARAMPWLWndCreationParamSetNeedEmbedSEL, (void*)CFPD_PWLCREATEPARAM_V17::PWLWndCreationParamSetNeedEmbed);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPWLCREATEPARAMSEL, FPDPWLCREATEPARAMPWLWndCreationParamSetListBoxFontSizeSEL, (void*)CFPD_PWLCREATEPARAM_V17::PWLWndCreationParamSetListBoxFontSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPWLCREATEPARAMSEL, FPDPWLCREATEPARAMGetFlagsSEL, (void*)CFPD_PWLCREATEPARAM_V17::GetFlags);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPWLCREATEPARAMSEL, FPDPWLCREATEPARAMGetRectSEL, (void*)CFPD_PWLCREATEPARAM_V17::GetRect);
	}
};

class CFPD_CPWLEdit_V17_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLEditSEL, FPDCPWLEditNewSEL, (void*)CFPD_CPWLEdit_V17::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLEditSEL, FPDCPWLEditSetTextColorSEL, (void*)CFPD_CPWLEdit_V17::SetTextColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLEditSEL, FPDCPWLEditSetTextColorIISEL, (void*)CFPD_CPWLEdit_V17::SetTextColorII);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLEditSEL, FPDCPWLEditSetTextSEL, (void*)CFPD_CPWLEdit_V17::SetText);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLEditSEL, FPDCPWLEditGetContentRectSEL, (void*)CFPD_CPWLEdit_V17::GetContentRect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLEditSEL, FPDCPWLEditGeneratePageObjectsSEL, (void*)CFPD_CPWLEdit_V17::GeneratePageObjects);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLEditSEL, FPDCPWLEditGeneratePageObjectsIISEL, (void*)CFPD_CPWLEdit_V17::GeneratePageObjectsII);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLEditSEL, FPDCPWLEditDestroySEL, (void*)CFPD_CPWLEdit_V17::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLEditSEL, FPDCPWLEditEnableRefreshSEL, (void*)CFPD_CPWLEdit_V17::EnableRefresh);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLEditSEL, FPDCPWLEditSetAlignFormatHSEL, (void*)CFPD_CPWLEdit_V17::SetAlignFormatH);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLEditSEL, FPDCPWLEditSetAlignFormatVSEL, (void*)CFPD_CPWLEdit_V17::SetAlignFormatV);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLEditSEL, FPDCPWLEditSetHorzScaleSEL, (void*)CFPD_CPWLEdit_V17::SetHorzScale);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLEditSEL, FPDCPWLEditSetCharSpaceSEL, (void*)CFPD_CPWLEdit_V17::SetCharSpace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLEditSEL, FPDCPWLEditSetLineLeadingSEL, (void*)CFPD_CPWLEdit_V17::SetLineLeading);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLEditSEL, FPDCPWLEditGetEditSEL, (void*)CFPD_CPWLEdit_V17::GetEdit);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLEditSEL, FPDCPWLEditGetTextAppearanceStreamSEL, (void*)CFPD_CPWLEdit_V17::GetTextAppearanceStream);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLEditSEL, FPDCPWLEditGetFXEditSEL, (void*)CFPD_CPWLEdit_V17::GetFXEdit);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLEditSEL, FPDCPWLEditChangeApplyAllSectionSEL, (void*)CFPD_CPWLEdit_V17::ChangeApplyAllSection);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLEditSEL, FPDCPWLEditSetRichTextSEL, (void*)CFPD_CPWLEdit_V17::SetRichText);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLEditSEL, FPDCPWLEditGetCPWLWndSEL, (void*)CFPD_CPWLEdit_V17::GetCPWLWnd);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLEditSEL, FPDCPWLEditRedoSEL, (void*)CFPD_CPWLEdit_V17::Redo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLEditSEL, FPDCPWLEditUndoSEL, (void*)CFPD_CPWLEdit_V17::Undo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLEditSEL, FPDCPWLEditCanSelectAllSEL, (void*)CFPD_CPWLEdit_V17::CanSelectAll);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLEditSEL, FPDCPWLEditCanClearSEL, (void*)CFPD_CPWLEdit_V17::CanClear);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLEditSEL, FPDCPWLEditCanCopySEL, (void*)CFPD_CPWLEdit_V17::CanCopy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLEditSEL, FPDCPWLEditCanCutSEL, (void*)CFPD_CPWLEdit_V17::CanCut);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLEditSEL, FPDCPWLEditCopyTextSEL, (void*)CFPD_CPWLEdit_V17::CopyText);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLEditSEL, FPDCPWLEditPasteTextSEL, (void*)CFPD_CPWLEdit_V17::PasteText);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLEditSEL, FPDCPWLEditCutTextSEL, (void*)CFPD_CPWLEdit_V17::CutText);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLEditSEL, FPDCPWLEditCanPasteSEL, (void*)CFPD_CPWLEdit_V17::CanPaste);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLEditSEL, FPDCPWLEditGetTextWithBulletSEL, (void*)CFPD_CPWLEdit_V17::GetTextWithBullet);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLEditSEL, FPDCPWLEditCreateNotifySEL, (void*)CFPD_CPWLEdit_V17::CreateNotify);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLEditSEL, FPDCPWLEditDeleteNotifySEL, (void*)CFPD_CPWLEdit_V17::DeleteNotify);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLEditSEL, FPDCPWLEditSetEditNotifySEL, (void*)CFPD_CPWLEdit_V17::SetEditNotify);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLEditSEL, FPDCPWLEditSetFillerNotifySEL, (void*)CFPD_CPWLEdit_V17::SetFillerNotify);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLEditSEL, FPDCPWLEditReplaceSelSEL, (void*)CFPD_CPWLEdit_V17::ReplaceSel);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLEditSEL, FPDCPWLEditNew2SEL, (void*)CFPD_CPWLEdit_V17::New2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLEditSEL, FPDCPWLEditGetFromWndSEL, (void*)CFPD_CPWLEdit_V17::GetFromWnd);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLEditSEL, FPDCPWLEditSetRichTextIsBoldSEL, (void*)CFPD_CPWLEdit_V17::SetRichTextIsBold);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLEditSEL, FPDCPWLEditSetRichTextIsItalicSEL, (void*)CFPD_CPWLEdit_V17::SetRichTextIsItalic);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLEditSEL, FPDCPWLEditSetRichTextUnderlineSEL, (void*)CFPD_CPWLEdit_V17::SetRichTextUnderline);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLEditSEL, FPDCPWLEditSetRichTextScriptSEL, (void*)CFPD_CPWLEdit_V17::SetRichTextScript);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLEditSEL, FPDCPWLEditCastToEditCtrlSEL, (void*)CFPD_CPWLEdit_V17::CastToEditCtrl);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLEditSEL, FPDCPWLEditIOnSetCaretSEL, (void*)CFPD_CPWLEdit_V17::IOnSetCaret);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLEditSEL, FPDCPWLEditSetCharSetSEL, (void*)CFPD_CPWLEdit_V17::SetCharSet);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLEditSEL, FPDCPWLEditGetCharSetSEL, (void*)CFPD_CPWLEdit_V17::GetCharSet);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLEditSEL, FPDCPWLEditSetCodePageSEL, (void*)CFPD_CPWLEdit_V17::SetCodePage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLEditSEL, FPDCPWLEditSetInputTextSEL, (void*)CFPD_CPWLEdit_V17::SetInputText);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLEditSEL, FPDCPWLEditGetWindowMatrixSEL, (void*)CFPD_CPWLEdit_V17::GetWindowMatrix);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLEditSEL, FPDCPWLEditGetCaretPosSEL, (void*)CFPD_CPWLEdit_V17::GetCaretPos);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLEditSEL, FPDCPWLEditGetCaretFontSizeSEL, (void*)CFPD_CPWLEdit_V17::GetCaretFontSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLEditSEL, FPDCPWLEditIsTextFullSEL, (void*)CFPD_CPWLEdit_V17::IsTextFull);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLEditSEL, FPDCPWLEditSetFontSizeSEL, (void*)CFPD_CPWLEdit_V17::SetFontSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLEditSEL, FPDCPWLEditGetFontSizeSEL, (void*)CFPD_CPWLEdit_V17::GetFontSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLEditSEL, FPDCPWLEditOnCharSEL, (void*)CFPD_CPWLEdit_V17::OnChar);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLEditSEL, FPDCPWLEditSetRichTextColorSEL, (void*)CFPD_CPWLEdit_V17::SetRichTextColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLEditSEL, FPDCPWLEditSetCaretColorSEL, (void*)CFPD_CPWLEdit_V17::SetCaretColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLEditSEL, FPDCPWLEditGetTextSEL, (void*)CFPD_CPWLEdit_V17::GetText);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLEditSEL, FPDCPWLEditGetRichTextXMLSEL, (void*)CFPD_CPWLEdit_V17::GetRichTextXML);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLEditSEL, FPDCPWLEditCanUndoSEL, (void*)CFPD_CPWLEdit_V17::CanUndo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLEditSEL, FPDCPWLEditCanRedoSEL, (void*)CFPD_CPWLEdit_V17::CanRedo);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLEditSEL, FPDCPWLEditSelectAllSEL, (void*)CFPD_CPWLEdit_V17::SelectAll);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLEditSEL, FPDCPWLEditSetRichTextAlignmentSEL, (void*)CFPD_CPWLEdit_V17::SetRichTextAlignment);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLEditSEL, FPDCPWLEditOnLButtonDownSEL, (void*)CFPD_CPWLEdit_V17::OnLButtonDown);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLEditSEL, FPDCPWLEditOnLButtonDblClkSEL, (void*)CFPD_CPWLEdit_V17::OnLButtonDblClk);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLEditSEL, FPDCPWLEditOnRButtonUpSEL, (void*)CFPD_CPWLEdit_V17::OnRButtonUp);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLEditSEL, FPDCPWLEditOnKeyDownSEL, (void*)CFPD_CPWLEdit_V17::OnKeyDown);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLEditSEL, FPDCPWLEditOnMouseMoveSEL, (void*)CFPD_CPWLEdit_V17::OnMouseMove);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLEditSEL, FPDCPWLEditOnLButtonUpSEL, (void*)CFPD_CPWLEdit_V17::OnLButtonUp);
	}
};

class CFPD_VariableTextIterator_V17_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVariableTextIteratorSEL, FPDVariableTextIteratorNextWordSEL, (void*)CFPD_VariableTextIterator_V17::NextWord);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVariableTextIteratorSEL, FPDVariableTextIteratorPrevWordSEL, (void*)CFPD_VariableTextIterator_V17::PrevWord);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVariableTextIteratorSEL, FPDVariableTextIteratorNextLineSEL, (void*)CFPD_VariableTextIterator_V17::NextLine);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVariableTextIteratorSEL, FPDVariableTextIteratorPrevLineSEL, (void*)CFPD_VariableTextIterator_V17::PrevLine);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVariableTextIteratorSEL, FPDVariableTextIteratorNextSectionSEL, (void*)CFPD_VariableTextIterator_V17::NextSection);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVariableTextIteratorSEL, FPDVariableTextIteratorPrevSectionSEL, (void*)CFPD_VariableTextIterator_V17::PrevSection);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVariableTextIteratorSEL, FPDVariableTextIteratorGetWordSEL, (void*)CFPD_VariableTextIterator_V17::GetWord);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVariableTextIteratorSEL, FPDVariableTextIteratorSetWordSEL, (void*)CFPD_VariableTextIterator_V17::SetWord);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVariableTextIteratorSEL, FPDVariableTextIteratorGetLineSEL, (void*)CFPD_VariableTextIterator_V17::GetLine);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVariableTextIteratorSEL, FPDVariableTextIteratorGetSectionSEL, (void*)CFPD_VariableTextIterator_V17::GetSection);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVariableTextIteratorSEL, FPDVariableTextIteratorSetSectionSEL, (void*)CFPD_VariableTextIterator_V17::SetSection);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVariableTextIteratorSEL, FPDVariableTextIteratorSetAtSEL, (void*)CFPD_VariableTextIterator_V17::SetAt);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVariableTextIteratorSEL, FPDVariableTextIteratorSetAtIISEL, (void*)CFPD_VariableTextIterator_V17::SetAtII);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVariableTextIteratorSEL, FPDVariableTextIteratorGetAtSEL, (void*)CFPD_VariableTextIterator_V17::GetAt);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVariableTextIteratorSEL, FPDVariableTextIteratorGetDisplayWordSEL, (void*)CFPD_VariableTextIterator_V17::GetDisplayWord);
	}
};

class CFPD_VTLine_V17_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVTLineSEL, FPDVTLineNewSEL, (void*)CFPD_VTLine_V17::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVTLineSEL, FPDVTLineDestroySEL, (void*)CFPD_VTLine_V17::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVTLineSEL, FPDVTLineSetStartWordPlaceSEL, (void*)CFPD_VTLine_V17::SetStartWordPlace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVTLineSEL, FPDVTLineGetStartWordPlaceSEL, (void*)CFPD_VTLine_V17::GetStartWordPlace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVTLineSEL, FPDVTLineSetEndWordPlaceSEL, (void*)CFPD_VTLine_V17::SetEndWordPlace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVTLineSEL, FPDVTLineGetEndWordPlaceSEL, (void*)CFPD_VTLine_V17::GetEndWordPlace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVTLineSEL, FPDVTLineSetOriginalPositionSEL, (void*)CFPD_VTLine_V17::SetOriginalPosition);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVTLineSEL, FPDVTLineGetOriginalPositionSEL, (void*)CFPD_VTLine_V17::GetOriginalPosition);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVTLineSEL, FPDVTLineSetWidthSEL, (void*)CFPD_VTLine_V17::SetWidth);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVTLineSEL, FPDVTLineGetWidthSEL, (void*)CFPD_VTLine_V17::GetWidth);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVTLineSEL, FPDVTLineSetAscentSEL, (void*)CFPD_VTLine_V17::SetAscent);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVTLineSEL, FPDVTLineGetAscentSEL, (void*)CFPD_VTLine_V17::GetAscent);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVTLineSEL, FPDVTLineSetDescentSEL, (void*)CFPD_VTLine_V17::SetDescent);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVTLineSEL, FPDVTLineGetDescentSEL, (void*)CFPD_VTLine_V17::GetDescent);
	}
};

class CFPD_VTSection_V17_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVTSectionSEL, FPDVTSectionNewSEL, (void*)CFPD_VTSection_V17::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVTSectionSEL, FPDVTSectionDestroySEL, (void*)CFPD_VTSection_V17::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVTSectionSEL, FPDVTSectionSetStartWordPlaceSEL, (void*)CFPD_VTSection_V17::SetStartWordPlace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVTSectionSEL, FPDVTSectionGetStartWordPlaceSEL, (void*)CFPD_VTSection_V17::GetStartWordPlace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVTSectionSEL, FPDVTSectionSetRectSEL, (void*)CFPD_VTSection_V17::SetRect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVTSectionSEL, FPDVTSectionGetRectSEL, (void*)CFPD_VTSection_V17::GetRect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVTSectionSEL, FPDVTSectionSetSectionPropertiesSEL, (void*)CFPD_VTSection_V17::SetSectionProperties);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVTSectionSEL, FPDVTSectionGetSectionPropertiesSEL, (void*)CFPD_VTSection_V17::GetSectionProperties);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVTSectionSEL, FPDVTSectionSetWordPropertiesSEL, (void*)CFPD_VTSection_V17::SetWordProperties);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVTSectionSEL, FPDVTSectionGetWordPropertiesSEL, (void*)CFPD_VTSection_V17::GetWordProperties);
	}
};

class CFPD_VariableText_V17_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVariableTextSEL, FPDVariableTextNewSEL, (void*)CFPD_VariableText_V17::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVariableTextSEL, FPDVariableTextDestroySEL, (void*)CFPD_VariableText_V17::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVariableTextSEL, FPDVariableTextProviderNewSEL, (void*)CFPD_VariableText_V17::ProviderNew);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVariableTextSEL, FPDVariableTextProviderDestroySEL, (void*)CFPD_VariableText_V17::ProviderDestroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVariableTextSEL, FPDVariableTextSetProviderSEL, (void*)CFPD_VariableText_V17::SetProvider);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVariableTextSEL, FPDVariableTextGetIteratorSEL, (void*)CFPD_VariableText_V17::GetIterator);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVariableTextSEL, FPDVariableTextSetPlateRectSEL, (void*)CFPD_VariableText_V17::SetPlateRect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVariableTextSEL, FPDVariableTextIsVerticalWritingSEL, (void*)CFPD_VariableText_V17::IsVerticalWriting);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVariableTextSEL, FPDVariableTextSetAlignmentSEL, (void*)CFPD_VariableText_V17::SetAlignment);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVariableTextSEL, FPDVariableTextSetPasswordCharSEL, (void*)CFPD_VariableText_V17::SetPasswordChar);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVariableTextSEL, FPDVariableTextSetLimitCharSEL, (void*)CFPD_VariableText_V17::SetLimitChar);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVariableTextSEL, FPDVariableTextSetCharArraySEL, (void*)CFPD_VariableText_V17::SetCharArray);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVariableTextSEL, FPDVariableTextSetCharSpaceSEL, (void*)CFPD_VariableText_V17::SetCharSpace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVariableTextSEL, FPDVariableTextSetWordSpaceSEL, (void*)CFPD_VariableText_V17::SetWordSpace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVariableTextSEL, FPDVariableTextSetHorzScaleSEL, (void*)CFPD_VariableText_V17::SetHorzScale);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVariableTextSEL, FPDVariableTextSetMultiLineSEL, (void*)CFPD_VariableText_V17::SetMultiLine);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVariableTextSEL, FPDVariableTextSetAutoReturnSEL, (void*)CFPD_VariableText_V17::SetAutoReturn);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVariableTextSEL, FPDVariableTextSetAutoFontSizeSEL, (void*)CFPD_VariableText_V17::SetAutoFontSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVariableTextSEL, FPDVariableTextSetFontSizeSEL, (void*)CFPD_VariableText_V17::SetFontSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVariableTextSEL, FPDVariableTextSetLineLeadingSEL, (void*)CFPD_VariableText_V17::SetLineLeading);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVariableTextSEL, FPDVariableTextSetRichTextSEL, (void*)CFPD_VariableText_V17::SetRichText);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVariableTextSEL, FPDVariableTextSetDirectionRTLSEL, (void*)CFPD_VariableText_V17::SetDirectionRTL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVariableTextSEL, FPDVariableTextInitializeSEL, (void*)CFPD_VariableText_V17::Initialize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVariableTextSEL, FPDVariableTextIsValidSEL, (void*)CFPD_VariableText_V17::IsValid);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVariableTextSEL, FPDVariableTextIsRichTextSEL, (void*)CFPD_VariableText_V17::IsRichText);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVariableTextSEL, FPDVariableTextRearrangeAllSEL, (void*)CFPD_VariableText_V17::RearrangeAll);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVariableTextSEL, FPDVariableTextRearrangePartSEL, (void*)CFPD_VariableText_V17::RearrangePart);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVariableTextSEL, FPDVariableTextResetAllSEL, (void*)CFPD_VariableText_V17::ResetAll);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVariableTextSEL, FPDVariableTextSetTextSEL, (void*)CFPD_VariableText_V17::SetText);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVariableTextSEL, FPDVariableTextInsertWordSEL, (void*)CFPD_VariableText_V17::InsertWord);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVariableTextSEL, FPDVariableTextInsertSectionSEL, (void*)CFPD_VariableText_V17::InsertSection);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVariableTextSEL, FPDVariableTextInsertTextSEL, (void*)CFPD_VariableText_V17::InsertText);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVariableTextSEL, FPDVariableTextDeleteWordsSEL, (void*)CFPD_VariableText_V17::DeleteWords);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVariableTextSEL, FPDVariableTextDeleteWordSEL, (void*)CFPD_VariableText_V17::DeleteWord);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVariableTextSEL, FPDVariableTextBackSpaceWordSEL, (void*)CFPD_VariableText_V17::BackSpaceWord);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVariableTextSEL, FPDVariableTextGetPlateRectSEL, (void*)CFPD_VariableText_V17::GetPlateRect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVariableTextSEL, FPDVariableTextGetContentRectSEL, (void*)CFPD_VariableText_V17::GetContentRect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVariableTextSEL, FPDVariableTextGetTotalWordsSEL, (void*)CFPD_VariableText_V17::GetTotalWords);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVariableTextSEL, FPDVariableTextGetFontSizeSEL, (void*)CFPD_VariableText_V17::GetFontSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVariableTextSEL, FPDVariableTextGetAlignmentSEL, (void*)CFPD_VariableText_V17::GetAlignment);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVariableTextSEL, FPDVariableTextGetWordSpaceSEL, (void*)CFPD_VariableText_V17::GetWordSpace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVariableTextSEL, FPDVariableTextGetPasswordCharSEL, (void*)CFPD_VariableText_V17::GetPasswordChar);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVariableTextSEL, FPDVariableTextGetCharArraySEL, (void*)CFPD_VariableText_V17::GetCharArray);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVariableTextSEL, FPDVariableTextGetLimitCharSEL, (void*)CFPD_VariableText_V17::GetLimitChar);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVariableTextSEL, FPDVariableTextIsMultiLineSEL, (void*)CFPD_VariableText_V17::IsMultiLine);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVariableTextSEL, FPDVariableTextIsAutoReturnSEL, (void*)CFPD_VariableText_V17::IsAutoReturn);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVariableTextSEL, FPDVariableTextGetHorzScaleSEL, (void*)CFPD_VariableText_V17::GetHorzScale);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVariableTextSEL, FPDVariableTextGetCharSpaceSEL, (void*)CFPD_VariableText_V17::GetCharSpace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVariableTextSEL, FPDVariableTextGetBeginWordPlaceSEL, (void*)CFPD_VariableText_V17::GetBeginWordPlace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVariableTextSEL, FPDVariableTextGetEndWordPlaceSEL, (void*)CFPD_VariableText_V17::GetEndWordPlace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVariableTextSEL, FPDVariableTextGetPrevWordPlaceSEL, (void*)CFPD_VariableText_V17::GetPrevWordPlace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVariableTextSEL, FPDVariableTextGetNextWordPlaceSEL, (void*)CFPD_VariableText_V17::GetNextWordPlace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVariableTextSEL, FPDVariableTextSearchWordPlaceSEL, (void*)CFPD_VariableText_V17::SearchWordPlace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVariableTextSEL, FPDVariableTextGetUpWordPlaceSEL, (void*)CFPD_VariableText_V17::GetUpWordPlace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVariableTextSEL, FPDVariableTextGetDownWordPlaceSEL, (void*)CFPD_VariableText_V17::GetDownWordPlace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVariableTextSEL, FPDVariableTextGetLineBeginPlaceSEL, (void*)CFPD_VariableText_V17::GetLineBeginPlace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVariableTextSEL, FPDVariableTextGetLineEndPlaceSEL, (void*)CFPD_VariableText_V17::GetLineEndPlace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVariableTextSEL, FPDVariableTextGetSectionBeginPlaceSEL, (void*)CFPD_VariableText_V17::GetSectionBeginPlace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVariableTextSEL, FPDVariableTextGetSectionEndPlaceSEL, (void*)CFPD_VariableText_V17::GetSectionEndPlace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVariableTextSEL, FPDVariableTextUpdateWordPlaceSEL, (void*)CFPD_VariableText_V17::UpdateWordPlace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVariableTextSEL, FPDVariableTextAjustLineHeaderSEL, (void*)CFPD_VariableText_V17::AjustLineHeader);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVariableTextSEL, FPDVariableTextWordPlaceToWordIndexSEL, (void*)CFPD_VariableText_V17::WordPlaceToWordIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVariableTextSEL, FPDVariableTextWordIndexToWordPlaceSEL, (void*)CFPD_VariableText_V17::WordIndexToWordPlace);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVariableTextSEL, FPDVariableTextIsSectionComplexScriptSEL, (void*)CFPD_VariableText_V17::IsSectionComplexScript);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVariableTextSEL, FPDVariableTextIsVerticalFontSEL, (void*)CFPD_VariableText_V17::IsVerticalFont);
	}
};

class CFPD_EDITFontData_V17_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEDITFontDataSEL, FPDEDITFontDataNewSEL, (void*)CFPD_EDITFontData_V17::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEDITFontDataSEL, FPDEDITFontDataDestroySEL, (void*)CFPD_EDITFontData_V17::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEDITFontDataSEL, FPDEDITFontDataSetFontSEL, (void*)CFPD_EDITFontData_V17::SetFont);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEDITFontDataSEL, FPDEDITFontDataGetFontSEL, (void*)CFPD_EDITFontData_V17::GetFont);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEDITFontDataSEL, FPDEDITFontDataSetFontNameSEL, (void*)CFPD_EDITFontData_V17::SetFontName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEDITFontDataSEL, FPDEDITFontDataGetFontNameSEL, (void*)CFPD_EDITFontData_V17::GetFontName);
	}
};

class CFPD_BulletWordIterator_V17_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDBulletWordIteratorSEL, FPDBulletWordIteratorSetBeginBulletWordPosSEL, (void*)CFPD_BulletWordIterator_V17::SetBeginBulletWordPos);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDBulletWordIteratorSEL, FPDBulletWordIteratorNextBulletWordSEL, (void*)CFPD_BulletWordIterator_V17::NextBulletWord);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDBulletWordIteratorSEL, FPDBulletWordIteratorGetBulletWordSEL, (void*)CFPD_BulletWordIterator_V17::GetBulletWord);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDBulletWordIteratorSEL, FPDBulletWordIteratorSetBulletWordSEL, (void*)CFPD_BulletWordIterator_V17::SetBulletWord);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDBulletWordIteratorSEL, FPDBulletWordIteratorGetBulletDisplayWordSEL, (void*)CFPD_BulletWordIterator_V17::GetBulletDisplayWord);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDBulletWordIteratorSEL, FPDBulletWordIteratorGetBeginBulletWordPosSEL, (void*)CFPD_BulletWordIterator_V17::GetBeginBulletWordPos);
	}
};

class CFPD_VTWordPlace_V17_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVTWordPlaceSEL, FPDVTWordPlaceNewSEL, (void*)CFPD_VTWordPlace_V17::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVTWordPlaceSEL, FPDVTWordPlaceDestroySEL, (void*)CFPD_VTWordPlace_V17::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVTWordPlaceSEL, FPDVTWordPlaceSetDefaultSEL, (void*)CFPD_VTWordPlace_V17::SetDefault);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVTWordPlaceSEL, FPDVTWordPlaceEqualSEL, (void*)CFPD_VTWordPlace_V17::Equal);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVTWordPlaceSEL, FPDVTWordPlaceWordCmpSEL, (void*)CFPD_VTWordPlace_V17::WordCmp);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVTWordPlaceSEL, FPDVTWordPlaceLineCmpSEL, (void*)CFPD_VTWordPlace_V17::LineCmp);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVTWordPlaceSEL, FPDVTWordPlaceSecCmpSEL, (void*)CFPD_VTWordPlace_V17::SecCmp);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVTWordPlaceSEL, FPDVTWordPlaceSetSectionIndexSEL, (void*)CFPD_VTWordPlace_V17::SetSectionIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVTWordPlaceSEL, FPDVTWordPlaceGetSectionIndexSEL, (void*)CFPD_VTWordPlace_V17::GetSectionIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVTWordPlaceSEL, FPDVTWordPlaceSetLineIndexSEL, (void*)CFPD_VTWordPlace_V17::SetLineIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVTWordPlaceSEL, FPDVTWordPlaceGetLineIndexSEL, (void*)CFPD_VTWordPlace_V17::GetLineIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVTWordPlaceSEL, FPDVTWordPlaceSetWordIndexSEL, (void*)CFPD_VTWordPlace_V17::SetWordIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVTWordPlaceSEL, FPDVTWordPlaceGetWordIndexSEL, (void*)CFPD_VTWordPlace_V17::GetWordIndex);
	}
};

class CFPD_EDITFONTDATAArray_V17_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEDITFONTDATAArraySEL, FPDEDITFONTDATAArrayCreateSEL, (void*)CFPD_EDITFONTDATAArray_V17::Create);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEDITFONTDATAArraySEL, FPDEDITFONTDATAArrayDeleteSEL, (void*)CFPD_EDITFONTDATAArray_V17::Delete);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEDITFONTDATAArraySEL, FPDEDITFONTDATAArrayGetSizeSEL, (void*)CFPD_EDITFONTDATAArray_V17::GetSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEDITFONTDATAArraySEL, FPDEDITFONTDATAArrayGetDataSEL, (void*)CFPD_EDITFONTDATAArray_V17::GetData);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEDITFONTDATAArraySEL, FPDEDITFONTDATAArrayRemoveAtSEL, (void*)CFPD_EDITFONTDATAArray_V17::RemoveAt);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEDITFONTDATAArraySEL, FPDEDITFONTDATAArrayRemoveAllSEL, (void*)CFPD_EDITFONTDATAArray_V17::RemoveAll);
	}
};

class CFPD_VTBulletIterator_V17_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVTBulletIteratorSEL, FPDVTBulletIteratorNextBulletSEL, (void*)CFPD_VTBulletIterator_V17::NextBullet);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVTBulletIteratorSEL, FPDVTBulletIteratorGetBulletSEL, (void*)CFPD_VTBulletIterator_V17::GetBullet);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVTBulletIteratorSEL, FPDVTBulletIteratorSetBeginnIndexSEL, (void*)CFPD_VTBulletIterator_V17::SetBeginnIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDVTBulletIteratorSEL, FPDVTBulletIteratorGetCurIndexSEL, (void*)CFPD_VTBulletIterator_V17::GetCurIndex);
	}
};

class CFPD_TextList_V17_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextListSEL, FPDTextListGetChildItemSEL, (void*)CFPD_TextList_V17::GetChildItem);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextListSEL, FPDTextListReCalculateLableWidthSEL, (void*)CFPD_TextList_V17::ReCalculateLableWidth);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDTextListSEL, FPDTextListGetNextSiblingItemSEL, (void*)CFPD_TextList_V17::GetNextSiblingItem);
	}
};

class CFPD_PWLFillerNotify_V17_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPWLFillerNotifySEL, FPDPWLFillerNotifyCreateSEL, (void*)CFPD_PWLFillerNotify_V17::Create);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPWLFillerNotifySEL, FPDPWLFillerNotifyDeleteSEL, (void*)CFPD_PWLFillerNotify_V17::Delete);
	}
};

class CFPD_List_V17_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDListSEL, FPDListSetDirectionRTLSEL, (void*)CFPD_List_V17::SetDirectionRTL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDListSEL, FPDListSetAlignmentSEL, (void*)CFPD_List_V17::SetAlignment);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDListSEL, FPDListGetAlignmentSEL, (void*)CFPD_List_V17::GetAlignment);
	}
};

// fpd_editImpl.h end

// In file fpd_epubImpl.h
// fpd_epubImpl.h end

// In file fpd_fontmgrImpl.h
class CFPD_FMFontMgr_V17_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFMFontMgrSEL, FPDFMFontMgrGetSEL, (void*)CFPD_FMFontMgr_V17::Get);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFMFontMgrSEL, FPDFMFontMgrGetCodePageFromCharsetSEL, (void*)CFPD_FMFontMgr_V17::GetCodePageFromCharset);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFMFontMgrSEL, FPDFMFontMgrSetPlatformLanguageSEL, (void*)CFPD_FMFontMgr_V17::SetPlatformLanguage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFMFontMgrSEL, FPDFMFontMgrLoadSystemFontsSEL, (void*)CFPD_FMFontMgr_V17::LoadSystemFonts);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFMFontMgrSEL, FPDFMFontMgrGetFontDescArraySEL, (void*)CFPD_FMFontMgr_V17::GetFontDescArray);
	}
};

class CFPD_FMFontDescriptor_V17_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFMFontDescriptorSEL, FPDFMFontDescriptorCreateSEL, (void*)CFPD_FMFontDescriptor_V17::Create);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFMFontDescriptorSEL, FPDFMFontDescriptorDeleteSEL, (void*)CFPD_FMFontDescriptor_V17::Delete);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFMFontDescriptorSEL, FPDFMFontDescriptorGetFamiliyNameSEL, (void*)CFPD_FMFontDescriptor_V17::GetFamiliyName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFMFontDescriptorSEL, FPDFMFontDescriptorSetFamiliyNameSEL, (void*)CFPD_FMFontDescriptor_V17::SetFamiliyName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFMFontDescriptorSEL, FPDFMFontDescriptorGetPostscriptNameSEL, (void*)CFPD_FMFontDescriptor_V17::GetPostscriptName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFMFontDescriptorSEL, FPDFMFontDescriptorSetPostscriptNameSEL, (void*)CFPD_FMFontDescriptor_V17::SetPostscriptName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFMFontDescriptorSEL, FPDFMFontDescriptorGetFullNameSEL, (void*)CFPD_FMFontDescriptor_V17::GetFullName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFMFontDescriptorSEL, FPDFMFontDescriptorSetFullNameSEL, (void*)CFPD_FMFontDescriptor_V17::SetFullName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFMFontDescriptorSEL, FPDFMFontDescriptorGetBsFamilyNameSEL, (void*)CFPD_FMFontDescriptor_V17::GetBsFamilyName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFMFontDescriptorSEL, FPDFMFontDescriptorSetBsFamilyNameSEL, (void*)CFPD_FMFontDescriptor_V17::SetBsFamilyName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFMFontDescriptorSEL, FPDFMFontDescriptorGetCharsetSEL, (void*)CFPD_FMFontDescriptor_V17::GetCharset);
	}
};

// fpd_fontmgrImpl.h end

// In file fpd_fxxfaImpl.h
// fpd_fxxfaImpl.h end

// In file fpd_jsImpl.h
class CFPD_JSEngine_V17_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDJSEngineSEL, FPDJSEngineGetJSEngineSEL, (void*)CFPD_JSEngine_V17::GetJSEngine);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDJSEngineSEL, FPDJSEngineRunFieldCalculateSEL, (void*)CFPD_JSEngine_V17::RunFieldCalculate);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDJSEngineSEL, FPDJSEngineGetAppProviderSEL, (void*)CFPD_JSEngine_V17::GetAppProvider);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDJSEngineSEL, FPDJSEngineGetDocJSRuntimeSEL, (void*)CFPD_JSEngine_V17::GetDocJSRuntime);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDJSEngineSEL, FPDJSEngineSetJSRuntimeSEL, (void*)CFPD_JSEngine_V17::SetJSRuntime);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDJSEngineSEL, FPDJSEngineReleaseJSEngineSEL, (void*)CFPD_JSEngine_V17::ReleaseJSEngine);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDJSEngineSEL, FPDJSEngineRunDocJavaScriptSEL, (void*)CFPD_JSEngine_V17::RunDocJavaScript);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDJSEngineSEL, FPDJSEngineRunFieldJavaScriptSEL, (void*)CFPD_JSEngine_V17::RunFieldJavaScript);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDJSEngineSEL, FPDJSEngineRunFieldFormatSEL, (void*)CFPD_JSEngine_V17::RunFieldFormat);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDJSEngineSEL, FPDJSEngineRunLinkJavaScriptSEL, (void*)CFPD_JSEngine_V17::RunLinkJavaScript);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDJSEngineSEL, FPDJSEngineRunOutsideEnvSEL, (void*)CFPD_JSEngine_V17::RunOutsideEnv);
	}
};

class CFPD_JSAppProvider_V17_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDJSAppProviderSEL, FPDJSAppProviderGetReaderDocumentSEL, (void*)CFPD_JSAppProvider_V17::GetReaderDocument);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDJSAppProviderSEL, FPDJSAppProviderJSSetValueNotifySEL, (void*)CFPD_JSAppProvider_V17::JSSetValueNotify);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDJSAppProviderSEL, FPDJSAppProviderExecuteNamedActionSEL, (void*)CFPD_JSAppProvider_V17::ExecuteNamedAction);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDJSAppProviderSEL, FPDJSAppProviderOpenURLSEL, (void*)CFPD_JSAppProvider_V17::OpenURL);
	}
};

class CFPD_JSRuntime_V17_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDJSRuntimeSEL, FPDJSRuntimeNewContextSEL, (void*)CFPD_JSRuntime_V17::NewContext);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDJSRuntimeSEL, FPDJSRuntimeReleaseContextSEL, (void*)CFPD_JSRuntime_V17::ReleaseContext);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDJSRuntimeSEL, FPDJSRuntimeSetReaderDocumentSEL, (void*)CFPD_JSRuntime_V17::SetReaderDocument);
	}
};

class CFPD_JSContext_V17_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDJSContextSEL, FPDJSContextOnField_CalculateSEL, (void*)CFPD_JSContext_V17::OnField_Calculate);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDJSContextSEL, FPDJSContextRunScriptSEL, (void*)CFPD_JSContext_V17::RunScript);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDJSContextSEL, FPDJSContextOnDocOpenSEL, (void*)CFPD_JSContext_V17::OnDocOpen);
	}
};

class CFPD_JSFieldAction_V17_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDJSFieldActionSEL, FPDJSFieldActionNewSEL, (void*)CFPD_JSFieldAction_V17::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDJSFieldActionSEL, FPDJSFieldActionDeleteSEL, (void*)CFPD_JSFieldAction_V17::Delete);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDJSFieldActionSEL, FPDJSFieldActionGetbModifierSEL, (void*)CFPD_JSFieldAction_V17::GetbModifier);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDJSFieldActionSEL, FPDJSFieldActionSetbModifierSEL, (void*)CFPD_JSFieldAction_V17::SetbModifier);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDJSFieldActionSEL, FPDJSFieldActionGetbShiftSEL, (void*)CFPD_JSFieldAction_V17::GetbShift);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDJSFieldActionSEL, FPDJSFieldActionSetbShiftSEL, (void*)CFPD_JSFieldAction_V17::SetbShift);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDJSFieldActionSEL, FPDJSFieldActionGetCommitKeySEL, (void*)CFPD_JSFieldAction_V17::GetCommitKey);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDJSFieldActionSEL, FPDJSFieldActionSetCommitKeySEL, (void*)CFPD_JSFieldAction_V17::SetCommitKey);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDJSFieldActionSEL, FPDJSFieldActionGetChangeSEL, (void*)CFPD_JSFieldAction_V17::GetChange);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDJSFieldActionSEL, FPDJSFieldActionSetChangeSEL, (void*)CFPD_JSFieldAction_V17::SetChange);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDJSFieldActionSEL, FPDJSFieldActionGetChangeExSEL, (void*)CFPD_JSFieldAction_V17::GetChangeEx);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDJSFieldActionSEL, FPDJSFieldActionSetChangeExSEL, (void*)CFPD_JSFieldAction_V17::SetChangeEx);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDJSFieldActionSEL, FPDJSFieldActionGetbKeyDownSEL, (void*)CFPD_JSFieldAction_V17::GetbKeyDown);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDJSFieldActionSEL, FPDJSFieldActionSetbKeyDownSEL, (void*)CFPD_JSFieldAction_V17::SetbKeyDown);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDJSFieldActionSEL, FPDJSFieldActionGetSelEndSEL, (void*)CFPD_JSFieldAction_V17::GetSelEnd);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDJSFieldActionSEL, FPDJSFieldActionSetSelEndSEL, (void*)CFPD_JSFieldAction_V17::SetSelEnd);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDJSFieldActionSEL, FPDJSFieldActionGetSelStartSEL, (void*)CFPD_JSFieldAction_V17::GetSelStart);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDJSFieldActionSEL, FPDJSFieldActionSetSelStartSEL, (void*)CFPD_JSFieldAction_V17::SetSelStart);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDJSFieldActionSEL, FPDJSFieldActionGetValueSEL, (void*)CFPD_JSFieldAction_V17::GetValue);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDJSFieldActionSEL, FPDJSFieldActionSetValueSEL, (void*)CFPD_JSFieldAction_V17::SetValue);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDJSFieldActionSEL, FPDJSFieldActionGetbWillCommitSEL, (void*)CFPD_JSFieldAction_V17::GetbWillCommit);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDJSFieldActionSEL, FPDJSFieldActionSetbWillCommitSEL, (void*)CFPD_JSFieldAction_V17::SetbWillCommit);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDJSFieldActionSEL, FPDJSFieldActionGetbFieldFullSEL, (void*)CFPD_JSFieldAction_V17::GetbFieldFull);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDJSFieldActionSEL, FPDJSFieldActionSetbFieldFullSEL, (void*)CFPD_JSFieldAction_V17::SetbFieldFull);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDJSFieldActionSEL, FPDJSFieldActionGetbRCSEL, (void*)CFPD_JSFieldAction_V17::GetbRC);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDJSFieldActionSEL, FPDJSFieldActionSetbRCSEL, (void*)CFPD_JSFieldAction_V17::SetbRC);
	}
};

class CFPD_JSDocumentProvider_V17_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDJSDocumentProviderSEL, FPDJSDocumentProviderGetInterFormSEL, (void*)CFPD_JSDocumentProvider_V17::GetInterForm);
	}
};

class CFPD_JSFormProvider_V17_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDJSFormProviderSEL, FPDJSFormProviderSubmitFormSEL, (void*)CFPD_JSFormProvider_V17::SubmitForm);
	}
};

// fpd_jsImpl.h end

// In file fpd_lrImpl.h
class CFPD_LRAnalysisOptions_V17_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLRAnalysisOptionsSEL, FPDLRAnalysisOptionsSetOptionStringSEL, (void*)CFPD_LRAnalysisOptions_V17::SetOptionString);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLRAnalysisOptionsSEL, FPDLRAnalysisOptionsGetSupportedOptionsSEL, (void*)CFPD_LRAnalysisOptions_V17::GetSupportedOptions);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLRAnalysisOptionsSEL, FPDLRAnalysisOptionsSetOptionIntegerSEL, (void*)CFPD_LRAnalysisOptions_V17::SetOptionInteger);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLRAnalysisOptionsSEL, FPDLRAnalysisOptionsSetOptionFloatSEL, (void*)CFPD_LRAnalysisOptions_V17::SetOptionFloat);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLRAnalysisOptionsSEL, FPDLRAnalysisOptionsSetOptionBooleanSEL, (void*)CFPD_LRAnalysisOptions_V17::SetOptionBoolean);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLRAnalysisOptionsSEL, FPDLRAnalysisOptionsSetOptionFloatRectSEL, (void*)CFPD_LRAnalysisOptions_V17::SetOptionFloatRect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDLRAnalysisOptionsSEL, FPDLRAnalysisOptionsSetOptionOCContextSEL, (void*)CFPD_LRAnalysisOptions_V17::SetOptionOCContext);
	}
};

// fpd_lrImpl.h end

// In file fpd_mathImpl.h
class CFPD_MathGraphics_V17_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDMathGraphicsSEL, FPDMathGraphicsGetGraphicsSEL, (void*)CFPD_MathGraphics_V17::GetGraphics);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDMathGraphicsSEL, FPDMathGraphicsDifferenceSEL, (void*)CFPD_MathGraphics_V17::Difference);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDMathGraphicsSEL, FPDMathGraphicsIntersectionSEL, (void*)CFPD_MathGraphics_V17::Intersection);
	}
};

// fpd_mathImpl.h end

// In file fpd_objsImpl.h
// fpd_objsImpl.h end

// In file fpd_pageImpl.h
// fpd_pageImpl.h end

// In file fpd_pageobjImpl.h
class CFPD_PathData_V17_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPathDataSEL, FPDPathDataNewSEL, (void*)CFPD_PathData_V17::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPathDataSEL, FPDPathDataNew2SEL, (void*)CFPD_PathData_V17::New2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPathDataSEL, FPDPathDataDestrotySEL, (void*)CFPD_PathData_V17::Destroty);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPathDataSEL, FPDPathDataGetPointCountSEL, (void*)CFPD_PathData_V17::GetPointCount);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPathDataSEL, FPDPathDataGetFlagSEL, (void*)CFPD_PathData_V17::GetFlag);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPathDataSEL, FPDPathDataGetPointXSEL, (void*)CFPD_PathData_V17::GetPointX);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPathDataSEL, FPDPathDataGetPointYSEL, (void*)CFPD_PathData_V17::GetPointY);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPathDataSEL, FPDPathDataGetPointSEL, (void*)CFPD_PathData_V17::GetPoint);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPathDataSEL, FPDPathDataSetPointCountSEL, (void*)CFPD_PathData_V17::SetPointCount);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPathDataSEL, FPDPathDataAllocPointCountSEL, (void*)CFPD_PathData_V17::AllocPointCount);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPathDataSEL, FPDPathDataAddPointCountSEL, (void*)CFPD_PathData_V17::AddPointCount);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPathDataSEL, FPDPathDataGetBoundingBoxSEL, (void*)CFPD_PathData_V17::GetBoundingBox);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPathDataSEL, FPDPathDataGetBoundingBox2SEL, (void*)CFPD_PathData_V17::GetBoundingBox2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPathDataSEL, FPDPathDataTransformSEL, (void*)CFPD_PathData_V17::Transform);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPathDataSEL, FPDPathDataAppendSEL, (void*)CFPD_PathData_V17::Append);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPathDataSEL, FPDPathDataAppendRectSEL, (void*)CFPD_PathData_V17::AppendRect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPathDataSEL, FPDPathDataSetPointSEL, (void*)CFPD_PathData_V17::SetPoint);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPathDataSEL, FPDPathDataTrimPointsSEL, (void*)CFPD_PathData_V17::TrimPoints);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPathDataSEL, FPDPathDataCopySEL, (void*)CFPD_PathData_V17::Copy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDPathDataSEL, FPDPathDataIsRectSEL, (void*)CFPD_PathData_V17::IsRect);
	}
};

// fpd_pageobjImpl.h end

// In file fpd_parserImpl.h
class CFPD_SyntaxParser_V17_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSyntaxParserSEL, FPDSyntaxParserNewSEL, (void*)CFPD_SyntaxParser_V17::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSyntaxParserSEL, FPDSyntaxParserDestroySEL, (void*)CFPD_SyntaxParser_V17::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSyntaxParserSEL, FPDSyntaxParserInitParserSEL, (void*)CFPD_SyntaxParser_V17::InitParser);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSyntaxParserSEL, FPDSyntaxParserGetObjectSEL, (void*)CFPD_SyntaxParser_V17::GetObject);
	}
};

// fpd_parserImpl.h end

// In file fpd_psiImpl.h
class CFPD_FXGInkPath_V17_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFXGInkPathSEL, FPDFXGInkPathAddPointSEL, (void*)CFPD_FXGInkPath_V17::AddPoint);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFXGInkPathSEL, FPDFXGInkPathGeneratePSISEL, (void*)CFPD_FXGInkPath_V17::GeneratePSI);
	}
};

class CFPD_FXGPaintModuleMgr_V17_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFXGPaintModuleMgrSEL, FPDFXGPaintModuleMgrCreateSEL, (void*)CFPD_FXGPaintModuleMgr_V17::Create);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFXGPaintModuleMgrSEL, FPDFXGPaintModuleMgrDestroySEL, (void*)CFPD_FXGPaintModuleMgr_V17::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFXGPaintModuleMgrSEL, FPDFXGPaintModuleMgrGetCanvasSEL, (void*)CFPD_FXGPaintModuleMgr_V17::GetCanvas);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFXGPaintModuleMgrSEL, FPDFXGPaintModuleMgrGetPaintSEL, (void*)CFPD_FXGPaintModuleMgr_V17::GetPaint);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFXGPaintModuleMgrSEL, FPDFXGPaintModuleMgrSetCacheLimitSEL, (void*)CFPD_FXGPaintModuleMgr_V17::SetCacheLimit);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFXGPaintModuleMgrSEL, FPDFXGPaintModuleMgrCreatePaintNibSEL, (void*)CFPD_FXGPaintModuleMgr_V17::CreatePaintNib);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFXGPaintModuleMgrSEL, FPDFXGPaintModuleMgrDestroyPaintNibSEL, (void*)CFPD_FXGPaintModuleMgr_V17::DestroyPaintNib);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFXGPaintModuleMgrSEL, FPDFXGPaintModuleMgrLoadPaintNibSEL, (void*)CFPD_FXGPaintModuleMgr_V17::LoadPaintNib);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFXGPaintModuleMgrSEL, FPDFXGPaintModuleMgrSavePaintNibSEL, (void*)CFPD_FXGPaintModuleMgr_V17::SavePaintNib);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFXGPaintModuleMgrSEL, FPDFXGPaintModuleMgrListAllPaintNibSEL, (void*)CFPD_FXGPaintModuleMgr_V17::ListAllPaintNib);
	}
};

class CFPD_FXGNIBParams_V17_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFXGNIBParamsSEL, FPDFXGNIBParamsSetbFlipXSEL, (void*)CFPD_FXGNIBParams_V17::SetbFlipX);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFXGNIBParamsSEL, FPDFXGNIBParamsSetbFlipYSEL, (void*)CFPD_FXGNIBParams_V17::SetbFlipY);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFXGNIBParamsSEL, FPDFXGNIBParamsCreateSEL, (void*)CFPD_FXGNIBParams_V17::Create);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFXGNIBParamsSEL, FPDFXGNIBParamsDeleteSEL, (void*)CFPD_FXGNIBParams_V17::Delete);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFXGNIBParamsSEL, FPDFXGNIBParamsGetDiameterSEL, (void*)CFPD_FXGNIBParams_V17::GetDiameter);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFXGNIBParamsSEL, FPDFXGNIBParamsSetDiameterSEL, (void*)CFPD_FXGNIBParams_V17::SetDiameter);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFXGNIBParamsSEL, FPDFXGNIBParamsGetbFlipXSEL, (void*)CFPD_FXGNIBParams_V17::GetbFlipX);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFXGNIBParamsSEL, FPDFXGNIBParamsGetbFlipYSEL, (void*)CFPD_FXGNIBParams_V17::GetbFlipY);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFXGNIBParamsSEL, FPDFXGNIBParamsGetAngleSEL, (void*)CFPD_FXGNIBParams_V17::GetAngle);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFXGNIBParamsSEL, FPDFXGNIBParamsSetAngleSEL, (void*)CFPD_FXGNIBParams_V17::SetAngle);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFXGNIBParamsSEL, FPDFXGNIBParamsGetRoundnessSEL, (void*)CFPD_FXGNIBParams_V17::GetRoundness);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFXGNIBParamsSEL, FPDFXGNIBParamsSetRoundnessSEL, (void*)CFPD_FXGNIBParams_V17::SetRoundness);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFXGNIBParamsSEL, FPDFXGNIBParamsGetDashScaleSEL, (void*)CFPD_FXGNIBParams_V17::GetDashScale);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFXGNIBParamsSEL, FPDFXGNIBParamsSetDashScaleSEL, (void*)CFPD_FXGNIBParams_V17::SetDashScale);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFXGNIBParamsSEL, FPDFXGNIBParamsGetHardnessSEL, (void*)CFPD_FXGNIBParams_V17::GetHardness);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFXGNIBParamsSEL, FPDFXGNIBParamsSetHardnessSEL, (void*)CFPD_FXGNIBParams_V17::SetHardness);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFXGNIBParamsSEL, FPDFXGNIBParamsGetPathSEL, (void*)CFPD_FXGNIBParams_V17::GetPath);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFXGNIBParamsSEL, FPDFXGNIBParamsSetPathSEL, (void*)CFPD_FXGNIBParams_V17::SetPath);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFXGNIBParamsSEL, FPDFXGNIBParamsGetPatternSEL, (void*)CFPD_FXGNIBParams_V17::GetPattern);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFXGNIBParamsSEL, FPDFXGNIBParamsSetPatternSEL, (void*)CFPD_FXGNIBParams_V17::SetPattern);
	}
};

class CFPD_FXGCanvas_V17_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFXGCanvasSEL, FPDFXGCanvasCreateSEL, (void*)CFPD_FXGCanvas_V17::Create);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFXGCanvasSEL, FPDFXGCanvasDestroySEL, (void*)CFPD_FXGCanvas_V17::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFXGCanvasSEL, FPDFXGCanvasSetFilterNotifySEL, (void*)CFPD_FXGCanvas_V17::SetFilterNotify);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFXGCanvasSEL, FPDFXGCanvasAttachLayerSEL, (void*)CFPD_FXGCanvas_V17::AttachLayer);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFXGCanvasSEL, FPDFXGCanvasCreateLayerSEL, (void*)CFPD_FXGCanvas_V17::CreateLayer);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFXGCanvasSEL, FPDFXGCanvasSetFGColorSEL, (void*)CFPD_FXGCanvas_V17::SetFGColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFXGCanvasSEL, FPDFXGCanvasSetBGColorSEL, (void*)CFPD_FXGCanvas_V17::SetBGColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFXGCanvasSEL, FPDFXGCanvasSetActiveChannelSEL, (void*)CFPD_FXGCanvas_V17::SetActiveChannel);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFXGCanvasSEL, FPDFXGCanvasGetFilterNotifySEL, (void*)CFPD_FXGCanvas_V17::GetFilterNotify);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFXGCanvasSEL, FPDFXGCanvasGetLayerSEL, (void*)CFPD_FXGCanvas_V17::GetLayer);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFXGCanvasSEL, FPDFXGCanvasGetFGColorSEL, (void*)CFPD_FXGCanvas_V17::GetFGColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFXGCanvasSEL, FPDFXGCanvasGetBGColorSEL, (void*)CFPD_FXGCanvas_V17::GetBGColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFXGCanvasSEL, FPDFXGCanvasGetActiveChannelSEL, (void*)CFPD_FXGCanvas_V17::GetActiveChannel);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFXGCanvasSEL, FPDFXGCanvasCreateFilterNofitySEL, (void*)CFPD_FXGCanvas_V17::CreateFilterNofity);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFXGCanvasSEL, FPDFXGCanvasDeleteFilterNofitySEL, (void*)CFPD_FXGCanvas_V17::DeleteFilterNofity);
	}
};

class CFPD_FXGPaintNib_V17_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFXGPaintNibSEL, FPDFXGPaintNibGetTypeSEL, (void*)CFPD_FXGPaintNib_V17::GetType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFXGPaintNibSEL, FPDFXGPaintNibGetNibSEL, (void*)CFPD_FXGPaintNib_V17::GetNib);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFXGPaintNibSEL, FPDFXGPaintNibGetNameSEL, (void*)CFPD_FXGPaintNib_V17::GetName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFXGPaintNibSEL, FPDFXGPaintNibGetParamsSEL, (void*)CFPD_FXGPaintNib_V17::GetParams);
	}
};

class CFPD_FXGPaintRenderOption_V17_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFXGPaintRenderOptionSEL, FPDFXGPaintRenderOptionCreateSEL, (void*)CFPD_FXGPaintRenderOption_V17::Create);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFXGPaintRenderOptionSEL, FPDFXGPaintRenderOptionDestroySEL, (void*)CFPD_FXGPaintRenderOption_V17::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFXGPaintRenderOptionSEL, FPDFXGPaintRenderOptionGetBlendModeSEL, (void*)CFPD_FXGPaintRenderOption_V17::GetBlendMode);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFXGPaintRenderOptionSEL, FPDFXGPaintRenderOptionGetOpacitySEL, (void*)CFPD_FXGPaintRenderOption_V17::GetOpacity);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFXGPaintRenderOptionSEL, FPDFXGPaintRenderOptionGetFlowSEL, (void*)CFPD_FXGPaintRenderOption_V17::GetFlow);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFXGPaintRenderOptionSEL, FPDFXGPaintRenderOptionGetAutoEraseSEL, (void*)CFPD_FXGPaintRenderOption_V17::GetAutoErase);
	}
};

class CFPD_FXGPaint_V17_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFXGPaintSEL, FPDFXGPaintGetPaintTypeSEL, (void*)CFPD_FXGPaint_V17::GetPaintType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFXGPaintSEL, FPDFXGPaintGetInkPathSEL, (void*)CFPD_FXGPaint_V17::GetInkPath);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFXGPaintSEL, FPDFXGPaintAddPathFilterSEL, (void*)CFPD_FXGPaint_V17::AddPathFilter);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFXGPaintSEL, FPDFXGPaintRemovePathFilterSEL, (void*)CFPD_FXGPaint_V17::RemovePathFilter);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFXGPaintSEL, FPDFXGPaintGetPaintNibSEL, (void*)CFPD_FXGPaint_V17::GetPaintNib);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFXGPaintSEL, FPDFXGPaintSetPaintNibSEL, (void*)CFPD_FXGPaint_V17::SetPaintNib);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFXGPaintSEL, FPDFXGPaintSetRenderOptionSEL, (void*)CFPD_FXGPaint_V17::SetRenderOption);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFXGPaintSEL, FPDFXGPaintGetFilterTypeSEL, (void*)CFPD_FXGPaint_V17::GetFilterType);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFXGPaintSEL, FPDFXGPaintSetCanvasSEL, (void*)CFPD_FXGPaint_V17::SetCanvas);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFXGPaintSEL, FPDFXGPaintGetCanvasSEL, (void*)CFPD_FXGPaint_V17::GetCanvas);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFXGPaintSEL, FPDFXGPaintPrepareSEL, (void*)CFPD_FXGPaint_V17::Prepare);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFXGPaintSEL, FPDFXGPaintRenderSEL, (void*)CFPD_FXGPaint_V17::Render);
	}
};

// fpd_psiImpl.h end

// In file fpd_pwlImpl.h
class CFPD_CPWLListBox_V17_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLListBoxSEL, FPDCPWLListBoxNewSEL, (void*)CFPD_CPWLListBox_V17::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLListBoxSEL, FPDCPWLListBoxDeleteSEL, (void*)CFPD_CPWLListBox_V17::Delete);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLListBoxSEL, FPDCPWLListBoxCastToCPWLWndSEL, (void*)CFPD_CPWLListBox_V17::CastToCPWLWnd);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLListBoxSEL, FPDCPWLListBoxAddStringSEL, (void*)CFPD_CPWLListBox_V17::AddString);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLListBoxSEL, FPDCPWLListBoxGetTopVisibleIndexSEL, (void*)CFPD_CPWLListBox_V17::GetTopVisibleIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLListBoxSEL, FPDCPWLListBoxSelectSEL, (void*)CFPD_CPWLListBox_V17::Select);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLListBoxSEL, FPDCPWLListBoxSetTopVisibleIndexSEL, (void*)CFPD_CPWLListBox_V17::SetTopVisibleIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLListBoxSEL, FPDCPWLListBoxSetSelectBackColorSEL, (void*)CFPD_CPWLListBox_V17::SetSelectBackColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLListBoxSEL, FPDCPWLListBoxSetSelectTextColorSEL, (void*)CFPD_CPWLListBox_V17::SetSelectTextColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLListBoxSEL, FPDCPWLListBoxGetCurSelSEL, (void*)CFPD_CPWLListBox_V17::GetCurSel);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLListBoxSEL, FPDCPWLListBoxGetCountSEL, (void*)CFPD_CPWLListBox_V17::GetCount);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLListBoxSEL, FPDCPWLListBoxIsItemSelectedSEL, (void*)CFPD_CPWLListBox_V17::IsItemSelected);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLListBoxSEL, FPDCPWLListBoxGetFontSizeSEL, (void*)CFPD_CPWLListBox_V17::GetFontSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLListBoxSEL, FPDCPWLListBoxSetCaretSEL, (void*)CFPD_CPWLListBox_V17::SetCaret);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLListBoxSEL, FPDCPWLListBoxCastToWndSEL, (void*)CFPD_CPWLListBox_V17::CastToWnd);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLListBoxSEL, FPDCPWLListBoxGetFromWndSEL, (void*)CFPD_CPWLListBox_V17::GetFromWnd);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLListBoxSEL, FPDCPWLListBoxGetTextSEL, (void*)CFPD_CPWLListBox_V17::GetText);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLListBoxSEL, FPDCPWLListBoxSetFillerNotifySEL, (void*)CFPD_CPWLListBox_V17::SetFillerNotify);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLListBoxSEL, FPDCPWLListBoxGetControlListSEL, (void*)CFPD_CPWLListBox_V17::GetControlList);
	}
};

class CFPD_CPWLComboBox_V17_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLComboBoxSEL, FPDCPWLComboBoxNewSEL, (void*)CFPD_CPWLComboBox_V17::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLComboBoxSEL, FPDCPWLComboBoxDeleteSEL, (void*)CFPD_CPWLComboBox_V17::Delete);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLComboBoxSEL, FPDCPWLComboBoxAddStringSEL, (void*)CFPD_CPWLComboBox_V17::AddString);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLComboBoxSEL, FPDCPWLComboBoxGetSelectSEL, (void*)CFPD_CPWLComboBox_V17::GetSelect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLComboBoxSEL, FPDCPWLComboBoxSetSelectSEL, (void*)CFPD_CPWLComboBox_V17::SetSelect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLComboBoxSEL, FPDCPWLComboBoxGetLastSelectSEL, (void*)CFPD_CPWLComboBox_V17::GetLastSelect);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLComboBoxSEL, FPDCPWLComboBoxGetTextSEL, (void*)CFPD_CPWLComboBox_V17::GetText);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLComboBoxSEL, FPDCPWLComboBoxSetTextSEL, (void*)CFPD_CPWLComboBox_V17::SetText);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLComboBoxSEL, FPDCPWLComboBoxSelectAllSEL, (void*)CFPD_CPWLComboBox_V17::SelectAll);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLComboBoxSEL, FPDCPWLComboBoxGetListFontSizeSEL, (void*)CFPD_CPWLComboBox_V17::GetListFontSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLComboBoxSEL, FPDCPWLComboBoxCastToWndSEL, (void*)CFPD_CPWLComboBox_V17::CastToWnd);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLComboBoxSEL, FPDCPWLComboBoxGetFromWndSEL, (void*)CFPD_CPWLComboBox_V17::GetFromWnd);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLComboBoxSEL, FPDCPWLComboBoxSetEditSelSEL, (void*)CFPD_CPWLComboBox_V17::SetEditSel);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLComboBoxSEL, FPDCPWLComboBoxGetEditSelSEL, (void*)CFPD_CPWLComboBox_V17::GetEditSel);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLComboBoxSEL, FPDCPWLComboBoxSetFillerNotifySEL, (void*)CFPD_CPWLComboBox_V17::SetFillerNotify);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLComboBoxSEL, FPDCPWLComboBoxGetEditSEL, (void*)CFPD_CPWLComboBox_V17::GetEdit);
	}
};

class CFPD_CPWLCheckBox_V17_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLCheckBoxSEL, FPDCPWLCheckBoxNewSEL, (void*)CFPD_CPWLCheckBox_V17::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLCheckBoxSEL, FPDCPWLCheckBoxDeleteSEL, (void*)CFPD_CPWLCheckBox_V17::Delete);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLCheckBoxSEL, FPDCPWLCheckBoxSetCheckSEL, (void*)CFPD_CPWLCheckBox_V17::SetCheck);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLCheckBoxSEL, FPDCPWLCheckBoxIsCheckedSEL, (void*)CFPD_CPWLCheckBox_V17::IsChecked);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLCheckBoxSEL, FPDCPWLCheckBoxCastToWndSEL, (void*)CFPD_CPWLCheckBox_V17::CastToWnd);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLCheckBoxSEL, FPDCPWLCheckBoxGetFromWndSEL, (void*)CFPD_CPWLCheckBox_V17::GetFromWnd);
	}
};

class CFPD_CPWLRadioButton_V17_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLRadioButtonSEL, FPDCPWLRadioButtonNewSEL, (void*)CFPD_CPWLRadioButton_V17::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLRadioButtonSEL, FPDCPWLRadioButtonDeleteSEL, (void*)CFPD_CPWLRadioButton_V17::Delete);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLRadioButtonSEL, FPDCPWLRadioButtonSetCheckSEL, (void*)CFPD_CPWLRadioButton_V17::SetCheck);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLRadioButtonSEL, FPDCPWLRadioButtonIsCheckedSEL, (void*)CFPD_CPWLRadioButton_V17::IsChecked);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLRadioButtonSEL, FPDCPWLRadioButtonCastToWndSEL, (void*)CFPD_CPWLRadioButton_V17::CastToWnd);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLRadioButtonSEL, FPDCPWLRadioButtonGetFromWndSEL, (void*)CFPD_CPWLRadioButton_V17::GetFromWnd);
	}
};

class CFPD_CPWLPushButton_V17_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLPushButtonSEL, FPDCPWLPushButtonNewSEL, (void*)CFPD_CPWLPushButton_V17::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLPushButtonSEL, FPDCPWLPushButtonDeleteSEL, (void*)CFPD_CPWLPushButton_V17::Delete);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLPushButtonSEL, FPDCPWLPushButtonCastToWndSEL, (void*)CFPD_CPWLPushButton_V17::CastToWnd);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLPushButtonSEL, FPDCPWLPushButtonGetFromWndSEL, (void*)CFPD_CPWLPushButton_V17::GetFromWnd);
	}
};

class CFPD_CPWLIcon_V17_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLIconSEL, FPDCPWLIconNewSEL, (void*)CFPD_CPWLIcon_V17::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLIconSEL, FPDCPWLIconDeleteSEL, (void*)CFPD_CPWLIcon_V17::Delete);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLIconSEL, FPDCPWLIconGetScaleMethodSEL, (void*)CFPD_CPWLIcon_V17::GetScaleMethod);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLIconSEL, FPDCPWLIconIsProportionalScaleSEL, (void*)CFPD_CPWLIcon_V17::IsProportionalScale);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLIconSEL, FPDCPWLIconGetIconPositionSEL, (void*)CFPD_CPWLIcon_V17::GetIconPosition);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLIconSEL, FPDCPWLIconGetFittingBoundsSEL, (void*)CFPD_CPWLIcon_V17::GetFittingBounds);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLIconSEL, FPDCPWLIconSetIconFitSEL, (void*)CFPD_CPWLIcon_V17::SetIconFit);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLIconSEL, FPDCPWLIconCastToImageSEL, (void*)CFPD_CPWLIcon_V17::CastToImage);
	}
};

class CFPD_CPWLEditCtrl_V17_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLEditCtrlSEL, FPDCPWLEditCtrlNewSEL, (void*)CFPD_CPWLEditCtrl_V17::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLEditCtrlSEL, FPDCPWLEditCtrlDeleteSEL, (void*)CFPD_CPWLEditCtrl_V17::Delete);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLEditCtrlSEL, FPDCPWLEditCtrlCastToWndSEL, (void*)CFPD_CPWLEditCtrl_V17::CastToWnd);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLEditCtrlSEL, FPDCPWLEditCtrlGetCharSetSEL, (void*)CFPD_CPWLEditCtrl_V17::GetCharSet);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLEditCtrlSEL, FPDCPWLEditCtrlGetFromWndSEL, (void*)CFPD_CPWLEditCtrl_V17::GetFromWnd);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLEditCtrlSEL, FPDCPWLEditCtrlGetCaretSEL, (void*)CFPD_CPWLEditCtrl_V17::GetCaret);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLEditCtrlSEL, FPDCPWLEditCtrlLoadCurrentWordPropsSEL, (void*)CFPD_CPWLEditCtrl_V17::LoadCurrentWordProps);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLEditCtrlSEL, FPDCPWLEditCtrlIsCJKSEL, (void*)CFPD_CPWLEditCtrl_V17::IsCJK);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLEditCtrlSEL, FPDCPWLEditCtrlGetCaretPosSEL, (void*)CFPD_CPWLEditCtrl_V17::GetCaretPos);
	}
};

class CFPD_SpellCheck_V17_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSpellCheckSEL, FPDSpellCheckNewSEL, (void*)CFPD_SpellCheck_V17::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSpellCheckSEL, FPDSpellCheckDeleteSEL, (void*)CFPD_SpellCheck_V17::Delete);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSpellCheckSEL, FPDSpellCheckCheckWordSEL, (void*)CFPD_SpellCheck_V17::CheckWord);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSpellCheckSEL, FPDSpellCheckSuggestWordsSEL, (void*)CFPD_SpellCheck_V17::SuggestWords);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSpellCheckSEL, FPDSpellCheckIsCurSCSupWordSEL, (void*)CFPD_SpellCheck_V17::IsCurSCSupWord);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSpellCheckSEL, FPDSpellCheckIsSCAvalibleSEL, (void*)CFPD_SpellCheck_V17::IsSCAvalible);
	}
};

class CFPD_CPWLSignature_V17_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLSignatureSEL, FPDCPWLSignatureNewSEL, (void*)CFPD_CPWLSignature_V17::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLSignatureSEL, FPDCPWLSignatureDeleteSEL, (void*)CFPD_CPWLSignature_V17::Delete);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLSignatureSEL, FPDCPWLSignatureSetIconTextSEL, (void*)CFPD_CPWLSignature_V17::SetIconText);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLSignatureSEL, FPDCPWLSignatureSetDescriptionSEL, (void*)CFPD_CPWLSignature_V17::SetDescription);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLSignatureSEL, FPDCPWLSignatureSetImageSEL, (void*)CFPD_CPWLSignature_V17::SetImage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLSignatureSEL, FPDCPWLSignatureSetImageStreamSEL, (void*)CFPD_CPWLSignature_V17::SetImageStream);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLSignatureSEL, FPDCPWLSignatureSetTextFlagSEL, (void*)CFPD_CPWLSignature_V17::SetTextFlag);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLSignatureSEL, FPDCPWLSignatureSetImageFlagSEL, (void*)CFPD_CPWLSignature_V17::SetImageFlag);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLSignatureSEL, FPDCPWLSignatureSetFoxitFlagSEL, (void*)CFPD_CPWLSignature_V17::SetFoxitFlag);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLSignatureSEL, FPDCPWLSignatureSetIconTextFontSizeSEL, (void*)CFPD_CPWLSignature_V17::SetIconTextFontSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLSignatureSEL, FPDCPWLSignatureSetDescriptionFontSizeSEL, (void*)CFPD_CPWLSignature_V17::SetDescriptionFontSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLSignatureSEL, FPDCPWLSignatureSetIconTextColorSEL, (void*)CFPD_CPWLSignature_V17::SetIconTextColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLSignatureSEL, FPDCPWLSignatureSetDescriptionColorSEL, (void*)CFPD_CPWLSignature_V17::SetDescriptionColor);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLSignatureSEL, FPDCPWLSignatureCastToWndSEL, (void*)CFPD_CPWLSignature_V17::CastToWnd);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCPWLSignatureSEL, FPDCPWLSignatureGetFromWndSEL, (void*)CFPD_CPWLSignature_V17::GetFromWnd);
	}
};

// fpd_pwlImpl.h end

// In file fpd_renderImpl.h
class CFPD_CustomCursorHandler_V17_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCustomCursorHandlerSEL, FPDCustomCursorHandlerNewSEL, (void*)CFPD_CustomCursorHandler_V17::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCustomCursorHandlerSEL, FPDCustomCursorHandlerDeleteSEL, (void*)CFPD_CustomCursorHandler_V17::Delete);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCustomCursorHandlerSEL, FPDCustomCursorHandlerSetCustomCursorSEL, (void*)CFPD_CustomCursorHandler_V17::SetCustomCursor);
	}
};

// fpd_renderImpl.h end

// In file fpd_resourceImpl.h
// fpd_resourceImpl.h end

// In file fpd_serialImpl.h
class CFPD_CustomCryptoHandler_V17_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCustomCryptoHandlerSEL, FPDCustomCryptoHandlerCreateSEL, (void*)CFPD_CustomCryptoHandler_V17::Create);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDCustomCryptoHandlerSEL, FPDCustomCryptoHandlerDestroySEL, (void*)CFPD_CustomCryptoHandler_V17::Destroy);
	}
};

// fpd_serialImpl.h end

// In file fpd_textImpl.h
// fpd_textImpl.h end

// In file fpd_validateImpl.h
class CFPD_OprCallback_V17_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOprCallbackSEL, FPDOprCallbackCreateSEL, (void*)CFPD_OprCallback_V17::Create);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDOprCallbackSEL, FPDOprCallbackDestroySEL, (void*)CFPD_OprCallback_V17::Destroy);
	}
};

class CFPD_Fix_V17_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFixSEL, FPDFixCreateSEL, (void*)CFPD_Fix_V17::Create);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFixSEL, FPDFixDestroySEL, (void*)CFPD_Fix_V17::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFixSEL, FPDFixEnableAllPagesSEL, (void*)CFPD_Fix_V17::EnableAllPages);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFixSEL, FPDFixEnablePageSEL, (void*)CFPD_Fix_V17::EnablePage);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFixSEL, FPDFixStartSEL, (void*)CFPD_Fix_V17::Start);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFixSEL, FPDFixContinueSEL, (void*)CFPD_Fix_V17::Continue);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDFixSEL, FPDFixNextFeedbackItemSEL, (void*)CFPD_Fix_V17::NextFeedbackItem);
	}
};

class CFPD_ValidatorFeedbackItemRoleMap_V17_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDValidatorFeedbackItemRoleMapSEL, FPDValidatorFeedbackItemRoleMapCreateSEL, (void*)CFPD_ValidatorFeedbackItemRoleMap_V17::Create);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDValidatorFeedbackItemRoleMapSEL, FPDValidatorFeedbackItemRoleMapDestroySEL, (void*)CFPD_ValidatorFeedbackItemRoleMap_V17::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDValidatorFeedbackItemRoleMapSEL, FPDValidatorFeedbackItemRoleMapGetRolesSEL, (void*)CFPD_ValidatorFeedbackItemRoleMap_V17::GetRoles);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDValidatorFeedbackItemRoleMapSEL, FPDValidatorFeedbackItemRoleMapSetRolesSEL, (void*)CFPD_ValidatorFeedbackItemRoleMap_V17::SetRoles);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDValidatorFeedbackItemRoleMapSEL, FPDValidatorFeedbackItemRoleMapCastToValidatorFeedbackItemSEL, (void*)CFPD_ValidatorFeedbackItemRoleMap_V17::CastToValidatorFeedbackItem);
	}
};

class CFPD_ValidatorFeedbackItemMarkInfo_V17_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDValidatorFeedbackItemMarkInfoSEL, FPDValidatorFeedbackItemMarkInfoCreateSEL, (void*)CFPD_ValidatorFeedbackItemMarkInfo_V17::Create);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDValidatorFeedbackItemMarkInfoSEL, FPDValidatorFeedbackItemMarkInfoDestroySEL, (void*)CFPD_ValidatorFeedbackItemMarkInfo_V17::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDValidatorFeedbackItemMarkInfoSEL, FPDValidatorFeedbackItemMarkInfoGetRolesSEL, (void*)CFPD_ValidatorFeedbackItemMarkInfo_V17::GetRoles);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDValidatorFeedbackItemMarkInfoSEL, FPDValidatorFeedbackItemMarkInfoSetRolesSEL, (void*)CFPD_ValidatorFeedbackItemMarkInfo_V17::SetRoles);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDValidatorFeedbackItemMarkInfoSEL, FPDValidatorFeedbackItemMarkInfoCastToValidatorFeedbackItemSEL, (void*)CFPD_ValidatorFeedbackItemMarkInfo_V17::CastToValidatorFeedbackItem);
	}
};

// fpd_validateImpl.h end

//----------_V18----------
// In file fs_basicImpl.h
// fs_basicImpl.h end

// In file fs_stringImpl.h
// fs_stringImpl.h end

// In file fdrm_descImpl.h
// fdrm_descImpl.h end

// In file fdrm_managerImpl.h
// fdrm_managerImpl.h end

// In file fdrm_pdfImpl.h
// fdrm_pdfImpl.h end

// In file fdrm_pkiImpl.h
// fdrm_pkiImpl.h end

// In file fhtml_impl.h
// fhtml_impl.h end

// In file fr_appImpl.h
// fr_appImpl.h end

// In file fr_barImpl.h
// fr_barImpl.h end

// In file fr_docImpl.h
// fr_docImpl.h end

// In file fr_fxnetappImpl.h
// fr_fxnetappImpl.h end

// In file fr_menuImpl.h
// fr_menuImpl.h end

// In file fr_sysImpl.h
// fr_sysImpl.h end

// In file fr_viewImpl.h
// fr_viewImpl.h end

// In file middle_imagecompressImpl.h
// middle_imagecompressImpl.h end

// In file middle_optimizeImpl.h
// middle_optimizeImpl.h end

// In file middle_pdfImpl.h
// middle_pdfImpl.h end

// In file middle_portfolioImpl.h
// middle_portfolioImpl.h end

// In file middle_preflightImpl.h
// middle_preflightImpl.h end

// In file fofd_basicImpl.h
// fofd_basicImpl.h end

// In file fofd_docImpl.h
// fofd_docImpl.h end

// In file fofd_pageImpl.h
// fofd_pageImpl.h end

// In file fofd_renderImpl.h
// fofd_renderImpl.h end

// In file fofd_sigImpl.h
// fofd_sigImpl.h end

// In file fpd_3DImpl.h
// fpd_3DImpl.h end

// In file fpd_barcodeImpl.h
// fpd_barcodeImpl.h end

// In file fpd_convertImpl.h
// fpd_convertImpl.h end

// In file fpd_docImpl.h
class CFPD_SSLServerNoifyNotify_V18_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSSLServerNoifyNotifySEL, FPDSSLServerNoifyNotifyCreateSEL, (void*)CFPD_SSLServerNoifyNotify_V18::Create);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSSLServerNoifyNotifySEL, FPDSSLServerNoifyNotifyCreateDefaultSEL, (void*)CFPD_SSLServerNoifyNotify_V18::CreateDefault);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSSLServerNoifyNotifySEL, FPDSSLServerNoifyNotifyDestroySEL, (void*)CFPD_SSLServerNoifyNotify_V18::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSSLServerNoifyNotifySEL, FPDSSLServerNoifyNotifyGetTimeStampSEL, (void*)CFPD_SSLServerNoifyNotify_V18::GetTimeStamp);
	}
};

// fpd_docImpl.h end

// In file fpd_editImpl.h
// fpd_editImpl.h end

// In file fpd_epubImpl.h
// fpd_epubImpl.h end

// In file fpd_fontmgrImpl.h
// fpd_fontmgrImpl.h end

// In file fpd_fxxfaImpl.h
// fpd_fxxfaImpl.h end

// In file fpd_jsImpl.h
// fpd_jsImpl.h end

// In file fpd_lrImpl.h
// fpd_lrImpl.h end

// In file fpd_mathImpl.h
class CFPD_MonoscaleBitmap_V18_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDMonoscaleBitmapSEL, FPDMonoscaleBitmapGetSEL, (void*)CFPD_MonoscaleBitmap_V18::Get);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDMonoscaleBitmapSEL, FPDMonoscaleBitmapNewSEL, (void*)CFPD_MonoscaleBitmap_V18::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDMonoscaleBitmapSEL, FPDMonoscaleBitmapReleaseSEL, (void*)CFPD_MonoscaleBitmap_V18::Release);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDMonoscaleBitmapSEL, FPDMonoscaleBitmapCreateSEL, (void*)CFPD_MonoscaleBitmap_V18::Create);
	}
};

// fpd_mathImpl.h end

// In file fpd_objsImpl.h
// fpd_objsImpl.h end

// In file fpd_pageImpl.h
// fpd_pageImpl.h end

// In file fpd_pageobjImpl.h
// fpd_pageobjImpl.h end

// In file fpd_parserImpl.h
// fpd_parserImpl.h end

// In file fpd_psiImpl.h
// fpd_psiImpl.h end

// In file fpd_pwlImpl.h
// fpd_pwlImpl.h end

// In file fpd_renderImpl.h
// fpd_renderImpl.h end

// In file fpd_resourceImpl.h
// fpd_resourceImpl.h end

// In file fpd_serialImpl.h
// fpd_serialImpl.h end

// In file fpd_textImpl.h
// fpd_textImpl.h end

// In file fpd_validateImpl.h
// fpd_validateImpl.h end

//----------_V19----------
// In file fs_basicImpl.h
class CFS_PrivateData_V19_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSPrivateDataSEL, FSPrivateDataNewSEL, (void*)CFS_PrivateData_V19::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSPrivateDataSEL, FSPrivateDataDestroySEL, (void*)CFS_PrivateData_V19::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSPrivateDataSEL, FSPrivateDataClearAllSEL, (void*)CFS_PrivateData_V19::ClearAll);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSPrivateDataSEL, FSPrivateDataSetPrivateDataSEL, (void*)CFS_PrivateData_V19::SetPrivateData);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSPrivateDataSEL, FSPrivateDataSetPrivateObjSEL, (void*)CFS_PrivateData_V19::SetPrivateObj);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSPrivateDataSEL, FSPrivateDataGetPrivateDataSEL, (void*)CFS_PrivateData_V19::GetPrivateData);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSPrivateDataSEL, FSPrivateDataLookupPrivateDataSEL, (void*)CFS_PrivateData_V19::LookupPrivateData);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSPrivateDataSEL, FSPrivateDataRemovePrivateDataSEL, (void*)CFS_PrivateData_V19::RemovePrivateData);
	}
};

class CFS_VectorF_V19_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSVectorFSEL, FSVectorFCreateSEL, (void*)CFS_VectorF_V19::Create);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSVectorFSEL, FSVectorFDestroySEL, (void*)CFS_VectorF_V19::Destroy);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSVectorFSEL, FSVectorFSetSEL, (void*)CFS_VectorF_V19::Set);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSVectorFSEL, FSVectorFSet2SEL, (void*)CFS_VectorF_V19::Set2);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSVectorFSEL, FSVectorFResetSEL, (void*)CFS_VectorF_V19::Reset);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSVectorFSEL, FSVectorFSquareLengthSEL, (void*)CFS_VectorF_V19::SquareLength);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSVectorFSEL, FSVectorFLengthSEL, (void*)CFS_VectorF_V19::Length);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSVectorFSEL, FSVectorFNormalizeSEL, (void*)CFS_VectorF_V19::Normalize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSVectorFSEL, FSVectorFGetXSEL, (void*)CFS_VectorF_V19::GetX);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSVectorFSEL, FSVectorFGetYSEL, (void*)CFS_VectorF_V19::GetY);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSVectorFSEL, FSVectorFDotProductSEL, (void*)CFS_VectorF_V19::DotProduct);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FSVectorFSEL, FSVectorFDotProduct2SEL, (void*)CFS_VectorF_V19::DotProduct2);
	}
};

// fs_basicImpl.h end

// In file fs_stringImpl.h
// fs_stringImpl.h end

// In file fdrm_descImpl.h
// fdrm_descImpl.h end

// In file fdrm_managerImpl.h
// fdrm_managerImpl.h end

// In file fdrm_pdfImpl.h
// fdrm_pdfImpl.h end

// In file fdrm_pkiImpl.h
// fdrm_pkiImpl.h end

// In file fhtml_impl.h
// fhtml_impl.h end

// In file fr_appImpl.h
class CFR_StartPageEventHandler_V19_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRStartPageEventHandlerSEL, FRStartPageEventHandlerNewSEL, (void*)CFR_StartPageEventHandler_V19::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRStartPageEventHandlerSEL, FRStartPageEventHandlerDeleteSEL, (void*)CFR_StartPageEventHandler_V19::Delete);
	}
};

class CFR_UndoEventHandler_V19_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRUndoEventHandlerSEL, FRUndoEventHandlerNewSEL, (void*)CFR_UndoEventHandler_V19::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FRUndoEventHandlerSEL, FRUndoEventHandlerDeleteSEL, (void*)CFR_UndoEventHandler_V19::Delete);
	}
};

// fr_appImpl.h end

// In file fr_barImpl.h
// fr_barImpl.h end

// In file fr_docImpl.h
// fr_docImpl.h end

// In file fr_fxnetappImpl.h
// fr_fxnetappImpl.h end

// In file fr_menuImpl.h
// fr_menuImpl.h end

// In file fr_sysImpl.h
// fr_sysImpl.h end

// In file fr_viewImpl.h
// fr_viewImpl.h end

// In file middle_imagecompressImpl.h
// middle_imagecompressImpl.h end

// In file middle_optimizeImpl.h
// middle_optimizeImpl.h end

// In file middle_pdfImpl.h
class CFPD_EditAnnotHandler_V19_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditAnnotHandlerSEL, FPDEditAnnotHandlerNewSEL, (void*)CFPD_EditAnnotHandler_V19::New);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDEditAnnotHandlerSEL, FPDEditAnnotHandlerDestroySEL, (void*)CFPD_EditAnnotHandler_V19::Destroy);
	}
};

class CFPD_ITextEnhancer_V19_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITextEnhancerSEL, FPDITextEnhancerCreateTextEnhancerSEL, (void*)CFPD_ITextEnhancer_V19::CreateTextEnhancer);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITextEnhancerSEL, FPDITextEnhancerDeleteSEL, (void*)CFPD_ITextEnhancer_V19::Delete);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITextEnhancerSEL, FPDITextEnhancerGetTextEnhancerOptionSEL, (void*)CFPD_ITextEnhancer_V19::GetTextEnhancerOption);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITextEnhancerSEL, FPDITextEnhancerAnalyzePageTextBlocksSEL, (void*)CFPD_ITextEnhancer_V19::AnalyzePageTextBlocks);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITextEnhancerSEL, FPDITextEnhancerGetPageTextBlockSizeSEL, (void*)CFPD_ITextEnhancer_V19::GetPageTextBlockSize);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITextEnhancerSEL, FPDITextEnhancerGetTextBlockTextSEL, (void*)CFPD_ITextEnhancer_V19::GetTextBlockText);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITextEnhancerSEL, FPDITextEnhancerSetTextBlockTextSEL, (void*)CFPD_ITextEnhancer_V19::SetTextBlockText);
	}
};

class CFPD_ITextEnhancerOption_V19_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITextEnhancerOptionSEL, FPDITextEnhancerOptionGetCustomizationOptionSEL, (void*)CFPD_ITextEnhancerOption_V19::GetCustomizationOption);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDITextEnhancerOptionSEL, FPDITextEnhancerOptionSetOptionOCContextSEL, (void*)CFPD_ITextEnhancerOption_V19::SetOptionOCContext);
	}
};

// middle_pdfImpl.h end

// In file middle_portfolioImpl.h
// middle_portfolioImpl.h end

// In file middle_preflightImpl.h
// middle_preflightImpl.h end

// In file fofd_basicImpl.h
// fofd_basicImpl.h end

// In file fofd_docImpl.h
// fofd_docImpl.h end

// In file fofd_pageImpl.h
// fofd_pageImpl.h end

// In file fofd_renderImpl.h
// fofd_renderImpl.h end

// In file fofd_sigImpl.h
// fofd_sigImpl.h end

// In file fpd_3DImpl.h
// fpd_3DImpl.h end

// In file fpd_barcodeImpl.h
// fpd_barcodeImpl.h end

// In file fpd_convertImpl.h
// fpd_convertImpl.h end

// In file fpd_docImpl.h
// fpd_docImpl.h end

// In file fpd_editImpl.h
// fpd_editImpl.h end

// In file fpd_epubImpl.h
// fpd_epubImpl.h end

// In file fpd_fontmgrImpl.h
// fpd_fontmgrImpl.h end

// In file fpd_fxxfaImpl.h
// fpd_fxxfaImpl.h end

// In file fpd_jsImpl.h
// fpd_jsImpl.h end

// In file fpd_lrImpl.h
// fpd_lrImpl.h end

// In file fpd_mathImpl.h
// fpd_mathImpl.h end

// In file fpd_objsImpl.h
// fpd_objsImpl.h end

// In file fpd_pageImpl.h
// fpd_pageImpl.h end

// In file fpd_pageobjImpl.h
// fpd_pageobjImpl.h end

// In file fpd_parserImpl.h
// fpd_parserImpl.h end

// In file fpd_psiImpl.h
// fpd_psiImpl.h end

// In file fpd_pwlImpl.h
// fpd_pwlImpl.h end

// In file fpd_renderImpl.h
// fpd_renderImpl.h end

// In file fpd_resourceImpl.h
// fpd_resourceImpl.h end

// In file fpd_serialImpl.h
// fpd_serialImpl.h end

// In file fpd_textImpl.h
// fpd_textImpl.h end

// In file fpd_validateImpl.h
// fpd_validateImpl.h end

//----------_V20----------
// In file fs_basicImpl.h
// fs_basicImpl.h end

// In file fs_stringImpl.h
// fs_stringImpl.h end

// In file fdrm_descImpl.h
// fdrm_descImpl.h end

// In file fdrm_managerImpl.h
// fdrm_managerImpl.h end

// In file fdrm_pdfImpl.h
// fdrm_pdfImpl.h end

// In file fdrm_pkiImpl.h
// fdrm_pkiImpl.h end

// In file fhtml_impl.h
// fhtml_impl.h end

// In file fr_appImpl.h
// fr_appImpl.h end

// In file fr_barImpl.h
// fr_barImpl.h end

// In file fr_docImpl.h
// fr_docImpl.h end

// In file fr_fxnetappImpl.h
// fr_fxnetappImpl.h end

// In file fr_menuImpl.h
// fr_menuImpl.h end

// In file fr_sysImpl.h
// fr_sysImpl.h end

// In file fr_viewImpl.h
// fr_viewImpl.h end

// In file middle_imagecompressImpl.h
// middle_imagecompressImpl.h end

// In file middle_optimizeImpl.h
// middle_optimizeImpl.h end

// In file middle_pdfImpl.h
// middle_pdfImpl.h end

// In file middle_portfolioImpl.h
// middle_portfolioImpl.h end

// In file middle_preflightImpl.h
// middle_preflightImpl.h end

// In file fofd_basicImpl.h
// fofd_basicImpl.h end

// In file fofd_docImpl.h
// fofd_docImpl.h end

// In file fofd_pageImpl.h
// fofd_pageImpl.h end

// In file fofd_renderImpl.h
// fofd_renderImpl.h end

// In file fofd_sigImpl.h
// fofd_sigImpl.h end

// In file fpd_3DImpl.h
// fpd_3DImpl.h end

// In file fpd_barcodeImpl.h
// fpd_barcodeImpl.h end

// In file fpd_convertImpl.h
// fpd_convertImpl.h end

// In file fpd_docImpl.h
class CFPD_CCnki_V20_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
	}
};

class CFPD_SealInfo_V20_Initiator
{
public:
	static void InitFuncMappingTable(void* pMgr, bool bNeedInitParent)
	{
		FS_ASSERT(pMgr != NULL);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSealInfoSEL, FPDSealInfoCreateSEL, (void*)CFPD_SealInfo_V20::Create);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSealInfoSEL, FPDSealInfoDeleteSEL, (void*)CFPD_SealInfo_V20::Delete);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSealInfoSEL, FPDSealInfoGetNohterCurChainListIndexSEL, (void*)CFPD_SealInfo_V20::GetNohterCurChainListIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSealInfoSEL, FPDSealInfoGetVerifyohterCertListCountSEL, (void*)CFPD_SealInfo_V20::GetVerifyohterCertListCount);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSealInfoSEL, FPDSealInfoGetVerifyohterCertByIndexSEL, (void*)CFPD_SealInfo_V20::GetVerifyohterCertByIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSealInfoSEL, FPDSealInfoGetSealNameSEL, (void*)CFPD_SealInfo_V20::GetSealName);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSealInfoSEL, FPDSealInfoGetSealmaketimeSEL, (void*)CFPD_SealInfo_V20::GetSealmaketime);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSealInfoSEL, FPDSealInfoGetSealbeginSEL, (void*)CFPD_SealInfo_V20::GetSealbegin);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSealInfoSEL, FPDSealInfoGetSealEndSEL, (void*)CFPD_SealInfo_V20::GetSealEnd);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSealInfoSEL, FPDSealInfoGetRevocVerifyKeyIndexSEL, (void*)CFPD_SealInfo_V20::GetRevocVerifyKeyIndex);
		((FRCoreHFTMgr*)pMgr)->UpdateInterface(FPDSealInfoSEL, FPDSealInfoGetRevocVerifyByKeySEL, (void*)CFPD_SealInfo_V20::GetRevocVerifyByKey);
	}
};

// fpd_docImpl.h end

// In file fpd_editImpl.h
// fpd_editImpl.h end

// In file fpd_epubImpl.h
// fpd_epubImpl.h end

// In file fpd_fontmgrImpl.h
// fpd_fontmgrImpl.h end

// In file fpd_fxxfaImpl.h
// fpd_fxxfaImpl.h end

// In file fpd_jsImpl.h
// fpd_jsImpl.h end

// In file fpd_lrImpl.h
// fpd_lrImpl.h end

// In file fpd_mathImpl.h
// fpd_mathImpl.h end

// In file fpd_objsImpl.h
// fpd_objsImpl.h end

// In file fpd_pageImpl.h
// fpd_pageImpl.h end

// In file fpd_pageobjImpl.h
// fpd_pageobjImpl.h end

// In file fpd_parserImpl.h
// fpd_parserImpl.h end

// In file fpd_psiImpl.h
// fpd_psiImpl.h end

// In file fpd_pwlImpl.h
// fpd_pwlImpl.h end

// In file fpd_renderImpl.h
// fpd_renderImpl.h end

// In file fpd_resourceImpl.h
// fpd_resourceImpl.h end

// In file fpd_serialImpl.h
// fpd_serialImpl.h end

// In file fpd_textImpl.h
// fpd_textImpl.h end

// In file fpd_validateImpl.h
// fpd_validateImpl.h end

//Auto generated file end!
#endif

#endif